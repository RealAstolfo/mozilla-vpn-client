{"mappings":"qYAUA,MAEMA,EAAU,OAEVC,EAAY,CAChBC,WAAY,UACZC,WAAY,UACZC,UAAW,YACXC,MAAO,UACPC,YAAa,UACbC,IAAK,UACLC,UAAW,UACXC,MAAO,UACPC,YAAa,UACbC,OAAQ,UACRC,aAAc,UACdC,KAAM,UACNC,WAAY,UACZC,QAAS,UACTC,cAAe,UACfC,KAAM,UACNC,WAAY,UACZC,MAAO,UACPC,YAAa,iBAGFC,UAAkBC,EAAAC,WAC7BC,mBACE,OAAOC,KAGTC,oBACEC,MAAMD,oBACN,MAAME,EAAW,IAAIC,EAAAC,SAAS,CAC5BC,WAAY,oCACZC,SAAU,KACVC,WAAY,EACZC,MAAOjC,EACPkC,aAAa,EACbC,aAAc,QAEVC,EAAW,IAAIC,EAAAC,SACrBd,KAAKG,SAAWA,EAChBH,KAAKY,SAAWA,EAEhBT,EAASY,UAAUH,GAEnBI,OAAOC,iBAAiB,UAAQ,KAC9BjB,KAAKY,SAASM,SAEhBf,EAASgB,KAAKnB,KAAKoB,MACnBR,EAASM,MAETG,EAAAC,OAAOC,UAAUC,MAAMC,IACrBzB,KAAKG,SAASuB,QAAO,+BAAgCD,KACrDzB,KAAK2B,WAAW,QAChB3B,KAAK4B,YAEPP,EAAAC,OAAOO,OAAOC,GAAQ9B,KAAK+B,cAAcD,KAEzCE,EAAAC,gBAAgBJ,OAAK,KACnB7B,KAAKkC,YAAcF,EAAAC,gBAAgBE,YAGrC,IAAIC,EAAU,GACdjC,EAASkC,QAAOC,IACd,OAAQA,GACN,IAAK,IACHC,QAAQC,IAAIrC,EAASsC,gBAErB,MACF,IAAK,KACHzC,KAAK2B,WAAWS,GAChBA,EAAU,GACV,MACF,IAAK,IAECjC,EAASuC,MAAMC,OAAOC,EAAI,IAC5BzC,EAAS0C,MAAM,SACXT,EAAQU,OAAS,IACnBV,EAAUA,EAAQW,OAAO,EAAGX,EAAQU,OAAS,KAGjD,cAEIR,GAAKU,OAAOC,aAAa,KAASX,GAAKU,OAAOC,aAAa,OAC7Db,GAAWE,EACXnC,EAAS0C,MAAMP,QAIvBnC,EAAS+C,OAAK,CAAEC,EAAKC,KACnB,GAAgB,QAAZD,EAAIA,KASR,GAAgB,OAAZA,EAAIA,IAAc,CAEpB,GAAgB,KAAZf,EAKF,OAHAjC,EAASuB,QAAQ,IACjBvB,EAAS0C,MAAM7C,KAAKkC,YAAYmB,KAAK,YACrCrD,KAAK4B,SAGP,MAAM0B,EAAkBtD,KAAKkC,YAAYqB,QAAOC,GAAKA,EAAEC,WAAWrB,KAClE,GAAIkB,EAAgBR,OAAS,EAC3B3C,EAASuB,QAAQ,IACjBvB,EAAS0C,MAAMS,EAAgBD,KAAK,OACpCrD,KAAK4B,SACLzB,EAAS0C,MAAMT,QACV,GAA8B,GAA1BkB,EAAgBR,OAAa,CACtC,MAAMY,EAAaJ,EAAgBK,QACnC3D,KAAK4D,YACLzD,EAAS0C,MAAMa,GACftB,EAAUsB,QA1BY,IAApB1D,KAAK6D,cACPzB,EAAUpC,KAAK6D,YACf7D,KAAK4D,YACLzD,EAAS0C,MAAM7C,KAAK6D,iBA6B5BlC,WAAYS,GACV,GAAgB,KAAZA,EAAJ,CAIA,GAAgB,UAAZA,EAGF,OAFApC,KAAKG,SAAS0C,MAAM,WACpB7C,KAAK4B,SAGP5B,KAAK6D,YAAczB,EACnBf,EAAAC,OAAOwC,YAAY1B,GACnBpC,KAAK4B,cAVH5B,KAAK4B,SAaTA,SACE5B,KAAKG,SAAS0C,MAAM,UAGtBe,YACE5D,KAAKG,SAAS0C,MAAM,UACpB7C,KAAKG,SAAS0C,MAAM,MAGtBd,cAAegC,GACT,CAAC,iBAAkB,MAAO,WAAWC,SAASD,EAAQE,QAGtC,QAAhBF,EAAQE,OACVF,EAAQG,MAAQH,EAAQG,MAAMC,WAAW,KAAM,SAEjDnE,KAAKoE,cAAcL,IAGrBK,cAAeC,GACb,MAAMJ,EAAOI,EAAQJ,KACrB,IAAIK,EAAOD,EAAQH,MACC,iBAATI,IACTA,EAAOC,KAAKC,UAAUF,IAGxB,MAAMG,EAAQJ,EAAQI,OACjBH,GAASG,KAGdzE,KAAKG,SAAS0C,MAAa,eAAcoB,UAErCQ,EACFzE,KAAKG,SAAS0C,MAAK,cAA2B4B,SAE9CzE,KAAKG,SAAS0C,MAAMyB,EAAKH,WAAW,KAAM,SAE5CnE,KAAKG,SAAS0C,MAAMtE,GACpByB,KAAK4B,UAGP8C,SACE,OAAO7E,EAAA8E,IAAI,iBAGG9E,EAAA+E,GAAG;;;;;;;;sHCpMrB,SAA2CC,EAAMC,GAChD,GAAsB,iBAAZC,EAAAA,QACTC,EAAAA,QAAiBF,SACb,GAAqB,mBAAXG,QAAyBA,OAAOC,IAC9CD,OAAO,GAAIH,OACP,CACJ,IAAIK,EAAIL,IACR,IAAI,IAAIM,KAAKD,GAAuB,iBAAZJ,EAAAA,QAAuBA,EAAAA,QAAUF,GAAMO,GAAKD,EAAEC,IAPxE,CASGC,MAAM,WACT,qlBCLA,IAAAC,EAAAC,EAAA,MAGAC,EAAAD,EAAA,MACAE,EAAAF,EAAA,MACA/B,EAAA+B,EAAA,MACAG,EAAAH,EAAA,KACAI,EAAAJ,EAAA,MAEAK,EAAAL,EAAA,MASAM,EAAA,SAAAC,YA0BEC,EACmBC,EACAC,GAFnB,IAAAb,EAIEU,EAAAI,KAAAlG,OAAOA,KAHUoF,EAAAY,UAAAA,EACAZ,EAAAa,eAAAA,EAvBXb,EAAAe,qBAA+B,EAiB/Bf,EAAAgB,gBAA4B,GAE5BhB,EAAAiB,iBAA2B,GAOjCjB,EAAKkB,uBAAyBC,SAASC,cAAc,OACrDpB,EAAKkB,uBAAuBG,aAAa,OAAQ,YACjDrB,EAAKkB,uBAAuBI,UAAUC,IAAI,uBAE1CvB,EAAKwB,cAAgBL,SAASC,cAAc,OAC5CpB,EAAKwB,cAAcH,aAAa,OAAQ,QACxCrB,EAAKwB,cAAcF,UAAUC,IAAI,4BACjCvB,EAAKyB,aAAe,GACpB,IAAK,IAAIzB,EAAI,EAAGA,EAAIA,EAAKY,UAAUc,KAAM1B,IACvCA,EAAKyB,aAAazB,GAAKA,EAAK2B,+BAC5B3B,EAAKwB,cAAcI,YAAY5B,EAAKyB,aAAazB,IAmBnD,GAhBAA,EAAK6B,0BAA4B,SAAA3E,GAAK,OAAA8C,EAAK8B,iBAAiB5E,EAAG,IAC/D8C,EAAK+B,6BAA+B,SAAA7E,GAAK,OAAA8C,EAAK8B,iBAAiB5E,EAAG,IAClE8C,EAAKyB,aAAa,GAAG5F,iBAAiB,QAASmE,EAAK6B,2BACpD7B,EAAKyB,aAAazB,EAAKyB,aAAa/D,OAAS,GAAG7B,iBAAiB,QAASmE,EAAK+B,8BAE/E/B,EAAKgC,yBACLhC,EAAKkB,uBAAuBU,YAAY5B,EAAKwB,eAE7CxB,EAAKiC,qBAAuB,IAAI5B,EAAA6B,mBAAmBlC,EAAKmC,YAAYC,KAAKpC,IACzEA,EAAKqC,eAELrC,EAAKsC,YAAcnB,SAASC,cAAc,OAC1CpB,EAAKsC,YAAYhB,UAAUC,IAAI,eAC/BvB,EAAKsC,YAAYjB,aAAa,YAAa,aAC3CrB,EAAKkB,uBAAuBU,YAAY5B,EAAKsC,cAExCtC,EAAKY,UAAU2B,QAClB,MAAM,IAAIC,MAAM,2DAElBxC,EAAKY,UAAU2B,QAAQE,sBAAsB,aAAczC,EAAKkB,wBAEhElB,EAAK0C,SAAS1C,EAAKiC,sBACnBjC,EAAK0C,SAAS1C,EAAKY,UAAU+B,UAAS,SAAAzF,GAAK,OAAA8C,EAAK4C,UAAU1F,EAAEwE,UAC5D1B,EAAK0C,SAAS1C,EAAKY,UAAUiC,UAAS,SAAA3F,GAAK,OAAA8C,EAAKqC,aAAanF,EAAE4F,MAAO5F,EAAE6F,SACxE/C,EAAK0C,SAAS1C,EAAKY,UAAUoC,UAAS,WAAM,OAAAhD,EAAKqC,mBAEjDrC,EAAK0C,SAAS1C,EAAKY,UAAUqC,YAAW,SAAAC,GAAQ,OAAAlD,EAAKmD,QAAQD,OAC7DlD,EAAK0C,SAAS1C,EAAKY,UAAUwC,YAAW,WAAM,OAAApD,EAAKmD,QAAQ,UAC3DnD,EAAK0C,SAAS1C,EAAKY,UAAUyC,WAAU,SAAAC,GAAc,OAAAtD,EAAKuD,OAAOD,OACjEtD,EAAK0C,SAAS1C,EAAKY,UAAU9C,OAAM,SAAAZ,GAAK,OAAA8C,EAAKwD,OAAOtG,EAAEa,SACtDiC,EAAK0C,SAAS1C,EAAKY,UAAU6C,QAAO,WAAM,OAAAzD,EAAK0D,uBAC/C1D,EAAK0C,SAAS1C,EAAKa,eAAe8C,oBAAmB,WAAM,OAAA3D,EAAKgC,6BAEhEhC,EAAK4D,kBAAoB,IAAIrD,EAAAsD,iBAC7B7D,EAAK0C,SAAS1C,EAAK4D,mBACnB5D,EAAK4D,kBAAkBE,aAAY,WAAM,OAAA9D,EAAKgC,4BAG9ChC,EAAK0C,UAAAA,EAAStE,EAAA2F,0BAAyBnI,OAAQ,UAAU,WAAM,OAAAoE,EAAKgC,+BAmMxE,OArR0CgC,EAAArD,EAAAD,GAqFjCC,EAAAsD,UAAAC,QAAP,WACExD,EAAAuD,UAAMC,QAAOpD,KAAAlG,OAAA,EACb4F,EAAA2D,yBAAwBvJ,KAAKsG,wBAC7BtG,KAAK6G,aAAa/D,OAAS,GAGrBiD,EAAAsD,UAAAnC,iBAAR,SAAyB5E,EAAekH,GACtC,IAAMC,EAAkBnH,EAAEoH,OACpBC,EAAwB3J,KAAK6G,aAA0B,IAAb2C,EAAoC,EAAIxJ,KAAK6G,aAAa/D,OAAS,GAKnH,GAFiB2G,EAAgBG,aAAa,oBACd,IAAbJ,EAAoC,IAAM,GAAGxJ,KAAKgG,UAAUrD,OAAOkH,MAAM/G,SAOxFR,EAAEwH,gBAAkBH,EAAxB,CAKA,IAAII,EACAC,EAgBJ,GAfiB,IAAbR,GACFO,EAAqBN,EACrBO,EAAwBhK,KAAK6G,aAAaoD,MAC1CjK,KAAK4G,cAAcsD,YAAYF,KAE/BD,EAAqB/J,KAAK6G,aAAalD,QACvCqG,EAAwBP,EACxBzJ,KAAK4G,cAAcsD,YAAYH,IAIjCA,EAAmBI,oBAAoB,QAASnK,KAAKiH,2BACrD+C,EAAsBG,oBAAoB,QAASnK,KAAKmH,8BAGvC,IAAbqC,EAAmC,CACrC,IAAMY,EAAapK,KAAK+G,+BACxB/G,KAAK6G,aAAawD,QAAQD,GAC1BpK,KAAK4G,cAAciB,sBAAsB,aAAcuC,QAEjDA,EAAapK,KAAK+G,+BACxB/G,KAAK6G,aAAayD,KAAKF,GACvBpK,KAAK4G,cAAcI,YAAYoD,GAIjCpK,KAAK6G,aAAa,GAAG5F,iBAAiB,QAASjB,KAAKiH,2BACpDjH,KAAK6G,aAAa7G,KAAK6G,aAAa/D,OAAS,GAAG7B,iBAAiB,QAASjB,KAAKmH,8BAG/EnH,KAAKgG,UAAUuE,YAAyB,IAAbf,GAAAA,EAAyC,GAGpExJ,KAAK6G,aAA0B,IAAb2C,EAAoC,EAAIxJ,KAAK6G,aAAa/D,OAAS,GAAG0H,QAGxFlI,EAAEmI,iBACFnI,EAAEoI,6BAGI3E,EAAAsD,UAAArB,UAAR,SAAkBlB,GAEhB9G,KAAK6G,aAAa7G,KAAK6G,aAAa/D,OAAS,GAAGqH,oBAAoB,QAASnK,KAAKmH,8BAGlF,IAAK,IAAI/B,EAAIpF,KAAK4G,cAAc+D,SAAS7H,OAAQsC,EAAIpF,KAAKgG,UAAUc,KAAM1B,IACxEpF,KAAK6G,aAAazB,GAAKpF,KAAK+G,+BAC5B/G,KAAK4G,cAAcI,YAAYhH,KAAK6G,aAAazB,IAGnD,KAAOpF,KAAK6G,aAAa/D,OAASgE,GAChC9G,KAAK4G,cAAcsD,YAAYlK,KAAK6G,aAAaoD,OAInDjK,KAAK6G,aAAa7G,KAAK6G,aAAa/D,OAAS,GAAG7B,iBAAiB,QAASjB,KAAKmH,8BAE/EnH,KAAKoH,0BAGCrB,EAAAsD,UAAAtC,6BAAR,WACE,IAAMY,EAAUpB,SAASC,cAAc,OAIvC,OAHAmB,EAAQlB,aAAa,OAAQ,YAC7BkB,EAAQiD,UAAAA,EACR5K,KAAK6K,sBAAsBlD,GACpBA,GAGD5B,EAAAsD,UAAAV,OAAR,SAAeD,GACb,IAAK,IAAItD,EAAI,EAAGA,EAAIsD,EAAYtD,IAC9BpF,KAAKuI,QAAQ,MAITxC,EAAAsD,UAAAd,QAAR,SAAgBD,GAAhB,IAAAwC,EAAA9K,KACMA,KAAKmG,qBAAuB4E,KAC1B/K,KAAKoG,gBAAgBtD,OAAS,EAEZ9C,KAAKoG,gBAAgBzC,UACrB2E,IAClBtI,KAAKqG,kBAAoBiC,GAG3BtI,KAAKqG,kBAAoBiC,EAGd,OAATA,IACFtI,KAAKmG,uBAC6B4E,KAA9B/K,KAAKmG,uBACPnG,KAAK0H,YAAYsD,aAAeC,EAAQC,gBAKxC1F,EAAA2F,OACEnL,KAAK0H,YAAYsD,aAAehL,KAAK0H,YAAYsD,YAAYlI,OAAS,IAAM9C,KAAK0H,YAAY0D,YAC/FC,YAAW,WACTP,EAAKxE,uBAAuBU,YAAY8D,EAAKpD,eAC5C,KAMH3B,EAAAsD,UAAAP,iBAAR,WACE9I,KAAK0H,YAAYsD,YAAc,GAC/BhL,KAAKmG,qBAAuB,EAGxBX,EAAA2F,QAAAA,EACFvF,EAAA2D,yBAAwBvJ,KAAK0H,cAIzB3B,EAAAsD,UAAAT,OAAR,SAAe0C,GACbtL,KAAK8I,mBACL9I,KAAKoG,gBAAgBkE,KAAKgB,IAGpBvF,EAAAsD,UAAA5B,aAAR,SAAqBS,EAAgBC,GACnCnI,KAAKqH,qBAAqBkE,QAAQrD,EAAOC,EAAKnI,KAAKgG,UAAUc,OAGvDf,EAAAsD,UAAA9B,YAAR,SAAoBW,EAAeC,GAGjC,IAFA,IAAMxF,EAAkB3C,KAAKgG,UAAUrD,OACjC6I,EAAU7I,EAAOkH,MAAM/G,OAAO2I,WAC3BrG,EAAI8C,EAAO9C,GAAK+C,EAAK/C,IAAK,CACjC,IAAMsG,EAAW/I,EAAOgJ,4BAA4BhJ,EAAOiJ,MAAQxG,GAAAA,GAC7DyG,GAAYlJ,EAAOiJ,MAAQxG,EAAI,GAAGqG,WAClC9D,EAAU3H,KAAK6G,aAAazB,GAC9BuC,IACsB,IAApB+D,EAAS5I,OACX6E,EAAQmE,UAAY,IAAA3G,EAEZ6F,YAAcU,EAExB/D,EAAQlB,aAAa,gBAAiBoF,GAAAA,EAC9BpF,aAAa,eAAgB+E,IAGzCxL,KAAK+L,uBAGChG,EAAAsD,UAAAjC,uBAAR,WACE,GAAKpH,KAAKiG,eAAe+F,WAAWC,iBAGhCjM,CAAAA,KAAK6G,aAAa/D,SAAW9C,KAAKgG,UAAUc,MAC9C9G,KAAKgI,UAAUhI,KAAKgG,UAAUc,MAEhC,IAAK,IAAI1B,EAAI,EAAGA,EAAIpF,KAAKgG,UAAUc,KAAM1B,IACvCpF,KAAK6K,sBAAsB7K,KAAK6G,aAAazB,MAIzCW,EAAAsD,UAAAwB,sBAAR,SAA8BlD,GAC5BA,EAAQuE,MAAMC,OAAYnM,KAAKiG,eAAe+F,WAAWC,iBAAgB,MAGnElG,EAAAsD,UAAA0C,oBAAR,WACuC,IAAjC/L,KAAKqG,iBAAiBvD,SAG1B9C,KAAK0H,YAAYsD,aAAehL,KAAKqG,iBACrCrG,KAAKqG,iBAAmB,KAE5BN,EArRA,CAA0CL,EAAA0G,YAA7BC,EAAAC,qBAAAA,yBCXGC,EAAuBjI,GACrC,OAAOA,EAAKkI,QAAQ,SAAU,eAOhBC,EAAoBnI,EAAcoI,GAChD,OAAIA,EACK,SAAcpI,EAAO,SAEvBA,WA4BOqI,EAAMrI,EAAcsI,EAA+BC,GAEjEvI,EAAOmI,EADPnI,EAAOiI,EAAuBjI,GACGuI,EAAYC,gBAAgBJ,oBAC7DG,EAAYE,iBAAiBzI,GAAAA,GAC7BsI,EAAS1I,MAAQ,YAQH8I,EAA6BC,EAAgBL,EAA+BM,GAG1F,IAAMC,EAAMD,EAAcE,wBACpBC,EAAOJ,EAAGK,QAAUH,EAAIE,KAAO,GAC/BE,EAAMN,EAAGO,QAAUL,EAAII,IAAM,GAGnCX,EAASV,MAAMuB,MAAQ,OACvBb,EAASV,MAAMC,OAAS,OACxBS,EAASV,MAAMmB,KAAUA,EAAI,KAC7BT,EAASV,MAAMqB,IAASA,EAAG,KAC3BX,EAASV,MAAMwB,OAAS,OAExBd,EAASpC,2MAlEXmD,EAAApB,uBAAAqB,EAQAD,EAAAlB,oBAAAoB,EAWAF,EAAAG,YAAA,SAA4Bb,EAAoBc,GAC1Cd,EAAGe,eACLf,EAAGe,cAAcC,QAAQ,aAAcF,EAAiBG,eAG1DjB,EAAGxC,kBAQLkD,EAAAQ,iBAAA,SAAiClB,EAAoBL,EAA+BC,GAClFI,EAAGmB,kBACCnB,EAAGe,eAELrB,EADaM,EAAGe,cAAcK,QAAQ,cAC1BzB,EAAUC,IAI1Bc,EAAAhB,MAAA2B,EAYAX,EAAAX,6BAAAuB,EAwBAZ,EAAAa,kBAAA,SAAkCvB,EAAgBL,EAA+BM,EAA4Ba,EAAqCU,GAChJzB,EAA6BC,EAAIL,EAAUM,GAEvCuB,GACFV,EAAiBW,iBAAiBzB,GAIpCL,EAAS1I,MAAQ6J,EAAiBG,cAClCtB,EAAS+B,wBCvFX,IAAiBC,EAiBAC,EAkFAC,EAoCAC,EAvIAH,WAyMDI,EAAYxL,GAC1B,IAAMyL,EAAIzL,EAAEiI,SAAS,IACrB,OAAOwD,EAAEnM,OAAS,EAAI,IAAMmM,EAAIA,WASlBC,EAAcC,EAAYC,GACxC,OAAID,EAAKC,GACCA,EAAK,MAASD,EAAK,MAErBA,EAAK,MAASC,EAAK,kIAxNZR,EAAAA,EAAAS,EAAAT,WAAAS,EAAAT,SAAQ,KACPU,MAAhB,SAAsBC,EAAWC,EAAWC,EAAWtK,GACrD,YAAA,IAAIA,EACK,IAAI6J,EAAYO,GAAKP,EAAYQ,GAAKR,EAAYS,GAAKT,EAAY7J,GAErE,IAAI6J,EAAYO,GAAKP,EAAYQ,GAAKR,EAAYS,IAG3CC,EAAAC,OAAhB,SAAuBJ,EAAWC,EAAWC,EAAWtK,GAEtD,YAAA,IAFsDA,IAAAA,EAAA,MAE9CoK,GAAK,GAAKC,GAAK,GAAKC,GAAK,EAAItK,KAAO,IAO/B0J,EAAAQ,EAAAO,QAAAP,EAAAO,MAAK,KACJC,MAAhB,SAAsBC,EAAYC,GAChC,IAAM5K,GAAe,IAAV4K,EAAGhB,MAAe,IAC7B,GAAU,IAAN5J,EACF,MACEP,CAAAA,IAAKmL,EAAGnL,IACRmK,KAAMgB,EAAGhB,MAGb,IAAMiB,EAAOD,EAAGhB,MAAQ,GAAM,IACxBkB,EAAOF,EAAGhB,MAAQ,GAAM,IACxBmB,EAAOH,EAAGhB,MAAQ,EAAK,IACvBoB,EAAOL,EAAGf,MAAQ,GAAM,IACxBqB,EAAON,EAAGf,MAAQ,GAAM,IACxBsB,EAAOP,EAAGf,MAAQ,EAAK,IACvBQ,EAAIY,EAAMG,KAAKC,OAAOP,EAAMG,GAAOhL,GACnCqK,EAAIY,EAAME,KAAKC,OAAON,EAAMG,GAAOjL,GACnCsK,EAAIY,EAAMC,KAAKC,OAAOL,EAAMG,GAAOlL,GAGzC,MAASP,CAAAA,IAFGgK,EAASU,MAAMC,EAAGC,EAAGC,GAEnBV,KADDH,EAASe,OAAOJ,EAAGC,EAAGC,KAIrBZ,EAAA2B,SAAhB,SAAyBZ,GACvB,OAA+B,MAAV,IAAbA,EAAMb,OAGAF,EAAA4B,oBAAhB,SAAoCX,EAAYC,EAAYW,GAC1D,IAAMC,EAAS5B,EAAK0B,oBAAoBX,EAAGf,KAAMgB,EAAGhB,KAAM2B,GAC1D,GAAKC,EAGL,OAAO5B,EAAK6B,QACTD,GAAU,GAAK,IACfA,GAAU,GAAK,IACfA,GAAU,EAAK,MAIJ9B,EAAAgC,OAAhB,SAAuBjB,GACrB,IAAMkB,GAA0B,IAAblB,EAAMb,QAAiB,EACpC3J,EAAY2J,EAAKgC,WAAWD,GAA3BvB,EAACnK,EAAA,GAAEoK,EAACpK,EAAA,GAAEqK,EAACrK,EAAA,GACd,MACER,CAAAA,IAAKgK,EAASU,MAAMC,EAAGC,EAAGC,GAC1BV,KAAM+B,IAIMjC,EAAAmC,QAAhB,SAAwBpB,EAAeoB,GACrC,IAAM7L,EAAImL,KAAKC,MAAgB,IAAVS,GACfC,EAAYlC,EAAKgC,WAAWnB,EAAMb,MAAjCQ,EAAC0B,EAAA,GAAEzB,EAACyB,EAAA,GAAExB,EAACwB,EAAA,GACd,MACErM,CAAAA,IAAKgK,EAASU,MAAMC,EAAGC,EAAGC,EAAGtK,GAC7B4J,KAAMH,EAASe,OAAOJ,EAAGC,EAAGC,EAAGtK,MAQpBkK,EAAAzK,MAAAyK,EAAAzK,IAAG,KACFgM,QAAhB,SAAwBhM,GACtB,OAAQA,EAAI9B,QACV,KAAK,EACH,MACE8B,CAAAA,IAAGtC,EACHyM,MAAOmC,SAAStM,EAAIuM,MAAM,GAAI,KAAO,EAAI,OAAU,GAEvD,KAAK,EACH,MACEvM,CAAAA,IAAGtC,EACHyM,KAAMmC,SAAStM,EAAIuM,MAAM,GAAI,MAAQ,GAG3C,MAAM,IAAIvJ,MAAM,wCAOpB,SAAiBwJ,YAsBCC,EAAmB9B,EAAWC,EAAWC,GACvD,IAAM6B,EAAK/B,EAAI,IACTgC,EAAK/B,EAAI,IACTgC,EAAK/B,EAAI,IAIf,MAAY,OAHD6B,GAAM,OAAUA,EAAK,MAAQhB,KAAKmB,KAAKH,EAAK,MAAS,MAAO,MAG7C,OAFfC,GAAM,OAAUA,EAAK,MAAQjB,KAAKmB,KAAKF,EAAK,MAAS,MAAO,MAE/B,OAD7BC,GAAM,OAAUA,EAAK,MAAQlB,KAAKmB,KAAKD,EAAK,MAAS,MAAO,MArBzDJ,EAAAM,kBAAhB,SAAkC5C,GAChC,OAAOuC,EACJvC,GAAO,GAAM,IACbA,GAAO,EAAM,IACA,IAAdxM,IAWY8O,EAAAC,mBAAkBM,EAtBpC,CAAiB7C,EAAAO,EAAAP,MAAAO,EAAAP,IAAG,KAAA,SAoCHC,YAcC6C,EAAgBC,EAAgBC,EAAgBpB,GAU9D,IAPA,IAAMP,EAAO0B,GAAU,GAAM,IACvBzB,EAAOyB,GAAU,GAAM,IACvBxB,EAAOwB,GAAW,EAAK,IACzB7B,EAAO8B,GAAU,GAAM,IACvB7B,EAAO6B,GAAU,GAAM,IACvB5B,EAAO4B,GAAW,EAAK,IACvBC,EAAK7C,EAAcJ,EAAIuC,mBAAmBrB,EAAKE,EAAKD,GAAMnB,EAAIuC,mBAAmBlB,EAAKC,EAAKC,IACxF0B,EAAKrB,IAAUV,EAAM,GAAKC,EAAM,GAAKC,EAAM,IAEhDF,GAAOM,KAAK0B,IAAI,EAAG1B,KAAK2B,KAAW,GAANjC,IAC7BC,GAAOK,KAAK0B,IAAI,EAAG1B,KAAK2B,KAAW,GAANhC,IAC7BC,GAAOI,KAAK0B,IAAI,EAAG1B,KAAK2B,KAAW,GAAN/B,IAC7B6B,EAAK7C,EAAcJ,EAAIuC,mBAAmBrB,EAAKE,EAAKD,GAAMnB,EAAIuC,mBAAmBlB,EAAKC,EAAKC,IAE7F,OAAQL,GAAO,GAAKC,GAAO,GAAKC,GAAO,EAAI,OAAU,WAGvCgC,EAAkBL,EAAgBC,EAAgBpB,GAUhE,IAPA,IAAMP,EAAO0B,GAAU,GAAM,IACvBzB,EAAOyB,GAAU,GAAM,IACvBxB,EAAOwB,GAAW,EAAK,IACzB7B,EAAO8B,GAAU,GAAM,IACvB7B,EAAO6B,GAAU,GAAM,IACvB5B,EAAO4B,GAAW,EAAK,IACvBC,EAAK7C,EAAcJ,EAAIuC,mBAAmBrB,EAAKE,EAAKD,GAAMnB,EAAIuC,mBAAmBlB,EAAKC,EAAKC,IACxF0B,EAAKrB,IAAUV,EAAM,KAAQC,EAAM,KAAQC,EAAM,MAEtDF,EAAMM,KAAK6B,IAAI,IAAMnC,EAAMM,KAAK2B,KAAmB,IAAb,IAAMjC,KAC5CC,EAAMK,KAAK6B,IAAI,IAAMlC,EAAMK,KAAK2B,KAAmB,IAAb,IAAMhC,KAC5CC,EAAMI,KAAK6B,IAAI,IAAMjC,EAAMI,KAAK2B,KAAmB,IAAb,IAAM/B,KAC5C6B,EAAK7C,EAAcJ,EAAIuC,mBAAmBrB,EAAKE,EAAKD,GAAMnB,EAAIuC,mBAAmBlB,EAAKC,EAAKC,IAE7F,OAAQL,GAAO,GAAKC,GAAO,GAAKC,GAAO,EAAI,OAAU,EAlDvCkC,EAAA3B,oBAAhB,SAAoCoB,EAAgBC,EAAgBpB,GAClE,IAAM2B,EAAMvD,EAAI4C,kBAAkBG,GAAU,GACtCS,EAAMxD,EAAI4C,kBAAkBI,GAAU,GAE5C,GADW5C,EAAcmD,EAAKC,GACrB5B,EACP,OAAI4B,EAAMD,EACDT,EAAgBC,EAAQC,EAAQpB,GAElCwB,EAAkBL,EAAQC,EAAQpB,IAK7B0B,EAAAR,gBAAeW,EAoBfH,EAAAF,kBAAiBM,EAoBjBJ,EAAArB,WAAhB,SAA2B7M,GACzB,MAASA,CAAAA,GAAS,GAAM,IAAOA,GAAS,GAAM,IAAOA,GAAS,EAAK,IAAc,IAARA,IAG3DkO,EAAAxB,QAAhB,SAAwBrB,EAAWC,EAAWC,GAC5C,MACE7K,CAAAA,IAAKgK,EAASU,MAAMC,EAAGC,EAAGC,GAC1BV,KAAMH,EAASe,OAAOJ,EAAGC,EAAGC,KAjGd,CAoCHV,EAAAM,EAAAN,OAAAM,EAAAN,KAAI,KAkErBM,EAAAL,YAAAyD,EAWApD,EAAAH,cAAAwD,6FCvNA,IAAAC,EAAA,oBAAArQ,IACUtC,KAAA4S,OAAoF,GACpF5S,KAAA6S,MAAmF,GA4B7F,OA1BSvQ,EAAA+G,UAAAyJ,MAAP,WACE9S,KAAK4S,OAAS,GACd5S,KAAK6S,MAAQ,IAGRvQ,EAAA+G,UAAA0J,OAAP,SAAcjD,EAAYC,EAAY7L,GAC/BlE,KAAK6S,MAAM/C,KACd9P,KAAK6S,MAAM/C,GAAM,IAEnB9P,KAAK6S,MAAM/C,GAAKC,GAAM7L,GAGjB5B,EAAA+G,UAAA2J,OAAP,SAAclD,EAAYC,GACxB,OAAO/P,KAAK6S,MAAM/C,GAAM9P,KAAK6S,MAAM/C,GAAKC,QAAAA,GAGnCzN,EAAA+G,UAAA4J,SAAP,SAAgBnD,EAAYC,EAAY7L,GACjClE,KAAK4S,OAAO9C,KACf9P,KAAK4S,OAAO9C,GAAM,IAEpB9P,KAAK4S,OAAO9C,GAAKC,GAAM7L,GAGlB5B,EAAA+G,UAAA6J,SAAP,SAAgBpD,EAAYC,GAC1B,OAAO/P,KAAK4S,OAAO9C,GAAM9P,KAAK4S,OAAO9C,GAAKC,QAAAA,GAE9CzN,EA9BA,GAAawI,EAAAqI,mBAAAA,+GCAb,IAAA/N,EAAAgO,EAAA,MACAC,EAAAD,EAAA,MAEME,EAAqBlO,EAAAR,IAAIgM,QAAQ,WACjC2C,EAAqBnO,EAAAR,IAAIgM,QAAQ,WACjC4C,EAAiBpO,EAAAR,IAAIgM,QAAQ,WAC7B6C,EAAwBrO,EAAAR,IAAIgM,QAAQ,WACpC8C,EACJ9O,CAAAA,IAAK,2BACLmK,KAAM,YAIK4E,EAAAC,oBAAsBC,OAAOC,OAAO,WAyB/C,IAxBA,IAAMC,EAEJ,CAAA3O,EAAAR,IAAIgM,QAAQ,WACZxL,EAAAR,IAAIgM,QAAQ,WACZxL,EAAAR,IAAIgM,QAAQ,WACZxL,EAAAR,IAAIgM,QAAQ,WACZxL,EAAAR,IAAIgM,QAAQ,WACZxL,EAAAR,IAAIgM,QAAQ,WACZxL,EAAAR,IAAIgM,QAAQ,WACZxL,EAAAR,IAAIgM,QAAQ,WAEZxL,EAAAR,IAAIgM,QAAQ,WACZxL,EAAAR,IAAIgM,QAAQ,WACZxL,EAAAR,IAAIgM,QAAQ,WACZxL,EAAAR,IAAIgM,QAAQ,WACZxL,EAAAR,IAAIgM,QAAQ,WACZxL,EAAAR,IAAIgM,QAAQ,WACZxL,EAAAR,IAAIgM,QAAQ,WACZxL,EAAAR,IAAIgM,QAAQ,YAKRoD,EAAK,CAAA,EAAM,GAAM,IAAM,IAAM,IAAM,KAChC5O,EAAI,EAAGA,EAAI,IAAKA,IACvB,CAAA,IAAMmK,EAAIyE,EAAG5O,EAAI,GAAM,EAAI,GACrBoK,EAAIwE,EAAG5O,EAAI,EAAK,EAAI,GACpBqK,EAAIuE,EAAE5O,EAAI,GAChB2O,EAAOzJ,KACL1F,CAAAA,IAAKQ,EAAAwJ,SAASU,MAAMC,EAAGC,EAAGC,GAC1BV,KAAM3J,EAAAwJ,SAASe,OAAOJ,EAAGC,EAAGC,KAKhC,IAASrK,EAAI,EAAGA,EAAI,GAAIA,IACtB,CAAA,IAAM5B,EAAI,EAAQ,GAAJ4B,EACd2O,EAAOzJ,KACL1F,CAAAA,IAAKQ,EAAAwJ,SAASU,MAAM9L,EAAGA,EAAGA,GAC1BuL,KAAM3J,EAAAwJ,SAASe,OAAOnM,EAAGA,EAAGA,KAIhC,OAAOuQ,EA5CwC,IAkDjD,IAAAE,EAAA,oBAMEC,EAAY3N,EAA2B4N,GAAAnU,KAAAmU,kBAAAA,EACrC,IAAMC,EAAS7N,EAASC,cAAc,UACtC4N,EAAO3G,MAAQ,EACf2G,EAAOjI,OAAS,EAChB,IAAMkI,EAAMD,EAAOE,WAAW,MAC9B,IAAKD,EACH,MAAM,IAAIzM,MAAM,mCAElB5H,KAAKuU,KAAOF,EACZrU,KAAKuU,KAAKC,yBAA2B,OACrCxU,KAAKyU,aAAezU,KAAKuU,KAAKG,qBAAqB,EAAG,EAAG,EAAG,GAC5D1U,KAAK2U,eAAiB,IAAItB,EAAAF,mBAC1BnT,KAAK+T,OACHtV,CAAAA,WAAY6U,EACZ5U,WAAY6U,EACZqB,OAAQpB,EACRqB,aAAcpB,EACdqB,qBAAsBpB,EACtBqB,gBAAiB3P,EAAAwK,MAAMC,MAAM0D,EAAoBG,GACjDsB,KAAMrB,EAAAC,oBAAoBzC,QAC1B8D,cAAejV,KAAK2U,gBAoH1B,OAhHST,EAAA7K,UAAA6L,gBAAP,SAAuB/R,GACT,yBAARA,GACFnD,KAAK2U,eAAe7B,SASjBoB,EAAA7K,UAAA8L,SAAP,SAAgB1U,QAAAA,IAAAA,IAAAA,EAAA,IACdT,KAAK+T,OAAOtV,WAAauB,KAAKoV,YAAY3U,EAAMhC,WAAY6U,GAC5DtT,KAAK+T,OAAOrV,WAAasB,KAAKoV,YAAY3U,EAAM/B,WAAY6U,GAC5DvT,KAAK+T,OAAOa,OAAS5U,KAAKoV,YAAY3U,EAAMmU,OAAQpB,GAAAA,GACpDxT,KAAK+T,OAAOc,aAAe7U,KAAKoV,YAAY3U,EAAMoU,aAAcpB,GAAAA,GAChEzT,KAAK+T,OAAOe,qBAAuB9U,KAAKoV,YAAY3U,EAAM9B,UAAW+U,GAAAA,GACrE1T,KAAK+T,OAAOgB,gBAAkB3P,EAAAwK,MAAMC,MAAM7P,KAAK+T,OAAOrV,WAAYsB,KAAK+T,OAAOe,sBAK1E1P,EAAAwK,MAAMY,SAASxQ,KAAK+T,OAAOe,wBAE7B9U,KAAK+T,OAAOe,qBAAuB1P,EAAAwK,MAAMoB,QAAQhR,KAAK+T,OAAOe,qBAD7C,KAGlB9U,KAAK+T,OAAOiB,KAAK,GAAKhV,KAAKoV,YAAY3U,EAAM7B,MAAO+U,EAAAC,oBAAoB,IACxE5T,KAAK+T,OAAOiB,KAAK,GAAKhV,KAAKoV,YAAY3U,EAAM3B,IAAK6U,EAAAC,oBAAoB,IACtE5T,KAAK+T,OAAOiB,KAAK,GAAKhV,KAAKoV,YAAY3U,EAAMzB,MAAO2U,EAAAC,oBAAoB,IACxE5T,KAAK+T,OAAOiB,KAAK,GAAKhV,KAAKoV,YAAY3U,EAAMvB,OAAQyU,EAAAC,oBAAoB,IACzE5T,KAAK+T,OAAOiB,KAAK,GAAKhV,KAAKoV,YAAY3U,EAAMrB,KAAMuU,EAAAC,oBAAoB,IACvE5T,KAAK+T,OAAOiB,KAAK,GAAKhV,KAAKoV,YAAY3U,EAAMnB,QAASqU,EAAAC,oBAAoB,IAC1E5T,KAAK+T,OAAOiB,KAAK,GAAKhV,KAAKoV,YAAY3U,EAAMjB,KAAMmU,EAAAC,oBAAoB,IACvE5T,KAAK+T,OAAOiB,KAAK,GAAKhV,KAAKoV,YAAY3U,EAAMf,MAAOiU,EAAAC,oBAAoB,IACxE5T,KAAK+T,OAAOiB,KAAK,GAAKhV,KAAKoV,YAAY3U,EAAM5B,YAAa8U,EAAAC,oBAAoB,IAC9E5T,KAAK+T,OAAOiB,KAAK,GAAKhV,KAAKoV,YAAY3U,EAAM1B,UAAW4U,EAAAC,oBAAoB,IAC5E5T,KAAK+T,OAAOiB,KAAK,IAAMhV,KAAKoV,YAAY3U,EAAMxB,YAAa0U,EAAAC,oBAAoB,KAC/E5T,KAAK+T,OAAOiB,KAAK,IAAMhV,KAAKoV,YAAY3U,EAAMtB,aAAcwU,EAAAC,oBAAoB,KAChF5T,KAAK+T,OAAOiB,KAAK,IAAMhV,KAAKoV,YAAY3U,EAAMpB,WAAYsU,EAAAC,oBAAoB,KAC9E5T,KAAK+T,OAAOiB,KAAK,IAAMhV,KAAKoV,YAAY3U,EAAMlB,cAAeoU,EAAAC,oBAAoB,KACjF5T,KAAK+T,OAAOiB,KAAK,IAAMhV,KAAKoV,YAAY3U,EAAMhB,WAAYkU,EAAAC,oBAAoB,KAC9E5T,KAAK+T,OAAOiB,KAAK,IAAMhV,KAAKoV,YAAY3U,EAAMd,YAAagU,EAAAC,oBAAoB,KAE/E5T,KAAK2U,eAAe7B,SAGdoB,EAAA7K,UAAA+L,YAAR,SACExQ,EACAyQ,EACAlB,GAEA,QAAA,IAFAA,IAAAA,EAA6BnU,KAAKmU,wBAAAA,IAE9BvP,EACF,OAAOyQ,EAQT,GAFArV,KAAKuU,KAAKe,UAAYtV,KAAKyU,aAC3BzU,KAAKuU,KAAKe,UAAY1Q,EACa,iBAAxB5E,KAAKuU,KAAKe,UAEnB,OADA/S,QAAQgT,KAAK,UAAU3Q,EAAG,8BAA8ByQ,EAASzQ,KAC1DyQ,EAGTrV,KAAKuU,KAAKiB,SAAS,EAAG,EAAG,EAAG,GAC5B,IAAMC,EAAOzV,KAAKuU,KAAKmB,aAAa,EAAG,EAAG,EAAG,GAAGD,KAGhD,GAAgB,MAAZA,EAAK,GACP,CAAA,IAAKtB,EAqBH,OAJA5R,QAAQgT,KACN,UAAU3Q,EAAV,0EACkByQ,EAASzQ,IAAG,KAEzByQ,EAKH,IAAAM,EAAe3V,KAAKuU,KAAKe,UAAUM,UAAU,EAAG5V,KAAKuU,KAAKe,UAAUxS,OAAS,GAAG+S,MAAM,KAAKC,KAAI,SAAAC,GAAa,OAAAC,OAAOD,MAAlHxG,EAACoG,EAAA,GAAEnG,EAACmG,EAAA,GAAElG,EAACkG,EAAA,GAAExQ,EAACwQ,EAAA,GACXM,EAAQ3F,KAAKC,MAAU,IAAJpL,GAEzB,MACE4J,CAAAA,KAFmB3J,EAAAwJ,SAASe,OAAOJ,EAAGC,EAAGC,EAAGwG,GAG5CrR,IAAGsR,GAIP,MAGEtR,CAAAA,IAAK5E,KAAKuU,KAAKe,UACfvG,KAAM3J,EAAAwJ,SAASe,OAAO8F,EAAK,GAAIA,EAAK,GAAIA,EAAK,GAAIA,EAAK,MAG5DvB,EA9IA,GAAaP,EAAAwC,aAAAA,kGCjEbC,EAAA7M,wBAAA,qBAAwCuB,EAAA,GAAAyE,EAAA,EAAAA,EAAA8G,UAAAvT,OAAAyM,IAAAzE,EAAAyE,GAAA8G,UAAA9G,GACtC,IAAgB,IAAAnK,EAAA,EAAA6L,EAAAqF,EAAAlR,EAAA6L,EAAAnO,OAAAsC,IAAX,CAAA,IAAM9C,EAAC2O,EAAA7L,GACM,QAAhB9C,EAAAA,MAAAA,OAAAA,EAAAA,EAAGiU,qBAAAA,IAAajU,GAAAA,EAAE4H,YAAY5H,sGCKlCkU,EAAArN,yBAAA,SACEsN,EACAxS,EACAyS,EACAC,GAEAF,EAAKxV,iBAAiBgD,EAAMyS,EAASC,GACrC,IAAIC,GAAAA,EACJ,MACEtN,CAAAA,QAAS,WACHsN,IAGJA,GAAAA,EACAH,EAAKtM,oBAAoBlG,EAAMyS,EAASC,khBCnB9C,IAAAE,EAAAC,EAAA,MACAC,EAAAD,EAAA,MAYAE,EAAA,oBAwBEC,EACqCC,EACLC,EACIC,GAFCpX,KAAAkX,eAAAA,EACLlX,KAAAmX,YAAAA,EACInX,KAAAoX,gBAAAA,EAnB1BpX,KAAAqX,cAA0C,GAM5CrX,KAAAsX,mBAAqB,EAGrBtX,KAAAuX,qBAAuB,IAAIV,EAAAW,aAE3BxX,KAAAyX,qBAAuB,IAAIZ,EAAAW,aAE3BxX,KAAA0X,eAAiB,IAAIb,EAAAW,aAQ3BxX,KAAK2X,eACHzP,CAAAA,WAAAA,EACAC,SAAAA,GAiSN,OA9SE0L,OAAA+D,eAAWX,EAAA5N,UAAA,2BAAX,WAA4D,OAAOrJ,KAAKuX,qBAAqBnU,uCAE7FyQ,OAAA+D,eAAWX,EAAA5N,UAAA,2BAAX,WAA4D,OAAOrJ,KAAKyX,qBAAqBrU,uCAE7FyQ,OAAA+D,eAAWX,EAAA5N,UAAA,qBAAX,WAAsD,OAAOrJ,KAAK0X,eAAetU,uCAiB1E6T,EAAA5N,UAAAwO,YAAP,SAAmBlQ,EAAsBmQ,GACvC9X,KAAK+X,SAAWpQ,EAChB3H,KAAKgY,kBAAoBF,GAQpBb,EAAA5N,UAAA4O,YAAP,SAAmB/P,EAAeC,GAAlC,IAAA/C,EAAApF,KAEOA,KAAKgY,yBAAAA,IAKNhY,KAAK2X,eAAezP,YAAAA,IAAuBlI,KAAK2X,eAAexP,KACjEnI,KAAK2X,eAAezP,MAAQA,EAC5BlI,KAAK2X,eAAexP,IAAMA,IAE1BnI,KAAK2X,eAAezP,MAAQoI,KAAK6B,IAAInS,KAAK2X,eAAezP,MAAOA,GAChElI,KAAK2X,eAAexP,IAAMmI,KAAK0B,IAAIhS,KAAK2X,eAAexP,IAAKA,IAI9DnI,KAAKgY,kBAAkBE,SAAShQ,EAAOC,GAGnCnI,KAAKmY,gBACPC,aAAapY,KAAKmY,gBAIpBnY,KAAKmY,eAAiB9M,YAAW,WAAM,OAAAjG,EAAKiT,iBAAgBC,EAAUC,sBAMhEtB,EAAA5N,UAAAgP,aAAR,WACErY,KAAKmY,oBAAAA,EACL,IAAMxV,EAAS3C,KAAKkX,eAAevU,OAEnC,QAAA,IAAI3C,KAAK2X,eAAezP,YAAAA,IAAuBlI,KAAK2X,eAAexP,IAMnE,CAAA,IAAMqQ,EAAwB7V,EAAOiJ,MAAQ5L,KAAK2X,eAAezP,MACjE,KAAIsQ,GAAyB7V,EAAOkH,MAAM/G,QAoB1C,CAAA,IAfA,IAAM2V,EAAsB9V,EAAOiJ,MAAQ0E,KAAK6B,IAAInS,KAAK2X,eAAexP,IAAKnI,KAAKkX,eAAepQ,MAAQ,EAYnG4R,EAAoBpI,KAAK2B,KAhHP,IAgHkCjS,KAAKkX,eAAeyB,MACxEC,EAAW5Y,KAAKkX,eAAevU,OAAOiW,UAAAA,EACnCJ,EAAuBC,EAAqBC,EAAmBA,GACjEE,EAASC,WAEd,IADA,IAAMnN,EAAwCkN,EAASE,OAC9C1T,EAAI,EAAGA,EAAIpF,KAAKqX,cAAcvU,OAAQsC,IAC7CpF,KAAK+Y,cAAcrN,EAASsN,MAAMC,MAAOvN,EAASwN,QAASlZ,KAAKqX,cAAcjS,IAIlFpF,KAAK2X,eAAezP,WAAAA,EACpBlI,KAAK2X,eAAexP,SAAAA,QAlClBnI,KAAKmX,YAAYgC,MAAM,2DA+CpBlC,EAAA5N,UAAA+P,oBAAP,SAA2BC,EAAe3C,EAA6BC,GACrE,QAAA,IADqEA,IAAAA,EAAA,KAChED,EACH,MAAM,IAAI9O,MAAM,2BAElB,IAAM0R,EACJC,CAAAA,GAAIvZ,KAAKsX,qBACT+B,MAAK/W,EACLoU,QAAO5L,EACP0O,WAAY7C,EAAQ6C,WACpBC,mBAAoB9C,EAAQ8C,mBAC5BC,qBAAsB/C,EAAQgD,gBAC9BC,mBAAoBjD,EAAQkD,cAC5BC,iBAAkBnD,EAAQmD,iBAC1BC,SAAUpD,EAAQoD,UAAY,GAGhC,OADA/Z,KAAKga,sBAAsBV,GACpBA,EAAQC,IASTtC,EAAA5N,UAAA2Q,sBAAR,SAA8BV,GAC5B,GAAkC,IAA9BtZ,KAAKqX,cAAcvU,OAKvB,CAAA,IAAK,IAAIsC,EAAIpF,KAAKqX,cAAcvU,OAAS,EAAGsC,GAAK,EAAGA,IAClD,GAAIkU,EAAQS,UAAY/Z,KAAKqX,cAAcjS,GAAG2U,SAE5C,YADA/Z,KAAKqX,cAAc4C,OAAO7U,EAAI,EAAG,EAAGkU,GAKxCtZ,KAAKqX,cAAc4C,OAAO,EAAG,EAAGX,QAX9BtZ,KAAKqX,cAAc/M,KAAKgP,IAmBrBrC,EAAA5N,UAAA6Q,sBAAP,SAA6BC,GAC3B,IAAK,IAAI/U,EAAI,EAAGA,EAAIpF,KAAKqX,cAAcvU,OAAQsC,IAC7C,GAAIpF,KAAKqX,cAAcjS,GAAGmU,KAAOY,EAE/B,OADAna,KAAKqX,cAAc4C,OAAO7U,EAAG,IAAA,EAIjC,OAAO,GASD6R,EAAA5N,UAAA0P,cAAR,SAAsBqB,EAAkB9V,EAAcgV,GAKpD,IALF,IAGMe,EAHNpJ,EAAAjR,KAEQsa,EAAM,IAAIC,OAAOjB,EAAQD,MAAMmB,QAASlB,EAAQD,MAAMoB,OAAS,IAAM,KAEvEC,GAAe,eAEjB,IAAMC,EAAMN,EAAoC,iBAAvBf,EAAQE,WAA0B,EAAIF,EAAQE,YACvE,IAAKmB,SAGHnX,EAAK2T,YAAYgC,MAAM,+CAAgDkB,EAAOf,WAUhF,GAFAoB,EAAcpW,EAAKsW,QAAQD,EAAKD,EAAc,GAC9CJ,EAAIO,UAAYH,EAAcC,EAAI7X,OAC9B4X,EAAc,gBAMlB,IAAMI,EAActX,EAAK0T,eAAevU,OAAOoY,yBAAyBX,EAAUM,GAClF,GAAII,EAAY,GAAK,gBAKrB,IAAME,EAAOxX,EAAK0T,eAAevU,OAAOkH,MAAMoR,IAAIH,EAAY,IAC9D,IAAKE,gBAIL,IAAME,EAAOF,EAAKG,MAAML,EAAY,IAC9B/K,EAAKmL,EAAQA,GAAQ,EAAK,SAAA,EAE5B5B,EAAQG,mBACVH,EAAQG,mBAAmBkB,GAAK,SAAAS,GAE1BnK,EAAKkH,gBAGLiD,GACFnK,EAAKoK,SAASP,EAAY,GAAIA,EAAY,GAAK7J,EAAKiG,eAAevU,OAAOiJ,MAAO+O,EAAKrB,EAASvJ,MAInGvM,EAAK6X,SAASP,EAAY,GAAIA,EAAY,GAAKtX,EAAK0T,eAAevU,OAAOiJ,MAAO+O,EAAKrB,EAASvJ,WA9C/D,QAA5BsK,EAAQC,EAAIgB,KAAKhX,uBA2DnB2S,EAAA5N,UAAAgS,SAAR,SAAiBzY,EAAW2Y,EAAWZ,EAAarB,EAAuBvJ,GAA3E,IAAA4F,EAAA3V,KACE,GAAKA,KAAKgY,mBAAsBhY,KAAK+X,SAIrC,CAAA,IAAMtK,EAAQzN,KAAKoX,gBAAgBoE,mBAAmBb,GAChDc,EAAK7Y,EAAI5C,KAAKkX,eAAeyB,KAC7B+C,EAAKH,EAAIjL,KAAKqL,MAAM/Y,EAAI5C,KAAKkX,eAAeyB,MAC9CiD,GAAMH,EAAKhO,GAASzN,KAAKkX,eAAeyB,KACxCkD,EAAKH,EAAKpL,KAAKqL,OAAOF,EAAKhO,GAASzN,KAAKkX,eAAeyB,MACjD,IAAPiD,IACFA,EAAK5b,KAAKkX,eAAeyB,KACzBkD,KAGF7b,KAAKgY,kBAAkBrR,IAAI,IAAImV,EAC7BL,EAAK,EACLC,EAAK,EACLE,EAAK,EACLC,EAAK,GACL,SAAAvZ,GACE,GAAIgX,EAAQ5C,QACV,OAAO4C,EAAQ5C,QAAQpU,EAAGqY,GAE5B,IAAMoB,EAAY/a,OAAOG,OACrB4a,GACFA,EAAUC,OAAS,KACnBD,EAAUE,SAASC,KAAOvB,GAE1BpY,QAAQgT,KAAK,0DAGjB,WACEI,EAAK4B,qBAAqB4E,KAAKxG,EAAKyG,sBAAsBX,EAAIC,EAAIE,EAAIC,EAAI9L,IAC1E4F,EAAKoC,SAAUrR,UAAUC,IAAI,2BAE/B,SAAArE,GACEqT,EAAK+B,eAAeyE,KAAKxG,EAAKyG,sBAAsBX,EAAIC,EAAIE,EAAIC,EAAI9L,IAChEuJ,EAAQI,sBAGVJ,EAAQI,qBAAqBpX,EAAGqY,EAAOzS,CAAAA,MAAStF,CAAAA,EAAG6Y,EAAIF,EAAGG,GAAMvT,IAAOvF,CAAAA,EAAGgZ,EAAIL,EAAGM,QAGrF,WACElG,EAAK8B,qBAAqB0E,KAAKxG,EAAKyG,sBAAsBX,EAAIC,EAAIE,EAAIC,EAAI9L,IAC1E4F,EAAKoC,SAAUrR,UAAU2V,OAAO,wBAC5B/C,EAAQM,oBACVN,EAAQM,wBAGZ,SAAAtX,GACE,OAAIgX,EAAQQ,kBACHR,EAAQQ,iBAAiBxX,EAAGqY,SAOnC1D,EAAA5N,UAAA+S,sBAAR,SAA8BX,EAAYC,EAAYE,EAAYC,EAAY9L,GAC5E,MAAS0L,CAAAA,GAAEnZ,EAAEoZ,GAAE5Q,EAAE8Q,GAAErM,EAAEsM,GAAEzW,EAAEuT,KAAM3Y,KAAKkX,eAAeyB,KAAM5I,GAAEkB,IAxT5CgG,EAAAsB,mBAAqB,IAN3BD,EAASgE,EAyBjB,CAAAC,EAAA,EAAAxF,EAAAyF,gBACAD,EAAA,EAAAxF,EAAA0F,aACAF,EAAA,EAAAxF,EAAA2F,kBA3BQpE,GAAb,GAAaqE,EAAArE,UAAAA,EAkUb,IAAAsE,EACE,SACSnB,EACAC,EACAE,EACAC,EACAgB,EACAC,EACAnD,EACAE,EACAC,GARA9Z,KAAAyb,GAAAA,EACAzb,KAAA0b,GAAAA,EACA1b,KAAA4b,GAAAA,EACA5b,KAAA6b,GAAAA,EACA7b,KAAA6c,cAAAA,EACA7c,KAAA8c,cAAAA,EACA9c,KAAA2Z,gBAAAA,EACA3Z,KAAA6Z,cAAAA,EACA7Z,KAAA8Z,iBAAAA,GAVE6C,EAAAb,UAAAA,49BC9Ub,IAAAiB,EAAAC,EAAA,MACAC,EAAAD,EAAA,MACA5N,EAAA4N,EAAA,KACArX,EAAAqX,EAAA,MAEApX,EAAA,SAAAsX,YAmBEC,EACmCjG,GADnC,IAAA3H,EAGE2N,EAAAhX,KAAAlG,OAAOA,YAF0BuP,EAAA2H,eAAAA,EAhB3B3H,EAAA6N,eAAkC,GAIlC7N,EAAA8N,sBAAuC,GAEvC9N,EAAA+N,aAAAA,EAEA/N,EAAAgO,aAAuB,EAEvBhO,EAAAgI,qBAAuBhI,EAAKzH,SAAS,IAAImV,EAAAzF,cAEzCjI,EAAAkI,qBAAuBlI,EAAKzH,SAAS,IAAImV,EAAAzF,cAO/CjI,EAAKzH,UAAAA,EAASsH,EAAAoO,2BAA0BjO,EAAK8N,0BAmWjD,OA1XgCI,EAAAN,EAAAD,GAK9BrJ,OAAA+D,eAAWuF,EAAA9T,UAAA,mBAAX,WAAuD,OAAOrJ,KAAK0d,8CAUnE7J,OAAA+D,eAAWuF,EAAA9T,UAAA,2BAAX,WAA4D,OAAOrJ,KAAKuX,qBAAqBnU,uCAE7FyQ,OAAA+D,eAAWuF,EAAA9T,UAAA,2BAAX,WAA4D,OAAOrJ,KAAKyX,qBAAqBrU,uCAStF+Z,EAAA9T,UAAAsU,qBAAP,SAA4BC,GAA5B,IAAA9S,EAAA9K,KAEE,OADAA,KAAKod,eAAe9S,KAAKsT,GAEvBtU,CAAAA,QAAS,WAEP,IAAMuU,EAAgB/S,EAAKsS,eAAexC,QAAQgD,IAE3B,IAAnBC,GACF/S,EAAKsS,eAAenD,OAAO4D,EAAe,MAM3CV,EAAA9T,UAAAwO,YAAP,SAAmBlQ,EAAsBmW,EAA6BC,GAAtE,IAAA3Y,EAAApF,KACEA,KAAK+X,SAAWpQ,EAChB3H,KAAKge,cAAgBF,EACrB9d,KAAKiG,eAAiB8X,EAEtB/d,KAAK8H,UAAAA,EAASnC,EAAAwD,0BAAyBnJ,KAAK+X,SAAU,cAAc,WAClE3S,EAAKkY,aAAAA,EACLlY,EAAK6Y,wBAEPje,KAAK8H,UAAAA,EAASnC,EAAAwD,0BAAyBnJ,KAAK+X,SAAU,YAAa/X,KAAKke,aAAa1W,KAAKxH,QAC1FA,KAAK8H,UAAAA,EAASnC,EAAAwD,0BAAyBnJ,KAAK+X,SAAU,QAAS/X,KAAKme,SAAS3W,KAAKxH,SAG5Emd,EAAA9T,UAAA6U,aAAR,SAAqB9a,GAGnB,GAFApD,KAAKoe,gBAAkBhb,EAElBpD,KAAK+X,UAAa/X,KAAKge,cAI5B,CAAA,IAAMxU,EAAWxJ,KAAKqe,wBAAwBjb,EAAOpD,KAAK+X,SAAU/X,KAAKge,eACzE,GAAKxU,EAGLxJ,CAAAA,KAAKsd,aAAAA,EAIL,IADA,IAAMgB,EAAelb,EAAMkb,eAClBlZ,EAAI,EAAGA,EAAIkZ,EAAaxb,OAAQsC,IACvC,CAAA,IAAMsE,EAAS4U,EAAalZ,GAE5B,GAAIsE,EAAOhD,UAAU6X,SAAS,SAC5B,MAGF,GAAI7U,EAAOhD,UAAU6X,SAAS,eAC5B,OAICve,KAAKwe,iBAAoBhV,EAAS5G,IAAM5C,KAAKwe,gBAAgB5b,GAAK4G,EAAS+R,IAAMvb,KAAKwe,gBAAgBjD,IACzGvb,KAAKye,SAASjV,GACdxJ,KAAKwe,gBAAkBhV,MAInB2T,EAAA9T,UAAAoV,SAAR,SAAiBjV,GAGf,GAAIxJ,KAAKud,cAAgB/T,EAAS+R,EAGhC,OAFAvb,KAAKie,yBACLje,KAAK0e,YAAYlV,GAAAA,GAKaxJ,KAAK0d,cAAgB1d,KAAK2e,gBAAgB3e,KAAK0d,aAAakB,KAAMpV,KAEhGxJ,KAAKie,oBACLje,KAAK0e,YAAYlV,GAAAA,KAIb2T,EAAA9T,UAAAqV,YAAR,SAAoBlV,EAA+BqV,GAAnD,MAAAzZ,EAAApF,KACOA,KAAK8e,wBAA2BD,IACR,QAA3BE,EAAA/e,KAAK8e,8BAAAA,IAAsBC,GAAAA,EAAEC,SAAQ,SAAAC,GACnCA,MAAAA,GAAAA,EAAOD,SAAQ,SAAAE,GACTA,EAAcN,KAAKtV,SACrB4V,EAAcN,KAAKtV,gBAIzBtJ,KAAK8e,uBAAyB,IAAIK,IAClCnf,KAAKud,YAAc/T,EAAS+R,GAE9B,IAAI6D,GAAAA,EAGJpf,KAAKod,eAAe4B,SAAQ,SAACpB,EAAcxY,SACrCyZ,GAC+C,QAA3BQ,EAAAja,EAAK0Z,8BAAAA,IAAsBO,OAAA,EAAAA,EAAEpE,IAAI7V,MAOrDga,EAAeha,EAAKka,yBAAyBla,EAAGoE,EAAU4V,IAG5DxB,EAAa2B,aAAa/V,EAAS+R,GAAG,SAACiE,WACrC,IAAIpa,EAAKkY,YAGT,CAAA,IAAMmC,EAA+CD,MAAAA,OAAAA,EAAAA,EAAO1J,KAAI,SAAA8I,GAAS,MAAGA,CAAAA,KAAItc,MACrD,QAA3BiN,EAAAnK,EAAK0Z,8BAAAA,IAAsBvP,GAAAA,EAAEmQ,IAAIta,EAAGqa,GACpCL,EAAeha,EAAKka,yBAAyBla,EAAGoE,EAAU4V,IAI3B,QAA3BnQ,EAAA7J,EAAK0Z,8BAAAA,IAAsB7P,OAAA,EAAAA,EAAE0Q,QAASva,EAAKgY,eAAeta,QAC5DsC,EAAKwa,yBAAyBpW,EAAS+R,EAAGnW,EAAK0Z,gCAOjD3B,EAAA9T,UAAAuW,yBAAR,SAAiCrE,EAAWsE,GAE1C,IADA,IAAMC,EAAgB,IAAIC,IACjB3a,EAAI,EAAGA,EAAIya,EAAQF,KAAMva,IAChC,CAAA,IAAM4a,EAAgBH,EAAQ5E,IAAI7V,GAClC,GAAK4a,EAGL,IAAK,IAAIrK,EAAI,EAAGA,EAAIqK,EAAcld,OAAQ6S,IAIxC,IAHA,IAAMuJ,EAAgBc,EAAcrK,GAC9BsK,EAASf,EAAcN,KAAK5F,MAAM9Q,MAAMqT,EAAIA,EAAI,EAAI2D,EAAcN,KAAK5F,MAAM9Q,MAAMtF,EACnFsd,EAAOhB,EAAcN,KAAK5F,MAAM7Q,IAAIoT,EAAIA,EAAIvb,KAAKkX,eAAeyB,KAAOuG,EAAcN,KAAK5F,MAAM7Q,IAAIvF,EACjGA,EAAIqd,EAAQrd,GAAKsd,EAAMtd,IAC9B,CAAA,GAAIkd,EAAcK,IAAIvd,GACpBod,CAAAA,EAAc/F,OAAOtE,IAAK,GAC1B,MAEFmK,EAAcnZ,IAAI/D,MAMlBua,EAAA9T,UAAAiW,yBAAR,SAAiCc,EAAe5W,EAA+B4V,GAA/E,MAAAnO,EAAAjR,KACE,IAAKA,KAAK8e,uBACR,OAAOM,EAOT,IAJA,IAAMI,EAAQxf,KAAK8e,uBAAuB7D,IAAImF,GAG1CC,GAAAA,EACKC,EAAI,EAAGA,EAAIF,EAAOE,IACpBtgB,KAAK8e,uBAAuBqB,IAAIG,KAAMtgB,KAAK8e,uBAAuB7D,IAAIqF,KACzED,GAAAA,GAMJ,IAAKA,GAAiBb,EACpB,CAAA,IAAMe,EAAiBf,EAAMgB,MAAK,SAAA5B,GAAQ,OAAA3N,EAAK0N,gBAAgBC,EAAKA,KAAMpV,MACtE+W,IACFnB,GAAAA,EACApf,KAAKygB,eAAeF,IAKxB,GAAIvgB,KAAK8e,uBAAuBa,OAAS3f,KAAKod,eAAeta,SAAWsc,EAEtE,IAASkB,EAAI,EAAGA,EAAItgB,KAAK8e,uBAAuBa,KAAMW,IACpD,CAAA,IAAMI,EAAgD,QAAlCtb,EAAApF,KAAK8e,uBAAuB7D,IAAIqF,UAAAA,IAAElb,OAAA,EAAAA,EAAEob,MAAK,SAAA5B,GAAQ,OAAA3N,EAAK0N,gBAAgBC,EAAKA,KAAMpV,MACrG,GAAIkX,EACFtB,CAAAA,GAAAA,EACApf,KAAKygB,eAAeC,GACpB,OAKN,OAAOtB,GAGDjC,EAAA9T,UAAA8U,SAAR,SAAiB/a,GACf,GAAKpD,KAAK+X,UAAa/X,KAAKge,eAAkBhe,KAAK0d,aAInD,CAAA,IAAMlU,EAAWxJ,KAAKqe,wBAAwBjb,EAAOpD,KAAK+X,SAAU/X,KAAKge,eAEpExU,GAIDxJ,KAAK2e,gBAAgB3e,KAAK0d,aAAakB,KAAMpV,IAC/CxJ,KAAK0d,aAAakB,KAAK+B,SAASvd,EAAOpD,KAAK0d,aAAakB,KAAKta,QAI1D6Y,EAAA9T,UAAA4U,kBAAR,SAA0B2C,EAAmBC,GACtC7gB,KAAK+X,UAAa/X,KAAK0d,cAAiB1d,KAAKoe,mBAK7CwC,IAAaC,GAAW7gB,KAAK0d,aAAakB,KAAK5F,MAAM9Q,MAAMqT,GAAKqF,GAAY5gB,KAAK0d,aAAakB,KAAK5F,MAAM7Q,IAAIoT,GAAKsF,KACrH7gB,KAAK8gB,WAAW9gB,KAAK+X,SAAU/X,KAAK0d,aAAakB,KAAM5e,KAAKoe,iBAC5Dpe,KAAK0d,kBAAAA,GAAeqD,EACpB3R,EAAA4R,cAAahhB,KAAKqd,yBAIdF,EAAA9T,UAAAoX,eAAR,SAAuBvB,GAAvB,IAAApU,EAAA9K,KACE,GAAKA,KAAK+X,UAAa/X,KAAKoe,iBAAoBpe,KAAKge,cAIrD,CAAA,IAAMxU,EAAWxJ,KAAKqe,wBAAwBre,KAAKoe,gBAAiBpe,KAAK+X,SAAU/X,KAAKge,eAEnFxU,GAKDxJ,KAAK2e,gBAAgBO,EAAcN,KAAMpV,KAC3CxJ,KAAK0d,aAAewB,EACpBlf,KAAK0d,aAAauD,MAChBC,CAAAA,YACEC,CAAAA,eAAAA,IAAWjC,EAAcN,KAAKsC,aAAmChC,EAAcN,KAAKsC,YAAYC,UAChGC,mBAAAA,IAAelC,EAAcN,KAAKsC,aAAmChC,EAAcN,KAAKsC,YAAYE,eAEtGC,WAAAA,GAEFrhB,KAAKshB,WAAWthB,KAAK+X,SAAUmH,EAAcN,KAAM5e,KAAKoe,iBAGxDc,EAAcN,KAAKsC,YAAc,GACjCrN,OAAO0N,iBAAiBrC,EAAcN,KAAKsC,YACzCE,CAAAA,cACEnG,CAAAA,IAAK,WAAA,IAAA3Y,EAAAiN,EAAM,OAAwB,QAAxBA,EAAiB,QAAjBjN,EAAAwI,EAAK4S,oBAAAA,IAAYpb,OAAA,EAAAA,EAAE2e,aAAAA,IAAK1R,OAAA,EAAAA,EAAE2R,YAAYE,eACjD1B,IAAK,SAAA1L,YACkB,QAAjBzE,EAAAzE,EAAK4S,oBAAAA,IAAYnO,OAAA,EAAAA,EAAE0R,QAASnW,EAAK4S,aAAauD,MAAMC,YAAYE,gBAAkBpN,IACpFlJ,EAAK4S,aAAauD,MAAMC,YAAYE,cAAgBpN,EAChDlJ,EAAK4S,aAAauD,MAAMI,YACb,QAAbjc,EAAA0F,EAAKiN,gBAAAA,IAAQ3S,GAAAA,EAAEsB,UAAU8a,OAAO,uBAAwBxN,OAKhEmN,UACElG,CAAAA,IAAK,WAAA,IAAA3Y,EAAAiN,EAAM,OAAwB,QAAxBA,EAAiB,QAAjBjN,EAAAwI,EAAK4S,oBAAAA,IAAYpb,OAAA,EAAAA,EAAE2e,aAAAA,IAAK1R,OAAA,EAAAA,EAAE2R,YAAYC,WACjDzB,IAAK,SAAA1L,cACkB,QAAjB5O,EAAA0F,EAAK4S,oBAAAA,IAAYtY,OAAA,EAAAA,EAAE6b,SAAiC,QAAxBtL,EAAiB,QAAjB1E,EAAAnG,EAAK4S,oBAAAA,IAAYzM,OAAA,EAAAA,EAAEgQ,aAAAA,IAAKtL,OAAA,EAAAA,EAAEuL,YAAYC,aAAcnN,IAClFlJ,EAAK4S,aAAauD,MAAMC,YAAYC,UAAYnN,EAC5ClJ,EAAK4S,aAAauD,MAAMI,WAC1BvW,EAAK2W,oBAAoBvC,EAAcN,KAAM5K,QAQnDhU,KAAKiG,gBACPjG,KAAKqd,sBAAsB/S,KAAKtK,KAAKiG,eAAeyb,wBAAuB,SAAApf,GAGzE,IAAM4F,EAAoB,IAAZ5F,EAAE4F,MAAc,EAAI5F,EAAE4F,MAAQ,EAAI4C,EAAKoM,eAAevU,OAAOiJ,MAC3Ed,EAAKmT,kBAAkB/V,EAAO5F,EAAE6F,IAAM,EAAI2C,EAAKoM,eAAevU,OAAOiJ,cAMnEuR,EAAA9T,UAAAiY,WAAV,SAAqB3Z,EAAsBiX,EAAaxb,UACjC,QAAjBgC,EAAApF,KAAK0d,oBAAAA,IAAYtY,OAAA,EAAAA,EAAE6b,SACrBjhB,KAAK0d,aAAauD,MAAMI,WAAAA,EACpBrhB,KAAK0d,aAAauD,MAAMC,YAAYC,WACtCnhB,KAAKyhB,oBAAoB7C,GAAAA,GAEvB5e,KAAK0d,aAAauD,MAAMC,YAAYE,eACtCzZ,EAAQjB,UAAUC,IAAI,yBAItBiY,EAAK+C,OACP/C,EAAK+C,MAAMve,EAAOwb,EAAKta,OAInB6Y,EAAA9T,UAAAoY,oBAAR,SAA4B7C,EAAagD,GACvC,IAAM5I,EAAQ4F,EAAK5F,MACb6I,EAAe7hB,KAAKkX,eAAevU,OAAOiJ,MAC1CxI,EAAQpD,KAAK8hB,0BAA0B9I,EAAM9Q,MAAMtF,EAAI,EAAGoW,EAAM9Q,MAAMqT,EAAIsG,EAAe,EAAG7I,EAAM7Q,IAAIvF,EAAGoW,EAAM7Q,IAAIoT,EAAIsG,EAAe,OAAA,IAC5HD,EAAY5hB,KAAKuX,qBAAuBvX,KAAKyX,sBACrD0E,KAAK/Y,IAGL+Z,EAAA9T,UAAAyX,WAAV,SAAqBnZ,EAAsBiX,EAAaxb,UACjC,QAAjBgC,EAAApF,KAAK0d,oBAAAA,IAAYtY,OAAA,EAAAA,EAAE6b,SACrBjhB,KAAK0d,aAAauD,MAAMI,WAAAA,EACpBrhB,KAAK0d,aAAauD,MAAMC,YAAYC,WACtCnhB,KAAKyhB,oBAAoB7C,GAAAA,GAEvB5e,KAAK0d,aAAauD,MAAMC,YAAYE,eACtCzZ,EAAQjB,UAAU2V,OAAO,yBAIzBuC,EAAKmD,OACPnD,EAAKmD,MAAM3e,EAAOwb,EAAKta,OASnB6Y,EAAA9T,UAAAsV,gBAAR,SAAwBC,EAAapV,GACnC,IAAMwY,EAAWpD,EAAK5F,MAAM9Q,MAAMqT,IAAMqD,EAAK5F,MAAM7Q,IAAIoT,EACjD0G,EAAkBrD,EAAK5F,MAAM9Q,MAAMqT,EAAI/R,EAAS+R,EAChD2G,EAAiBtD,EAAK5F,MAAM7Q,IAAIoT,EAAI/R,EAAS+R,EAInD,OAASyG,GAAYpD,EAAK5F,MAAM9Q,MAAMtF,GAAK4G,EAAS5G,GAAKgc,EAAK5F,MAAM7Q,IAAIvF,GAAK4G,EAAS5G,GACnFqf,GAAmBrD,EAAK5F,MAAM7Q,IAAIvF,GAAK4G,EAAS5G,GAChDsf,GAAkBtD,EAAK5F,MAAM9Q,MAAMtF,GAAK4G,EAAS5G,GACjDqf,GAAmBC,IACpBtD,EAAK5F,MAAM9Q,MAAMqT,GAAK/R,EAAS+R,GAC/BqD,EAAK5F,MAAM7Q,IAAIoT,GAAK/R,EAAS+R,GAOzB4B,EAAA9T,UAAAgV,wBAAR,SAAgCjb,EAAmBuE,EAAsBmW,GACvE,IAAMqE,EAASrE,EAAasE,UAAUhf,EAAOuE,EAAS3H,KAAKkX,eAAeyB,KAAM3Y,KAAKkX,eAAepQ,MACpG,GAAKqb,EAIL,MAASvf,CAAAA,EAAGuf,EAAO,GAAI5G,EAAG4G,EAAO,GAAKniB,KAAKkX,eAAevU,OAAOiJ,QAG3DuR,EAAA9T,UAAAyY,0BAAR,SAAkCrG,EAAYC,EAAYE,EAAYC,EAAY9L,GAChF,MAAS0L,CAAAA,GAAEnZ,EAAEoZ,GAAE5Q,EAAE8Q,GAAErM,EAAEsM,GAAEzW,EAAEuT,KAAM3Y,KAAKkX,eAAeyB,KAAM5I,GAAEkB,IAxXxCoR,EAoBlB,CAAAC,EAAA,EAAAvF,EAAAP,iBApBQ+F,GAAb,CAAgCnT,EAAAhD,YAAnBoW,EAAAD,WAAAA,sGCPFzX,EAAA2X,YAAc,iBAGd3X,EAAAI,cAAgB,iiCCJ3B,IAAAwX,EAAAC,EAAA,KACAnf,EAAAmf,EAAA,MACAjd,EAAAid,EAAA,MAEAhd,EAAAgd,EAAA,MAUA/c,EAAA,SAAAgd,YAaEC,EACmB9K,EACA+K,EACgB5L,EACD8G,EACI+E,EACFC,GANpC,IAAA7d,EAQEyd,EAAA1c,KAAAlG,OAAOA,YAPUmF,EAAA4S,SAAAA,EACA5S,EAAA2d,eAAAA,EACgB3d,EAAA+R,eAAAA,EACD/R,EAAA6Y,cAAAA,EACI7Y,EAAA4d,kBAAAA,EACF5d,EAAA6d,gBAAAA,EAlB5B7d,EAAA8d,OAAuB,GAEvB9d,EAAA+d,iBAAAA,EAOA/d,EAAAge,iBAA6D,MAAA,OAACpC,GAC9D5b,EAAAie,wBAAkC,EAYxCje,EAAK2C,UAAAA,EAAStE,EAAA2F,0BAAyBhE,EAAK4S,SAAU,aAAa,SAAAzV,GAAK,OAAA6C,EAAKke,aAAa/gB,OAG1F6C,EAAKme,mBAAqB,SAAAhhB,GAAK,OAAA6C,EAAK+Y,aAAa5b,IACjD6C,EAAKoe,oBAAsB,SAAAjhB,GAAK,OAAA6C,EAAKqe,cAAclhB,IACnD6C,EAAKse,eAAiB,SAAAnhB,GAAK,OAAA6C,EAAKgZ,SAAS7b,MA4L7C,OAxNsCohB,EAAAb,EAAAD,GA+B7BC,EAAAxZ,UAAAC,QAAP,WACEsZ,EAAAvZ,UAAMC,QAAOpD,KAAAlG,MACbA,KAAK2jB,eAGAd,EAAAxZ,UAAA1C,IAAP,SAAWid,GACT5jB,KAAKijB,OAAO3Y,KAAKsZ,GACU,IAAvB5jB,KAAKijB,OAAOngB,QACd9C,KAAK6jB,aAIFhB,EAAAxZ,UAAA6O,SAAP,SAAgBhQ,EAAgBC,GAE9B,GAA2B,IAAvBnI,KAAKijB,OAAOngB,OAKXoF,CAAAA,GAAUC,IACbD,EAAQ,EACRC,EAAMnI,KAAKkX,eAAepQ,KAAO,GAInC,IAAK,IAAI1B,EAAI,EAAGA,EAAIpF,KAAKijB,OAAOngB,OAAQsC,IACtC,CAAA,IAAMwe,EAAO5jB,KAAKijB,OAAO7d,IACpBwe,EAAKlI,GAAKxT,GAAS0b,EAAKlI,IAAMvT,EAAM,GACpCyb,EAAK/H,GAAK3T,GAAS0b,EAAK/H,IAAM1T,EAAM,GACpCyb,EAAKlI,GAAKxT,GAAS0b,EAAK/H,GAAK1T,EAAM,KAClCnI,KAAK8jB,cAAgB9jB,KAAK8jB,eAAiBF,IAC7C5jB,KAAK8jB,aAAajK,gBAClB7Z,KAAK8jB,kBAAAA,GAEP9jB,KAAKijB,OAAOhJ,OAAO7U,IAAK,IAKD,IAAvBpF,KAAKijB,OAAOngB,QACd9C,KAAK2jB,gBAIDd,EAAAxZ,UAAAwa,UAAR,WACO7jB,KAAKkjB,kBACRljB,KAAKkjB,iBAAAA,EACLljB,KAAK+X,SAAS9W,iBAAiB,YAAajB,KAAKsjB,oBACjDtjB,KAAK+X,SAAS9W,iBAAiB,aAAcjB,KAAKujB,qBAClDvjB,KAAK+X,SAAS9W,iBAAiB,QAASjB,KAAKyjB,kBAIzCZ,EAAAxZ,UAAAsa,YAAR,WACM3jB,KAAKkjB,kBACPljB,KAAKkjB,iBAAAA,EACLljB,KAAK+X,SAAS5N,oBAAoB,YAAanK,KAAKsjB,oBACpDtjB,KAAK+X,SAAS5N,oBAAoB,aAAcnK,KAAKujB,qBACrDvjB,KAAK+X,SAAS5N,oBAAoB,QAASnK,KAAKyjB,kBAI5CZ,EAAAxZ,UAAA6U,aAAR,SAAqB5b,GAGftC,KAAKmjB,iBAAiB,KAAO7gB,EAAEyhB,OAAS/jB,KAAKmjB,iBAAiB,KAAO7gB,EAAE0hB,QACzEhkB,KAAKye,SAASnc,GAEdtC,KAAKmjB,iBAAoB7gB,CAAAA,EAAEyhB,MAAOzhB,EAAE0hB,SAIhCnB,EAAAxZ,UAAAoV,SAAR,SAAiBnc,GAAjB,IAAAwI,EAAA9K,KACQ4jB,EAAO5jB,KAAKikB,iBAAiB3hB,GAG/BshB,IAAS5jB,KAAK8jB,eAMd9jB,KAAK8jB,eACP9jB,KAAK8jB,aAAajK,gBAClB7Z,KAAK8jB,kBAAAA,EACD9jB,KAAKkkB,iBACP9L,aAAapY,KAAKkkB,kBAKjBN,IAGL5jB,KAAK8jB,aAAeF,EAGhBA,EAAK9G,eACP8G,EAAK9G,cAAcxa,GAIrBtC,KAAKkkB,gBAAkBljB,OAAOqK,YAAW,WAAM,OAAAP,EAAKqZ,WAAW7hB,KAAItC,KAAKgjB,gBAAgBrM,QAAQyN,6BAG1FvB,EAAAxZ,UAAA8a,WAAR,SAAmB7hB,GACjBtC,KAAKkkB,qBAAAA,EACL,IAAMN,EAAO5jB,KAAKikB,iBAAiB3hB,GACnCshB,MAAAA,GAAAA,EAAMjK,gBAAgBrX,IAGhBugB,EAAAxZ,UAAAga,aAAR,SAAqB/gB,GAMnB,GAHAtC,KAAKojB,wBAA0BpjB,KAAKqkB,sBAG/BrkB,KAAKkjB,gBAMV,CAAA,IAAMU,EAAO5jB,KAAKikB,iBAAiB3hB,IAC/BshB,MAAAA,OAAAA,EAAAA,EAAM9J,iBAAiBxX,MACzBA,EAAEmI,iBACFnI,EAAEoI,8BAIEmY,EAAAxZ,UAAAma,cAAR,SAAsBlhB,GAGhBtC,KAAK8jB,eACP9jB,KAAK8jB,aAAajK,gBAClB7Z,KAAK8jB,kBAAAA,EACD9jB,KAAKkkB,iBACP9L,aAAapY,KAAKkkB,mBAKhBrB,EAAAxZ,UAAA8U,SAAR,SAAiB7b,GAGf,IAAMshB,EAAO5jB,KAAKikB,iBAAiB3hB,GAC7BgiB,EAAyBtkB,KAAKqkB,sBAEhCT,GAAQU,IAA2BtkB,KAAKojB,0BAC1CQ,EAAK/G,cAAcva,GACnBA,EAAEmI,iBACFnI,EAAEoI,6BAIEmY,EAAAxZ,UAAAgb,oBAAR,WACE,IAAMnW,EAAgBlO,KAAK+iB,kBAAkB7U,cAC7C,OAAOA,EAAgBA,EAAcpL,OAAS,GAGxC+f,EAAAxZ,UAAA4a,iBAAR,SAAyB3hB,GACvB,IAAM6f,EAASniB,KAAKge,cAAcoE,UAAU9f,EAAGtC,KAAK8iB,eAAgB9iB,KAAKkX,eAAeyB,KAAM3Y,KAAKkX,eAAepQ,MAClH,GAAKqb,EAKL,IAFA,IAAMvf,EAAIuf,EAAO,GACX5G,EAAI4G,EAAO,GACR/c,EAAI,EAAGA,EAAIpF,KAAKijB,OAAOngB,OAAQsC,IACtC,CAAA,IAAMwe,EAAO5jB,KAAKijB,OAAO7d,GACzB,GAAIwe,EAAKlI,KAAOkI,EAAK/H,IAEnB,GAAIN,IAAMqI,EAAKlI,IAAM9Y,GAAKghB,EAAKnI,IAAM7Y,EAAIghB,EAAKhI,GAC5C,OAAOgI,OAIT,GAAKrI,IAAMqI,EAAKlI,IAAM9Y,GAAKghB,EAAKnI,IAC3BF,IAAMqI,EAAK/H,IAAMjZ,EAAIghB,EAAKhI,IAC1BL,EAAIqI,EAAKlI,IAAMH,EAAIqI,EAAK/H,GAC3B,OAAO+H,IAlNYW,EAgBxB,CAAAC,EAAA,EAAA7e,EAAA6W,gBACAgI,EAAA,EAAA9e,EAAA+e,eACAD,EAAA,EAAA9e,EAAAgf,mBACAF,EAAA,EAAA7e,EAAAgf,kBAnBQC,GAAb,CAAsClC,EAAAtW,YAAzByY,EAAAD,iBAAAA,0FCTb,IAAAE,EAAA,oBAMEC,EACUC,GAAAhlB,KAAAglB,gBAAAA,EA6CZ,OAzCSD,EAAA1b,UAAAC,QAAP,WACMtJ,KAAKilB,kBACPjkB,OAAOkkB,qBAAqBllB,KAAKilB,iBACjCjlB,KAAKilB,qBAAAA,IAIFF,EAAA1b,UAAAkC,QAAP,SAAe4Z,EAA8BC,EAA4BC,GAAzE,IAAAjgB,EAAApF,KACEA,KAAKslB,UAAYD,EAEjBF,OAAAA,IAAWA,EAAyBA,EAAW,EAC/CC,OAAAA,IAASA,EAAuBA,EAASplB,KAAKslB,UAAY,EAE1DtlB,KAAKulB,eAAAA,IAAYvlB,KAAKulB,UAA0BjV,KAAK6B,IAAInS,KAAKulB,UAAWJ,GAAYA,EACrFnlB,KAAKwlB,aAAAA,IAAUxlB,KAAKwlB,QAAwBlV,KAAK0B,IAAIhS,KAAKwlB,QAASJ,GAAUA,EAEzEplB,KAAKilB,kBAITjlB,KAAKilB,gBAAkBjkB,OAAOykB,uBAAsB,WAAM,OAAArgB,EAAKsgB,qBAGzDX,EAAA1b,UAAAqc,cAAR,WAEE,QAAA,IAAI1lB,KAAKulB,gBAAAA,IAA2BvlB,KAAKwlB,cAAAA,IAAyBxlB,KAAKslB,UAKvE,CAAA,IAAMpd,EAAQoI,KAAK0B,IAAIhS,KAAKulB,UAAW,GACjCpd,EAAMmI,KAAK6B,IAAInS,KAAKwlB,QAASxlB,KAAKslB,UAAY,GAGpDtlB,KAAKulB,eAAAA,EACLvlB,KAAKwlB,aAAAA,EACLxlB,KAAKilB,qBAAAA,EAGLjlB,KAAKglB,gBAAgB9c,EAAOC,KAEhC4c,EApDA,GAAaY,EAAAC,gBAAAA,ikBCLb,IAcAjQ,EAAA,SAAAkQ,YAAAC,IAAA,IAAAhb,EAAA,OAAA+a,GAAAA,EAAAE,MAAA/lB,KAAAqW,YAAArW,YACU8K,EAAAkb,yBAAmChlB,OAAOilB,mBAgDpD,OAjDsChV,EAAA6U,EAAAD,GAM7BC,EAAAzc,UAAAH,YAAP,SAAmBgd,GAAnB,IAAApb,EAAA9K,KACMA,KAAKmmB,WACPnmB,KAAKomB,gBAEPpmB,KAAKmmB,UAAYD,EACjBlmB,KAAKqmB,eAAiB,WACfvb,EAAKqb,YAGVrb,EAAKqb,UAAUnlB,OAAOilB,iBAAkBnb,EAAKkb,0BAC7Clb,EAAKwb,eAEPtmB,KAAKsmB,cAGAR,EAAAzc,UAAAC,QAAP,WACEuc,EAAAxc,UAAMC,QAAOpD,KAAAlG,MACbA,KAAKomB,iBAGCN,EAAAzc,UAAAid,WAAR,iBACOtmB,KAAKqmB,iBAKoB,QAA9B/jB,EAAAtC,KAAKumB,iCAAAA,IAAyBjkB,GAAAA,EAAEkkB,eAAexmB,KAAKqmB,gBAGpDrmB,KAAKgmB,yBAA2BhlB,OAAOilB,iBACvCjmB,KAAKumB,0BAA4BvlB,OAAOylB,WAAW,2BAA2BzlB,OAAOilB,iBAAgB,SACrGjmB,KAAKumB,0BAA0BG,YAAY1mB,KAAKqmB,kBAG3CP,EAAAzc,UAAA+c,cAAP,WACOpmB,KAAKumB,2BAA8BvmB,KAAKmmB,WAAcnmB,KAAKqmB,iBAGhErmB,KAAKumB,0BAA0BC,eAAexmB,KAAKqmB,gBACnDrmB,KAAKumB,+BAAAA,EACLvmB,KAAKmmB,eAAAA,EACLnmB,KAAKqmB,oBAAAA,IAETP,EAjDA,CAdAa,EAAA,KAcsCva,YAAzBwa,EAAA3d,iBAAAA,yjBCMb,IAAA4d,EAAAC,EAAA,MACAC,EAAAD,EAAA,MACAE,EAAAF,EAAA,MACAtjB,EAAAsjB,EAAA,MACAG,EAAAH,EAAA,MACAnhB,EAAAmhB,EAAA,MACAlhB,EAAAkhB,EAAA,MACAjhB,EAAAihB,EAAA,MACAI,EAAAJ,EAAA,MACAK,EAAAL,EAAA,MACAM,EAAAN,EAAA,MACA9S,EAAA8S,EAAA,KACAtX,EAAAsX,EAAA,MACAvL,EAAAuL,EAAA,MAEAO,EAAAP,EAAA,MAEAQ,EAAAR,EAAA,MACAS,EAAAT,EAAA,MACArX,EAAAqX,EAAA,MACAU,EAAAV,EAAA,MACAW,EAAAX,EAAA,MACAY,EAAAZ,EAAA,MACAlkB,EAAAkkB,EAAA,KAEAa,EAAAb,EAAA,MACAc,EAAAd,EAAA,MACAe,EAAAf,EAAA,MACAgB,EAAAhB,EAAA,MAEAiB,EAAAjB,EAAA,MACAkB,EAAAlB,EAAA,MAGMvgB,EAAwC,oBAAXvF,OAA0BA,OAAOuF,SAAW,KAE/E0hB,EAAA,SAAAC,YA4FEC,EACExR,QAAAA,IAAAA,IAAAA,EAAA,IADF,IAAApH,EAGE2Y,EAAAhiB,KAAAlG,KAAM2W,IAAQ3W,YAlFTuP,EAAA6Y,QAAoBC,EAoBnB9Y,EAAA+Y,iBAAAA,EAOA/Y,EAAAgZ,kBAAAA,EAOAhZ,EAAAiZ,qBAAAA,EAWAjZ,EAAAkZ,cAAgB,IAAIlB,EAAA/P,aAEpBjI,EAAA3G,OAAS,IAAI2e,EAAA/P,aAEbjI,EAAAmZ,UAAY,IAAInB,EAAA/P,aAEhBjI,EAAAoZ,mBAAqB,IAAIpB,EAAA/P,aAEzBjI,EAAAqZ,eAAiB,IAAIrB,EAAA/P,aAErBjI,EAAAsZ,QAAU,IAAItB,EAAA/P,aAGdjI,EAAAuZ,SAAW,IAAIvB,EAAA/P,aAEfjI,EAAAwZ,QAAU,IAAIxB,EAAA/P,aAEdjI,EAAAyZ,mBAAqB,IAAIzB,EAAA/P,aAEzBjI,EAAA0Z,kBAAoB,IAAI1B,EAAA/P,aAoB9BjI,EAAK2Z,SAEL3Z,EAAK4Z,UAAY5Z,EAAK6Z,sBAAsBC,eAAezjB,EAAA0S,WAC3D/I,EAAK+Z,WAAa/Z,EAAKzH,SAASyH,EAAK6Z,sBAAsBC,eAAezB,EAAArF,aAG1EhT,EAAKzH,SAASyH,EAAKga,cAAcC,eAAc,WAAM,OAAAja,EAAKka,WAC1Dla,EAAKzH,SAASyH,EAAKga,cAAcG,sBAAqB,SAACxhB,EAAOC,GAAQ,OAAAoH,EAAKhE,QAAQrD,EAAOC,OAC1FoH,EAAKzH,SAASyH,EAAKga,cAAcI,oBAAmB,WAAM,OAAApa,EAAKqa,mBAC/Dra,EAAKzH,SAASyH,EAAKga,cAAcM,gBAAe,WAAM,OAAAta,EAAKua,YAC3Dva,EAAKzH,SAASyH,EAAKga,cAAcQ,+BAA8B,SAAA9lB,GAAQ,OAAAsL,EAAKya,sBAAsB/lB,OAClGsL,EAAKzH,SAASyH,EAAKga,cAAcU,mBAAkB,SAAC7mB,GAAU,OAAAmM,EAAK2a,iBAAiB9mB,OACpFmM,EAAKzH,UAAAA,EAASyf,EAAA4C,cAAa5a,EAAKga,cAAca,aAAc7a,EAAKkZ,gBACjElZ,EAAKzH,UAAAA,EAASyf,EAAA4C,cAAa5a,EAAKga,cAAcc,cAAe9a,EAAKqZ,iBAClErZ,EAAKzH,UAAAA,EAASyf,EAAA4C,cAAa5a,EAAKga,cAAclhB,WAAYkH,EAAKyZ,qBAC/DzZ,EAAKzH,UAAAA,EAASyf,EAAA4C,cAAa5a,EAAKga,cAAc9gB,UAAW8G,EAAK0Z,oBAG9D1Z,EAAKzH,SAASyH,EAAK2H,eAAenP,UAAS,SAAAzF,GAAK,OAAAiN,EAAK+a,aAAahoB,EAAEqW,KAAMrW,EAAEwE,YAipChF,OApwC8ByjB,EAAApC,EAAAD,GAgB5BrU,OAAA+D,eAAWuQ,EAAA9e,UAAA,eAAX,WAAoD,OAAOrJ,KAAKwqB,eAAe7T,yCA2C/E9C,OAAA+D,eAAWuQ,EAAA9e,UAAA,oBAAX,WAA0C,OAAOrJ,KAAKyoB,cAAcrlB,uCAEpEyQ,OAAA+D,eAAWuQ,EAAA9e,UAAA,aAAX,WAAuE,OAAOrJ,KAAK4I,OAAOxF,uCAE1FyQ,OAAA+D,eAAWuQ,EAAA9e,UAAA,gBAAX,WAAgE,OAAOrJ,KAAK0oB,UAAUtlB,uCAEtFyQ,OAAA+D,eAAWuQ,EAAA9e,UAAA,yBAAX,WAA+C,OAAOrJ,KAAK2oB,mBAAmBvlB,uCAE9EyQ,OAAA+D,eAAWuQ,EAAA9e,UAAA,qBAAX,WAA6C,OAAOrJ,KAAK4oB,eAAexlB,uCAExEyQ,OAAA+D,eAAWuQ,EAAA9e,UAAA,cAAX,WAAoC,OAAOrJ,KAAK6oB,QAAQzlB,uCAGxDyQ,OAAA+D,eAAWuQ,EAAA9e,UAAA,eAAX,WAAqC,OAAOrJ,KAAK8oB,SAAS1lB,uCAE1DyQ,OAAA+D,eAAWuQ,EAAA9e,UAAA,cAAX,WAAoC,OAAOrJ,KAAK+oB,QAAQ3lB,uCAExDyQ,OAAA+D,eAAWuQ,EAAA9e,UAAA,kBAAX,WAA0C,OAAOrJ,KAAKgpB,mBAAmB5lB,uCAEzEyQ,OAAA+D,eAAWuQ,EAAA9e,UAAA,iBAAX,WAAyC,OAAOrJ,KAAKipB,kBAAkB7lB,uCAwC/D+kB,EAAA9e,UAAA6gB,iBAAR,SAAyB9mB,WACvB,GAAKpD,KAAKyqB,cAEV,CAAA,IAAwB,IAAArlB,EAAA,EAAA6L,EAAA7N,EAAM2Q,OAAN3O,EAAA6L,EAAAnO,OAAAsC,IAAnB,CAAA,IAAMslB,EAASzZ,EAAA7L,GACZwK,EAAQmY,EAAAhZ,KAAK6B,QAAQ8Z,EAAU5rB,IAAK4rB,EAAU1rB,MAAO0rB,EAAUtrB,MAErEY,KAAKyqB,cAAe1W,OAAOiB,KAAK0V,EAAUC,YAAc/a,EAGvC,QAAnB9E,EAAA9K,KAAKiG,sBAAAA,IAAc6E,GAAAA,EAAE8f,UAAU5qB,KAAKyqB,cAAe1W,QACtC,QAAbxE,EAAAvP,KAAK6qB,gBAAAA,IAAQtb,GAAAA,EAAEub,cAAc9qB,KAAKyqB,cAAe1W,UAG5CoU,EAAA9e,UAAAC,QAAP,qBACMtJ,KAAK+qB,cAGT7C,EAAA7e,UAAMC,QAAOpD,KAAAlG,MACM,QAAnB8K,EAAA9K,KAAKiG,sBAAAA,IAAc6E,GAAAA,EAAExB,UACrBtJ,KAAKgrB,4BAAAA,EACLhrB,KAAK6C,MAAQ,aACW,QAAxBuC,EAAY,QAAZmK,EAAAvP,KAAK2H,eAAAA,IAAO4H,OAAA,EAAAA,EAAEnE,kBAAAA,IAAUhG,GAAAA,EAAE8E,YAAYlK,KAAK2H,WAGnCwgB,EAAA9e,UAAA6f,OAAV,WACEhB,EAAA7e,UAAM6f,OAAMhjB,KAAAlG,MAEZA,KAAKgrB,4BAAAA,GAMPnX,OAAA+D,eAAWuQ,EAAA9e,UAAA,cAAX,WACE,OAAOrJ,KAAKirB,QAAQC,wCAMf/C,EAAA9e,UAAAmB,MAAP,WACMxK,KAAK4M,UACP5M,KAAK4M,SAASpC,MAAQ2gB,CAAAA,eAAAA,KAIhBhD,EAAA9e,UAAA+hB,eAAV,SAAyBjoB,eAIvB,OAHA+kB,EAAA7e,UAAM+hB,eAAcllB,KAAAlG,KAACmD,GAGbA,GACN,IAAK,aACL,IAAK,WAEgB,QAAnBoM,EAAAvP,KAAKiG,sBAAAA,IAAcsJ,GAAAA,EAAEuD,QACA,QAArB1N,EAAApF,KAAKqrB,wBAAAA,IAAgBjmB,GAAAA,EAAEkmB,UACvB,MACF,IAAK,cACL,IAAK,cAEHtrB,KAAKuL,QAAQvL,KAAK2C,OAAO4Y,EAAGvb,KAAK2C,OAAO4Y,GACxC,MACF,IAAK,eACL,IAAK,6BACL,IAAK,gBACL,IAAK,aACL,IAAK,aACL,IAAK,iBACL,IAAK,uBAECvb,KAAKiG,iBACPjG,KAAKiG,eAAe6M,QACpB9S,KAAKiG,eAAe8B,SAAS/H,KAAK2Y,KAAM3Y,KAAK8G,MAC7C9G,KAAKuL,QAAQ,EAAGvL,KAAK8G,KAAO,IAE9B,MACF,IAAK,eACC9G,KAAKiG,iBACPjG,KAAKiG,eAAeslB,YAAYvrB,KAAKwrB,mBACrCxrB,KAAKiG,eAAe8B,SAAS/H,KAAK2Y,KAAM3Y,KAAK8G,OAE/C,MACF,IAAK,aACU,QAAbmK,EAAAjR,KAAK6qB,gBAAAA,IAAQ5Z,GAAAA,EAAEwa,iBACf,MACF,IAAK,mBACCzrB,KAAKwqB,eAAe7T,QAAQ+U,kBACzB1rB,KAAK2rB,uBAAyB3rB,KAAKiG,iBACtCjG,KAAK2rB,sBAAwB,IAAIpQ,EAAAjP,qBAAqBtM,KAAMA,KAAKiG,kBAGzC,QAA1B0P,EAAA3V,KAAK2rB,6BAAAA,IAAqBhW,GAAAA,EAAErM,UAC5BtJ,KAAK2rB,2BAAAA,GAEP,MACF,IAAK,eAAgB3rB,KAAKirB,QAAQW,gBAAiB,MACnD,IAAK,QACH5rB,KAAK6rB,UAAU7rB,KAAKwqB,eAAe7T,QAAQlW,SAQzC0nB,EAAA9e,UAAAyiB,iBAAR,SAAyB7e,GACnBjN,KAAK6M,YAAYC,gBAAgBif,WACnC/rB,KAAK6M,YAAYE,iBAAiBvJ,EAAAwoB,GAAGC,IAAM,MAE7CjsB,KAAKksB,kBAAkBjf,GACvBjN,KAAK2H,QAASjB,UAAUC,IAAI,SAC5B3G,KAAKmsB,cACLnsB,KAAK8oB,SAAS3M,QAOTgM,EAAA9e,UAAA+iB,KAAP,iBACE,OAAoB,QAAb9pB,EAAAtC,KAAK4M,gBAAAA,IAAQtK,OAAA,EAAAA,EAAE8pB,QAMhBjE,EAAA9e,UAAAgjB,gBAAR,WAGErsB,KAAK4M,SAAU1I,MAAQ,GACvBlE,KAAKuL,QAAQvL,KAAK2C,OAAO4Y,EAAGvb,KAAK2C,OAAO4Y,GACpCvb,KAAK6M,YAAYC,gBAAgBif,WACnC/rB,KAAK6M,YAAYE,iBAAiBvJ,EAAAwoB,GAAGC,IAAM,MAE7CjsB,KAAK2H,QAASjB,UAAU2V,OAAO,SAC/Brc,KAAK+oB,QAAQ5M,QAGPgM,EAAA9e,UAAAijB,cAAR,WACE,GAAKtsB,KAAK4M,UAAa5M,KAAK2C,OAAO4pB,qBAAsBvsB,KAAKwsB,mBAAoBC,aAAgBzsB,KAAKiG,eAGvG,CAAA,IAAMymB,EAAU1sB,KAAK2C,OAAOgqB,MAAQ3sB,KAAK2C,OAAO4Y,EAC1CqR,EAAa5sB,KAAK2C,OAAOkH,MAAMoR,IAAIyR,GACzC,GAAKE,EAGL,CAAA,IAAMC,EAAUvc,KAAK6B,IAAInS,KAAK2C,OAAOC,EAAG5C,KAAK2Y,KAAO,GAC9CmU,EAAa9sB,KAAKiG,eAAe+F,WAAWC,iBAC5CwB,EAAQmf,EAAWG,SAASF,GAC5BG,EAAYhtB,KAAKiG,eAAe+F,WAAWihB,gBAAkBxf,EAC7Dyf,EAAYltB,KAAK2C,OAAO4Y,EAAIvb,KAAKiG,eAAe+F,WAAWC,iBAC3DkhB,EAAaN,EAAU7sB,KAAKiG,eAAe+F,WAAWihB,gBAI5DjtB,KAAK4M,SAASV,MAAMmB,KAAO8f,EAAa,KACxCntB,KAAK4M,SAASV,MAAMqB,IAAM2f,EAAY,KACtCltB,KAAK4M,SAASV,MAAMuB,MAAQuf,EAAY,KACxChtB,KAAK4M,SAASV,MAAMC,OAAS2gB,EAAa,KAC1C9sB,KAAK4M,SAASV,MAAM1L,WAAassB,EAAa,KAC9C9sB,KAAK4M,SAASV,MAAMwB,OAAS,QAMvBya,EAAA9e,UAAA+jB,YAAR,WAAA,IAAA9qB,EAAAtC,KACEA,KAAKqtB,YAGLrtB,KAAK8H,UAAAA,EAASqf,EAAAhe,0BAAyBnJ,KAAK2H,QAAU,QAAQ,SAACvE,GAGxDd,EAAKgrB,iBAAAA,EAGVtG,EAAAlZ,aAAY1K,EAAOd,EAAKygB,uBAE1B,IAAMwK,EAAsB,SAACnqB,GAAgC,OAAA,EAAA4jB,EAAA7Y,kBAAiB/K,EAAOd,EAAKsK,SAAWtK,EAAKuK,cAC1G7M,KAAK8H,UAAAA,EAASqf,EAAAhe,0BAAyBnJ,KAAK4M,SAAW,QAAS2gB,IAChEvtB,KAAK8H,UAAAA,EAASqf,EAAAhe,0BAAyBnJ,KAAK2H,QAAU,QAAS4lB,IAG3DlF,EAAQmF,UAEVxtB,KAAK8H,UAAAA,EAASqf,EAAAhe,0BAAyBnJ,KAAK2H,QAAU,aAAa,SAACvE,GAC7C,IAAjBA,EAAMqqB,SAAAA,EACRzG,EAAAxY,mBAAkBpL,EAAOd,EAAKsK,SAAWtK,EAAK4K,cAAgB5K,EAAKygB,kBAAoBzgB,EAAKqU,QAAQ+W,2BAIxG1tB,KAAK8H,UAAAA,EAASqf,EAAAhe,0BAAyBnJ,KAAK2H,QAAU,eAAe,SAACvE,MACpE4jB,EAAAxY,mBAAkBpL,EAAOd,EAAKsK,SAAWtK,EAAK4K,cAAgB5K,EAAKygB,kBAAoBzgB,EAAKqU,QAAQ+W,2BAOpGrF,EAAQsF,SAGV3tB,KAAK8H,UAAAA,EAASqf,EAAAhe,0BAAyBnJ,KAAK2H,QAAU,YAAY,SAACvE,GAC5C,IAAjBA,EAAMqqB,SAAAA,EACRzG,EAAAha,8BAA6B5J,EAAOd,EAAKsK,SAAWtK,EAAK4K,oBASzDib,EAAA9e,UAAAgkB,UAAR,WAAA,IAAA/qB,EAAAtC,KACEA,KAAK8H,UAAAA,EAASqf,EAAAhe,0BAAyBnJ,KAAK4M,SAAW,SAAS,SAACK,GAAsB,OAAA3K,EAAKsrB,OAAO3gB,MAAAA,IACnGjN,KAAK8H,UAAAA,EAASqf,EAAAhe,0BAAyBnJ,KAAK4M,SAAW,WAAW,SAACK,GAAsB,OAAA3K,EAAKurB,SAAS5gB,MAAAA,IACvGjN,KAAK8H,UAAAA,EAASqf,EAAAhe,0BAAyBnJ,KAAK4M,SAAW,YAAY,SAACK,GAAsB,OAAA3K,EAAKwrB,UAAU7gB,MAAAA,IACzGjN,KAAK8H,UAAAA,EAASqf,EAAAhe,0BAAyBnJ,KAAK4M,SAAW,oBAAoB,WAAM,OAAAtK,EAAKkqB,mBAAoBuB,uBAC1G/tB,KAAK8H,UAAAA,EAASqf,EAAAhe,0BAAyBnJ,KAAK4M,SAAW,qBAAqB,SAACtK,GAAwB,OAAAA,EAAKkqB,mBAAoBwB,kBAAkB1rB,OAChJtC,KAAK8H,UAAAA,EAASqf,EAAAhe,0BAAyBnJ,KAAK4M,SAAW,kBAAkB,WAAM,OAAAtK,EAAKkqB,mBAAoByB,qBACxGjuB,KAAK8H,UAAAA,EAASqf,EAAAhe,0BAAyBnJ,KAAK4M,SAAW,SAAS,SAACK,GAAmB,OAAA3K,EAAK4rB,YAAYjhB,MAAAA,IACrGjN,KAAK8H,SAAS9H,KAAKiI,UAAS,WAAM,OAAA3F,EAAKkqB,mBAAoB2B,gCAC3DnuB,KAAK8H,SAAS9H,KAAKiI,UAAS,SAAA3F,GAAK,OAAAA,EAAK8rB,oBAAoB9rB,EAAE4F,MAAO5F,EAAE6F,UAQhEggB,EAAA9e,UAAAlI,KAAP,SAAYktB,GAAZ,IAAAvjB,EAAA9K,KACE,IAAKquB,EACH,MAAM,IAAIzmB,MAAM,uCAGbymB,EAAOC,aACVtuB,KAAKmX,YAAYgC,MAAM,2EAGzBnZ,KAAKuuB,UAAYF,EAAOG,cAGxBxuB,KAAK2H,QAAU3H,KAAKuuB,UAAU/nB,cAAc,OAC5CxG,KAAK2H,QAAQ8mB,IAAM,MACnBzuB,KAAK2H,QAAQjB,UAAUC,IAAI,YAC3B3G,KAAK2H,QAAQjB,UAAUC,IAAI,SAC3B3G,KAAK2H,QAAQlB,aAAa,WAAY,KACtC4nB,EAAOrnB,YAAYhH,KAAK2H,SAIxB,IAAM+mB,EAAWnoB,EAASooB,yBAC1B3uB,KAAK4uB,iBAAmBroB,EAASC,cAAc,OAC/CxG,KAAK4uB,iBAAiBloB,UAAUC,IAAI,kBACpC+nB,EAAS1nB,YAAYhH,KAAK4uB,kBAC1B5uB,KAAK6uB,oBAAsBtoB,EAASC,cAAc,OAClDxG,KAAK6uB,oBAAoBnoB,UAAUC,IAAI,qBACvC3G,KAAK4uB,iBAAiB5nB,YAAYhH,KAAK6uB,qBAEvC7uB,KAAKkN,cAAgB3G,EAASC,cAAc,OAC5CxG,KAAKkN,cAAcxG,UAAUC,IAAI,gBAGjC3G,KAAK8uB,iBAAmBvoB,EAASC,cAAc,OAC/CxG,KAAK8uB,iBAAiBpoB,UAAUC,IAAI,iBACpC3G,KAAKkN,cAAclG,YAAYhH,KAAK8uB,kBACpCJ,EAAS1nB,YAAYhH,KAAKkN,eAE1BlN,KAAK4M,SAAWrG,EAASC,cAAc,YACvCxG,KAAK4M,SAASlG,UAAUC,IAAI,yBAC5B3G,KAAK4M,SAASnG,aAAa,aAAcwE,EAAQwX,aACjDziB,KAAK4M,SAASnG,aAAa,iBAAkB,SAC7CzG,KAAK4M,SAASnG,aAAa,cAAe,OAC1CzG,KAAK4M,SAASnG,aAAa,iBAAkB,OAC7CzG,KAAK4M,SAASnG,aAAa,aAAc,SACzCzG,KAAK4M,SAAShC,SAAW,EACzB5K,KAAK8H,UAAAA,EAASqf,EAAAhe,0BAAyBnJ,KAAK4M,SAAU,SAAS,SAACK,GAAsB,OAAAnC,EAAKghB,iBAAiB7e,OAC5GjN,KAAK8H,UAAAA,EAASqf,EAAAhe,0BAAyBnJ,KAAK4M,SAAU,QAAQ,WAAM,OAAA9B,EAAKuhB,sBACzErsB,KAAK8uB,iBAAiB9nB,YAAYhH,KAAK4M,UAEvC,IAAMmiB,EAAqB/uB,KAAKopB,sBAAsBC,eAAexB,EAAAmH,mBAAoBhvB,KAAK4M,UAC9F5M,KAAKopB,sBAAsB6F,WAAWvH,EAAAwH,oBAAqBH,GAE3D/uB,KAAKqrB,iBAAmBrrB,KAAKopB,sBAAsBC,eAAezmB,EAAAusB,gBAAiBnvB,KAAKuuB,UAAWvuB,KAAK8uB,kBACxG9uB,KAAKopB,sBAAsB6F,WAAWvH,EAAA0H,iBAAkBpvB,KAAKqrB,kBAE7DrrB,KAAKqvB,OAASrvB,KAAK2W,QAAQlW,OAAST,KAAKqvB,OACzCrvB,KAAKyqB,cAAgB,IAAIjD,EAAArR,aAAa5P,EAAUvG,KAAK2W,QAAQxC,mBAC7DnU,KAAK8H,SAAS9H,KAAKwqB,eAAe8E,gBAAe,SAAAhtB,GAAK,OAAAwI,EAAK2f,cAAevV,gBAAgB5S,OAC1FtC,KAAKyqB,cAActV,SAASnV,KAAKqvB,QAEjCrvB,KAAKuvB,wBAA0BvvB,KAAKopB,sBAAsBC,eAAerB,EAAAwH,wBACzExvB,KAAKopB,sBAAsB6F,WAAWvH,EAAA+H,wBAAyBzvB,KAAKuvB,yBAEpE,IAAMG,EAAW1vB,KAAKwrB,kBACtBxrB,KAAKiG,eAAiBjG,KAAK8H,SAAS9H,KAAKopB,sBAAsBC,eAAe5B,EAAAkI,cAAeD,EAAU1vB,KAAK8G,KAAM9G,KAAKkN,gBACvHlN,KAAKopB,sBAAsB6F,WAAWvH,EAAAkI,eAAgB5vB,KAAKiG,gBAC3DjG,KAAK8H,SAAS9H,KAAKiG,eAAeyb,wBAAuB,SAAApf,GAAK,OAAAwI,EAAK4d,UAAUvM,KAAK7Z,OAClFtC,KAAK+H,UAAS,SAAAzF,GAAK,OAAAwI,EAAK7E,eAAgB4pB,OAAOvtB,EAAEqW,KAAMrW,EAAEwE,SAEzD9G,KAAK8vB,iBAAmBvpB,EAASC,cAAc,OAC/CxG,KAAK8vB,iBAAiBppB,UAAUC,IAAI,oBACpC3G,KAAKwsB,mBAAqBxsB,KAAKopB,sBAAsBC,eAAexC,EAAAkJ,kBAAmB/vB,KAAK4M,SAAU5M,KAAK8vB,kBAC3G9vB,KAAK8uB,iBAAiB9nB,YAAYhH,KAAK8vB,kBAGvC9vB,KAAK2H,QAAQX,YAAY0nB,GAEzB1uB,KAAKgwB,cAAgBhwB,KAAKopB,sBAAsBC,eAAerV,EAAAic,cAC/DjwB,KAAKopB,sBAAsB6F,WAAWvH,EAAAwI,cAAelwB,KAAKgwB,eAC1DhwB,KAAKge,cAAgBhe,KAAKopB,sBAAsBC,eAAe1B,EAAAwI,cAC/DnwB,KAAKopB,sBAAsB6F,WAAWvH,EAAAjD,cAAezkB,KAAKge,eAE1Dhe,KAAK6qB,SAAW7qB,KAAKopB,sBAAsBC,eAAetC,EAAAqJ,UACxD,SAACC,GAAmB,OAAAvlB,EAAKP,YAAY8lB,GAAAA,EAAc,KACnDrwB,KAAK4uB,iBACL5uB,KAAK6uB,oBACL7uB,KAAK2H,SAEP3H,KAAK6qB,SAASC,cAAc9qB,KAAKyqB,cAAc1W,QAC/C/T,KAAK8H,SAAS9H,KAAKupB,cAAc+G,wBAAuB,WAAM,OAAAxlB,EAAK+f,SAAUY,qBAC7EzrB,KAAK8H,SAAS9H,KAAK6qB,UAEnB7qB,KAAK8H,SAAS9H,KAAKoqB,cAAa,WAC9Btf,EAAK7E,eAAgBmkB,eACrBtf,EAAKwhB,oBAEPtsB,KAAK8H,SAAS9H,KAAK+H,UAAS,WAAM,OAAA+C,EAAK7E,eAAgB8B,SAAS+C,EAAK6N,KAAM7N,EAAKhE,UAChF9G,KAAK8H,SAAS9H,KAAK6I,QAAO,WAAM,OAAAiC,EAAK7E,eAAgB4C,aACrD7I,KAAK8H,SAAS9H,KAAKuwB,SAAQ,WAAM,OAAAzlB,EAAK7E,eAAgBsqB,cACtDvwB,KAAK8H,SAAS9H,KAAKiG,eAAe8C,oBAAmB,WAAM,OAAA+B,EAAK+f,SAAUY,qBAE1EzrB,KAAK+iB,kBAAoB/iB,KAAK8H,SAAS9H,KAAKopB,sBAAsBC,eAAexjB,EAAA2qB,iBAC/ExwB,KAAK2H,QACL3H,KAAKkN,cACLlN,KAAKspB,aAEPtpB,KAAKopB,sBAAsB6F,WAAWvH,EAAAhD,kBAAmB1kB,KAAK+iB,mBAC9D/iB,KAAK8H,SAAS9H,KAAK+iB,kBAAkB0N,sBAAqB,SAAAnuB,GAAK,OAAAwI,EAAKP,YAAYjI,EAAE+tB,OAAQ/tB,EAAEouB,yBAC5F1wB,KAAK8H,SAAS9H,KAAK+iB,kBAAkB4N,mBAAkB,WAAM,OAAA7lB,EAAK6d,mBAAmBxM,WACrFnc,KAAK8H,SAAS9H,KAAK+iB,kBAAkB6N,iBAAgB,SAAAtuB,GAAK,OAAAwI,EAAK7E,eAAgB4qB,mBAAmBvuB,EAAE4F,MAAO5F,EAAE6F,IAAK7F,EAAEwuB,sBACpH9wB,KAAK8H,SAAS9H,KAAK+iB,kBAAkBgO,uBAAsB,SAAAzsB,GAIzDwG,EAAK8B,SAAU1I,MAAQI,EACvBwG,EAAK8B,SAAUpC,QACfM,EAAK8B,SAAU+B,aAEjB3O,KAAK8H,SAAS9H,KAAKgxB,UAAU5tB,OAAM,SAAA6J,GACjCnC,EAAK+f,SAAUY,iBACf3gB,EAAKiY,kBAAmBxX,cAE1BvL,KAAK8H,UAAAA,EAASqf,EAAAhe,0BAAyBnJ,KAAK4uB,iBAAkB,UAAU,WAAM,OAAA9jB,EAAKiY,kBAAmBxX,cAEtGvL,KAAKgY,kBAAoBhY,KAAKopB,sBAAsBC,eAAe7Z,EAAAoV,iBAAkB5kB,KAAK2H,QAAS3H,KAAKkN,eACxGlN,KAAK8H,SAAS9H,KAAKgY,mBACnBhY,KAAK8H,SAAS9H,KAAKoI,UAAS,WAAM,OAAA0C,EAAKkN,kBAAmBE,eAC1DlY,KAAKmpB,UAAUtR,YAAY7X,KAAK2H,QAAS3H,KAAKgY,mBAC9ChY,KAAKspB,WAAWzR,YAAY7X,KAAK2H,QAAS3H,KAAKge,cAAehe,KAAKiG,gBAGnEjG,KAAK8H,UAAAA,EAASqf,EAAAhe,0BAAyBnJ,KAAK2H,QAAS,aAAa,SAACrF,GAAkB,OAAAwI,EAAKiY,kBAAmBkO,YAAY3uB,OAGrHtC,KAAKkxB,iBAAiBC,sBACxBnxB,KAAK+iB,kBAAkBqO,UACvBpxB,KAAK2H,QAAQjB,UAAUC,IAAI,wBAE3B3G,KAAK+iB,kBAAkBsO,SAGrBrxB,KAAK2W,QAAQ+U,mBAGf1rB,KAAK2rB,sBAAwB,IAAIpQ,EAAAjP,qBAAqBtM,KAAMA,KAAKiG,iBAInEjG,KAAKqrB,iBAAiBC,UAGtBtrB,KAAKuL,QAAQ,EAAGvL,KAAK8G,KAAO,GAG5B9G,KAAKotB,cAILptB,KAAKsxB,aAGCnJ,EAAA9e,UAAAmiB,gBAAR,WACE,OAAQxrB,KAAK2W,QAAQhW,cACnB,IAAK,SAAU,OAAOX,KAAKopB,sBAAsBC,eAAe1jB,EAAA4rB,SAAUvxB,KAAKyqB,cAAe1W,OAAQ/T,KAAKkN,cAAgBlN,KAAKmpB,UAAWnpB,KAAKspB,YAChJ,IAAK,MAAO,OAAOtpB,KAAKopB,sBAAsBC,eAAehC,EAAAmK,YAAaxxB,KAAKyqB,cAAe1W,OAAQ/T,KAAK2H,QAAU3H,KAAKkN,cAAgBlN,KAAK4uB,iBAAmB5uB,KAAKmpB,UAAWnpB,KAAKspB,oBAC9K,MAAM,IAAI1hB,MAAM,8BAA8B5H,KAAK2W,QAAQhW,aAAY,OAQ5EwnB,EAAA9e,UAAAwiB,UAAR,SAAkBprB,aAChBT,KAAKqvB,OAAS5uB,EACI,QAAlBqK,EAAA9K,KAAKyqB,qBAAAA,IAAa3f,GAAAA,EAAEqK,SAAS1U,GACV,QAAnB8O,EAAAvP,KAAKiG,sBAAAA,IAAcsJ,GAAAA,EAAEqb,UAAU5qB,KAAKyqB,cAAe1W,QACtC,QAAb3O,EAAApF,KAAK6qB,gBAAAA,IAAQzlB,GAAAA,EAAE0lB,cAAc9qB,KAAKyqB,cAAe1W,SAkB5CoU,EAAA9e,UAAAioB,UAAP,WAAA,IAAAG,EAAAzxB,KACQqF,EAAOrF,KACP0xB,EAAK1xB,KAAK2H,iBAGPgqB,EAAU1kB,GAEjB,IAKI2kB,EACAC,EANE1kB,EAAM9H,EAAK2Y,cAAe8T,iBAAiB7kB,EAAI5H,EAAK6H,cAAgB7H,EAAKsT,KAAMtT,EAAKyB,MAC1F,IAAKqG,EACH,OAAO,EAKT,OAASF,EAAW8kB,cAAgB9kB,EAAGhJ,MACrC,IAAK,YACH4tB,EAAS,QAAA,IACL5kB,EAAG+kB,SAELJ,EAAM,OAAA,IACF3kB,EAAGwgB,SACLmE,EAAM3kB,EAAGwgB,OAAS,EAAIxgB,EAAGwgB,OAAS,IAIpCmE,EAAmB,EAAb3kB,EAAG+kB,QAAc,EACR,EAAb/kB,EAAG+kB,QAAc,EACF,EAAb/kB,EAAG+kB,QAAc,IAGvB,MACF,IAAK,UACHH,EAAS,EACTD,EAAM3kB,EAAGwgB,OAAS,EAAIxgB,EAAGwgB,OAAS,EAClC,MACF,IAAK,YACHoE,EAAS,EACTD,EAAM3kB,EAAGwgB,OAAS,EAAIxgB,EAAGwgB,OAAS,EAClC,MACF,IAAK,QAE+B,IAA7BxgB,EAAkBglB,SACrBJ,EAAU5kB,EAAkBglB,OAAS,EAAI,EAAqB,GAEhEL,EAAM,EACN,cAGA,OAAO,EAKX,aAAA,IAAIC,QAAAA,IAAwBD,GAAqBA,EAAM,IAIhDvsB,EAAK6rB,iBAAiBgB,kBAC3BC,CAAAA,IAAKhlB,EAAIvK,EAAI,GACbwvB,IAAKjlB,EAAIoO,EAAI,GACbkS,OAAQmE,EACRC,OAAMzsB,EACNitB,KAAMplB,EAAGqlB,QACTC,IAAKtlB,EAAGulB,OACR7uB,MAAOsJ,EAAGwlB,WAYd,IAAMC,EACJC,CAAAA,QAAS,KACTC,MAAO,KACPC,UAAW,KACXC,UAAW,MAEPC,EACK,SAAC9lB,GASR,OARA0kB,EAAU1kB,GACLA,EAAG+kB,UAENP,EAAKlD,UAAWpkB,oBAAoB,UAAWuoB,EAAgBC,SAC3DD,EAAgBG,WAClBpB,EAAKlD,UAAWpkB,oBAAoB,YAAauoB,EAAgBG,YAG9DpB,EAAKuB,OAAO/lB,IAVjB8lB,EAYG,SAAC9lB,GAEN,OADA0kB,EAAU1kB,GACHwkB,EAAKuB,OAAO/lB,GAAAA,IAdjB8lB,EAgBO,SAAC9lB,GAENA,EAAG+kB,SACLL,EAAU1kB,IAnBV8lB,EAsBO,SAAC9lB,GAELA,EAAG+kB,SACNL,EAAU1kB,IAIhBjN,KAAK8H,SAAS9H,KAAKkxB,iBAAiB+B,kBAAiB,SAAAC,GAE/CA,GAC2C,UAAzCzB,EAAKjH,eAAe7T,QAAQwc,UAC9B1B,EAAKta,YAAYgC,MAAM,2BAA4BsY,EAAKP,iBAAiBkC,cAAcF,IAEzFzB,EAAK9pB,QAASjB,UAAUC,IAAI,uBAC5B8qB,EAAK1O,kBAAmBqO,YAExBK,EAAKta,YAAYgC,MAAM,gCACvBsY,EAAK9pB,QAASjB,UAAU2V,OAAO,uBAC/BoV,EAAK1O,kBAAmBsO,UAKX,EAAT6B,EAGMR,EAAgBI,YAC1BpB,EAAGzwB,iBAAiB,YAAa8xB,GACjCL,EAAgBI,UAAYC,IAJ5BrB,EAAGvnB,oBAAoB,YAAauoB,EAAgBI,WACpDJ,EAAgBI,UAAY,MAMf,GAATI,EAGMR,EAAgBE,QAC1BlB,EAAGzwB,iBAAiB,QAAS8xB,EAAwBM,CAAAA,SAAAA,IACrDX,EAAgBE,MAAQG,IAJxBrB,EAAGvnB,oBAAoB,QAASuoB,EAAgBE,OAChDF,EAAgBE,MAAQ,MAMX,EAATM,EAGMR,EAAgBC,UAC1BD,EAAgBC,QAAUI,IAH1BtB,EAAKlD,UAAWpkB,oBAAoB,UAAWuoB,EAAgBC,SAC/DD,EAAgBC,QAAU,MAKb,EAATO,EAGMR,EAAgBG,YAC1BH,EAAgBG,UAAYE,IAH5BtB,EAAKlD,UAAWpkB,oBAAoB,YAAauoB,EAAgBG,WACjEH,EAAgBG,UAAY,UAMhC7yB,KAAKkxB,iBAAiBoC,eAAiBtzB,KAAKkxB,iBAAiBoC,eAK7DtzB,KAAK8H,UAAAA,EAASqf,EAAAhe,0BAAyBuoB,EAAI,aAAa,SAACzkB,GAOvD,GANAA,EAAGxC,iBACHgnB,EAAKjnB,QAKAinB,EAAKP,iBAAiBC,uBAAwBM,EAAK1O,kBAAmBwQ,qBAAqBtmB,GAiBhG,OAbA0kB,EAAU1kB,GAMNylB,EAAgBC,SAClBlB,EAAKlD,UAAWttB,iBAAiB,UAAWyxB,EAAgBC,SAE1DD,EAAgBG,WAClBpB,EAAKlD,UAAWttB,iBAAiB,YAAayxB,EAAgBG,WAGzDpB,EAAKuB,OAAO/lB,OAGrBjN,KAAK8H,UAAAA,EAASqf,EAAAhe,0BAAyBuoB,EAAI,SAAS,SAACzkB,GAEnD,IAAIylB,EAAgBE,MAEpB,CAAA,IAAKnB,EAAK9uB,OAAO6wB,cAGf,CAAA,IAAMnD,EAASoB,EAAK5G,SAAU4I,iBAAiBxmB,GAG/C,GAAe,IAAXojB,EACF,OAMF,IAFA,IAAMqD,EAAWlwB,EAAAwoB,GAAGC,KAAOwF,EAAK5kB,YAAYC,gBAAgB6mB,sBAAwB,IAAM,MAAQ1mB,EAAGglB,OAAS,EAAI,IAAM,KACpHxc,EAAO,GACFrQ,EAAI,EAAGA,EAAIkL,KAAKsjB,IAAIvD,GAASjrB,IACpCqQ,GAAQie,EAGV,OADAjC,EAAK5kB,YAAYE,iBAAiB0I,GAAAA,GAC3Bgc,EAAKuB,OAAO/lB,GAAAA,GAKrB,OAAKwkB,EAAK5G,SAAUgJ,QAAQ5mB,QAAAA,EACnBwkB,EAAKuB,OAAO/lB,MAElBomB,CAAAA,SAAAA,KAELrzB,KAAK8H,UAAAA,EAASqf,EAAAhe,0BAAyBuoB,EAAI,cAAc,SAACzkB,GACxD,IAAIwkB,EAAKP,iBAAiBC,qBAE1B,OADAM,EAAK5G,SAAUiJ,aAAa7mB,GACrBwkB,EAAKuB,OAAO/lB,KAChBomB,CAAAA,SAAAA,KAELrzB,KAAK8H,UAAAA,EAASqf,EAAAhe,0BAAyBuoB,EAAI,aAAa,SAACzkB,GACvD,IAAIwkB,EAAKP,iBAAiBC,qBAC1B,OAAKM,EAAK5G,SAAUkJ,YAAY9mB,QAAAA,EACvBwkB,EAAKuB,OAAO/lB,KAElBomB,CAAAA,SAAAA,MAUAlL,EAAA9e,UAAAkC,QAAP,SAAerD,EAAeC,SACT,QAAnBoH,EAAAvP,KAAKiG,sBAAAA,IAAcsJ,GAAAA,EAAEykB,YAAY9rB,EAAOC,IAQlCggB,EAAA9e,UAAA+kB,oBAAR,SAA4BlmB,EAAeC,SAC3B,QAAdoH,EAAAvP,KAAKmpB,iBAAAA,IAAS5Z,GAAAA,EAAE0I,YAAY/P,EAAOC,IAM9BggB,EAAA9e,UAAA6iB,kBAAP,SAAyBjf,UACG,QAAtBnC,EAAA9K,KAAK+iB,yBAAAA,IAAiBjY,OAAA,EAAAA,EAAEmpB,mBAAmBhnB,IAC7CjN,KAAK2H,QAASjB,UAAUC,IAAI,iBAE5B3G,KAAK2H,QAASjB,UAAU2V,OAAO,kBAO3B8L,EAAA9e,UAAA8iB,YAAR,WACOnsB,KAAK6M,YAAYqnB,sBACpBl0B,KAAK6M,YAAYqnB,qBAAAA,EACjBl0B,KAAKuL,QAAQvL,KAAK2C,OAAO4Y,EAAGvb,KAAK2C,OAAO4Y,KAIrC4M,EAAA9e,UAAAkB,YAAP,SAAmB4pB,EAAczD,EAA+BlW,QAAAA,IAAAA,IAAAA,EAAA,GAC9D0N,EAAA7e,UAAMkB,YAAWrE,KAAAlG,KAACm0B,EAAMzD,EAAqBlW,GAC7Cxa,KAAKuL,QAAQ,EAAGvL,KAAK8G,KAAO,IAGvBqhB,EAAA9e,UAAAsD,MAAP,SAAa8I,MACXuR,EAAAra,OAAM8I,EAAMzV,KAAK4M,SAAW5M,KAAK6M,cAY5Bsb,EAAA9e,UAAA+qB,4BAAP,SAAmCC,GACjCr0B,KAAKgrB,uBAAyBqJ,GAazBlM,EAAA9e,UAAA+P,oBAAP,SAA2BC,EAAe3C,EAA6BC,GACrE,IAAMwD,EAAYna,KAAKmpB,UAAU/P,oBAAoBC,EAAO3C,EAASC,GAErE,OADA3W,KAAKuL,QAAQ,EAAGvL,KAAK8G,KAAO,GACrBqT,GAOFgO,EAAA9e,UAAA6Q,sBAAP,SAA6BC,GACvBna,KAAKmpB,UAAUjP,sBAAsBC,IACvCna,KAAKuL,QAAQ,EAAGvL,KAAK8G,KAAO,IAIzBqhB,EAAA9e,UAAAsU,qBAAP,SAA4BC,GAC1B,OAAO5d,KAAKspB,WAAW3L,qBAAqBC,IAGvCuK,EAAA9e,UAAAirB,wBAAP,SAA+B5d,GAC7B,IAAK1W,KAAKuvB,wBACR,MAAM,IAAI3nB,MAAM,iCAElB,IAAM2sB,EAAWv0B,KAAKuvB,wBAAwBznB,SAAS4O,GAEvD,OADA1W,KAAKuL,QAAQ,EAAGvL,KAAK8G,KAAO,GACrBytB,GAGFpM,EAAA9e,UAAAmrB,0BAAP,SAAiCD,GAC/B,IAAKv0B,KAAKuvB,wBACR,MAAM,IAAI3nB,MAAM,iCAEd5H,KAAKuvB,wBAAwBkF,WAAWF,IAC1Cv0B,KAAKuL,QAAQ,EAAGvL,KAAK8G,KAAO,IAIhC+M,OAAA+D,eAAWuQ,EAAA9e,UAAA,eAAX,WACE,OAAOrJ,KAAK2C,OAAO+xB,yCAGdvM,EAAA9e,UAAAsrB,UAAP,SAAiBC,GAEf,GAAI50B,KAAK2C,SAAW3C,KAAKirB,QAAQ4J,OAIjC,OAAO70B,KAAK2C,OAAOgyB,UAAU30B,KAAK2C,OAAOgqB,MAAQ3sB,KAAK2C,OAAO4Y,EAAIqZ,IAM5DzM,EAAA9e,UAAAikB,aAAP,WACE,QAAOttB,KAAK+iB,mBAAoB/iB,KAAK+iB,kBAAkBuK,cASlDnF,EAAA9e,UAAAsF,OAAP,SAAcmmB,EAAgB1C,EAAatvB,GACzC9C,KAAK+iB,kBAAmBgS,aAAaD,EAAQ1C,EAAKtvB,IAO7CqlB,EAAA9e,UAAA5G,aAAP,WACE,OAAOzC,KAAK+iB,kBAAoB/iB,KAAK+iB,kBAAkB7U,cAAgB,IAGlEia,EAAA9e,UAAA2rB,qBAAP,WACE,GAAKh1B,KAAK+iB,mBAAsB/iB,KAAK+iB,kBAAkBuK,aAIvD,MACE2H,CAAAA,YAAaj1B,KAAK+iB,kBAAkBmS,eAAgB,GACpDtU,SAAU5gB,KAAK+iB,kBAAkBmS,eAAgB,GACjDC,UAAWn1B,KAAK+iB,kBAAkBqS,aAAc,GAChDvU,OAAQ7gB,KAAK+iB,kBAAkBqS,aAAc,KAO1CjN,EAAA9e,UAAAgsB,eAAP,iBACwB,QAAtB/yB,EAAAtC,KAAK+iB,yBAAAA,IAAiBzgB,GAAAA,EAAE+yB,kBAMnBlN,EAAA9e,UAAAisB,UAAP,iBACwB,QAAtBhzB,EAAAtC,KAAK+iB,yBAAAA,IAAiBzgB,GAAAA,EAAEgzB,aAGnBnN,EAAA9e,UAAAksB,YAAP,SAAmBrtB,EAAeC,SACV,QAAtBoH,EAAAvP,KAAK+iB,yBAAAA,IAAiBxT,GAAAA,EAAEgmB,YAAYrtB,EAAOC,IASnCggB,EAAA9e,UAAAwkB,SAAV,SAAmBzqB,GAGjB,GAFApD,KAAKsoB,iBAAAA,EAEDtoB,KAAKgrB,yBAAAA,IAA0BhrB,KAAKgrB,uBAAuB5nB,GAC7D,OAAO,EAGT,IAAKpD,KAAKwsB,mBAAoBgJ,QAAQpyB,GAIpC,OAHIpD,KAAK2C,OAAOgqB,QAAU3sB,KAAK2C,OAAOiJ,OACpC5L,KAAKkX,eAAeue,kBAAAA,EAKN,SAAdryB,EAAMD,KAAgC,aAAdC,EAAMD,MAChCnD,KAAKwoB,qBAAAA,GAGP,IAAM7X,GAAAA,EAAS2W,EAAAoO,uBAAsBtyB,EAAOpD,KAAK6M,YAAYC,gBAAgB6mB,sBAAuB3zB,KAAKooB,QAAQjd,MAAOnL,KAAK2W,QAAQgf,iBAIrI,GAFA31B,KAAKksB,kBAAkB9oB,GAEH,IAAhBuN,EAAO1M,MAAyD,IAAhB0M,EAAO1M,KACzD,CAAA,IAAM2xB,EAAc51B,KAAK8G,KAAO,EAEhC,OADA9G,KAAKuK,YAA4B,IAAhBoG,EAAO1M,MAAuC2xB,EAAcA,GACtE51B,KAAKgzB,OAAO5vB,GAAAA,GAOrB,OAJoB,IAAhBuN,EAAO1M,MACTjE,KAAKs1B,cAGHt1B,KAAK61B,mBAAmB71B,KAAKooB,QAAShlB,KAItCuN,EAAOqiB,QAEThzB,KAAKgzB,OAAO5vB,GAAAA,IAGTuN,EAAOxN,MAIRnD,KAAKwoB,qBACPxoB,KAAKwoB,qBAAAA,GAAsB,IAOzB7X,EAAOxN,MAAQK,EAAAwoB,GAAG8J,KAAOnlB,EAAOxN,MAAQK,EAAAwoB,GAAG+J,KAC7C/1B,KAAK4M,SAAU1I,MAAQ,IAGzBlE,KAAK4I,OAAOuT,KAAOhZ,CAAAA,IAAKwN,EAAOxN,IAAK6yB,SAAU5yB,IAC9CpD,KAAKmsB,cACLnsB,KAAK6M,YAAYE,iBAAiB4D,EAAOxN,KAAAA,GAMpCnD,KAAKwqB,eAAe7T,QAAQ+U,sBAIjC1rB,KAAKsoB,iBAAAA,GAHItoB,KAAKgzB,OAAO5vB,GAAAA,OAMf+kB,EAAA9e,UAAAwsB,mBAAR,SAA2BzN,EAAmBnb,GAC5C,IAAMgpB,EACH7N,EAAQjd,QAAUnL,KAAK2W,QAAQgf,iBAAmB1oB,EAAGulB,SAAWvlB,EAAGqlB,UAAYrlB,EAAGipB,SAClF9N,EAAQ+N,WAAalpB,EAAGulB,QAAUvlB,EAAGqlB,UAAYrlB,EAAGipB,SACpD9N,EAAQ+N,WAAalpB,EAAGmpB,iBAAiB,YAE5C,MAAgB,aAAZnpB,EAAGhJ,KACEgyB,EAIFA,KAAmBhpB,EAAGopB,SAAWppB,EAAGopB,QAAU,KAG7ClO,EAAA9e,UAAAukB,OAAV,SAAiB3gB,GACgDA,IA6OlCA,EA7OzBjN,KAAKgrB,yBAAAA,IAA0BhrB,KAAKgrB,uBAAuB/d,KA8O3C,MADSA,EAzOAA,GA0OrBopB,SACO,KAAfppB,EAAGopB,SACY,KAAfppB,EAAGopB,SA3ODr2B,KAAKwK,QAGPxK,KAAKksB,kBAAkBjf,GACvBjN,KAAKuoB,kBAAAA,IASGJ,EAAA9e,UAAAykB,UAAV,SAAoB7gB,GAClB,IAAI9J,EAIJ,GAFAnD,KAAKuoB,kBAAAA,EAEDvoB,KAAKsoB,gBACP,OAAO,EAGT,GAAItoB,KAAKgrB,yBAAAA,IAA0BhrB,KAAKgrB,uBAAuB/d,GAC7D,OAAO,EAKT,GAFAjN,KAAKgzB,OAAO/lB,GAERA,EAAGqpB,SACLnzB,EAAM8J,EAAGqpB,cACJ,GAAiB,OAAbrpB,EAAGspB,YAAAA,IAAkBtpB,EAAGspB,MACjCpzB,EAAM8J,EAAGopB,YACJ,CAAA,GAAiB,IAAbppB,EAAGspB,OAA+B,IAAhBtpB,EAAGqpB,SAG9B,OAAO,EAFPnzB,EAAM8J,EAAGspB,MAKX,SAAKpzB,IACF8J,EAAGulB,QAAUvlB,EAAGqlB,SAAWrlB,EAAGipB,WAAal2B,KAAK61B,mBAAmB71B,KAAKooB,QAASnb,KAKpF9J,EAAMH,OAAOC,aAAaE,GAE1BnD,KAAK4I,OAAOuT,KAAOhZ,CAAAA,IAAG2H,EAAEkrB,SAAU/oB,IAClCjN,KAAKmsB,cACLnsB,KAAK6M,YAAYE,iBAAiB5J,GAAAA,GAElCnD,KAAKuoB,kBAAAA,EAEE,KASCJ,EAAA9e,UAAA6kB,YAAV,SAAsBjhB,GAGpB,GAAIA,EAAGwI,MAAyB,eAAjBxI,EAAGupB,YAA+Bx2B,KAAKwqB,eAAe7T,QAAQ+U,iBAC3E,CAAA,GAAI1rB,KAAKuoB,iBACP,OAAO,EAGT,IAAMjkB,EAAO2I,EAAGwI,KAIhB,OAHAzV,KAAK6M,YAAYE,iBAAiBzI,GAAAA,GAElCtE,KAAKgzB,OAAO/lB,IAAAA,EAId,OAAO,GAOFkb,EAAA9e,UAAAogB,KAAP,iBACMzpB,KAAKy2B,eACW,QAAlBn0B,EAAAtC,KAAKgwB,qBAAAA,IAAa1tB,GAAAA,EAAEo0B,iBAGtB12B,KAAK6oB,QAAQ1M,QAiBRgM,EAAA9e,UAAAwmB,OAAP,SAAcjtB,EAAW2Y,GACnB3Y,IAAM5C,KAAK2Y,MAAQ4C,IAAMvb,KAAK8G,KAQlCohB,EAAA7e,UAAMwmB,OAAM3pB,KAAAlG,KAAC4C,EAAG2Y,GANVvb,KAAKqrB,mBAAqBrrB,KAAKqrB,iBAAiBsL,cAClD32B,KAAKqrB,iBAAiBC,WAQpBnD,EAAA9e,UAAAihB,aAAR,SAAqB1nB,EAAW2Y,WACT,QAArBhM,EAAAvP,KAAKqrB,wBAAAA,IAAgB9b,GAAAA,EAAE+b,UAIV,QAAblmB,EAAApF,KAAK6qB,gBAAAA,IAAQzlB,GAAAA,EAAEqmB,gBAAAA,IAMVtD,EAAA9e,UAAAyJ,MAAP,WACE,GAA0B,IAAtB9S,KAAK2C,OAAOgqB,OAAiC,IAAlB3sB,KAAK2C,OAAO4Y,EAI3Cvb,CAAAA,KAAK2C,OAAOkH,MAAM6V,IAAI,EAAG1f,KAAK2C,OAAOkH,MAAMoR,IAAIjb,KAAK2C,OAAOgqB,MAAQ3sB,KAAK2C,OAAO4Y,IAC/Evb,KAAK2C,OAAOkH,MAAM/G,OAAS,EAC3B9C,KAAK2C,OAAOiJ,MAAQ,EACpB5L,KAAK2C,OAAOgqB,MAAQ,EACpB3sB,KAAK2C,OAAO4Y,EAAI,EAChB,IAAK,IAAInW,EAAI,EAAGA,EAAIpF,KAAK8G,KAAM1B,IAC7BpF,KAAK2C,OAAOkH,MAAMS,KAAKtK,KAAK2C,OAAOi0B,aAAannB,EAAAonB,oBAElD72B,KAAKuL,QAAQ,EAAGvL,KAAK8G,KAAO,GAC5B9G,KAAKgxB,UAAU7U,KAAO3S,CAAAA,SAAUxJ,KAAK2C,OAAOiJ,MAAO4O,OAAQ,MAWtD2N,EAAA9e,UAAAygB,MAAP,mBAKE9pB,KAAK2W,QAAQ7P,KAAO9G,KAAK8G,KACzB9G,KAAK2W,QAAQgC,KAAO3Y,KAAK2Y,KACzB,IAAM0b,EAAwBr0B,KAAKgrB,uBAEnChrB,KAAKkpB,SACLhB,EAAA7e,UAAMygB,MAAK5jB,KAAAlG,MACW,QAAtB8K,EAAA9K,KAAK+iB,yBAAAA,IAAiBjY,GAAAA,EAAEgf,QAGxB9pB,KAAKgrB,uBAAyBqJ,EAG9Br0B,KAAKuL,QAAQ,EAAGvL,KAAK8G,KAAO,GACf,QAAbyI,EAAAvP,KAAK6qB,gBAAAA,IAAQtb,GAAAA,EAAEkc,kBAGVtD,EAAA9e,UAAAytB,kBAAP,iBACqB,QAAnBx0B,EAAAtC,KAAKiG,sBAAAA,IAAc3D,GAAAA,EAAEw0B,qBAGf3O,EAAA9e,UAAAugB,aAAR,kBACkB,QAAZtnB,EAAAtC,KAAK2H,eAAAA,IAAOrF,OAAA,EAAAA,EAAEoE,UAAU6X,SAAS,UACnCve,KAAK6M,YAAYE,iBAAiBvJ,EAAAwoB,GAAGC,IAAM,MAE3CjsB,KAAK6M,YAAYE,iBAAiBvJ,EAAAwoB,GAAGC,IAAM,OAIvC9D,EAAA9e,UAAA2gB,sBAAR,SAA8B/lB,GAC5B,GAAKjE,KAAKiG,eAIV,OAAQhC,GACN,KAAKgjB,EAAA8P,yBAAyBC,oBAC5B,IAAMC,EAAcj3B,KAAKiG,eAAe+F,WAAWkrB,kBAAkBC,QAAQ,GACvEC,EAAep3B,KAAKiG,eAAe+F,WAAWqrB,mBAAmBF,QAAQ,GAC/En3B,KAAK6M,YAAYE,iBAAoBvJ,EAAAwoB,GAAGC,IAAG,MAAMmL,EAAY,IAAIH,EAAW,KAC5E,MACF,KAAKhQ,EAAA8P,yBAAyBO,qBAC5B,IAAMtK,EAAYhtB,KAAKiG,eAAe+F,WAAWurB,gBAAgBJ,QAAQ,GACnErK,EAAa9sB,KAAKiG,eAAe+F,WAAWwrB,iBAAiBL,QAAQ,GAC3En3B,KAAK6M,YAAYE,iBAAoBvJ,EAAAwoB,GAAGC,IAAG,MAAMa,EAAU,IAAIE,EAAS,OAMvE7E,EAAA9e,UAAA2pB,OAAP,SAAc/lB,EAAWwqB,GACvB,GAAKz3B,KAAK2W,QAAQ+gB,cAAiBD,EAKnC,OAFAxqB,EAAGxC,iBACHwC,EAAGmB,mBAAAA,GAIG+Z,EAAA9e,UAAAsuB,YAAR,WACE,OAAO,GAKDxP,EAAA9e,UAAAotB,WAAR,WACE,MAAkC,UAA3Bz2B,KAAK2W,QAAQihB,WAIxBzP,EApwCA,CAA8BL,EAAA+P,cAAjBC,EAAAz3B,SAAAA,6FCxDb,IAOA03B,EAAA,oBAYEC,EACUhT,EACSiT,QAAAA,IAAAA,IAAAA,EArBgB,KAoBzBj4B,KAAAglB,gBAAAA,EACShlB,KAAAi4B,qBAAAA,EARXj4B,KAAAk4B,eAAiB,EAEjBl4B,KAAAm4B,6BAAAA,EAgEV,OAtDSH,EAAA3uB,UAAAC,QAAP,WACMtJ,KAAKo4B,mBACPhgB,aAAapY,KAAKo4B,oBAIfJ,EAAA3uB,UAAAkC,QAAP,SAAe4Z,EAA8BC,EAA4BC,GAAzE,IAAAjgB,EAAApF,KACEA,KAAKslB,UAAYD,EAEjBF,OAAAA,IAAWA,EAAyBA,EAAW,EAC/CC,OAAAA,IAASA,EAAuBA,EAASplB,KAAKslB,UAAY,EAE1DtlB,KAAKulB,eAAAA,IAAYvlB,KAAKulB,UAA0BjV,KAAK6B,IAAInS,KAAKulB,UAAWJ,GAAYA,EACrFnlB,KAAKwlB,aAAAA,IAAUxlB,KAAKwlB,QAAwBlV,KAAK0B,IAAIhS,KAAKwlB,QAASJ,GAAUA,EAI7E,IAAMiT,EAA6BC,KAAKC,MACxC,GAAIF,EAAqBr4B,KAAKk4B,gBAAkBl4B,KAAKi4B,qBAEnDj4B,KAAKk4B,eAAiBG,EACtBr4B,KAAK0lB,qBACA,IAAK1lB,KAAKm4B,4BAEf,CAAA,IAAMK,EAAUH,EAAqBr4B,KAAKk4B,eACpCO,EAAkCz4B,KAAKi4B,qBAAuBO,EACpEx4B,KAAKm4B,6BAAAA,EAELn4B,KAAKo4B,kBAAoBp3B,OAAOqK,YAAW,WACzCjG,EAAK8yB,eAAiBI,KAAKC,MAC3BnzB,EAAKsgB,gBACLtgB,EAAK+yB,6BAAAA,EACL/yB,EAAKgzB,uBAAAA,IACJK,KAICT,EAAA3uB,UAAAqc,cAAR,WAEE,QAAA,IAAI1lB,KAAKulB,gBAAAA,IAA2BvlB,KAAKwlB,cAAAA,IAAyBxlB,KAAKslB,UAKvE,CAAA,IAAMpd,EAAQoI,KAAK0B,IAAIhS,KAAKulB,UAAW,GACjCpd,EAAMmI,KAAK6B,IAAInS,KAAKwlB,QAASxlB,KAAKslB,UAAY,GAGpDtlB,KAAKulB,eAAAA,EACLvlB,KAAKwlB,aAAAA,EAGLxlB,KAAKglB,gBAAgB9c,EAAOC,KAEhC6vB,EAxEA,GAAaU,EAAApxB,mBAAAA,09BCPb,IAAAqxB,EAAAC,EAAA,KACAp1B,EAAAo1B,EAAA,MAEAC,EAAAD,EAAA,MACAE,EAAAF,EAAA,MAUAhzB,EAAA,SAAAmzB,YAqBEC,EACmBC,EACArK,EACAsK,EACAnhB,EACgBb,EACC8L,EACCqI,EACFplB,GARnC,IAAAN,EAUEozB,EAAA7yB,KAAAlG,OAAOA,YATU2F,EAAAszB,aAAAA,EACAtzB,EAAAipB,iBAAAA,EACAjpB,EAAAuzB,YAAAA,EACAvzB,EAAAoS,SAAAA,EACgBpS,EAAAuR,eAAAA,EACCvR,EAAAqd,gBAAAA,EACCrd,EAAA0lB,iBAAAA,EACF1lB,EAAAM,eAAAA,EA5B5BN,EAAAwzB,eAAyB,EACxBxzB,EAAAyzB,kBAA4B,EAC5BzzB,EAAA0zB,yBAAmC,EACnC1zB,EAAA2zB,0BAAoC,EACpC3zB,EAAA4zB,4BAAsC,EACtC5zB,EAAA6zB,0BAAoC,EACpC7zB,EAAA8zB,YAAsB,EACtB9zB,EAAA+zB,eAAyB,EACzB/zB,EAAAg0B,mBAAAA,EAOAh0B,EAAAi0B,oBAA8B,EAE9Bj0B,EAAAk0B,uBAAwC,KACxCl0B,EAAAm0B,wBAAAA,EAiBNn0B,EAAKwzB,eAAkBxzB,EAAKipB,iBAAiBmL,YAAcp0B,EAAKuzB,YAAYa,aA1C9C,GA2C9Bp0B,EAAKg0B,mBAAAA,EACLh0B,EAAKmC,UAAAA,EAAStE,EAAA2F,0BAAyBxD,EAAKipB,iBAAkB,SAAUjpB,EAAKqrB,UAAUxpB,KAAK7B,KAG5FA,EAAKq0B,cAAgBr0B,EAAKuR,eAAevU,OACzCgD,EAAKmC,SAASnC,EAAKuR,eAAe+T,QAAQgP,kBAAiB,SAAA33B,GAAK,OAAAqD,EAAKq0B,cAAgB13B,EAAE43B,iBACvFv0B,EAAKw0B,kBAAoBx0B,EAAKM,eAAe+F,WAC7CrG,EAAKmC,SAASnC,EAAKM,eAAe8C,oBAAmB,SAAAzG,GAAK,OAAAqD,EAAKw0B,kBAAoB73B,MAGnF+I,YAAW,WAAM,OAAA1F,EAAK8lB,mBAAkB,KAmO5C,OAlR8B2O,EAAApB,EAAAD,GAkDrBC,EAAA3vB,UAAAyhB,cAAP,SAAqB/W,GACnB/T,KAAK4uB,iBAAiB1iB,MAAMmuB,gBAAkBtmB,EAAOrV,WAAWkG,KAO1Do0B,EAAA3vB,UAAAixB,SAAR,SAAiBC,GAAjB,IAAAzvB,EAAA9K,KACE,GAAIu6B,EAKF,OAJAv6B,KAAK0lB,qBAC+B,OAAhC1lB,KAAK65B,wBACP3U,qBAAqBllB,KAAK65B,yBAIM,OAAhC75B,KAAK65B,yBACP75B,KAAK65B,uBAAyBpU,uBAAsB,WAAM,OAAA3a,EAAK4a,qBAI3DsT,EAAA3vB,UAAAqc,cAAR,WACE,GAAI1lB,KAAKqrB,iBAAiBlf,OAAS,EACjCnM,CAAAA,KAAKo5B,kBAAoBp5B,KAAKiG,eAAe+F,WAAWwrB,iBAAmBx2B,OAAOilB,iBAClFjmB,KAAKq5B,yBAA2Br5B,KAAKiG,eAAe+F,WAAWwrB,iBAC/Dx3B,KAAKu5B,4BAA8Bv5B,KAAK4uB,iBAAiB4L,aACzD,IAAMC,EAAkBnqB,KAAKC,MAAMvQ,KAAKo5B,kBAAoBp5B,KAAKs5B,4BAA8Bt5B,KAAKu5B,4BAA8Bv5B,KAAKiG,eAAe+F,WAAWorB,cAC7Jp3B,KAAKw5B,4BAA8BiB,IACrCz6B,KAAKw5B,0BAA4BiB,EACjCz6B,KAAKk5B,YAAYhtB,MAAMC,OAASnM,KAAKw5B,0BAA4B,MAKrE,IAAMkB,EAAY16B,KAAKkX,eAAevU,OAAOiJ,MAAQ5L,KAAKo5B,kBACtDp5B,KAAK4uB,iBAAiB8L,YAAcA,IAGtC16B,KAAK85B,wBAAAA,EACL95B,KAAK4uB,iBAAiB8L,UAAYA,GAIY,IAA5C16B,KAAKgjB,gBAAgBrM,QAAQgkB,WAC/B36B,KAAKm5B,eAAiB,EAEtBn5B,KAAKm5B,eAAkBn5B,KAAK4uB,iBAAiBmL,YAAc/5B,KAAKk5B,YAAYa,aAtGhD,GAwG9B/5B,KAAK25B,kBAAoB35B,KAAKm5B,eAAiB,EAE/C,IAAMyB,EAAe55B,OAAO65B,iBAAiB76B,KAAK+X,UAC5C+iB,EAAiB5pB,SAAS0pB,EAAaG,aAAe7pB,SAAS0pB,EAAaI,cAClFh7B,KAAK4uB,iBAAiB1iB,MAAMuB,OAASzN,KAAKiG,eAAe+F,WAAWihB,gBAAmBjtB,KAAKkX,eAAmByB,KAAI3Y,KAAKm5B,gBAAkBn5B,KAAK25B,kBAAoBmB,EAAiB,IAAIrvB,WAAa,KACrMzL,KAAK65B,uBAAyB,MAMzBb,EAAA3vB,UAAAoiB,eAAP,SAAsB8O,GAEpB,QAAA,IAFoBA,IAAAA,GAAAA,GAEhBv6B,KAAKs5B,4BAA8Bt5B,KAAKkX,eAAevU,OAAOkH,MAAM/G,OAGtE,OAFA9C,KAAKs5B,0BAA4Bt5B,KAAKkX,eAAevU,OAAOkH,MAAM/G,YAClE9C,KAAKs6B,SAASC,GAKZv6B,KAAKu5B,8BAAgCv5B,KAAKiG,eAAe+F,WAAWorB,cAMpEp3B,KAAK05B,iBAAmB15B,KAAKg6B,cAAcpuB,MAAQ5L,KAAKo5B,mBAMxDp5B,KAAKm6B,kBAAkB3C,mBAAqBx3B,KAAKq5B,yBAMjDr5B,KAAK25B,oBAAuB35B,KAAKgjB,gBAAgBrM,QAAQgkB,WAAa,GACxE36B,KAAKs6B,SAASC,GAlBdv6B,KAAKs6B,SAASC,IA2BVvB,EAAA3vB,UAAA2nB,UAAR,SAAkB/jB,GAMhB,GAJAjN,KAAK05B,eAAiB15B,KAAK4uB,iBAAiB8L,UAIvC16B,KAAK4uB,iBAAiBqM,aAK3B,CAAA,GAAIj7B,KAAK85B,uBAIP,OAHA95B,KAAK85B,wBAAAA,OAEL95B,KAAKi5B,aAAa,GAIpB,IACMiC,EADS5qB,KAAKC,MAAMvQ,KAAK05B,eAAiB15B,KAAKo5B,mBAC/Bp5B,KAAKkX,eAAevU,OAAOiJ,MACjD5L,KAAKi5B,aAAaiC,KAQZlC,EAAA3vB,UAAA8xB,cAAR,SAAsBluB,EAAWojB,GAC/B,IAAM+K,EAAmBp7B,KAAK4uB,iBAAiB8L,UAAY16B,KAAKu5B,4BAChE,QAAKlJ,EAAS,GAAyC,IAApCrwB,KAAK4uB,iBAAiB8L,WACtCrK,EAAS,GAAK+K,EAAmBp7B,KAAKw5B,6BACnCvsB,EAAGouB,YACLpuB,EAAGxC,kBAAAA,IAaFuuB,EAAA3vB,UAAAwqB,QAAP,SAAe5mB,GACb,IAAMojB,EAASrwB,KAAKs7B,mBAAmBruB,GACvC,OAAe,IAAXojB,IAGJrwB,KAAK4uB,iBAAiB8L,WAAarK,EAC5BrwB,KAAKm7B,cAAcluB,EAAIojB,KAGxB2I,EAAA3vB,UAAAiyB,mBAAR,SAA2BruB,GAEzB,GAAkB,IAAdA,EAAGglB,OACL,OAAO,EAIT,IAAI5B,EAASrwB,KAAKu7B,qBAAqBtuB,EAAGglB,OAAQhlB,GAMlD,OALIA,EAAGuuB,YAAcC,WAAWC,eAC9BrL,GAAUrwB,KAAKo5B,kBACNnsB,EAAGuuB,YAAcC,WAAWE,iBACrCtL,GAAUrwB,KAAKo5B,kBAAoBp5B,KAAKkX,eAAepQ,MAElDupB,GAQF2I,EAAA3vB,UAAAoqB,iBAAP,SAAwBxmB,GAEtB,GAAkB,IAAdA,EAAGglB,OACL,OAAO,EAIT,IAAI5B,EAASrwB,KAAKu7B,qBAAqBtuB,EAAGglB,OAAQhlB,GASlD,OARIA,EAAGuuB,YAAcC,WAAWG,iBAC9BvL,GAAUrwB,KAAKo5B,kBAAoB,EACnCp5B,KAAK45B,qBAAuBvJ,EAC5BA,EAAS/f,KAAKqL,MAAMrL,KAAKsjB,IAAI5zB,KAAK45B,uBAAyB55B,KAAK45B,oBAAsB,EAAI,GAAK,GAC/F55B,KAAK45B,qBAAuB,GACnB3sB,EAAGuuB,YAAcC,WAAWE,iBACrCtL,GAAUrwB,KAAKkX,eAAepQ,MAEzBupB,GAGD2I,EAAA3vB,UAAAkyB,qBAAR,SAA6BlL,EAAgBpjB,GAC3C,IAAM4uB,EAAW77B,KAAKgjB,gBAAgBrM,QAAQmlB,mBAE9C,MAAkB,QAAbD,GAAsB5uB,EAAGulB,QACd,SAAbqJ,GAAuB5uB,EAAGqlB,SACb,UAAbuJ,GAAwB5uB,EAAGwlB,SACrBpC,EAASrwB,KAAKgjB,gBAAgBrM,QAAQolB,sBAAwB/7B,KAAKgjB,gBAAgBrM,QAAQqlB,kBAG7F3L,EAASrwB,KAAKgjB,gBAAgBrM,QAAQqlB,mBAOxChD,EAAA3vB,UAAAyqB,aAAP,SAAoB7mB,GAClBjN,KAAKy5B,YAAcxsB,EAAGgvB,QAAQ,GAAGjY,OAO5BgV,EAAA3vB,UAAA0qB,YAAP,SAAmB9mB,GACjB,IAAMglB,EAASjyB,KAAKy5B,YAAcxsB,EAAGgvB,QAAQ,GAAGjY,MAEhD,OADAhkB,KAAKy5B,YAAcxsB,EAAGgvB,QAAQ,GAAGjY,MAClB,IAAXiO,IAGJjyB,KAAK4uB,iBAAiB8L,WAAazI,EAC5BjyB,KAAKm7B,cAAcluB,EAAIglB,KAhRbiK,EA0BhB,CAAAC,EAAA,EAAArD,EAAAtc,gBACA2f,EAAA,EAAArD,EAAAnU,iBACAwX,EAAA,EAAAtD,EAAAzJ,kBACA+M,EAAA,EAAAtD,EAAAjJ,iBA7BQQ,GAAb,CAA8BuI,EAAAvsB,YAAjBgwB,EAAAhM,SAAAA,ygBCdb,IAAAiM,EAAAC,EAAA,MACAC,EAAAD,EAAA,MAYAE,EAAA,oBAwBEC,EACmBC,EACA5M,EACgB5Y,EACC8L,EACH2Z,EACE12B,GALhBjG,KAAA08B,UAAAA,EACA18B,KAAA8vB,iBAAAA,EACgB9vB,KAAAkX,eAAAA,EACClX,KAAAgjB,gBAAAA,EACHhjB,KAAA28B,aAAAA,EACE38B,KAAAiG,eAAAA,EAEjCjG,KAAK48B,cAAAA,EACL58B,KAAK68B,uBAAAA,EACL78B,KAAK88B,qBAAyB50B,CAAAA,MAAO,EAAGC,IAAK,GAC7CnI,KAAK+8B,iBAAmB,GAuL5B,OApNElpB,OAAA+D,eAAW6kB,EAAApzB,UAAA,mBAAX,WAAoC,OAAOrJ,KAAK48B,8CAmCzCH,EAAApzB,UAAA0kB,iBAAP,WACE/tB,KAAK48B,cAAAA,EACL58B,KAAK88B,qBAAqB50B,MAAQlI,KAAK08B,UAAUx4B,MAAMpB,OACvD9C,KAAK8vB,iBAAiB9kB,YAAc,GACpChL,KAAK+8B,iBAAmB,GACxB/8B,KAAK8vB,iBAAiBppB,UAAUC,IAAI,WAO/B81B,EAAApzB,UAAA2kB,kBAAP,SAAyB/gB,GAAzB,IAAAnC,EAAA9K,KACEA,KAAK8vB,iBAAiB9kB,YAAciC,EAAGwI,KACvCzV,KAAKmuB,4BACL9iB,YAAW,WACTP,EAAKgyB,qBAAqB30B,IAAM2C,EAAK4xB,UAAUx4B,MAAMpB,SACpD,IAOE25B,EAAApzB,UAAA4kB,eAAP,WACEjuB,KAAKg9B,sBAAAA,IAQAP,EAAApzB,UAAAmsB,QAAP,SAAevoB,GACb,GAAIjN,KAAK48B,cAAgB58B,KAAK68B,sBAC5B,CAAA,GAAmB,MAAf5vB,EAAGopB,QAEL,OAAO,EAET,GAAmB,KAAfppB,EAAGopB,SAAiC,KAAfppB,EAAGopB,SAAiC,KAAfppB,EAAGopB,QAE/C,OAAO,EAITr2B,KAAKg9B,sBAAAA,GAGP,OAAmB,MAAf/vB,EAAGopB,UAGLr2B,KAAKi9B,6BAAAA,IAeDR,EAAApzB,UAAA2zB,qBAAR,SAA6BE,GAA7B,IAAApyB,EAAA9K,KAIE,GAHAA,KAAK8vB,iBAAiBppB,UAAU2V,OAAO,UACvCrc,KAAK48B,cAAAA,EAEAM,EAQH,CAAA,IAAM3tB,EACJrH,CAAAA,MAAOlI,KAAK88B,qBAAqB50B,MACjCC,IAAKnI,KAAK88B,qBAAqB30B,KAWjCnI,KAAK68B,uBAAAA,EACLxxB,YAAW,WAIP,IAAI8xB,EAFFryB,EAAK+xB,wBACP/xB,EAAK+xB,uBAAAA,EAILttB,EAA2BrH,OAAS4C,EAAKiyB,iBAAiBj6B,QAGxDq6B,EAFEryB,EAAK8xB,aAEC9xB,EAAK4xB,UAAUx4B,MAAM0R,UAAUrG,EAA2BrH,MAAOqH,EAA2BpH,KAK5F2C,EAAK4xB,UAAUx4B,MAAM0R,UAAUrG,EAA2BrH,QAE1DpF,OAAS,GACjBgI,EAAK6xB,aAAa5vB,iBAAiBowB,GAAAA,MAGtC,OAzCHn9B,CAAAA,KAAK68B,uBAAAA,EACL,IAAMM,EAAQn9B,KAAK08B,UAAUx4B,MAAM0R,UAAU5V,KAAK88B,qBAAqB50B,MAAOlI,KAAK88B,qBAAqB30B,KACxGnI,KAAK28B,aAAa5vB,iBAAiBowB,GAAAA,KAiD/BV,EAAApzB,UAAA4zB,0BAAR,WAAA,IAAA36B,EAAAtC,KACQo9B,EAAWp9B,KAAK08B,UAAUx4B,MAChCmH,YAAW,WAET,IAAK/I,EAAKs6B,aACR,CAAA,IACM1B,EADW54B,EAAKo6B,UAAUx4B,MACVsI,QAAQ4wB,EAAU,IACpClC,EAAKp4B,OAAS,IAChBR,EAAKy6B,iBAAmB7B,EACxB54B,EAAKq6B,aAAa5vB,iBAAiBmuB,GAAAA,OAGtC,IASEuB,EAAApzB,UAAA8kB,0BAAP,SAAiCkP,GAAjC,IAAAvyB,EAAA9K,KACE,GAAKA,KAAK48B,aAIV,CAAA,GAAI58B,KAAKkX,eAAevU,OAAO4pB,mBAC7B,CAAA,IAAMM,EAAUvc,KAAK6B,IAAInS,KAAKkX,eAAevU,OAAOC,EAAG5C,KAAKkX,eAAeyB,KAAO,GAE5EmU,EAAa9sB,KAAKiG,eAAe+F,WAAWC,iBAC5CihB,EAAYltB,KAAKkX,eAAevU,OAAO4Y,EAAIvb,KAAKiG,eAAe+F,WAAWC,iBAC1EkhB,EAAaN,EAAU7sB,KAAKiG,eAAe+F,WAAWihB,gBAE5DjtB,KAAK8vB,iBAAiB5jB,MAAMmB,KAAO8f,EAAa,KAChDntB,KAAK8vB,iBAAiB5jB,MAAMqB,IAAM2f,EAAY,KAC9CltB,KAAK8vB,iBAAiB5jB,MAAMC,OAAS2gB,EAAa,KAClD9sB,KAAK8vB,iBAAiB5jB,MAAM1L,WAAassB,EAAa,KACtD9sB,KAAK8vB,iBAAiB5jB,MAAM5L,WAAaN,KAAKgjB,gBAAgBrM,QAAQrW,WACtEN,KAAK8vB,iBAAiB5jB,MAAM3L,SAAWP,KAAKgjB,gBAAgBrM,QAAQpW,SAAW,KAG/E,IAAM+8B,EAAwBt9B,KAAK8vB,iBAAiB1iB,wBACpDpN,KAAK08B,UAAUxwB,MAAMmB,KAAO8f,EAAa,KACzCntB,KAAK08B,UAAUxwB,MAAMqB,IAAM2f,EAAY,KAEvCltB,KAAK08B,UAAUxwB,MAAMuB,MAAQ6C,KAAK0B,IAAIsrB,EAAsB7vB,MAAO,GAAK,KACxEzN,KAAK08B,UAAUxwB,MAAMC,OAASmE,KAAK0B,IAAIsrB,EAAsBnxB,OAAQ,GAAK,KAC1EnM,KAAK08B,UAAUxwB,MAAM1L,WAAa88B,EAAsBnxB,OAAS,KAG9DkxB,GACHhyB,YAAW,WAAM,OAAAP,EAAKqjB,2BAAAA,KAAiC,KAvN/BoP,EA2BzB,CAAAC,EAAA,EAAAjB,EAAA/f,gBACAghB,EAAA,EAAAjB,EAAA5X,iBACA6Y,EAAA,EAAAjB,EAAAkB,cACAD,EAAA,EAAAnB,EAAAzM,iBA9BQG,GAAb,GAAa2N,EAAA3N,kBAAAA,yBCbG4N,EAA2Bv6B,EAA2CuE,GACpF,IAAMi2B,EAAOj2B,EAAQyF,wBACrB,MAAQhK,CAAAA,EAAMkK,QAAUswB,EAAKvwB,KAAMjK,EAAMoK,QAAUowB,EAAKrwB,yHAF1DswB,EAAAF,2BAAAG,EAiBAD,EAAAzb,UAAA,SAA0Bhf,EAA2CuE,EAAsBo2B,EAAkB1Y,EAAkB2Y,EAA2B/Q,EAAyBhhB,EAA0BgyB,GAE3M,GAAKD,EAIL,CAAA,IAAM7b,EAASwb,EAA2Bv6B,EAAOuE,GACjD,GAAKwa,EAaL,OATAA,EAAO,GAAK7R,KAAK2B,MAAMkQ,EAAO,IAAM8b,EAAchR,EAAkB,EAAI,IAAMA,GAC9E9K,EAAO,GAAK7R,KAAK2B,KAAKkQ,EAAO,GAAKlW,GAKlCkW,EAAO,GAAK7R,KAAK6B,IAAI7B,KAAK0B,IAAImQ,EAAO,GAAI,GAAI4b,GAAYE,EAAc,EAAI,IAC3E9b,EAAO,GAAK7R,KAAK6B,IAAI7B,KAAK0B,IAAImQ,EAAO,GAAI,GAAIkD,GAEtClD,IAQT0b,EAAA/L,iBAAA,SAAiC3P,GAC/B,GAAKA,EAKL,MAASvf,CAAAA,EAAGuf,EAAO,GAAK,GAAI5G,EAAG4G,EAAO,GAAK,kGCnD7C,IAAA+b,EAAAC,EAAA,eAyESC,EAAmBC,EAAgBC,EAAiBC,EAA+BC,GAC1F,IAAM5d,EAAWyd,EAASI,EAAkBF,EAAeF,GACrDxd,EAASyd,EAAUG,EAAkBF,EAAeD,GAI1D,OAAOI,EAFYpuB,KAAKsjB,IAAIhT,EAAWC,GAiCzC,SAA0Bwd,EAAgBC,EAAiBC,GAKzD,IAJA,IAAII,EAAc,EACZ/d,EAAWyd,EAASI,EAAkBF,EAAeF,GACrDxd,EAASyd,EAAUG,EAAkBF,EAAeD,GAEjDl5B,EAAI,EAAGA,EAAIkL,KAAKsjB,IAAIhT,EAAWC,GAASzb,IAC/C,CAAA,IAAMw5B,EAAmD,MAAvCC,EAAkBR,EAAQC,IAA6B,EAAI,EACvEtjB,EAAOujB,EAAc57B,OAAOkH,MAAMoR,IAAI2F,EAAYge,EAAYx5B,GAChE4V,GAAQA,EAAK8jB,WACfH,IAIJ,OAAOA,EAbT,CAjCoEN,EAAQC,EAASC,GAEzD7K,EAASmL,EAAkBR,EAAQC,GAAUE,aAmDhEC,EAAkBF,EAA+BQ,GAKxD,IAJA,IAAI1Z,EAAW,EACXrK,EAAOujB,EAAc57B,OAAOkH,MAAMoR,IAAI8jB,GACtCC,EAAYhkB,GAAQA,EAAK8jB,UAEtBE,GAAaD,GAAc,GAAKA,EAAaR,EAAcz3B,MAChEue,IAEA2Z,GADAhkB,EAAOujB,EAAc57B,OAAOkH,MAAMoR,MAAM8jB,KACpB/jB,EAAK8jB,UAG3B,OAAOzZ,WA8BAwZ,EAAkBR,EAAgBC,GACzC,OAAOD,EAASC,EAAU,IAAe,aAYlC1R,EACPqS,EACAre,EACAse,EACAre,EACAse,EACAZ,GAMA,IAJA,IAAIa,EAAaH,EACbF,EAAane,EACbye,EAAY,GAETD,IAAeF,GAAUH,IAAele,GAC7Cue,GAAcD,EAAU,GAAK,EAEzBA,GAAWC,EAAab,EAAc5lB,KAAO,GAC/C0mB,GAAad,EAAc57B,OAAOgJ,4BAChCozB,GAAAA,EAAmBE,EAAUG,GAE/BA,EAAa,EACbH,EAAW,EACXF,MACUI,GAAWC,EAAa,IAClCC,GAAad,EAAc57B,OAAOgJ,4BAChCozB,GAAAA,EAAmB,EAAGE,EAAW,GAGnCA,EADAG,EAAab,EAAc5lB,KAAO,EAElComB,KAIJ,OAAOM,EAAYd,EAAc57B,OAAOgJ,4BACtCozB,GAAAA,EAAmBE,EAAUG,YAQxB1L,EAASkL,EAAsBJ,GACtC,IAAMc,EAAOd,EAAoB,IAAM,IACvC,OAAON,EAAAlS,GAAGC,IAAMqT,EAAMV,WASfF,EAAOa,EAAeC,GAC7BD,EAAQjvB,KAAKqL,MAAM4jB,GAEnB,IADA,IAAIE,EAAM,GACDr6B,EAAI,EAAGA,EAAIm6B,EAAOn6B,IACzBq6B,GAAOD,EAET,OAAOC,EAnOTC,EAAAC,mBAAA,SAAmCC,EAAiBtB,EAAiBC,EAA+BC,GAClG,IAWII,EAgCoB3e,EAAgBoe,EAAkDE,EAA+BC,EA3CnHve,EAASse,EAAc57B,OAAOC,EAC9By7B,EAASE,EAAc57B,OAAO4Y,EAGpC,IAAKgjB,EAAc57B,OAAO6wB,cACxB,OAsCsBvT,EAtCEA,GAuC2D,IAAjFme,EADoCC,EAtCNA,EAAiBC,EAsCuCC,EAtC9BA,EAsC6DC,EAtC9CA,GAuCD17B,OACjE,GAEF47B,EAAO9R,EACZ3M,EAAQoe,EAAQpe,EAChBoe,EAASI,EAAkBF,EAAeF,IAAAA,EAAgBE,GAC1Dz7B,OAAQ4wB,EAAS,IAAgB8K,KA5C/BJ,EAAmBC,EAAQC,EAASC,EAAeC,GAAAA,SA+D7Bve,EAAgBoe,EAAgBuB,EAAiBtB,EAAiBC,EAA+BC,GAC3H,IAAI5d,EAEFA,EADEwd,EAAmBC,EAAQC,EAASC,EAAeC,GAAmB17B,OAAS,EACtEw7B,EAAUG,EAAkBF,EAAeD,GAE3CD,EAGb,IAAMxd,EAASyd,EACTM,EAyDR,SAA6B3e,EAAgBoe,EAAgBuB,EAAiBtB,EAAiBC,EAA+BC,GAC5H,IAAI5d,EAOJ,OALEA,EADEwd,EAAmBwB,EAAStB,EAASC,EAAeC,GAAmB17B,OAAS,EACvEw7B,EAAUG,EAAkBF,EAAeD,GAE3CD,EAGRpe,EAAS2f,GACZhf,GAAY0d,GACXre,GAAU2f,GACXhf,EAAW0d,EACJ,IAEF,IAdT,CAzDwCre,EAAQoe,EAAQuB,EAAStB,EAASC,EAAeC,GAEvF,OAAOE,EAAO9R,EACZ3M,EAAQW,EAAUgf,EAAS/e,EACb,MAAd+d,EAA+BL,GAC/Bz7B,OAAQ4wB,EAASkL,EAAWJ,IA7EyBA,CAChCve,EAAQoe,EAAQuB,EAAStB,EAASC,EAAeC,GAKxE,GAAIH,IAAWC,EAEb,OADAM,EAAY3e,EAAS2f,EAAU,IAAiB,IACzClB,EAAOpuB,KAAKsjB,IAAI3T,EAAS2f,GAAUlM,EAASkL,EAAWJ,IAEhEI,EAAYP,EAASC,EAAU,IAAiB,IAChD,IAAMuB,EAAgBvvB,KAAKsjB,IAAIyK,EAASC,GAIxC,OAAOI,EAaT,SAAwBoB,EAAevB,GACrC,OAAOA,EAAc5lB,KAAOmnB,EAD9B,CAhBqCzB,EAASC,EAAUsB,EAAU3f,EAAQse,IACrEsB,EAAgB,GAAKtB,EAAc5lB,KAAO,IACtB0lB,EAASC,EAAUre,EAAS2f,GAQpC,GAPYlM,EAASkL,EAAWJ,+FCnCjD,IAAAuB,EAAAC,EAAA,KAEAC,EAAAD,EAAA,MAEAE,EAAAF,EAAA,MACAG,EAAAH,EAAA,MAIAI,EAAAJ,EAAA,MACAx8B,EAAAw8B,EAAA,MACAK,EAAAL,EAAA,MACAM,EAAAN,EAAA,MAEAO,EAAA,oBAyBEC,EACUC,EACRlnB,EACA7L,EACQgzB,EACEC,EACFC,EACW1pB,EACA8L,GAPXhjB,KAAAygC,WAAAA,EAGAzgC,KAAA0gC,OAAAA,EACE1gC,KAAA2gC,QAAAA,EACF3gC,KAAA4gC,YAAAA,EACW5gC,KAAAkX,eAAAA,EACAlX,KAAAgjB,gBAAAA,EA9BbhjB,KAAA6gC,iBAA2B,EAC3B7gC,KAAA8gC,kBAA4B,EAC5B9gC,KAAA+gC,iBAA2B,EAC3B/gC,KAAAghC,kBAA4B,EAC5BhhC,KAAAihC,gBAA0B,EAC1BjhC,KAAAkhC,eAAyB,EAOzBlhC,KAAAmhC,wBACNC,CAAAA,MAAO,GACPC,KAAM,EACNvxB,GAAI,EACJC,GAAI,EACJuxB,MAAAA,EACAC,KAAAA,EACAC,QAAAA,GAaAxhC,KAAKyhC,QAAUl7B,SAASC,cAAc,UACtCxG,KAAKyhC,QAAQ/6B,UAAUC,IAAI,SAAS4S,EAAE,UACtCvZ,KAAKyhC,QAAQv1B,MAAMwB,OAASA,EAAOjC,WACnCzL,KAAK0hC,cACL1hC,KAAKygC,WAAWz5B,YAAYhH,KAAKyhC,SAwcrC,OArcSjB,EAAAn3B,UAAAC,QAAP,oBACE+2B,EAAA92B,yBAAwBvJ,KAAKyhC,SACd,QAAfn/B,EAAAtC,KAAK2hC,kBAAAA,IAAUr/B,GAAAA,EAAEgH,WAGXk3B,EAAAn3B,UAAAq4B,YAAR,WACE1hC,KAAKuU,MAAAA,EAAO6rB,EAAAwB,cAAa5hC,KAAKyhC,QAAQntB,WAAW,KAAQ2B,CAAAA,MAAOjW,KAAK0gC,UAEhE1gC,KAAK0gC,QACR1gC,KAAK6hC,aAIFrB,EAAAn3B,UAAAy4B,iBAAP,aACOtB,EAAAn3B,UAAAR,OAAP,aACO23B,EAAAn3B,UAAAknB,QAAP,aACOiQ,EAAAn3B,UAAA+gB,aAAP,aACOoW,EAAAn3B,UAAA04B,cAAP,SAAqBnhB,EAAkBC,KAChC2f,EAAAn3B,UAAAwnB,mBAAP,SAA0B3oB,EAAqCC,EAAmC2oB,QAAAA,IAAAA,IAAAA,GAAAA,IAE3F0P,EAAAn3B,UAAAuhB,UAAP,SAAiBoX,GACfhiC,KAAKiiC,kBAAkBD,IAGfxB,EAAAn3B,UAAA64B,iBAAV,SAA2BjsB,GAEzB,GAAIA,IAAUjW,KAAK0gC,OAKnB,CAAA,IAAMyB,EAAYniC,KAAKyhC,QACvBzhC,KAAK0gC,OAASzqB,EAEdjW,KAAKyhC,QAAUzhC,KAAKyhC,QAAQW,YAC5BpiC,KAAK0hC,cACL1hC,KAAKygC,WAAW4B,aAAariC,KAAKyhC,QAASU,GAG3CniC,KAAKiiC,kBAAkBjiC,KAAK2gC,SAC5B3gC,KAAK+hC,cAAc,EAAG/hC,KAAKkX,eAAepQ,KAAO,KAO3C05B,EAAAn3B,UAAA44B,kBAAR,SAA0BD,GACpBhiC,KAAK6gC,kBAAoB,GAAK7gC,KAAK8gC,mBAAqB,IAG5D9gC,KAAK2hC,YAAAA,EAAazB,EAAAoC,kBAAiBtiC,KAAKgjB,gBAAgBrM,QAAS3W,KAAK4gC,YAAaoB,EAAUhiC,KAAK6gC,iBAAkB7gC,KAAK8gC,mBACzH9gC,KAAK2hC,WAAWY,WAGX/B,EAAAn3B,UAAAwmB,OAAP,SAAc0R,GACZvhC,KAAK+gC,iBAAmBQ,EAAIhK,gBAC5Bv3B,KAAKghC,kBAAoBO,EAAI/J,iBAC7Bx3B,KAAK6gC,iBAAmBU,EAAIiB,gBAC5BxiC,KAAK8gC,kBAAoBS,EAAIkB,iBAC7BziC,KAAKihC,gBAAkBM,EAAImB,eAC3B1iC,KAAKkhC,eAAiBK,EAAIoB,cAC1B3iC,KAAKyhC,QAAQh0B,MAAQ8zB,EAAIrK,kBACzBl3B,KAAKyhC,QAAQt1B,OAASo1B,EAAIlK,mBAC1Br3B,KAAKyhC,QAAQv1B,MAAMuB,MAAW8zB,EAAItK,YAAW,KAC7Cj3B,KAAKyhC,QAAQv1B,MAAMC,OAAYo1B,EAAInK,aAAY,KAG1Cp3B,KAAK0gC,QACR1gC,KAAK6hC,YAGP7hC,KAAKiiC,kBAAkBjiC,KAAK2gC,UAKvBH,EAAAn3B,UAAAytB,kBAAP,iBACiB,QAAfx0B,EAAAtC,KAAK2hC,kBAAAA,IAAUr/B,GAAAA,EAAEwQ,SAUT0tB,EAAAn3B,UAAAu5B,WAAV,SAAqBhgC,EAAW2Y,EAAW9N,EAAetB,GACxDnM,KAAKuU,KAAKiB,SACR5S,EAAI5C,KAAK+gC,iBACTxlB,EAAIvb,KAAKghC,kBACTvzB,EAAQzN,KAAK+gC,iBACb50B,EAASnM,KAAKghC,oBASRR,EAAAn3B,UAAAw5B,uBAAV,SAAiCjgC,EAAW2Y,EAAW9N,QAAAA,IAAAA,IAAAA,EAAA,GACrD,IAAMq1B,EAAaxyB,KAAK2B,KAA8B,GAAzBjS,KAAKghC,mBAClChhC,KAAKuU,KAAKiB,SACR5S,EAAI5C,KAAK+gC,kBACRxlB,EAAI,GAAKvb,KAAKghC,kBAAoB8B,EAAa9hC,OAAOilB,iBACvDxY,EAAQzN,KAAK+gC,iBACb//B,OAAOilB,mBASDua,EAAAn3B,UAAA05B,uBAAV,SAAiCngC,EAAW2Y,EAAW9N,QAAAA,IAAAA,IAAAA,EAAA,GACrDzN,KAAKuU,KAAKiB,SACR5S,EAAI5C,KAAK+gC,kBACRxlB,EAAI,GAAKvb,KAAKghC,kBAAoBhgC,OAAOilB,iBAAmB,EAC7DxY,EAAQzN,KAAK+gC,iBACb//B,OAAOilB,mBASDua,EAAAn3B,UAAA25B,oBAAV,SAA8BpgC,EAAW2Y,EAAW9N,GAClDzN,KAAKuU,KAAKiB,SACR5S,EAAI5C,KAAK+gC,iBACTxlB,EAAIvb,KAAKghC,kBACThgC,OAAOilB,iBAAmBxY,EAC1BzN,KAAKghC,oBASCR,EAAAn3B,UAAA45B,kBAAV,SAA4BrgC,EAAW2Y,EAAW9N,EAAetB,GAC/DnM,KAAKuU,KAAK2uB,UAAYliC,OAAOilB,iBAC7BjmB,KAAKuU,KAAK4uB,WACRvgC,EAAI5C,KAAK+gC,iBAAmB//B,OAAOilB,iBAAmB,EACtD1K,EAAIvb,KAAKghC,kBAAqBhgC,OAAOilB,iBAAmB,EACxDxY,EAAQzN,KAAK+gC,iBAAmB//B,OAAOilB,iBACtC9Z,EAASnM,KAAKghC,kBAAqBhgC,OAAOilB,mBAMrCua,EAAAn3B,UAAAw4B,UAAV,WACM7hC,KAAK0gC,OACP1gC,KAAKuU,KAAK6uB,UAAU,EAAG,EAAGpjC,KAAKyhC,QAAQh0B,MAAOzN,KAAKyhC,QAAQt1B,SAE3DnM,KAAKuU,KAAKe,UAAYtV,KAAK2gC,QAAQjiC,WAAWkG,IAC9C5E,KAAKuU,KAAKiB,SAAS,EAAG,EAAGxV,KAAKyhC,QAAQh0B,MAAOzN,KAAKyhC,QAAQt1B,UAWpDq0B,EAAAn3B,UAAAg6B,YAAV,SAAsBzgC,EAAW2Y,EAAW9N,EAAetB,GACrDnM,KAAK0gC,OACP1gC,KAAKuU,KAAK6uB,UACRxgC,EAAI5C,KAAK+gC,iBACTxlB,EAAIvb,KAAKghC,kBACTvzB,EAAQzN,KAAK+gC,iBACb50B,EAASnM,KAAKghC,oBAEhBhhC,KAAKuU,KAAKe,UAAYtV,KAAK2gC,QAAQjiC,WAAWkG,IAC9C5E,KAAKuU,KAAKiB,SACR5S,EAAI5C,KAAK+gC,iBACTxlB,EAAIvb,KAAKghC,kBACTvzB,EAAQzN,KAAK+gC,iBACb50B,EAASnM,KAAKghC,qBAaVR,EAAAn3B,UAAAi6B,mBAAV,SAA6BC,EAAgB3gC,EAAW2Y,GACtDvb,KAAKuU,KAAKivB,KAAOxjC,KAAKyjC,UAAAA,GAAS,GAC/BzjC,KAAKuU,KAAKmvB,aAAezD,EAAA0D,cACzB3jC,KAAK4jC,SAASroB,GAGd,IAAIsoB,GAAAA,OACA7jC,KAAKgjB,gBAAgBrM,QAAQmtB,eAC/BD,GAAAA,EAAcvD,EAAAyD,mBAAkB/jC,KAAKuU,KAAMgvB,EAAKS,WAAYphC,EAAI5C,KAAK+gC,iBAAkBxlB,EAAIvb,KAAKghC,kBAAmBhhC,KAAK+gC,iBAAkB/gC,KAAKghC,oBAI5I6C,GACH7jC,KAAKuU,KAAK0vB,SACRV,EAAKS,WACLphC,EAAI5C,KAAK+gC,iBAAmB/gC,KAAKihC,gBACjC1lB,EAAIvb,KAAKghC,kBAAoBhhC,KAAKkhC,eAAiBlhC,KAAK8gC,oBAiBpDN,EAAAn3B,UAAA66B,WAAV,SAAqBX,EAAiB3gC,EAAW2Y,GAC/C,IAWIxL,EACAD,EAZEq0B,EAAgBnkC,KAAKokC,kBAAkBb,GAMzCY,GAAiBZ,EAAKc,WAAad,EAAKe,UAC1CtkC,KAAKukC,mBAAmBhB,EAAM3gC,EAAG2Y,EAAG4oB,IAMlCZ,EAAKiB,aACPz0B,EAAMwzB,EAAKkB,cAAiBxE,EAAAyE,uBAAyBnB,EAAKoB,aAC1D70B,EAAMyzB,EAAKqB,cAAiB3E,EAAAyE,uBAAyBnB,EAAKsB,eAE1D/0B,EAAMyzB,EAAKkB,cAAiB1E,EAAA+E,cAAgBvB,EAAKoB,aACjD50B,EAAMwzB,EAAKqB,cAAiB7E,EAAA+E,cAAgBvB,EAAKsB,cAKnD90B,GAF0B/P,KAAKgjB,gBAAgBrM,QAAQouB,4BAA8BxB,EAAKyB,UAAYj1B,EAAK,EAEjF,EAAI,EAC9B/P,KAAKmhC,wBAAwBC,MAAQmC,EAAKS,YAAcjE,EAAAkF,qBACxDjlC,KAAKmhC,wBAAwBE,KAAOkC,EAAK2B,WAAanF,EAAAoF,qBACtDnlC,KAAKmhC,wBAAwBrxB,GAAKA,EAClC9P,KAAKmhC,wBAAwBpxB,GAAKA,EAClC/P,KAAKmhC,wBAAwBG,OAASiC,EAAKyB,SAC3ChlC,KAAKmhC,wBAAwBI,MAAQgC,EAAK6B,QAC1CplC,KAAKmhC,wBAAwBK,SAAW+B,EAAK8B,WACxBrlC,KAAK2hC,YAAc3hC,KAAK2hC,WAAW2D,KACtDtlC,KAAKuU,KACLvU,KAAKmhC,wBACLv+B,EAAI5C,KAAK+gC,iBAAmB/gC,KAAKihC,gBACjC1lB,EAAIvb,KAAKghC,kBAAoBhhC,KAAKkhC,iBAIlClhC,KAAKukC,mBAAmBhB,EAAM3gC,EAAG2Y,KAc7BilB,EAAAn3B,UAAAk7B,mBAAR,SAA2BhB,EAAiB3gC,EAAW2Y,EAAWgqB,GAKhE,GAJAvlC,KAAKuU,KAAKixB,OACVxlC,KAAKuU,KAAKivB,KAAOxjC,KAAKyjC,WAAWF,EAAKyB,WAAYzB,EAAK8B,YACvDrlC,KAAKuU,KAAKmvB,aAAezD,EAAA0D,cAErBJ,EAAKiB,YACP,GAAIe,EACFvlC,KAAKuU,KAAKe,UAAYiwB,EAAW3gC,SAC5B,GAAI2+B,EAAKkB,cACdzkC,KAAKuU,KAAKe,UAAY9R,EAAAoM,MAAMiB,OAAO7Q,KAAK2gC,QAAQjiC,YAAYkG,SACvD,GAAI2+B,EAAKe,UACdtkC,KAAKuU,KAAKe,UAAY,OAAO6qB,EAAAsF,cAAcC,WAAWnC,EAAKoB,cAActhC,KAAK,KAAI,QAElF,CAAA,IAAIyM,EAAKyzB,EAAKoB,aACV3kC,KAAKgjB,gBAAgBrM,QAAQouB,4BAA8BxB,EAAKyB,UAAYl1B,EAAK,IACnFA,GAAM,GAER9P,KAAKuU,KAAKe,UAAYtV,KAAK2gC,QAAQ3rB,KAAKlF,GAAIlL,SAG9C,GAAI2gC,EACFvlC,KAAKuU,KAAKe,UAAYiwB,EAAW3gC,SAC5B,GAAI2+B,EAAKqB,cACd5kC,KAAKuU,KAAKe,UAAYtV,KAAK2gC,QAAQliC,WAAWmG,SACzC,GAAI2+B,EAAKc,UACdrkC,KAAKuU,KAAKe,UAAY,OAAO6qB,EAAAsF,cAAcC,WAAWnC,EAAKsB,cAAcxhC,KAAK,KAAI,QAElF,CAAA,IAAI0M,EAAKwzB,EAAKsB,aACV7kC,KAAKgjB,gBAAgBrM,QAAQouB,4BAA8BxB,EAAKyB,UAAYj1B,EAAK,IACnFA,GAAM,GAER/P,KAAKuU,KAAKe,UAAYtV,KAAK2gC,QAAQ3rB,KAAKjF,GAAInL,IAIhD5E,KAAK4jC,SAASroB,GAGVgoB,EAAK6B,UACPplC,KAAKuU,KAAKoxB,YAAc1F,EAAA2F,aAI1B,IAAI/B,GAAAA,OACA7jC,KAAKgjB,gBAAgBrM,QAAQmtB,eAC/BD,GAAAA,EAAcvD,EAAAyD,mBAAkB/jC,KAAKuU,KAAMgvB,EAAKS,WAAYphC,EAAI5C,KAAK+gC,iBAAkBxlB,EAAIvb,KAAKghC,kBAAmBhhC,KAAK+gC,iBAAkB/gC,KAAKghC,oBAI5I6C,GACH7jC,KAAKuU,KAAK0vB,SACRV,EAAKS,WACLphC,EAAI5C,KAAK+gC,iBAAmB/gC,KAAKihC,gBACjC1lB,EAAIvb,KAAKghC,kBAAoBhhC,KAAKkhC,eAAiBlhC,KAAK8gC,mBAG5D9gC,KAAKuU,KAAKsxB,WAQJrF,EAAAn3B,UAAAu6B,SAAR,SAAiBroB,GACfvb,KAAKuU,KAAKuxB,YACV9lC,KAAKuU,KAAKqpB,KACR,EACAriB,EAAIvb,KAAKghC,kBACThhC,KAAKkX,eAAeyB,KAAO3Y,KAAK+gC,iBAChC/gC,KAAKghC,mBACPhhC,KAAKuU,KAAKwxB,QAOFvF,EAAAn3B,UAAAo6B,SAAV,SAAmBuB,EAAiBK,GAIlC,OAFkBA,EAAW,SAAW,IAErB,KAHAL,EAAShlC,KAAKgjB,gBAAgBrM,QAAQqvB,eAAiBhmC,KAAKgjB,gBAAgBrM,QAAQsvB,YAGtE,IAAIjmC,KAAKgjB,gBAAgBrM,QAAQpW,SAAWS,OAAOilB,iBAAgB,MAAMjmB,KAAKgjB,gBAAgBrM,QAAQrW,YAGjIkgC,EAAAn3B,UAAA+6B,kBAAR,SAA0Bb,GACxB,GAA0D,IAAtDvjC,KAAKgjB,gBAAgBrM,QAAQuvB,qBAKjC,CAAA,IAAMC,EAAgBnmC,KAAK2gC,QAAQ1rB,cAAc/B,SAASqwB,EAAKzzB,GAAIyzB,EAAKxzB,IACxE,QAAA,IAAIo2B,EACF,OAAOA,QAAAA,EAGT,IAAIC,EAAU7C,EAAKsB,aACfwB,EAAc9C,EAAK+C,iBACnBC,EAAUhD,EAAKoB,aACf6B,EAAcjD,EAAKkD,iBACjBjC,IAAcjB,EAAKiB,YACnBQ,IAAWzB,EAAKiB,YACtB,GAAIA,EACF,CAAA,IAAMkC,EAAON,EACbA,EAAUG,EACVA,EAAUG,EACV,IAAMC,EAAQN,EACdA,EAAcG,EACdA,EAAcG,EAGhB,IAAM90B,EAAS7R,KAAK4mC,uBAAuBJ,EAAaD,EAAS/B,GAC3D1yB,EAAS9R,KAAK6mC,uBAAuBR,EAAaD,EAAS5B,EAAWQ,GACtEr0B,EAASnN,EAAAuL,KAAK0B,oBAAoBoB,EAAQC,EAAQ9R,KAAKgjB,gBAAgBrM,QAAQuvB,sBAErF,GAAKv1B,EAKL,CAAA,IAAMf,EACJhL,CAAAA,IAAKpB,EAAAoL,SAASU,MACXqB,GAAU,GAAM,IAChBA,GAAU,GAAM,IAChBA,GAAU,EAAK,KAElB5B,KAAM4B,GAIR,OAFA3Q,KAAK2gC,QAAQ1rB,cAAchC,SAASswB,EAAKzzB,GAAIyzB,EAAKxzB,GAAIH,GAE/CA,EAdL5P,KAAK2gC,QAAQ1rB,cAAchC,SAASswB,EAAKzzB,GAAIyzB,EAAKxzB,GAAI,QAiBlDywB,EAAAn3B,UAAAu9B,uBAAR,SAA+BJ,EAAqBD,EAAiBO,GACnE,OAAQN,GACN,KAAK,SACL,KAAK,SACH,OAAOxmC,KAAK2gC,QAAQ3rB,KAAKuxB,GAASx3B,KACpC,KAAK,SACH,OAAOw3B,GAAW,UAGlB,OAAIO,EACK9mC,KAAK2gC,QAAQliC,WAAWsQ,KAE1B/O,KAAK2gC,QAAQjiC,WAAWqQ,OAI7ByxB,EAAAn3B,UAAAw9B,uBAAR,SAA+BR,EAAqBD,EAAiBU,EAAkBxF,GACrF,OAAQ+E,GACN,KAAK,SACL,KAAK,SAIH,OAHIrmC,KAAKgjB,gBAAgBrM,QAAQouB,4BAA8BzD,GAAQ8E,EAAU,IAC/EA,GAAW,GAENpmC,KAAK2gC,QAAQ3rB,KAAKoxB,GAASr3B,KACpC,KAAK,SACH,OAAOq3B,GAAW,UAGlB,OAAIU,EACK9mC,KAAK2gC,QAAQjiC,WAAWqQ,KAE1B/O,KAAK2gC,QAAQliC,WAAWsQ,OAGvCyxB,EA/eA,GAAsBuG,EAAAC,gBAAAA,m+BCftB,IAAAC,EAAAC,EAAA,MAEA1jC,EAAA0jC,EAAA,KAEAC,EAAAD,EAAA,MAEAE,EAAAF,EAAA,MAaMG,EAAiB,IAEvBxhC,EAAA,SAAAyhC,YAMEC,EACEC,EACA95B,EACAqG,EACA0zB,EACQC,EACQnJ,EACC/T,EACcmS,EACOgL,GATxC,IAAA/hC,EAWE0hC,EAAAphC,KAAAlG,KAAMwnC,EAAW,SAAU95B,GAAAA,EAAcqG,EAAQ0zB,EAAYlJ,EAAe/T,IAAexqB,YANnF4F,EAAA8hC,iBAAAA,EAGuB9hC,EAAA+2B,aAAAA,EACO/2B,EAAA+hC,oBAAAA,EAXhC/hC,EAAAgiC,MAAmB,IAAIpkC,EAAAqkC,SAc7BjiC,EAAKkiC,OACHllC,CAAAA,EAAG,EACH2Y,EAAG,EACHwsB,WAAAA,EACA77B,MAAO,GACPuB,MAAO,GAET7H,EAAKoiC,iBACH,CAAAC,IAAOriC,EAAKsiC,iBAAiB1gC,KAAK5B,GAClCuiC,MAASviC,EAAKwiC,mBAAmB5gC,KAAK5B,GACtCub,UAAavb,EAAKyiC,uBAAuB7gC,KAAK5B,MA0LpD,OAtNuC0iC,EAAAf,EAAAD,GAgC9BC,EAAAl+B,UAAAC,QAAP,WACMtJ,KAAKuoC,2BACPvoC,KAAKuoC,yBAAyBj/B,UAC9BtJ,KAAKuoC,8BAAAA,GAEPjB,EAAAj+B,UAAMC,QAAOpD,KAAAlG,OAGRunC,EAAAl+B,UAAAwmB,OAAP,SAAc0R,GACZ+F,EAAAj+B,UAAMwmB,OAAM3pB,KAAAlG,KAACuhC,GAEbvhC,KAAK8nC,OACHllC,CAAAA,EAAG,EACH2Y,EAAG,EACHwsB,WAAAA,EACA77B,MAAO,GACPuB,MAAO,IAIJ85B,EAAAl+B,UAAAygB,MAAP,iBACE9pB,KAAKwoC,eACwB,QAA7BlmC,EAAAtC,KAAKuoC,gCAAAA,IAAwBjmC,GAAAA,EAAEmmC,wBAC/BzoC,KAAK8hC,oBAGAyF,EAAAl+B,UAAAR,OAAP,iBAC+B,QAA7BvG,EAAAtC,KAAKuoC,gCAAAA,IAAwBjmC,GAAAA,EAAEomC,QAC/B1oC,KAAK0nC,iBAAiBvrB,KAAOjU,CAAAA,MAAOlI,KAAKkX,eAAevU,OAAO4Y,EAAGpT,IAAKnI,KAAKkX,eAAevU,OAAO4Y,KAG7FgsB,EAAAl+B,UAAAknB,QAAP,iBAC+B,QAA7BjuB,EAAAtC,KAAKuoC,gCAAAA,IAAwBjmC,GAAAA,EAAEqmC,SAC/B3oC,KAAK0nC,iBAAiBvrB,KAAOjU,CAAAA,MAAOlI,KAAKkX,eAAevU,OAAO4Y,EAAGpT,IAAKnI,KAAKkX,eAAevU,OAAO4Y,KAG7FgsB,EAAAl+B,UAAAy4B,iBAAP,WAAA,MAAAh3B,EAAA9K,KACMA,KAAKgjB,gBAAgBrM,QAAQjW,YAC1BV,KAAKuoC,2BACRvoC,KAAKuoC,yBAA2B,IAAIK,EAAwB5oC,KAAK2nC,oBAAoBI,WAAW,WAC9Fj9B,EAAK+9B,SAAAA,QAIoB,QAA7BvmC,EAAAtC,KAAKuoC,gCAAAA,IAAwBjmC,GAAAA,EAAEgH,UAC/BtJ,KAAKuoC,8BAAAA,GAIPvoC,KAAK0nC,iBAAiBvrB,KAAOjU,CAAAA,MAAOlI,KAAKkX,eAAevU,OAAO4Y,EAAGpT,IAAKnI,KAAKkX,eAAevU,OAAO4Y,KAG7FgsB,EAAAl+B,UAAA+gB,aAAP,iBAC+B,QAA7B9nB,EAAAtC,KAAKuoC,gCAAAA,IAAwBjmC,GAAAA,EAAEmmC,yBAG1BlB,EAAAl+B,UAAA04B,cAAP,SAAqBnhB,EAAkBC,IAChC7gB,KAAKuoC,0BAA4BvoC,KAAKuoC,yBAAyBO,SAClE9oC,KAAK6oC,SAAAA,GAEL7oC,KAAKuoC,yBAAyBE,yBAI1BlB,EAAAl+B,UAAAw/B,QAAR,SAAgBE,GAEd,GAAK/oC,KAAK28B,aAAazI,sBAAuBl0B,KAAK28B,aAAaqM,eAKhE,CAAA,IAAMtc,EAAU1sB,KAAKkX,eAAevU,OAAOgqB,MAAQ3sB,KAAKkX,eAAevU,OAAO4Y,EACxE0tB,EAA0Bvc,EAAU1sB,KAAKkX,eAAevU,OAAOiJ,MAGrE,GAAIq9B,EAA0B,GAAKA,GAA2BjpC,KAAKkX,eAAepQ,KAChF9G,KAAKwoC,mBAKP,CAAA,IAAM3b,EAAUvc,KAAK6B,IAAInS,KAAKkX,eAAevU,OAAOC,EAAG5C,KAAKkX,eAAeyB,KAAO,GAElF,GADA3Y,KAAKkX,eAAevU,OAAOkH,MAAMoR,IAAIyR,GAAUwc,SAASrc,EAAS7sB,KAAK4nC,YAAAA,IAClE5nC,KAAK4nC,MAAM1uB,QAIf,CAAA,IAAKlZ,KAAK2nC,oBAAoBI,UAC5B/nC,CAAAA,KAAKwoC,eACLxoC,KAAKuU,KAAKixB,OACVxlC,KAAKuU,KAAKe,UAAYtV,KAAK2gC,QAAQ/rB,OAAOhQ,IAC1C,IAAMukC,EAAcnpC,KAAKgjB,gBAAgBrM,QAAQwyB,YAYjD,OAXIA,GAA+B,UAAhBA,EACjBnpC,KAAKgoC,iBAAiBmB,GAAatc,EAASoc,EAAyBjpC,KAAK4nC,OAE1E5nC,KAAKopC,kBAAkBvc,EAASoc,EAAyBjpC,KAAK4nC,OAEhE5nC,KAAKuU,KAAKsxB,UACV7lC,KAAK8nC,OAAOllC,EAAIiqB,EAChB7sB,KAAK8nC,OAAOvsB,EAAI0tB,EAChBjpC,KAAK8nC,OAAOC,WAAAA,EACZ/nC,KAAK8nC,OAAO57B,MAAQi9B,OACpBnpC,KAAK8nC,OAAOr6B,MAAQzN,KAAK4nC,MAAM7a,YAKjC,IAAI/sB,KAAKuoC,0BAA6BvoC,KAAKuoC,yBAAyBc,gBAKpE,CAAA,GAAIrpC,KAAK8nC,OAEP,CAAA,GAAI9nC,KAAK8nC,OAAOllC,IAAMiqB,GAClB7sB,KAAK8nC,OAAOvsB,IAAM0tB,GAClBjpC,KAAK8nC,OAAOC,YAAc/nC,KAAK2nC,oBAAoBI,WACnD/nC,KAAK8nC,OAAO57B,QAAUlM,KAAKgjB,gBAAgBrM,QAAQwyB,aACnDnpC,KAAK8nC,OAAOr6B,QAAUzN,KAAK4nC,MAAM7a,WACnC,OAEF/sB,KAAKwoC,eAGPxoC,KAAKuU,KAAKixB,OACVxlC,KAAKgoC,iBAAiBhoC,KAAKgjB,gBAAgBrM,QAAQwyB,aAAe,SAAStc,EAASoc,EAAyBjpC,KAAK4nC,OAClH5nC,KAAKuU,KAAKsxB,UAEV7lC,KAAK8nC,OAAOllC,EAAIiqB,EAChB7sB,KAAK8nC,OAAOvsB,EAAI0tB,EAChBjpC,KAAK8nC,OAAOC,WAAAA,EACZ/nC,KAAK8nC,OAAO57B,MAAQlM,KAAKgjB,gBAAgBrM,QAAQwyB,YACjDnpC,KAAK8nC,OAAOr6B,MAAQzN,KAAK4nC,MAAM7a,gBAxB7B/sB,KAAKwoC,sBAzCLxoC,KAAKwoC,gBAoEDjB,EAAAl+B,UAAAm/B,aAAR,WACMxoC,KAAK8nC,SAEH9mC,OAAOilB,iBAAmB,EAC5BjmB,KAAK6hC,YAEL7hC,KAAKqjC,YAAYrjC,KAAK8nC,OAAOllC,EAAG5C,KAAK8nC,OAAOvsB,EAAGvb,KAAK8nC,OAAOr6B,MAAO,GAEpEzN,KAAK8nC,OACHllC,CAAAA,EAAG,EACH2Y,EAAG,EACHwsB,WAAAA,EACA77B,MAAO,GACPuB,MAAO,KAKL85B,EAAAl+B,UAAA6+B,iBAAR,SAAyBtlC,EAAW2Y,EAAWgoB,GAC7CvjC,KAAKuU,KAAKixB,OACVxlC,KAAKuU,KAAKe,UAAYtV,KAAK2gC,QAAQ/rB,OAAOhQ,IAC1C5E,KAAKgjC,oBAAoBpgC,EAAG2Y,EAAGvb,KAAKgjB,gBAAgBrM,QAAQ2yB,aAC5DtpC,KAAKuU,KAAKsxB,WAGJ0B,EAAAl+B,UAAA++B,mBAAR,SAA2BxlC,EAAW2Y,EAAWgoB,GAC/CvjC,KAAKuU,KAAKixB,OACVxlC,KAAKuU,KAAKe,UAAYtV,KAAK2gC,QAAQ/rB,OAAOhQ,IAC1C5E,KAAK4iC,WAAWhgC,EAAG2Y,EAAGgoB,EAAKxW,WAAY,GACvC/sB,KAAKuU,KAAKe,UAAYtV,KAAK2gC,QAAQ9rB,aAAajQ,IAChD5E,KAAKsjC,mBAAmBC,EAAM3gC,EAAG2Y,GACjCvb,KAAKuU,KAAKsxB,WAGJ0B,EAAAl+B,UAAAg/B,uBAAR,SAA+BzlC,EAAW2Y,EAAWgoB,GACnDvjC,KAAKuU,KAAKixB,OACVxlC,KAAKuU,KAAKe,UAAYtV,KAAK2gC,QAAQ/rB,OAAOhQ,IAC1C5E,KAAK+iC,uBAAuBngC,EAAG2Y,GAC/Bvb,KAAKuU,KAAKsxB,WAGJ0B,EAAAl+B,UAAA+/B,kBAAR,SAA0BxmC,EAAW2Y,EAAWgoB,GAC9CvjC,KAAKuU,KAAKixB,OACVxlC,KAAKuU,KAAKg1B,YAAcvpC,KAAK2gC,QAAQ/rB,OAAOhQ,IAC5C5E,KAAKijC,kBAAkBrgC,EAAG2Y,EAAGgoB,EAAKxW,WAAY,GAC9C/sB,KAAKuU,KAAKsxB,WApNgB2D,EAYzB,CAAAC,EAAA,EAAAtC,EAAA3qB,gBACAitB,EAAA,EAAAtC,EAAAxiB,iBACA8kB,EAAA,EAAAtC,EAAA1J,cACAgM,EAAA,EAAArC,EAAAlY,sBAfQwa,GAAb,CAAuCzC,EAAAD,iBAA1B2C,EAAAD,kBAAAA,EAwNb,IAAAxiB,EAAA,oBAcE0iB,EACE7B,EACQ/iB,GAAAhlB,KAAAglB,gBAAAA,EAERhlB,KAAKqpC,iBAAAA,EACDtB,GACF/nC,KAAK6pC,mBAiHX,OA7GEh2B,OAAA+D,eAAWgyB,EAAAvgC,UAAA,gBAAX,WAAiC,QAASrJ,KAAK8pC,oBAAsB9pC,KAAK+pC,iDAEnEH,EAAAvgC,UAAAC,QAAP,WACMtJ,KAAK+pC,iBACP/oC,OAAOgpC,cAAchqC,KAAK+pC,gBAC1B/pC,KAAK+pC,oBAAAA,GAEH/pC,KAAK8pC,qBACP9oC,OAAOoX,aAAapY,KAAK8pC,oBACzB9pC,KAAK8pC,wBAAAA,GAEH9pC,KAAKilB,kBACPjkB,OAAOkkB,qBAAqBllB,KAAKilB,iBACjCjlB,KAAKilB,qBAAAA,IAIF2kB,EAAAvgC,UAAAo/B,sBAAP,WAAA,IAAAnmC,EAAAtC,KACMA,KAAK8oC,WAIT9oC,KAAKiqC,wBAA0B3R,KAAKC,MAEpCv4B,KAAKqpC,iBAAAA,EACArpC,KAAKilB,kBACRjlB,KAAKilB,gBAAkBjkB,OAAOykB,uBAAsB,WAClDnjB,EAAK0iB,kBACL1iB,EAAK2iB,qBAAAA,QAKH2kB,EAAAvgC,UAAAwgC,iBAAR,SAAyBK,GAAzB,IAAAp/B,EAAA9K,UAAA,IAAyBkqC,IAAAA,EAAAC,GAEnBnqC,KAAK+pC,iBACP/oC,OAAOgpC,cAAchqC,KAAK+pC,gBAC1B/pC,KAAK+pC,oBAAAA,GAOP/pC,KAAK8pC,mBAAqB9oC,OAAOqK,YAAW,WAG1C,GAAIP,EAAKm/B,wBACP,CAAA,IAAMG,EAAO/C,GAAkB/O,KAAKC,MAAQztB,EAAKm/B,yBAEjD,GADAn/B,EAAKm/B,6BAAAA,EACDG,EAAO,EAET,YADAt/B,EAAK++B,iBAAiBO,GAM1Bt/B,EAAKu+B,iBAAAA,EACLv+B,EAAKma,gBAAkBjkB,OAAOykB,uBAAsB,WAClD3a,EAAKka,kBACLla,EAAKma,qBAAAA,KAIPna,EAAKi/B,eAAiB/oC,OAAOqpC,aAAY,WAEvC,GAAIv/B,EAAKm/B,wBAGP,CAAA,IAAMG,EAAO/C,GAAkB/O,KAAKC,MAAQztB,EAAKm/B,yBAGjD,OAFAn/B,EAAKm/B,6BAAAA,OACLn/B,EAAK++B,iBAAiBO,GAKxBt/B,EAAKu+B,iBAAmBv+B,EAAKu+B,gBAC7Bv+B,EAAKma,gBAAkBjkB,OAAOykB,uBAAsB,WAClD3a,EAAKka,kBACLla,EAAKma,qBAAAA,OAENoiB,KACF6C,IAGEN,EAAAvgC,UAAAq/B,MAAP,WACE1oC,KAAKqpC,iBAAAA,EACDrpC,KAAK+pC,iBACP/oC,OAAOgpC,cAAchqC,KAAK+pC,gBAC1B/pC,KAAK+pC,oBAAAA,GAEH/pC,KAAK8pC,qBACP9oC,OAAOoX,aAAapY,KAAK8pC,oBACzB9pC,KAAK8pC,wBAAAA,GAEH9pC,KAAKilB,kBACPjkB,OAAOkkB,qBAAqBllB,KAAKilB,iBACjCjlB,KAAKilB,qBAAAA,IAIF2kB,EAAAvgC,UAAAs/B,OAAP,WAEE3oC,KAAK0oC,QAEL1oC,KAAKiqC,6BAAAA,EACLjqC,KAAK6pC,mBACL7pC,KAAKyoC,yBAETmB,EArIA,keC9OA,IAAAU,GAAAC,EAAA,MASaC,EAAAC,wBAEX,CAAA,IAAK,CAAM,CAAA7nC,EAAG2Y,EAAGA,EAAGiM,EAAGA,EAAG7hB,EAAGA,EAAA,IAC7B,IAAQ/C,CAAM2Y,CAAAA,EAAG,EAAGiM,EAAG,EAAG7hB,EAAG,EAAAA,EAC7B,IAAM,IAAK,CAAM,CAAA/C,EAAG4kB,EAAGjM,EAAG5V,EAAG6hB,EAAA,EAC7B7hB,EAAA,IAAQ/C,IAAM2Y,CAAMiM,CAAAA,EAAG,EAAG7hB,EAAG,EAAA6hB,EAC7B,EAAA7hB,EAAM,IAAK,IAAM,CAAM,CAAA/C,EAAG+C,EAAG4V,EAAA,EAC7BiM,EAAA,EAAM7hB,EAAE/C,IAAM2Y,IAAMiM,CAAM7hB,CAAAA,EAAG,EAAA4V,EAC7B,EAAAiM,EAAM,EAAE5kB,EAAG,IAAM,IAAM,CAAM,CAAAA,EAAA,EAC7B2Y,EAAA,EAAMiM,EAAE5kB,EAAG+C,EAAG4V,IAAMiM,IAAM7hB,CAAG,CAAA/C,EAC7B,EAAA2Y,EAAM,EAAE3Y,EAAG,EAAG2Y,EAAG,IAAM,IAAM,CAC7B,CAAA3Y,EAAA,EAAM2Y,EAAE3Y,EAAG4kB,EAAGjM,EAAG5V,EAAG6hB,IAAM7hB,IAAG,CAC7B,CAAA/C,EAAM,EAAEA,EAAG,EAAG2Y,EAAG,EAAGiM,EAAG,IAAM,IAC7B,CAAK,CAAC5kB,EAAEA,EAAG2Y,EAAGA,EAAGiM,EAAGA,EAAG7hB,EAAGA,IAAG,IAC7B,CAAQ/C,CAAAA,EAAG,EAAG2Y,EAAG,EAAGiM,EAAG,EAAG7hB,EAAG,IAC7B,IAAK,CAAM,CAAA/C,EAAG2Y,EAAGA,EAAGiM,EAAGA,EAAG7hB,EAAGA,EAAA,IAC7B,IAAQ/C,CAAM2Y,CAAAA,EAAG,EAAGiM,EAAG,EAAG7hB,EAAG,EAAAA,EAC7B,IAAM,IAAK,CAAM,CAAA/C,EAAG4kB,EAAGjM,EAAG5V,EAAG6hB,EAAA,EAC7B7hB,EAAA,IAAQ/C,IAAM2Y,CAAMiM,CAAAA,EAAG,EAAG7hB,EAAG,EAAA6hB,EAG7B,EAAA7hB,EAAM,IAAK,IAAM,CAAM,CAAA/C,EAAG+C,EAAG4V,EAAA,EAC7BiM,EAAA,EAAM7hB,EAAE/C,IAAM2Y,IAAMiM,CAAM7hB,CAAAA,EAAG,EAAA4V,EAG7B,EAAAiM,EAAM,EAAE5kB,EAAG,IAAM,IAAM,CAAM,CAAAA,EAAA,EAC7B2Y,EAAA,EAAMiM,EAAE5kB,EAAG+C,EAAG4V,IAAMiM,IAAM7hB,CAAG,CAAA/C,EAC7B,EAAA2Y,EAAM,EAAE3Y,EAAG,EAAG2Y,EAAG,IAAM,IAAM,CAC7B,CAAA3Y,EAAA,EAAM2Y,EAAE3Y,EAAG4kB,EAAGjM,EAAG5V,EAAG6hB,IAAM7hB,IAAG,CAAU,CAAA/C,EAAG2Y,EAAGA,EAAGiM,EAAGA,EAAG7hB,EAAGA,EAAA,IACzD,IAAQ/C,CAAM2Y,CAAAA,EAAG,EAAGiM,EAAG,EAAG7hB,EAAG,EAAKA,EAAE/C,GAAM2Y,CAAAA,EAAG,EAAGiM,EAAG,EAAG7hB,EAAG,EAAAA,EACzD,IAAM,IAAK,CAAM,CAAA/C,EAAG4kB,EAAGjM,EAAG5V,EAAG6hB,EAAK,EAAE5kB,EAAG,GAAM,CAAAA,EAAG4kB,EAAGjM,EAAG5V,EAAG6hB,EAAA,EACzD7hB,EAAA,IAAQ/C,IAAM2Y,CAAMiM,CAAAA,EAAG,EAAG7hB,EAAG,EAAK6hB,EAAE5kB,EAAG+C,EAAG4V,GAAMiM,CAAAA,EAAG,EAAG7hB,EAAG,EAAA6hB,EACzD,EAAA7hB,EAAM,IAAK,IAAM,CAAM,CAAA/C,EAAG+C,EAAG4V,EAAA,EAC7BiM,EAAA,EAAM7hB,EAAE/C,GAAM2Y,CAAAA,EAAG,EAAGiM,EAAG,EAAG7hB,EAAG,EAAKA,EAAE/C,IAAM2Y,IAAMiM,CAAM7hB,CAAAA,EAAG,EAAA4V,EACzD,EAAAiM,EAAM,EAAE5kB,EAAG,IAAM,IAAM,CAAM,CAAAA,EAAK,EAAEA,EAAG,EAAG2Y,EAAG,EAAGiM,EAAG,GAAM,CAAA5kB,EAAA,EAGzD2Y,EAAA,EAAaiM,EAAG5kB,EAAG+C,EAAG4V,IAAMiM,IAAG,CAAM,CAAA5kB,EACrC,EAAA2Y,EAAA,EAAciM,EAAE5kB,EAAG+C,EAAG4V,GAAMiM,CAAAA,EAAG,EAAG7hB,EAAG,EAAA6hB,EACrC,EAAA7hB,EAAa,IAAM,KAAG4V,CAAS,CAAA3Y,EAAG+C,EAAG4V,EAAA,EACrCiM,EAAA,EAAa7hB,EAAG/C,IAAM2Y,KAAG,CAAS5V,CAAAA,EAAG,EAAA4V,EACrC,EAAAiM,EAAa,EAAG5kB,EAAG,IAAM,KAAG4kB,CAAS,CAAA5kB,EAAA,EACrC2Y,EAAA,EAAaiM,EAAG5kB,EAAG+C,EAAG4V,IAAMiM,KAAG,CAAM,CAAA5kB,EAGrC,EAAA2Y,EAAa,EAAG3Y,EAAG,EAAG2Y,EAAG,IAAM,KAAG5V,CAClC,CAAA/C,EAAA,EAAa2Y,EAAG3Y,EAAG4kB,EAAGjM,EAAG5V,EAAG6hB,IAAM7hB,KAAG,CACrC,CAAA/C,EAAa,EAAGA,EAAG,EAAG2Y,EAAG,EAAGiM,EAAG,IAAM,KAAA,CACrC,CAAa5kB,EAAGA,EAAG2Y,EAAGA,EAAGiM,EAAGA,EAAG7hB,EAAGA,IAAG,KACrC,CAAc,CAAE/C,EAAG,EAAG2Y,EAAG,EAAGiM,EAAG,EAAG7hB,EAAG,IACrC,KAAA,CAAgB/C,CAAGA,EAAG2Y,EAAGA,EAAGiM,EAAGA,EAAG7hB,EAAGA,EAAA,IAGrC,KAAa,CAAM,CAAG4V,EAAG,EAAGiM,EAAG,EAAG7hB,EAAG,EAAAA,EAAO/C,IAAM2Y,KAAG,CAAS5V,CAAAA,EAAG,EAAA4V,EAEjE,EAAAiM,EAAa,EAAG5kB,EAAG,IAAM,KAAG4kB,CAAS,CAAA5kB,EAAK,EAAEA,EAAG,EAAG2Y,EAAG,EAAGiM,EAAG,IAAM,KAEjE,CAAa,CAAC5kB,EAAEA,EAAG2Y,EAAGA,EAAGiM,EAAGA,EAAG7hB,EAAGA,GAAG,CAAK/C,EAAEA,EAAG2Y,EAAGA,EAAGiM,EAAGA,EAAG7hB,EAAGA,IAAG,KAEjE,CAAgB/C,CAAAA,EAAG,EAAG2Y,EAAG,EAAGiM,EAAG,EAAG7hB,EAAG,GAAO/C,CAAAA,EAAG,EAAG2Y,EAAG,EAAGiM,EAAG,EAAG7hB,EAAG,IAEjE,KAAA,CAAmB,CAAA/C,EAAG2Y,EAAGA,EAAGiM,EAAGA,EAAG7hB,EAAGA,EAAK,GAAK,CAAA/C,EAAG2Y,EAAGA,EAAGiM,EAAGA,EAAG7hB,EAAGA,EAAA,IAEjE,KAAc,CAAQ4V,CAAAA,EAAG,EAAGiM,EAAG,EAAG7hB,EAAG,EAAKA,EAAE/C,GAAM2Y,CAAAA,EAAG,EAAGiM,EAAG,EAAG7hB,EAAG,EAAKA,EAAE/C,IAAM2Y,KAAMiM,CAAM7hB,CAAG/C,EAAA,EAAOA,EAAG,EAAG2Y,EAAG,EAAGiM,EAAG,GAAG7hB,CAAG/C,EAAA,EAGzH2Y,EAAA,EAAAiM,EAAc,EAAE5kB,EAAG,IAAM,KAAM,CAAM,CAAAA,EAErC,EAAA2Y,EAAA,EAAciM,EAAE5kB,EAAG+C,EAAG4V,GAAMiM,CAAAA,EAAG,EAAG7hB,EAAG,EAAA6hB,EAErC,EAAA7hB,EAAa,GAAG/C,CAAGA,EAAG2Y,EAAGA,EAAGiM,EAAGA,EAAG7hB,EAAGA,EAAA,GAErC,CAAA/C,EAAA,EAAc2Y,EAAE3Y,EAAG4kB,EAAGjM,EAAG5V,EAAG6hB,IAAM7hB,KAAG,CAErC,CAAA/C,EAAc,EAAEA,EAAG,EAAG2Y,EAAG,EAAGiM,EAAG,IAAM,KAGrC,CAAa,CAAC5kB,EAAEA,EAAG2Y,EAAGA,EAAGiM,EAAGA,EAAG7hB,EAAGA,IAAG,KAErC,CAAgB/C,CAAAA,EAAG,EAAG2Y,EAAG,EAAGiM,EAAG,EAAG7hB,EAAG,IAErC,KAAA,CAAmB,CAAA/C,EAAG2Y,EAAGA,EAAGiM,EAAGA,EAAG7hB,EAAGA,EAAA,IAErC,KAAc,CAAQ4V,CAAAA,EAAG,EAAGiM,EAAG,EAAG7hB,EAAG,EAAAA,EAErC,IAAa,KAAG/C,CAAS,CAAAA,EAAG4kB,EAAGjM,EAAG5V,EAAG6hB,EAAA,EAGrC7hB,EAAA,IACI/C,KAAG,CAAS4kB,CAAAA,EAAG,EAAG7hB,EAAG,EAAK6hB,EAAE5kB,EAAG+C,EAAG4V,IAAMiM,KAAM7hB,CAChD,CAAE/C,EAAG,EAAG2Y,EAAG,EAAGiM,EAAG,EAAG7hB,EAAG,IAAO/C,KAAG,CAAS4kB,CAAAA,EAAG,EAAG7hB,EAAG,EACnD6hB,EAAE5kB,EAAG+C,EAAG4V,IAAMiM,KAAM7hB,CAAQ,CAAE/C,EAAG,EAAG2Y,EAAG,EAAGiM,EAAG,EAAG7hB,EAAG,IACjD/C,KAAG,CAAS4kB,CAAAA,EAAG,EAAG7hB,EAAG,EAAK6hB,EAAE5kB,EAAG+C,EAAG4V,GAAMiM,CAAAA,EAAG,EAAG7hB,EAAG,EAAA6hB,EAGrD,EAAA7hB,EAAa,GACT/C,CAAGA,EAAG2Y,EAAGA,EAAGiM,EAAGA,EAAG7hB,EAAGA,EAAA,GAAO/C,CAAGA,EAAG2Y,EAAGA,EAAGiM,EAAGA,EAAG7hB,EAAGA,EAAA,GACjD/C,CAAGA,EAAG2Y,EAAGA,EAAGiM,EAAGA,EAAG7hB,EAAGA,EAAA,GAAO/C,CAAGA,EAAG2Y,EAAGA,EAAGiM,EAAGA,EAAG7hB,EAAGA,EAAA,GACjD/C,CAAGA,EAAG2Y,EAAGA,EAAGiM,EAAGA,EAAG7hB,EAAGA,EAAA,GAAO/C,CAAGA,EAAG2Y,EAAGA,EAAGiM,EAAGA,EAAG7hB,EAAGA,EAAA,IAC9C,KAAG4V,CAAS,CAAA3Y,EAAG+C,EAAG4V,EAAK,EAAE3Y,EAAG,EAAG2Y,EAAG,GAAM,CAAA3Y,EAAG+C,EAAG4V,EAAA,EAGrDiM,EAAA,EAAa7hB,EAAG/C,GAAG,CAAG2Y,EAAG,EAAGiM,EAAG,EAAG7hB,EAAG,EAAAA,EAAO/C,GAAG,CAAG2Y,EAAG,EAAGiM,EAAG,EAAG7hB,EAAG,EAAAA,EAAA,GASnE,CAAA/C,EAAM8nC,EAAgFnvB,EAEpF,EAAAiM,EACE,EAAC7hB,EAAG,GAAM,CAAA/C,EACV,EAAC2Y,EAAG,EAAGiM,EAAG,EACV7hB,EAAC,GAAM,CAAA/C,EAAG,EACV2Y,EAAC,EAAGiM,EAAG,EAAG7hB,EAAA,GAEZ,CAAA/C,EACE,EAAC2Y,EAAG,EACJiM,EAAC,EAAG7hB,EACJ,IAAI,KACH,CAAG,CAEN/C,EAAA,EAAK2Y,EACF,EAAGiM,EAAA,EACH7hB,EAAG,GACJ,CAAC/C,EAAG,EAAA2Y,EACH,EAAGiM,EAAA,EAAA7hB,EA0CK,KAAAglC,IAAAA,GAAAA,CAAAA,IAAAA,CAAAA,CAAAA,EAAsI,EAEjJ,EAAA,GAAG,CAAA,EAAA,EAAI,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAoC,EAAA,EAC3C,IAAG,IAAA,CAAI,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAoC,CAAA,EAC3C,IAAG,IAAA,CAAI,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAoC,CAAA,EAC3C,KAAGH,EAAAG,sBAAwC,CAAA,KAC3CC,EAAG,GAAIA,EAAA,GAAA,cAAAA,GAAA,KAAAC,EACP,GAAGA,EAAA,GAAI,cAAAA,GAAA,KAAAC,EAAA,GAAsCA,EAC7C,GAAA,cAAOA,GAAA,KAAAC,EAAA,GAAAA,EAAA,GAAqC,cACrCA,GAAA,KAAAC,EAAA,GAAAA,EAAA,GAAA,sBACAA,GAAA,KAAAC,EAAA,GAAAA,EAAA,GAAmC,sBACnCA,GAAA,KAAAC,EAAA,GAAAA,EAAmC,GAC1C,qBAAOA,GAAA,KAAAC,EAAA,GAAkCA,EAAA,GACzC,qBAAOA,GAAA,KAAAC,EAAA,GAAkCA,EACzC,GAAA,qBAAOA,GAAA,KAAAC,EAAA,GAAAA,EAA8B,GACrC,qBAAOA,GAAA,KAAAC,EAAA,GAAAA,EAAA,GAAA,qBACAA,GAAA,KAAAC,EAAA,GAAAA,EAAA,GAAA,qBACAA,GAAA,KAAAC,EAAA,GAAAA,EAAA,GAAA,2BACAA,GAAA,KAAAC,EAAA,GAAAA,EAAA,GAAA,2BACAA,GAAA,KAAAC,EAAA,GAAAA,EAAA,GAAA,2BACAA,GAAA,KAAAhwB,EAAA,GAAAA,EAAA,GAAA,2BACAA,GAAA,KAAAiwB,EAAA,GAAAA,EAAA,GAAA,2BACAA,GAAA,KAAAC,EAAA,GAAAA,EAAA,GAA4B,2BAC5BA,GAAA,KAAArkB,EAAA,GAA4BA,EAAA,GACnC,2BAAOA,GAAqC,KAC5C9X,EAAG,GAAIA,EAAA,GAAA,2BACAA,GAAA,KAAA+X,EAAA,GAAAA,EAAA,GAAoC,0BACpCA,GAAA,KAAAC,EACP,GAAGA,EAAA,GAAI,0BACPA,GAAG,KAAAC,EAAI,GAAAA,EAAA,GAAA,eACJA,GAAA,KAAI9kB,EAAA,GAAAA,EAAA,GAAA,eACJA,GAAI,KAAA+kB,EAAA,GAAAA,EAAA,GAAA,eAGJA,GAAI,KAAgBC,EAAA,GAACikB,EAAIC,GAAO,eAAMlkB,GAAKkkB,KAAEjkB,EAAA,GAAYikB,EAAAA,GAAE,eAAcjkB,GAAA,KAAOC,EAAKgkB,GACxFhkB,EAAA,GAAG,eAAoBA,GAAA,KAAKgkB,EAAO,GAAA/jB,EAAA,GAAI,eAAcA,GAAK8jB,KAAE7jB,EAAA,GAAOA,EAAK6jB,GAAE,eAAc7jB,GAAA,KAAI+jB,EAC5F,GAAGA,EAAI,GAAA,SAAgBzpC,EAACupC,GAAIC,MAAO,OAAA,GAAAhhC,GAAA,QAAkBghC,GAAEhhC,GAAA,QAAYghC,GAAEhhC,GAAA,QAAaghC,GAAEhhC,IAAAihC,GAAO,KAAKD,EAAI,GACpG7jB,EAAA,GAAG,SAAoB3lB,EAAAwI,GAAA,MAAKghC,KAAO,GAAAxpC,GAAA,QAAW,GAAAA,GAAA,QAAc,GAAAA,GAAA,QAAA,GAAcA,GAAKupC,MAAE5jB,GAAA,KAAQ+jB,EAAO,GAAAA,EAAI,GACpG,SAAO1pC,EAAAwI,GAAgB,MAAA,cAAY,GAAAA,GAAA,QAAa,GAAAA,GAAK,SAAO,GAAIA,GAAKghC,QAAO,GAAKD,IAAEG,GAAA,KAAAC,EAAcH,GAAEG,EAAA,GAAK,SAAO3pC,EAAIwI,GAAKghC,MAAE,KAAK,GAAKD,GAAE,QACtI,GAAAvpC,GAAG,eAAoB,GAACupC,GAAIC,SAAO,GAAAxpC,GAAM,MAAO2pC,GAAA,KAAAC,EAAaJ,GAAEI,EAAA,GAAA,SAAa5pC,EAAKwpC,GAAE,MAAA,OAAaA,GAAIhhC,GACpG,MAAG,GAAAxI,GAAI,KAAgB,GAAAwI,GAAA,MAAY,GAAAxI,GAAA,UAASupC,GAAE/gC,GAAA,MAAY+gC,GAAEvpC,GAAA,KAAA,GAAAwI,GAAA,MAAmB+gC,GAAEvpC,GAAA,MAAQ4pC,GAAKL,KAAEM,EAAI,GACpGA,EAAA,GAAG,SAAoB7pC,EAAAwI,GAAA,MAAKghC,OAAO,GAAAhhC,GAAA,SAAa,GAAAA,GAAK,cAAgBghC,GAAEhhC,GAAA,SAAY,GAAAA,IAAAqhC,GAAS,KAAKL,EAAE,GAAKxrB,EAAKurB,GAAE,SAASC,EAAEhhC,GAAA,MAAU+gC,KAAE,GAAAvpC,GAAI,QACvI,GAAIA,GAAA,eAAqBwpC,GAAOxpC,GAAA,SAAA,GAAAA,GAAa,MAAOge,GAAA,KAAA8rB,EAAYN,GAAEM,EAAA,GAAA,SAAe9pC,EAAAwI,GAAA,MAAYghC,OAChG,GAAAhhC,GAAG,MAAI,GAAgBxI,GAAA,KAAA,GAAKwpC,GAAO,MAAA,GAAAxpC,GAAA,UAAeupC,GAAE/gC,GAAA,MAAQ,GAAK+gC,GAAE,KAAA,GAAO/gC,GAAK+gC,MAAE,GAAAvpC,GAAQ,MAAO8pC,GAAA,KAAIC,EACpG,GAAGA,EAAI,GAAA,SAAgB/pC,EAACupC,GAAIC,MAAO,cAAWA,GAAEhhC,GAAA,QAAY,GAAAA,GAAI,SAAO,GAAKA,GAAK+gC,QAAE,GAAS/gC,IAAKghC,GAAE,KAAAQ,EAAUT,GAAES,EAAA,GAAI,SAAOhqC,EAAKwI,GAAK+gC,MAAE,WACnI,GAAAvpC,GAAI,SAAgB,GAAAA,GAAKwpC,QAAO,GAAAxpC,GAAA,SAAa,GAAAA,GAAA,MAAawpC,GAAE,KAAAS,EAAA,GAAAA,EAAa,GAAKT,SAAExpC,EAAQwI,GAAKghC,MAAI,OACjG,GAAAhhC,GAAI,MAAgB,GAAAxI,GAACupC,KAAW,GAAA/gC,GAAA,MAAA,GAAAxI,GAAU,UAAO,GAAAwI,GAAQ,MAAO,GAAAxI,GAAO,KAAKupC,GAAE/gC,GAAA,MAAQ,GAAK+gC,GAAE,MAAIU,GACpG,KAAGC,EAAI,GAAAA,EAAgB,GAAA,SAAKV,EAAOhhC,GAAA,MAAA,OAAWghC,GAAEhhC,GAAA,SAAY,GAAAA,GAAI,cAAiB+gC,GAAE/gC,GAAA,SAAcghC,GAAEhhC,IAAA0hC,GAAK,KAAKX,EAAE,GAAIY,EAAKX,GAAE,SAAUD,EAAE/gC,GAAA,MACtI,WAAO,GAAAxI,GAAgB,SAAKwpC,GAAOxpC,GAAA,QAAA,GAAAA,GAAA,SAA+B,GAAKwpC,GAAE,MAAAW,GAAO,KAAKX,EAAE,GAAAY,EAAQ,GAAKZ,SAAExpC,EAAOwI,GAAKghC,MAAI,OACnH,GAAAhhC,GAAI,MAAgB,GAAAxI,GAACupC,KAAW,GAAA/gC,GAAA,MAAI,GAAK+gC,GAAE,UAAYA,GAAE/gC,GAAA,MAAO,GAAK+gC,GAAE,KAAA,GAAO/gC,GAAK+gC,MAAE,GAAAvpC,GAAO,MAAOoqC,GAAA,KAAAC,EAAW,GACjHA,EAAA,GAAG,SAAoBrqC,EAAAwI,GAAA,MAAKghC,oBAAkB,GAAAhhC,GAAA,QAAc,GAAAA,GAAA,SAAcghC,GAAEhhC,GAAA,QAAY,GAAAA,IAASghC,GAAE,KAAAc,EAAK,GAAOA,EAAA,GAAA,SAAcd,EAAEhhC,GAAA,MAAU+gC,KAAE,GAAIvpC,GAAKwpC,QAAE,GAAKxpC,GAAKupC,QAAM,GACtKvpC,GAAA,QAAO,GAAgBA,GAAA,QAAKwpC,GAAOxpC,GAAA,aAAAsqC,GAAA,KAAAC,EAA8B,GAAOA,EAAA,GAAA,SAAaf,EAAEhhC,GAAA,MAAO,KAAO,GAAAxI,GAAA,QAAawpC,GAAIxpC,GACtH,UAAO,GAAgBwI,GAAA,MAAC+gC,GAAIC,GAAO,KAAA,GAAAhhC,GAAA,MAAU,GAAK+gC,GAAE,UAAQ,GAAKA,GAAE,MAAO,GAAKA,GAAE,KAAA,GAAO/gC,GAAK+gC,MAAE,GAAAvpC,GAAO,MAAOuqC,GAAA,KAAIC,EACjH,GAAGA,EAAA,GAAI,SAAgBxqC,EAAAwI,GAAKghC,MAAO,mBAAW,GAAOhhC,GAAK+gC,SAAE,GAAA/gC,GAAS,QAAO,GAAKA,GAAK+gC,SAAM,GAAKC,IAAEgB,GAAK,KAAKjB,EAAE,GAAAkB,EAAA,GAAS,SAAOzqC,EAAKwI,GAAK+gC,MAAE,WAAW,GAAKvpC,GAAKupC,SAAM,GACtKvpC,GAAA,QAAO,GAAAA,GAAgB,QAACupC,GAAIC,GAAO,QAAA,GAAMxpC,GAAKwpC,MAAEiB,GAAA,KAAOC,EAAO,GAAAA,EAAA,GAAO,SAAO1qC,EAAAwI,GAAO,MAAO,KAAA,GAAQxI,GAAKwpC,QAAE,GAAAxpC,GAAQ,UAC9G,GAAIwI,GAAA,MAAgB,GAAAxI,GAACupC,KAAW,GAAA/gC,GAAA,MAAA,GAAAxI,GAAA,UAAiCupC,GAAE/gC,GAAA,MAAQ,GAAK+gC,GAAE,KAAA,GAAO/gC,GAAK+gC,MAAE,GAAAvpC,GAAQ,MAAO0qC,GAAA,KAAIC,EACtH,GAAGA,EAAA,GAAI,SAAgB3qC,EAAAwI,GAAC+gC,MAAW,OAAA,GAAA/gC,GAAM,QAAO,GAAAA,GAAO,QAAO,GAAAA,GAAO,QAAO,GAAKA,GAAK+gC,SAAM,GAAKC,GAAE,UAAUD,GAAE,KAAAqB,GAAS,GAAKpB,GAAE,GAAA,SAAYxpC,EAAAwI,GAAI,MAAO,iBAAgB,GACtKxI,GAAA,SAAO,GAAAA,GAAgB,QAACupC,GAAIC,GAAO,SAAA,GAAAxpC,GAAA,MAAa4qC,IAAO,KAAAC,GAAO,GAAKrB,GAAE,GAAA,SAAcxpC,EAAAwI,GAAA,MAAYghC,OAAE,GAAAhhC,GAAO,QAAS,GACjHA,GAAG,QAAI,GAAAA,GAAgB,MAAA,GAAKghC,GAAO,KAAA,GAAAhhC,GAAA,MAAA,GAAAxI,GAA4B,UAAO,GAAAwI,GAAQ,MAAO,GAAAxI,GAAA,KAAYupC,GAAE/gC,GAAA,MAAQ,GAAK+gC,GAAE,MAAIsB,IACtH,KAAAC,GAAG,GAAIA,GAAgB,GAAA,SAAKtB,EAAOhhC,GAAA,MAAA,cAAa,GAAAA,GAAO,QAAO,GAAAA,GAAO,QAAO,GAAKA,GAAK+gC,QAAM,GAAKC,GAAE,QAAUD,GAAE/gC,IAAAsiC,IAAA,KAASC,GAAO,GAAAA,GAAK,GAAKxB,SAAWC,EAAAA,GAAE,MAAK,iBAC3J,GAAGxpC,GAAA,SAAoB,GAAAA,GAAA,QAAY,GAAAA,GAAA,SAAA,GAAAA,GAAA,MAAmCwpC,IAAE,KAAAwB,GAAO,GAAOA,GAAA,GAAA,SAAchrC,EAAAwI,GAAA,MAAYghC,OAChH,GAAAhhC,GAAG,QAAI,GAAgBA,GAAA,QAAKghC,GAAOhhC,GAAA,MAAA,GAAAxI,GAAA,KAAA,GAA4BwI,GAAK+gC,MAAE,GAAAvpC,GAAO,UAAO,GAAOwI,GAAK+gC,MAAE,GAAAvpC,GAAO,KAAO,GAAAwI,GAAI,MACpH,GAAGxI,GAAA,MAAIgrC,IAAgB,KAAAC,GAAC1B,GAAW0B,GAAA,GAAA,SAAMjrC,EAAKwpC,GAAE,MAAK,mBAAkB,GAAKhhC,GAAK+gC,QAAE,GAAA/gC,GAAS,QAAO,GAAKA,GAAK+gC,QAAM,GAAKC,IAAEyB,IAAA,KAAKC,GAAO,GAAAA,GAAA,GAAS,SAAOlrC,EAAKwI,GAAK+gC,MAAE,iBAAqBA,GAAEvpC,GAAA,QAAS,GAAKwpC,GAAE,QAAUD,GAAEvpC,GAAA,QAAW,GAAAA,GAAK,MAAOkrC,IAAA,KAAIC,GAGhP,GAAGA,GAAI,GAAA,SAAgBnrC,EAAAwI,GAAA,MACvB,OAAG,GAAIA,GAAA,MAAgB,GAAAxI,GAAA,KAAW,GAClCwI,GAAA,MAAG,GAAIxI,GAAA,UAAgB,GAAAwI,GAAA,MAAA,GAAqBxI,GAG5C,KAAG,GAAAwI,GAAI,MAAA,GAAAxI,GAAA,UAAsE,GAAAwI,GAAA,MAAA,GAAAxI,GAAA,KAC7E,GAAAwI,GAAG,MAAI,GAAAxI,GAAA,UAAA,GAAAwI,GAAsE,MAAA,GAAAxI,GAAA,KAAA,GAAqCwI,GAClH,MAAG,GAAAxI,GAAI,MAAAmrC,IAAA,KAAAC,GAAA,GAAsEA,GAAA,GAAA,YAAmCA,IAChH,KAAAC,GAAG,GAAIA,GAAA,GAAA,YAAAA,IAAsE,KAAAC,GAAA,GAAAA,GAAA,GAAkC,sBACxGA,IAAA,KAAAC,GAAsE,GAAAA,GAAA,GAAA,eAC7EA,GAAA,GAAG,eAAIA,IAAA,KAAAC,GAAsE,GAAAA,GAAA,GAAA,eAC7EA,GAAG,GAAA,eAAIA,IAAA,KAAAC,GAAsE,GAAAA,GAAA,GAAA,eAC7EA,GAAG,GAAA,eAAIA,IAAA,KAAsEC,GAAA,GAAAA,GAAA,GAAA,eAC1EA,GAAA,GAAI,eAAAA,IAAA,KAAsEC,GAAA,GAAAA,GAAA,GAAA,eAC1EA,GAAI,GAAA,eAAAA,IAAsE,KAAAC,GAAA,GAAAA,GAAA,GAAA,eAC1EA,GAAI,GAAA,eAAAA,IAAsE,KAAAC,GAAA,GAAAA,GAAA,GAAmC,eACzGA,GAAA,GAAA,eAAsEA,IAAA,KAAAC,GAAA,GAAAA,GAAkC,GAAA,eACxGA,GAAA,GAAA,eAAsEA,IAAA,KAAAC,GAAA,GAAoCA,GAAA,GACjH,eAAOA,GAAA,GAAA,eAAAA,IAAsE,KAAAC,GAAA,GAAAA,GAAA,GAAkC,eACxGA,GAAA,GAAA,eAAAA,IAAA,KAAsEC,GAAA,GAAAA,GAAA,GAAA,eAC1EA,GAAI,GAAA,eAAAA,IAAsE,KAAAC,GAAA,GAAAA,GAAA,GAAkC,eACxGA,GAAA,GAAA,eAAsEA,IAAA,KAAAC,GAAA,GAAAA,GAAA,GAAA,cAC1EA,GAAA,GAAI,eAAAA,IAAA,KAAsEC,GAAA,GAAAA,GAAA,GAAA,sBAC1EA,GAAI,GAAA,eAAAA,IAAsE,KAAAC,GAAA,GAAAA,GAAA,GAAmC,qBACzGA,GAAA,GAAA,eAAsEA,IAAA,KAAAC,GAAA,GAAAA,GAAA,GAAkC,eACxGA,GAAA,GAAA,cAAAA,IAAA,KAAsEC,GAAA,GAAAA,GAAA,GAAA,eAC1EA,GAAI,GAAA,qBAAsEA,IAAA,KAAAC,GAAA,GAAkCA,GAAA,GAC/G,eAAOA,GAAA,GAAA,sBAAsEA,IAAA,KAAAC,GAAA,GAAgCA,GAC7G,GAAG,cAAIA,GAAA,GAAA,eAAsEA,IAAA,KAAAC,GAAA,GAAAA,GAAmC,GAChH,qBAAOA,GAAA,GAAA,eAAsEA,IAAA,KAAAC,GAAA,GAAAA,GAAmC,GAChH,qBAAOA,GAAA,GAAA,eAAsEA,IAAA,KAAAC,GAAA,GAAoCA,GACjH,GAAA,eAAOA,GAAA,GAAA,cAAsEA,IAAA,KAAAC,GAAA,GAAkCA,GAC/G,GAAG,eAAIA,GAAA,GAAA,qBAAsEA,IAAA,KAAqCC,GAClH,GAAGA,GAAI,GAAA,eAAAA,GAAsE,GAAA,qBAAAA,IAAmC,KAChHC,GAAG,GAAAA,GAAI,GAAA,sBAAsEA,GAAA,GAAA,eAAAA,IAAoC,KACjHC,GAAG,GAAIA,GAAA,GAAA,qBAAsEA,GAAA,GAAA,eAAmCA,IAChH,KAAAC,GAAG,GAAIA,GAAA,GAAA,eAAAA,GAAsE,GAAA,cAAAA,IAAoC,KAAAC,GAC9G,GAAAA,GAAI,GAAA,cAAAA,GAAsE,GAAA,eAAAA,IAAkC,KAC/GC,GAAG,GAAIA,GAAA,GAAA,eAAsEA,GAAA,GAAA,qBAC7EA,IAAG,KAAAC,GAAI,GAAAA,GAAA,GAAA,eAAsEA,GAAA,GAAA,sBAC1EA,IAAA,KAAIC,GAAA,GAAAA,GAAA,GAAA,qBAAsEA,GAAA,GAAA,eAC1EA,IAAI,KAAAC,GAAgB,GAAAA,GAAA,GAAA,qBAAsDA,GAAA,GAAA,eAC7EA,IAAG,KAAIC,GAAgB,GAAAA,GAAA,GAAA,eAAAA,GAAsD,GAAA,cAAAA,IAAoC,KACjHC,GAAG,GAAAA,GAAI,GAAA,cAAAA,GAAsE,GAAA,eAAkCA,IAC/G,KAAAC,GAAG,GAAIA,GAAA,GAAgB,eAAAA,GAAA,GAAA,qBAAsDA,IAAkC,KAAAC,GAC5G,GAAAA,GAAI,GAAA,eAAgBA,GAAA,GAAA,qBAAsDA,IAAA,KAAAC,GAC7E,GAAGA,GAAA,GAAI,2BAAsEA,GAAA,GAAA,eAC7EA,IAAG,KAAIC,GAAA,GAAAA,GAAA,GAAA,2BAAsEA,GAAA,GAAA,eAC1EA,IAAA,KAAIC,GAAA,GAAAA,GAAA,GAAA,cAAsEA,GAAA,GAAA,cAAAA,IAAiC,KAC9GC,GAAG,GAAAA,GAAI,GAAA,2BAAsEA,GAAA,GAAA,eAAAA,IAAmC,KAChHC,GAAG,GAAIA,GAAA,GAAA,2BAAsEA,GAAA,GAAA,eAAoCA,IACjH,KAAAC,GAAG,GAAIA,GAAA,GAAA,cAAsEA,GAAA,GAAc,cAAAA,IAAA,KAAAC,GAAiD,GAC5IA,GAAA,GAAG,sBAAIA,GAAsE,GAAA,qBAAcA,IAAA,KAAAC,GAC3F,GAAAA,GAAG,GAAA,qBAAIA,GAAsE,GAAA,qBAAcA,IAAA,KAAkDC,GAC7I,GAAGA,GAAA,GAAI,qBAAsEA,GAAA,GAAc,qBAAAA,IAAA,KAAmDC,GAG9I,GAAGA,GAAI,GAAA,qBAAAA,GAAA,GAAA,sBACAA,IAAA,KAAAC,GAAA,GAAAA,GAAA,GAAA,eAA4CA,GACnD,GAAG,2BAAIA,IAAA,KAAAC,GAAA,GAAAA,GAAA,GAAA,eAAAA,GAA8C,GAAA,2BAC9CA,IAAA,KAAAC,GAAA,GAAAA,GAAA,GAAA,eAAAA,GAAA,GAAA,2BACAA,IAAA,KAAAC,GAAA,GAAAA,GAAA,GAAA,eAAAA,GAAA,GAAA,2BACJA,IAAI,KAAAC,GAAA,GAAAA,GAAA,GAAA,8BAAAA,IAAA,KAAAC,GAAA,GAAAA,GAA6C,GACpD,8BAAOA,IAAA,KAAAC,GAAA,GAA0CA,GACjD,GAAA,wDACGA,IAAI,KAAAC,GAAA,GAAAA,GAAA,GAAA,wDACJA,IAAI,KAAAC,GAAA,GAAAA,GAAA,GAAA,8DACAA,IAAA,KAAAC,GAAA,GAAAA,GAAA,GAAA,8DACAA,IAAA,KAAAC,GAAA,GAAAA,GAAA,GAAA,8BAGPA,IAAG,KAAIC,GAAgB,GAAAA,GAAA,GAAA,8BACAA,IAAA,KAAAC,GAAA,GAAAA,GAAkB,GACzC,wDACOA,IAAgB,KAAAC,GAAA,GAAAA,GAAkB,GAAA,wDAeV/G,IAAAA,KAAAA,GAAAA,GAAAA,GAAwBjnC,GACvD,uDA4BmCV,IAAQsC,KACzCqsC,GAAYC,GAAetsC,GACXmyB,GAAkB,uDA7ByBoa,IAA0Bna,KAAAA,GAIvF,GAA0BkT,GAA4BlnC,GACtD,mBAqCFouC,IAEEF,KAEAC,GAEAna,MAEIqa,GAAaC,mBAEE3yB,IACjB2yB,KAAepyB,GAAoBmyB,GAErCE,GAAA,GAAkB19B,mBACO09B,IAAA,KAAAC,GAAd18B,GACT08B,GAAA,GAAM,mBAAUA,KAAAxH,EAAAzG,kBAAuC,SAEhC9oB,EAAAA,EAAI3F,EAAAA,EAC7B28B,EAAAC,GAAc,IACZC,EAAM1kC,EAAQikC,wBAEInrC,GAAAA,GAAAA,EAAAA,OAASC,SAAclE,EAAAwI,EAAAyE,EAAAnK,EAAA6L,EACzCmhC,GAAU3kC,IAAQA,IACRtB,EAAAA,EAAAA,EAAAA,EAASA,OACbkmC,IAAS,CAAA,IAAAzQ,EAAAA,EAAAA,GAAAA,EAAAA,EAAawQ,EAAU99B,EAAAA,EAAAA,EAAAA,EAAAA,SAAW/E,EAC3C+iC,EAAY1vC,EAAAY,EAAI+uC,EAAAA,EAAAA,EAAAA,EAAAA,EAAU9kC,EAAOtB,EAGnCoD,EAAAA,EAAAA,IAPuB/I,CAQvBgJ,EAAAA,EAAAA,EAAAA,EAACyiC,EACDxiC,IAAAA,EAAC,IACDtK,EAAAA,GAACqtC,GACL,GAAIl9B,EAAU7R,OAAAA,SACZ8L,EAAI2B,EAAAA,EAAAA,EAAAA,EAASoE,GAAUvS,IAAAA,EAAOoC,EAAGstC,GAAIx3B,IACrCzL,GAAI0B,IAAAA,EAAAA,IAAmBnO,IAAAA,GAAO2c,IAAG5U,EAAI3F,IACrCsK,IAAIyB,EAAAA,EAAAA,UAAmBnO,GAAU,iBACnBD,EAAS,MAAKoO,IAAAA,MAAmBnO,8BAC5BU,EAAAA,KAAAA,IAAWiC,EAAAP,EAAA8V,IAG9BzX,GAAM,IAAIoE,EAAAA,CAAAA,IAAMjC,EAAAmF,EAAA,GAAAhI,OAAA8C,EAAAkF,EAAAhI,OAAA+C,EAAAU,SAAAC,cAA+C,UAAAX,EAAA4H,MAAA9H,EAAAE,EAF7D0J,OAAwBqG,EAAAA,IAAAA,GAAAA,EAAaN,GAAUxS,cAAY+S,EAAMvB,WAAS,OAAAhS,EAAAA,IAAKiwC,UAAAG,EAAAA,GAAWpwC,OAAAA,EAAzF0R,OAAExE,EAAGC,OAAC,EAAG8L,OAAA,EAKT,GAAIA,EAAI9X,WACX,KAAK2jB,EAAIxkB,SAAkBA,EAAAA,OACf6S,EAAuB,GAAjB8F,IAAY3Y,EAAAA,SAClB6S,EAAuB1S,OAALH,EAAS,GAAK4M,IAChCiG,EAAAA,SAAUhI,EAAQ7K,OAC5B0vC,EAAU78B,GAAAA,IAAuB8F,EAAjBA,EAAI9N,OAAsBikC,GAAen2B,SAAa/X,EAAJ2B,OAG/DwtC,EAAAA,GAAAA,KAAaL,MAAc,CAClCM,IAAUpvC,EAAAC,WAAAm+B,QAAiBiR,MAAAA,IAAAA,MAAyB,sCAIlDr9B,EAAAA,gCAxFEs9B,GAAuB7jC,EAAA07B,EAAAA,UAAAA,EAAAA,EAAAA,OAAsBnnC,GACnDqS,MAAIi9B,KAkINh9B,KAAA,SAIE67B,GACApa,OAGIgS,WAAcl1B,OAAIiB,GAAAA,EACtBrG,EAAA,GAAyCO,EAAAP,EAAA,GAAAsM,EAAA1H,EAAAA,GAAAA,IAAOk/B,IAAAA,EAAQrB,EAAAA,EAAf9rC,EAAAyhB,IAAA,IAAA,IAAgCC,EAA9D,EAAAA,EAAA3hB,EAAA2hB,IAAC2e,EAAUxwB,KAAEu9B,GAAY3rB,EAAA1hB,EAClC0O,IAAIyxB,EAAAA,EAAAA,KAAAA,GACA5C,EAAAA,EAAAA,GAAAA,GAAYliC,EAAAA,EAAAA,KAAOilB,GAAAA,EAAAA,EAAAA,GAAAA,GAAAA,EAAmBjQ,EAAAA,KAAO9E,GAAAA,EAAAA,EAAAA,GAAS+0B,GAS1Dn7B,EAAAuc,GARAC,IAQ0B,IAAA/L,GAPE2L,EAAAyrB,aAAAxrB,EAAjB6rB,EAGYA,GAFVttC,GAAA,EACA4kC,GAAM9S,cAKgCyb,EAAAJ,cAAzBhtC,EAAA,OAAfqtC,EAAWxzB,IACdzb,EAAOivC,GAAYD,EACnBptC,UACNH,EAAKG,EAIL2P,SAAmCI,EAAAA,EAAAA,EAAAA,GA9FvBnS,CA8FiC0vC,EAAGt9B,EAAAA,EAAAA,EAAMo8B,EAAAC,IAAA,EAC5C,IAAOkB,EAAK5I,EAAAG,sBAGiDgH,GAPrEpvC,QAAQkC,IAAAA,SAAMnC,EAAAwI,EAAAyE,EAAAnK,EAAA6L,EAAA0E,GAAArT,EAAAinC,YAAAjnC,EAAAgT,UAAgD,IAAA,IAS9D+9B,EAAAA,EAAAA,EAAAA,OACAC,QAAAA,GAnKej/B,EAAKy+B,EAAsBS,OAAmC/b,IAC1E,CAAA,IA2BXh0B,EAAMsuC,EAAAA,GAAoFpsC,EAAIyZ,EAAAA,GA2I9FxZ,EAAAnC,EAAA,GAAAlB,EAASkxC,YACPlxC,EAAA4gC,UADyCliC,OAAAilB,iBACpB9T,OAAWH,SAG5ByhC,GAAsD,IACrD,IAAA7tC,EAAA,EAACyO,GAA+B++B,mBAAuBM,EAAAA,EAAAA,IAAmB,IAAIN,EAAKniC,GAAImiC,GAAKv9B,MAAau9B,KAASA,EAAKvtC,EAAA/C,OACvH8C,IAAA,CAAA,IAAgCwtC,EAAAA,EAAmBxtC,GAAAuhB,EAAAD,EAAA7S,GAAIs/B,EAAAA,GAAOP,GAAK,GAAIA,EAAK,CAAA,IACjFp/B,EAAKkT,EAAAtR,UAAgCw9B,GAAmBv9B,MAAAxB,KAAIu/B,EAAAA,IAAY5/B,EAAIo/B,IAAKhsB,EAAA9kB,EAGnFuxC,GAAA7/B,EAAA/C,EAAA0E,EAASm+B,EAAAA,SAAsFnC,QACvFhhC,MAAcmF,4CAA0B5E,EAAS5O,KAEvDA,EAAA+wC,SAAWvwC,EAASwwC,aA3BN7uC,CA4BFmD,EAAAA,EAAMmsC,EAAAC,EAAA/B,EAAAC,IAAA,IAAA,IAAAO,GAAA,IAAAtzB,aAGlB80B,GAAK3xC,EAAAwI,EAAIlI,GAAOA,YAAWE,IAEzB6N,IAAO/N,EAAMoqB,GAGK1c,KAAP1N,IAAAA,KACFA,IAAW0N,EAAAA,GAAKC,GAAAA,IAAMI,GAAO/N,CAAK2kB,EAAA,SAAuBjlB,EAGlEqO,GAAO/N,OAGTN,EAAKoxC,cAAsB5wC,EAAAA,GAAQyY,EAAAA,GAEjC5K,EAAO4K,GAAAA,EAAMuR,GAGKhiB,EAAd6F,GAAO4K,EAAAA,KACFA,EAAKi4B,SAAWjjC,EAAAA,GAAMI,OAAYrO,EAAOqxC,OAAiB7oC,EAGnE6F,GAAO4K,EAAAA,KAGTqM,EAAA,wFC5iBFtlB,GAAA,OAAAowC,WAGEpwC,IAAA4O,SACElR,MAAKk0C,GAAQv+B,EAuBjB7S,OApBS,EAAA,MAAA,IAAA+sB,MAAP,qCAEQ7vB,IAAKk0C,IAAAA,EAAMpxC,EAAAA,EAAAA,EAAAA,OACb9C,GAAKk0C,EAAAA,EAAAA,IAAM5pC,EAAK,IAElBqL,EAAA1G,KAAK0G,EAAI4F,GAAIvb,GAAKk0C,KAAAA,MAASpxC,EAAAA,GAAQyY,IAAYA,GAAAA,EAC7Cvb,IAAKk0C,EAAAA,IAAMtxC,EAAAA,IAAG0H,IAAAA,EAAAA,EAAKyW,EAErB/gB,EAAAA,OAAKk0C,GAAMtxC,EAAGE,EAAAA,IAAAA,EAASqJ,IAEzBnM,EAAKk0C,KAAAA,EAAMpxC,GAAAA,GAAS2K,KAGf8C,MAAAoF,EAAAxQ,GAAA2N,IAAAA,GAAPvD,EAAA,IAAAoG,EAAAxQ,IACE8L,EAAK,OAAWrO,IAAI5C,KAAKk0C,CAAAA,EAAAA,KAAMpxC,OAC7B8U,eAAoB5X,EAAAA,aAAc8C,CAAAA,OAAQyY,IACxCvb,EAAKk0C,eAAS34B,EAAKwF,IAI3BozB,EA3BA,8XAAA,4nBCCArpC,EAAAyE,GACAnK,EAAA,GAAA,iBAGAgvC,SAEA,mBAGEA,QAGErgC,SAKiByW,EAAAA,QAEjB6pB,SAAA/xC,EAAMklC,EAAWj4B,EAAAnK,QAAgB,IAAcqiC,IAA2Bjd,EAAAA,EAAe1nB,YACzFqmB,EAAUmrB,KAAAA,EAAAA,EAAAA,MAAAA,GAAAA,EAAAA,EAAoBrjC,EAAAhC,GAAA0G,EAAA,EAAArT,EAAKwI,EAAAyE,EAAAN,GAAAgC,EAAKsG,EAAAA,KAAAA,GAAAA,OAAAA,EAAAA,GAAqBjV,GAAAA,OACnDiyC,eAAAA,EAAAA,EAAoBtlC,GAAAA,GAAAulC,EAAAlyC,MAAKtC,KAAAy0C,SAAKh9B,SAAAA,EAAAA,GAAqBnV,OAElDgyC,SAAAA,EAAAA,GAAAA,EAAAA,EAAAA,EAAAA,KAAoBzgC,OAAAvR,eAAUiV,EAAAA,aAAAA,CAAqBjV,OAAAA,IACnDiyC,EAAAA,qBAAoB,EAAA,IAAAjyC,EAAKoyC,EAAA,MAAKj9B,EAAAA,EAAAA,MAAAA,EAAAA,EAAAA,MAAAA,EAAqBnV,EAAAA,MAoDlEsD,EAAA,SAtEqC+uC,YAqB5BC,EAAA/kB,EAAAA,EAAAA,EAAAA,EAAPla,EAAA1G,EAAA9J,EAAA3B,GAAc+9B,IACZ77B,EAAAivC,EAAAzuC,KAAAlG,KAAM6vB,EAAAA,OAAMtgB,GAAA,EAACgyB,EAEbvhC,EAAAA,EAAAA,IAAK8nC,KAAAA,OAGAnyB,EAAA2+B,qBAAP,SACEt0C,GAAKie,OAAAA,EAAAA,qBAGC3b,MAAA2b,EAAAA,qBAAR,SACMje,GAAK8nC,OACP9nC,EAAAA,qBAAsB8nC,MAAOrsB,EAAIzb,qBAAqB8nC,SAAOnvB,GAAO3Y,OAAK8nC,EAAAA,qBAC7CA,MAAOjsB,EAAK7b,qBACnB,SACdqjC,GAAAA,OAAY39B,EAAG1F,qBAAyB8nC,MAAAA,EAAOnvB,OAEtD3Y,EAAAA,EAAAA,GAAKqjC,EAAAA,UAAerjC,OAAK8nC,SAAW9nC,GAAAA,EAAK8nC,UAAWjY,OAC/CiY,KAAAA,KAAAA,GAAS/mB,KAIV+mB,YAAA,GAAAvwB,EAAAA,UAAAA,MAAR,WAUEvX,KATM+P,qBAAO20B,EAAAA,UACX1kC,kBAAsBA,WAAatB,GAAAA,KAAAA,OAC1B4D,CAAAA,KAAEyN,YAAM8kC,KAAWvyC,OAE5BtC,GAAAA,KAAKuU,OAAKe,GAAAA,KAAYtV,OAAK2gC,KAAQ3rB,KAAOjF,OAE1C/P,GAAAA,GAAKuU,IAAKe,EAAAA,KAAAA,OAAYtV,GAAK2gC,KAAAA,OAAQliC,GAAAA,EAAWmG,EAAAA,GAG5CtC,KAAEoZ,YAECqnB,EAAAA,KAAAA,OAAAA,GAAAA,EAAAA,KAAyBtnB,OAAMC,KAAME,GAAOH,KAAAA,YAG5CsnB,EAAAA,KAAAA,OAAAA,GAAAA,KAAyBtnB,OAAMC,GAAM/C,GAAAA,KAAS8C,YAC9C,IAAUC,EAAKrS,UAAakS,qBAC1BwnB,SAAAA,GAA0BxnB,GAAGjZ,EAAEqW,KAEtC3Y,EAAAA,uBAAK+iC,KAA0BzgC,KAAMA,UAEvCtC,KAAK8nC,QAGCppC,WAAA+Y,IAAAA,EAAAA,KAAAA,EAAAA,EAAAA,YAARnV,EAA6BA,IAC3BtC,KAAKie,KAAAA,UAAAA,KApEmB0iB,QAUvB3rB,KAAAwH,EAAAA,IAAAA,IAAAA,KACAjI,KAAAoQ,UAAAA,KAAAA,QAXgCqiB,WAAAA,IAAAA,EAAxBtrB,KAAAo5B,EAAAA,GAAAA,KAAAA,2VAsEb,mpBC5EAhqC,EAAAyE,GAAAnK,EACA,GAAA,iBAGAgvC,SAEA,mBAEAA,QAAAC,SACAplC,EAAAmlC,QAIAC,SAAA/xC,EAWEwI,EAAAyE,EAAAnK,QACUu7B,IAERxX,IAEuB4rB,EACU79B,EACEmU,OAPrC,EAAAlmB,GAUE,EAAAA,KAAA8L,EAAA3O,EAAA6C,MATQ8J,GAAA0xB,EAAAA,EAAAA,EAAAA,GACShrB,EAAAmN,EAAAA,EAAAA,EAAAA,EAAAA,GAAAA,EAAAA,EAAAA,KAIgB5L,GAAAA,OAAAA,EAAAA,GAAAA,GACEmU,OAAAA,eACDrI,EAAAA,EAAAA,GAAAA,GAAAA,EAAAA,MAlB5BhjB,KAAMg1C,SAONtN,SAAAA,EAAAA,GAAmB,OAAIlwB,SAAAA,EAAAA,GAc7B1M,EAAMqJ,EAAoB/O,EAAK4d,KAAAA,OAAAA,eAAwB7O,EAAAA,yBAClD8gC,EAAAA,cAAgB,EACE5rB,IAAAA,EAAAA,EAAAA,MAAe6rB,EAAAA,EAAAA,MAAAA,EAAAA,EAAAA,MAAsBpyB,EAAAA,EAAAA,MAAAA,EAAgBqyB,EAAG,KAAKxU,EAAAA,EAAAA,MAAiCyU,EAAAA,EACnHL,MAAqB1rB,EAAAA,EAAAA,MAAAA,EAAe8rB,EAAAE,MAAAA,EAAAA,EAAAA,EAAAA,SAAsBC,YAAKxyB,EAAAA,EAAgBvT,EAAGnK,EAAKu7B,EAAAA,EAAAA,EAAAA,EAAS96B,GAAKuvC,IACrGL,EAAqB1rB,EAAAA,KAAAA,OAAAA,KAAeyrB,EAAAA,QAAAA,EAAAA,EAAiBhyB,eAAKA,EAAgBoE,EAAGhQ,eAAmBk+B,EAAKjsB,EAAWG,iBAC3FD,EAAenC,EAAAwiB,gBAAAA,EAAmBxiB,EAAKpE,IAAAA,IAAAA,EAAAA,iBAAiC,IAAKsyB,EAAK59B,aAAKkwB,IAAAA,EAAAA,EAE9G1kB,gBACEwf,QAAAA,kBACAC,OAAkBvb,EAClBqQ,cAAAA,CAAAA,EAAiBlO,eACjBmO,EAAAA,gBACAkL,EAAgB5f,eAChB6f,EAAezb,EACfgQ,QAAAA,EAAAA,EAAAA,KAAmBvhB,EACnB0hB,eAAAA,EAAAA,qBAEAD,EAAAA,eACAnK,EAAAA,EAAAA,QAAiB/F,EACjBjb,KAAAA,EAAAA,eAEGspC,EAAAA,gBAAoBv0C,EAAAA,eAAOilB,EAAAA,EAAAA,QAC3BuvB,EAAAA,IAAAA,EAAAA,GAAAA,EAAAA,eACA1T,EAAAA,kBA7CqB5a,EAAApE,eAS5B,EAAAoE,EAAAyZ,QAAWzZ,EAAAkuB,IAAAluB,EAAAwgB,mBAAAxgB,aAAX,CAAAsb,gBAAwEkF,EAAAA,iBAAiBtkC,EAAAA,mCAuClF,EAAAs/B,eAAAp5B,EAAPq5B,cACE,EAAgBzL,kBAAK+d,EAAAA,mBAAL,EAAAhe,YACZ3tB,EAAAA,aAEJ,EAAMA,gBAAO,EAAA2C,iBACbwpC,GAAAA,EAAAA,kBAA6BL,OAGxBnvB,iBAAAyvB,EAAAA,oBAAPxuB,EAAA4a,mBAGWyT,EAAAA,OAAsBv0C,EAAAA,EAAAA,GAAOilB,OAAAA,eACpCjmB,EAAKu1C,UAAAA,kBAA2BtvB,CAAAA,IAAAA,WAChCjmB,OAAK+H,KAAS/H,iBAAKkX,OAAqBlX,YAAKkX,EAAAA,cAAepQ,IAIzD6uC,EAAAtsC,UAAAuhB,QAAP,WACE5qB,IAAK2gC,IAAAA,EAAAA,EAAU5sB,EAEf/T,KAAgBi1C,cAAKA,EAAAA,EAAAA,OAAAA,IAAL1lC,EAAAzE,GAAAxB,UAAXgsC,EAAAjsC,UACH3D,QAAEklB,KAAU5qB,OAAK2gC,EAAAA,EAAAA,yBAKd54B,KAAAA,MAAP4tC,EAAAtsC,UAEErJ,yBAGA,WAAgBA,KAAAA,oBAAAgB,OAAAilB,mBACLjmB,KAAKgM,kBAIX8W,OAAAA,iBAAgC9iB,KAAKgM,SAAAA,KAAWirB,eACrDj3B,KAAK8iB,KAAAA,eAAqB3W,QAAYnM,EAAAA,UAAKgM,UAAWorB,SAAY90B,GAG7DtC,KAAA2gC,QAAAiV,EAAAA,IAAAA,IAAAA,EAAAA,EAAAA,EAAAA,KAAPX,cACOltC,EAAAA,EAAAA,OAAS/H,IAAKkX,CAAAA,IAAAA,EAAAA,EAAAA,GAAeyB,EAAAA,UAAWzB,KAAAA,SAAepQ,EAAAA,UAGvD6uC,EAAAtsC,UAAAR,SAAP,SACOgtC,EAAAA,GAAAA,KAAAA,oBAAmB,IAAAnwC,IAAEmD,EAAAA,EAAAA,EAAAA,KAGrBosC,cAAA1kB,EAAAA,EAAAA,OAAPhhB,IAAAnK,EACEpF,GAAAA,OAAK61C,KAAAA,YAAc71C,KAAK8iB,eAAEyN,MAAAA,MAGrBvwB,KAAAgM,WAAA6kB,YAAP,KAAA7wB,KAA+DmI,eAAmC2oB,MAAA3kB,OAC3F0pC,KAAAA,WAAcze,aAAK,MAAA1xB,EAAEmrB,UAAAA,kBAA+BC,WAGpD9wB,KAAAoqB,SAAAA,KAAPlT,eACO2+B,KAAAA,KAAAA,eAAmB/uC,OAAApB,EAAE0kB,UAAAA,OAAAA,WAGrBpqB,KAAA8hC,eAAP,SAAAx/B,GACEtC,OAAK61C,EAAAA,aAAcF,EAAAtsC,UAAKknB,QAAEuR,WAAAA,KAAAA,eAGrB,SAAPx/B,GAAA,OACEtC,EAAAA,cAAK61C,EAAAA,UAAcnwC,mBAAOokB,SAGpBxnB,EAAAwI,EAAAyE,QAAA,IAAAsmC,IAAAA,GAAAA,GAAR71C,KAAsB81C,eACJ,SAAKb,GAAAA,OAAAA,EAALpkB,mBAAJvuB,EAAAwI,EAAAyE,OASPomC,EAAAtsC,UAAA0sC,aAAP,WACkB/1C,KAAA61C,eAAKZ,SAAL3yC,GAAA,OAAAA,EAAA8nB,mBACZ2X,EAAc75B,UAIb45B,iBAAAhL,WAAP92B,KAAA61C,eACsB,SAAKZ,GAAAA,OAAAA,EAAAA,uBACjBne,EAAAA,UAAAA,MAAAA,WAOF92B,KAAAw1C,eAAR,SAAAlzC,GACOtC,OAAKqrB,EAAAA,YAAiBsL,EAAAA,UAAAA,cAQtB3qB,SAAWw2B,GAAAA,IAAAA,IAAAA,EAAkBlyB,EAAAA,EAAKqL,KAAAA,cAAW0P,EAAAA,EAAAA,OAAiB5d,IAAQzM,EAAAA,EAAAA,KAAOilB,EAAAA,UAAAA,WAK7Eja,SAAWy2B,EAAAA,GAAAA,IAAAA,IAAAA,EAAAA,EAAmBnyB,EAAAA,KAAK2B,cAAUoZ,EAAAA,EAAAA,OAAiBlf,IAAAA,EAAAA,GAASnL,cAAOilB,EAAAA,IAAAA,EAAAA,UAM9Eja,kBAAWwrB,WAAwB7b,IAAAA,IAAM3b,EAAAA,EAAKgM,EAAAA,KAAAA,cAAWy2B,EAAAA,EAAAA,OAAwBzf,IAAAA,EAAAA,GAAAA,qBAAwBxiB,EAAAA,UAIzGwL,kBAAW22B,WAAgB3iC,KAAKgjB,iBAAgBrM,eAAQnW,KAAuB8P,WAAYtQ,gBAAgBw3B,KAAAA,MAAAA,KAAAA,iBAAmCiL,MAAAA,OAAAA,kBAG9Iz2B,KAAAA,WAAWurB,iBAAuBvrB,KAAWw2B,KAAAA,KAAAA,iBAA6BxiC,OAAKgjB,OAAAA,kBAAwBgzB,KAAAA,WAI5Gh2C,iBAAgB0iC,KAAAA,MAAiBpyB,KAAKqL,WAAWqH,iBAAgBrM,KAAAA,gBAAwBA,QAIpF3K,YAAWqrB,KAAAA,WAAAA,cAA0BngB,IAAAA,KAAepQ,gBAAYkF,QAAWwrB,WAAAA,EAChFx3B,KAAKgM,OAAAA,KAAWkrB,WAAAA,iBAAyBhgB,KAAAA,WAAsBlX,kBAAgBu3B,GAAAA,KAAAA,WAO1EvrB,gBAAWorB,KAAe9mB,WAAWtQ,gBAAgBq3B,KAAAA,MAAAA,KAAAA,gBAA4BpR,QAAAA,eACjFja,KAAWirB,WAAAA,eAAyBj3B,KAAKgM,MAAAA,KAAWkrB,gBAAoBl2B,QAAOilB,cAAAA,GAOpFjmB,KAAKgM,WAAWC,mBAAmBjM,KAAKgM,eAAWorB,KAAAA,KAAep3B,WAAKkX,iBAClElL,KAAAA,WAAWihB,kBAAuBjhB,KAAAA,eAAyBhM,KAAKkX,KAAAA,WAAeyB,gBAjLnFs9B,KAAAA,WAAAA,aACAz5B,KAAAA,MAAAA,KACAxQ,WAAAojB,mBACAzK,OAAAA,kBAnByBvY,KAAAA,WAAjBmlB,kGCdbtlB,iBAAgC/H,KAC9B8H,WACQorB,aAAUp3B,KAAAkX,eAAApQ,KAElB9G,KAAOkE,2LDmCiCmxC,kzBEtC1CvqC,EAAAyE,GAAAnK,EAAA,GAEA,iBASAgvC,SAGE,mBAMmB5pB,QAEjB6pB,SAAAplC,EAAMu4B,QAAW6M,SAAqB/xC,EAAMyR,EAAQ0zB,EAAYlJ,QAA8B,UAC9Fj8B,EAAK4zC,OAAAA,EAAAA,GAAAA,OAkGTjlC,EAAA3O,EA9G0C6C,MAAA8J,GAehC0G,EAAA,EAAA1E,EAAAhC,GAAA0G,EAAAugC,EAAAA,EAAAA,EAAAA,EAAAA,GAARjlC,EAAAnG,EAAAyE,KAAAN,GACEjP,OAAK8nC,EAAAA,GACH5/B,GAAAA,OAAAA,eAEA4oB,EAAAA,EAAAA,GAAAA,GAAAA,EAAAA,MAAAA,KACAllB,SAAAA,SAIGtJ,EAAAwI,GAAA,OAAA+kB,SAAPtgB,EAAAnK,GAAcm8B,EACZhyB,EAAAnK,EAAA9C,KAAAuR,OAAMgc,eAAO0R,EAEbvhC,aAAKk2C,CAAAA,OAGA,IAAAC,EAAAd,0BACDr1C,EAAK8nC,IAAAA,EAAO5/B,EAAAA,MAASlI,EAAAA,EAAK8nC,MAAO3/B,EAAAA,SAC9B+tC,YAAAA,EACLl2C,EAAAA,EAAAA,EAAK6hC,EAAAA,EAAAA,GAAAA,IAAAA,EAIFuU,EAAAlwC,KAAAlG,KAAA6wB,EAAAA,YAAAA,GAAAA,EAAPzrB,EAAA6L,EAAA0E,EAAA1G,IAA0B/G,KAAwE4oB,OAE3F9wB,EAAKq2C,cAAAA,EAAgBnuC,OAA8BlI,EAAAA,EAAKkX,GAAAA,EAAAA,UAAevU,YAAOiJ,WAK9Ei2B,KAAAA,OAGA35B,CAAAA,WAML,EAA+BC,SAAKnI,EAAKkX,sBAAevU,EAClD2zC,WAAqB,IAAUp/B,EAAAA,UAAevU,OAAOiJ,SAC5B0E,GAAAA,EAAK0B,UACP1B,OAAK6B,KAAoBnS,KAAKkX,GAAAA,KAAAA,eAG3Dq/B,EAAIC,UAA+Bt/B,MAAAA,WAAepQ,KAA+BghC,OAC1EA,OAAOl8B,KAAQ5L,OAAKkX,MAAAA,KAAAA,cAAsBtL,KADjDi2B,cAKUvsB,EAAAA,UAAYtV,mBAAa8U,SAAAA,EAAAA,EAAqBlQ,GAAAA,GAElC5E,KACdi/B,gBAEA9yB,EAASsqC,EAAuBD,EAAyBx2C,KAC/DA,eAA0Bw2C,OAA+BrqC,OAGxCuqC,GAAAA,KAAoD7U,YAC9C2U,GAA2BF,EAAiBnuC,CAAAA,IAASnI,EAAAA,EAAAA,GAAKkX,KAAAA,eACjFlX,OAAK4iC,MAAAA,EAAW3D,EAAUuX,GAAyCvX,KAGnE/nB,eAAiCu/B,OAAmD7qC,MACpF5L,EAAAA,KAAK4iC,IAAAA,EAAAA,GAAW3zB,EAAGunC,KAA4Bx2C,IAAKkX,EAAAA,KAAAA,eAGhDs/B,KAA2BC,GAE7B,GAAMvX,GAASoX,KAA0CnuC,eAAc+O,MAAAA,EAAAA,EAAeyB,KACtF3Y,OAAK4iC,MAAAA,KAAc6T,eAKlB3O,OAAO5/B,UAAmBA,CAAAA,GAAMlI,KACrCA,KAAK8nC,UAAc3/B,KAAQA,QAC3BnI,qBAAY8wB,IAAAA,EAAmBA,CAC/B9wB,IAAAA,EAAK8nC,EAAAA,GAAAA,EAAOl8B,EAAAA,GAAQ5L,EAAAA,EAAAA,EAAKkX,EAAAA,EAAAA,KAAAA,WAAevU,EAAOiJ,EAAAA,EAAAA,OA7C7C5L,CAAAA,EAAAA,IAAKk2C,EAAAA,EAAAA,GAAAA,EAAAA,IAgDDvwC,EAAAgQ,IAAA1E,EAAAnG,EAAA,GAAAurC,KAAAA,eAAR19B,KAAwBzQ,KAAmG0D,WACjH5L,EAAAA,EAAK22C,EAAAA,EAAAA,GAAAA,IAAAA,EAAAA,KAAAA,IAAqBzuC,EAAOlI,EAAAA,EAAK8nC,GAAAA,GAAAA,KAAO5/B,WAC7CyuC,EAAAA,EAAAA,EAAAA,KAAAA,eAA0B32C,KAAK8nC,GAAO3/B,IAAAA,EAC5C2oB,CAAAA,IAAqB9wB,EAAAA,IAAK8nC,EAAAA,EAAAA,GAAOhX,KAAAA,eACvB9wB,KAAK8nC,KAAAA,WAGX,EAAA74B,EAAApJ,EAAA,IAAA8wC,KAAAA,OAAAA,MAAAA,CAAAA,EAAR,GAAAr0C,EAAA,IAA6Bs0C,KAC3B9O,OAAA3/B,IAAKyuC,CAAAA,EAAWC,GAITD,EAAO,IAAA52C,KAAc8nC,OAAahX,iBApGxCtU,EAAAA,KAAAA,OAAAA,MACAxc,KAAA2kB,eATQ0wB,OAA6BrO,YAAAA,KAA7BkP,eAAAb,EAAAA,yVA+B4BltC,wpBCzCzC2C,EAAAyE,GACAnK,EAAA,GAAA,iBAEAgvC,SAEA,mBAEAA,QACAC,SASAplC,EAAAmlC,QAAAC,SAOE/xC,EAAAwI,EAAAyE,EACEi4B,QAIAC,IAEiBjd,IAPnBrlB,EAAA7C,EAAAQ,OAUE,EAAAqC,GAAA,EAAMqiC,KAAWv2B,EAAA3O,EAAQoL,MAAuB+5B,GAAYlJ,EAAe/T,EAAAA,EAAevb,GAAA0G,QAFhDpG,EAAAggB,GAAAA,EAAAA,EAAAA,KAAAA,GAAAA,OAAAA,EAAAA,GAbpCtgB,GAAA6nC,OAAAA,eACAC,EAAAA,EAAAA,GAAAA,GAAAA,EAAyB/2C,MACzBg3C,KAAAA,SAAAA,SAAqD10C,EACrDwI,GAAAmsC,OAAAA,SAAgBpP,EAAAA,GAAAA,EAatBt4B,EAAKu4B,EAAAA,KAASj0B,OAAIqjC,eA+RtBC,EAAA,aA5RS,CAAAjzC,OAAA,IAAA2rB,EAAPqlB,qBACE,EAAA,IAAMrlB,EAAAA,EAAM,MAAAunB,EAAAC,EAAC9V,MAGb+V,EAAMC,EAAev3C,MAAKyjC,EAAAA,EAAAA,KAAS+T,EAAOH,EAAA,KACtCr3C,EAAK82C,EAAAA,MAAAA,EAAAA,EAAAA,MAAoBvV,EAAIiB,EAAAA,MAAAA,EAAAA,SAAmBxiC,YAAK+2C,EAAAA,EAAAA,EAAAA,EAAmBQ,EAAAA,EAC1Ev3C,EAAAA,EAAK82C,GAAAA,IAAAA,EAAAA,EAAAA,KAAkBvV,KAAIiB,EAAAA,OAAAA,EAAAA,EAC3BxiC,EAAAA,EAAAA,EAAK+2C,IAAAA,KAAAA,OACL/2C,EAAAA,wBAAKg3C,EAAyBrxC,EAAAmxC,gBAGpBhkC,EAAAA,EAAAA,eACA+c,GAAAA,EAAAA,uBAA2BlX,GAAM3Y,EAAAA,UAAKkX,IAAAA,EAAAA,SAG7CvR,EAAAmiC,OAAA,IAAAhe,EAAAA,UAAPnkB,EAAA,OACOmiC,EAAAA,EAAAA,GAAOh1B,EAAAA,UACZ9S,OAAK6hC,SAGC/2B,GAAA2sC,EAAApuC,UAAAquC,OAAAA,KAAR13C,KACE23C,GACAC,IAOAroC,EAAAvP,KAAKyjC,UAAuBmU,GAASr8B,GAInCvb,KAHA82C,kBAAqB5/B,EAAAA,iBAAsBtL,KAC9B5L,iBAAKkX,IAAevU,KAAOkH,gBACnB7J,EAAAA,gBAAKuvB,KAAAA,eAAwBsoB,EAAAA,KAAAA,uBACzB3gC,IAAAA,KAAeyB,OAAM/V,QACtCsmC,KAAStmC,OAAQq0C,OAAAA,KACvB//B,eAAgB+/B,KAGZa,KACAC,eAIKhrB,OAAAA,EAAT1jB,UAOiBvG,MAAcF,WAAsB5C,KACxC8nC,OACL9uB,QAAqBrV,KAIpBk+B,aAAImW,EAAAA,UACTh4C,aACMi4C,SAAAA,EAAAA,EAAAA,GAAAA,IAAkB,IAAY7yC,EAAI4T,EAAM5T,GAAA0F,EAC9CkO,IAAWA,IAAM,IAIPA,EAAM5T,EAAApF,KAOf83C,eAAiBI,OAAe3U,MAQnBvoB,EAAMlY,KAAAA,eAAoBq1C,OAAyBtuC,MAAOoR,IAAAm9B,GAAAA,EAAAA,KAAAA,wBAExDP,oBAUpBQ,GAEEz1C,EACA2Y,EAAAA,EAGF3Y,KAAIm1C,eASFO,KAAAA,IAAAA,CAAAA,EAAAA,SAARnzC,EAAwBwyC,KAAxBV,WACQ5iC,IAAMrU,EAAAA,KAAKuU,UACC2C,GAAAA,EAAAA,EAAAA,EAAAA,GAAAA,IAAeyB,EAC7BsH,WAE+B,CAAA,GAEnC5L,EAAImxB,OAEJxlC,GAAAA,IAAK03C,EAAAA,GAAAA,GAAAA,CAAAA,GAAAA,EAAuBE,IAAS/xC,EAAAoJ,EAAAtL,QAAU4X,EAG7C,IAAIg9B,EAAgBP,eAEXxT,KAEL+T,UADO3T,EAAAA,mBACsBnmC,EAAAA,EAAAA,GAAWmG,EAAAA,IAC1By/B,EAAAA,GAAAA,EAAAA,IACEz+B,EAAAC,EAAA,GAAO,GAAA4/B,GAAAA,KAAAA,eAAyBlC,IAAKsB,EAAAA,EAAAA,OAAAA,GAAcxhC,EAAAA,aAE9Cs9B,EAAAA,KAAQ3rB,EAAAA,iBAAU6vB,EAAcjgC,UAEzC0/B,SACE9gC,EAAA0V,SAAOusB,SAAAA,EAAAA,EAAcC,EAAAA,GAAAA,EAAAA,KAAWnC,EAAKoB,UAAAA,gBAAuB,SAC9D6T,EAAAA,GAAAA,IAAAA,EACdD,KAAqB5X,EAAAA,KAAQ3rB,KAAKuuB,EAAKoB,KAAAA,eAGnBhsB,KAAlB8/B,EAAAA,EAGFx4B,EAASrd,EACTy7B,EAAS9iB,KAGPA,EAAM8iB,OAEJ/oB,KAAAA,aACCstB,EAAAA,GAAAA,SAA2BjqB,EAAOsH,EAAQzc,GAC/Cyc,IACAoe,EAAS9iB,KACAk9B,EAAkBF,YAEvBjjC,EAAAA,EAAYmjC,cACX7V,EAAAA,QAA+B3iB,WAE3B1E,IAGXk9B,EAAgBF,UAII,OAChBjjC,EAAAA,cACJtV,WAAK4iC,EAAW3iB,cAGd4lB,KAAAA,KAGE,IAAAt2B,EAAAoxB,QAAA+X,KAAAA,EAAAA,cAAR9zC,IAA0CgzC,EAAAA,UAA1CjyC,EACE3F,OAAK03C,EAAAA,cAAgChS,WAAO9iC,EAAG2Y,cACpCo9B,KAAAA,KAAAA,IAGJzU,EAAAA,gBACDX,EAAKqV,EAAAA,QAAAA,KAAiBrV,EAAKsV,cAAAA,KAG7B,OAFKtkC,IAAKixB,EAAAA,EAAAA,EAENjC,GAAKiB,IAAAA,GAAAA,EAAAA,UACEC,GAAAA,GAAAA,EAAAA,WACGnvB,EAAAA,EAAAA,EAAAA,EAAAA,GAAiBqrB,EAAAA,EAAAA,EAAAA,GAAQjiC,IAAAA,IAAAA,EAAWkG,UACzCO,GAAIo+B,GAAKe,EAAAA,WACT/vB,EAAKe,EAAAA,EAAAA,EAAAA,GAAAA,EAAYxK,EAAAmE,EAAAzL,GAAO2B,EAAAsgC,KAAAA,OAAAA,IAAcC,EAAAA,UAAgBf,EAAAA,KAAAA,WAAmBhvB,EAAA1G,EAAIgC,EAAA0E,EAAA,IAC7EvQ,EACLygC,WAAclB,EAAAA,UACL3hB,gBAAgBrM,SAAQouB,EAAAA,GAAAA,IAAAA,EAAAA,KAAAA,KAAAA,aAAmCC,EAAAA,GAAYl1B,SACxExN,EAERwI,EAAKyJ,GAAAA,IAAKe,EAAAA,gBAAyBN,EAAAA,WAASpQ,EAAAA,EAG9CQ,GAAIm+B,EAAKqB,eACPtiC,EAAKiS,mBAAsBosB,CAAAA,GAAAA,EAAQliC,KAAAA,OAAWmG,EAAAA,YAChCy/B,GAAAA,EAAAA,cACJ/uB,EAAAA,KAAYA,UAAOmwB,EAAAA,QAAAA,WAAcC,SAAgBb,GAAAA,EAAAA,UAAmBt1B,EAAAgF,KAAIe,UAE9EvF,OAAU80B,EAAAA,cACL7hB,WAAAA,EAAgBrM,cAAQouB,KAAAA,KAAAA,QAAAA,CAAAA,IAAmCC,EAAAA,EAAAA,aAClEj1B,EAAMiT,gBAEE1N,QAAiBqrB,4BAItBkY,EAAAA,UACP5nC,EAAK4xB,IAAAA,GAAAA,GAAAA,EAAAA,KAAAA,UAA6BU,EAAKxW,QAAAA,KAEhC6rB,GAAAA,SAAAA,GACPt2C,EAAKygC,cAAAA,EAAAA,KAAAA,UAAkChW,EAAAA,QAEzCtuB,WAAUonC,SAAAA,GAKTvjC,EAAA+hC,UAAAtC,EAAAA,KAAAA,UAAP,OAAuC6V,EAAAA,cAE5B9P,WAAahlC,EAAAA,cAIb6+B,KAAAA,KACP3hC,QAAK2hC,CAAAA,IAAAA,EAAWmX,EAAAA,aAGlB94C,EAAKqjC,gBAAyBrjC,QAAKkX,4BACnClX,EAAKs4C,UAAAA,EAAAA,IAAgBX,GAAUC,GAC/B53C,EAAAA,KAAK04C,UAAAA,EAAgBf,QAGhB3iC,KAAAW,GAAA/Q,IAAAk9B,EAAAA,mBAAPvyB,EAAAszB,uBACOX,EAAAA,EAAiBliC,EAAAA,YAAKgjB,EAAAA,eAAwB7O,EAAAA,uBAM7CrJ,EAAA1F,EAAA8yC,EAAAA,YAAAA,EAAR3jC,KAAAsxB,eAGW9Y,EAAAA,UACPgV,cAIOmD,SAAY5iC,EAAAwI,GACnB,IAAA9K,KAGF8nC,OAAmB9D,MAAAA,SAGfhkC,KAAKg3C,YAAAA,KAAAA,WAAuB+B,aAC9B/4C,KAAAqjC,YAAY2T,EAAAA,EAAAA,KAAAA,eAIdh3C,KAAKuU,EAAKixB,EAAAA,GAAAA,KACVxlC,gBAAsB+2C,EAAAA,GAAAA,KAAAA,gBAKAp7B,EAAAA,KAAM3b,EAAAA,UAAUg5C,iBAAmBvrC,WAAcqpC,KAAAA,iBAGvE92C,KAAKuU,gBAGLvU,QAAKg3C,oBAAgCiC,EAC9BA,UAnRNf,eAAA17B,SACAmI,GAAAA,GAAAA,IAAAA,EAAAA,WACA8K,OAAAA,EAAAA,GAAAA,EAAAA,UAAAA,IAfL,OAAqCuX,EAAAA,IAAAA,EAAAA,EAAAA,WAAxBkO,GAAAA,KAAAA,gGChBbl1C,KAAAuU,KAAAivB,KAAAxjC,KAAA+2C,eACUmC,IAAAA,EAAsB5oC,KAgDhCqL,MA9CS3b,KAAAuU,KAAAjL,YAAPwB,GAAA2C,OAMOzN,KAAA82C,gBAAP,OAAA92C,KACOA,KAAKk5C,UACRl5C,KAAKm5C,uBACAD,GAAAA,EAAa3pC,GAAA6pC,EAQd,CAAAC,EAAA,EAAAC,EAAA98B,gBAAR68B,EAAA,EAAAC,EAAA30B,iBAEO7R,EAAAA,EAAAA,EAAP2c,0BASOqpB,GDW4BtW,CCX5BsW,EAAAA,iBAkBT3B,EAjDAjC,gBAAsBqE,GAAAA,wHCHtBL,YAAA,EAEA,OAAA52C,EAaMk3C,UAMNlwC,QAAA,aAAAhH,EACEqU,UAIA8rB,OAEA,WAAkBgX,KAAAA,aAAkD9iC,KAG3DvR,YAA0BtC,KAAQsC,YACnCs0C,IAAuBt0C,EACFu0C,UAAQ/+B,UACnC,aACMtY,EAAA+G,UAAAuwC,MAAaF,aACfp3C,EAAA+G,UAAawwC,WAGLF,aACRD,KAAMG,EAAMvwC,cACG2Q,GAAAA,KAAU,CAAA6/B,EAEzBJ,EAAMC,KAAAA,OAAQ1/B,eAOpB8/B,EAAA,aAAmCj3C,CAAAA,OAAQsC,IACzC20C,EAAML,wBACFE,EAAAA,sBAGF,EADMD,IAAAA,EAAAA,EAAQrvC,MAAKm9B,EACZiS,EAAMG,MAIjBlkC,EAAA,GAAuCokC,EACrCF,iBAAWG,SAAAA,EACTzzC,EAAAA,EAAAA,EAAAA,GACA0zC,IAEFC,IAAAA,GAAAA,EACAP,EAAAA,gBAGF1qC,EADAuqC,EAAelvC,EAAAA,GAAK6vC,EACbA,EAASN,EAAAA,EAAAA,OAMlBn0C,IAAA,CAAA,IAAAC,GAAAC,EAAA+P,EAAAjQ,IAAAi0C,QAAA/+B,QACE9P,GAAK,GAAI1F,GAAI,EAAGA,CAAIo0C,IAAe12C,EAAAA,EAAAA,cACJsC,EAAAA,OAAGu0C,GAAQ/+B,OAAQ6sB,EAAAA,MACjC,IAAXrnB,EACuCu5B,QAAtBv0C,QAAGu0C,EAAQ72C,MAAAA,UAEV+2C,EAAMvwC,OAAAA,EAAAA,IACT2Q,EAAAA,QAAUA,OAGP0/B,EAAAA,GAAAA,OAAQ1/B,IAAOmG,EAAO,EAE1C1a,EAAAiQ,EAAA7S,8HCrFNyD,SAIA/C,GAAA02C,OAAA12C,EAAAm2C,QAAA,CAAA7uC,IAAA,OAA6GiJ,EAAAA,KAErGqmC,GACJ37C,EAAAA,OAAAA,EAAYsV,wBACAA,SAAOrV,GAAAA,IACnBkW,IAAAA,EAAAA,EAAAA,EAAQmM,EACRlM,OAAAA,IAAAA,CAAAA,IAAAA,EAAckM,EACdpiB,GAAAA,QAAAA,QACAqW,GAAMjB,IAAOiB,IAEfzF,EAAA,CAAA,IACE0W,EAAAA,GAAAA,QAAAA,QAAkBjlB,EAAOilB,GAAAA,MAAAA,UACzBuc,EAAAA,OAAAA,EAAAA,IAAe7sB,EACf8sB,GAAAA,QAAAA,OACAniC,EAAAA,GAAAA,UAAoBA,KAAAA,CAAAA,EAAAA,EACpBC,KAAAA,OAAkBA,eAClB0lC,EAAAA,aAAoBA,CACpBD,OAAAA,IAAAA,EAAAA,WAAwBA,EAAAA,aACxB7xB,EAAAA,oBAA2BA,EAAAA,IAAAA,EAAAA,EAC3BJ,KAAAA,EAAQqmC,eAIZ,SAAA93C,EAAAwI,EAA6B3F,EAAqBsK,GAChD,IAAKwB,EAAA,CAAI7L,WAAa2O,EAAAA,WAAYjR,WAC5BqC,EAAE4O,WAAY3O,YAAG2J,EAAWgF,kBAAehF,EAC7CpQ,eAGJ,EAASsnB,KAAAA,EAAAA,MAAAA,MAAqBxW,CAAEwW,iBAAAA,OAC1B3lB,iBAAiBA,gBACjBC,EAAAA,iBACA0lC,EAAAA,WAAiBA,EAAAA,WACnB9gC,SAAE6gC,EAAAA,SAAqBA,WAAAA,EAAAA,WACrB7xB,eAAsB1E,EAAE0E,eAAAA,kBACxBquB,EAAAA,kBAAsBA,OACtBC,IAAAA,EAAAA,aAAqBhzB,SAAEgzB,EAAAA,GAAAA,IAAAA,IACvB1uB,EAAAA,EAAAA,EAAOtV,EAAAA,OAAAA,KAAegR,OAAEsE,IAAOtV,GAAAA,EAAAA,OAC/BsV,KAAAA,GAAOrV,OAAAA,EAAAA,OAAiBqV,KAAOrV,GAAAA,KAAAA,OAGvC,EAAA,OAAA4D,EAAA2jB,mBACqBnb,EAAAg6B,qLC/CrBxiC,EAEakgC,kBAAAkC,EAAAA,iBACAkB,EAAAA,mBAIAjC,EAAAA,kBAAgDrhC,EAAAyR,OAAWtV,aAE3D47C,EAAAA,OAAAA,YAAAA,EAA0BtmC,qmBCTvCjJ,EAAAyE,KAAAjN,EAAAiN,GAAAzE,EAEAyE,MAAA+qC,EACAC,IAAA,SACAj4C,EAAAwI,GAAA,GACA,mBAGAA,GAAA,OAIM0vC,EAAgB,MAChBC,IAAiBC,UAGhB,uBACC13C,OAuBR8H,GAAA,0CAUyDyE,IAAW+xB,KAAOqZ,YAAsBr4C,EAAIs4C,EAAAt4C,EAAMu4C,GAAMrZ,EAAAA,UAVjH,OAAA12B,EAAA+I,OAAAinC,OAaAhwC,IAAAyE,EAAAlG,UA2BEyB,EAAAzB,UAAwC0xC,IAAxCxrC,KACEsE,OAAA+D,eADsCmjC,EAAAA,aAXhCC,CAAAA,OAAAA,IAAAA,EAA4BC,cAG5BC,EAAAA,iBAGAC,EAAAA,sBAAsC,EAGtCC,IAAAA,EAAAA,EAA8B,MAIpCC,EAAKC,EAAAA,MAAAA,EAAAA,EAAe/0C,MAASC,EAAAA,EAAAA,MAAc+0C,EAAAC,EAAA,MAC3CC,EAAKH,EAAAA,MAAAA,EAAAA,EAAAA,MAAa7tC,EAAQ+sC,KACrBc,EAAAA,KAAAA,EAAAA,CAAAA,IAAanvC,mBAID4C,KAAA6yB,YAAAA,EAAat/B,GAAKg5C,OAAAA,EAAAA,MAAahnC,GAAAA,EAAAA,IAAW,GAAMhS,EAAE2T,IAAAA,GAAO3T,EAAAg/B,KAE1E,EAAM8Q,IAAqB5rC,EAAAA,IAAAA,EAAAA,IAAAA,EAAcg7B,OAAA,EACzC4Q,GAAU3kC,EAAAA,iBAAqB+0B,EAAAA,IAAAA,EAAAA,SACrBr2B,YAAc4uC,EAAQtY,EAAAA,GAAAA,IAAAA,EAAAA,EAAAA,KAChCziC,OAAK07C,KAAUt2C,EAAAw8B,QAAAA,EAAAA,EAAAA,kBAAkC,EAAMx8B,EAAE6Q,uBAAoB9B,GAAAA,EAAAA,qBAE/D7D,KAAKqL,EAAM6+B,QAAqBO,KAAQvY,EAAAA,aAAAA,EACtDh8B,cAAoBmV,UAA4Bo/B,EAAAA,aAAQtY,MAAAA,EAAAA,EAAAA,aAClCkZ,OAAcC,EAAAA,EAAAA,WACpC,EAAKC,EAAAA,cAAgBC,EAAAA,aAChBD,WAAUE,KAASC,QAqQ5B,KAnTsC,IAoD7B/qC,EAAAnG,EAAAtE,cAAA8C,UAAP2H,EAAAxD,MACoCrI,EAA9BpF,QAAKm7C,gBAAAA,EAAAA,OACPn6C,EAAOoX,QAAAA,iBAAkB+iC,EAAAA,SAAAA,EAAAA,EACzBn7C,cAAKm7C,EAAAA,WAAuB,KAAA,CAIzBllC,MAAA7Q,EAAA21C,QAAAjC,qBACL94C,EAAKg7C,OAAAA,KAAAA,MAAoBn1C,EAAAT,EAGpB21C,QAAAvY,iBAAPp9B,EAAAw2C,QACM57C,KAAK67C,MAAUl8B,EAAAA,EAAAA,QACXq8B,kBAAyBh8C,IAAK47C,EAAAA,EAAAA,OAC/BC,EAAAA,QAAY,OAAIC,EAAAA,UACrB97C,IAAK67C,EAAAA,OAAUE,GAAAA,EAAAA,UAEZE,SAAAA,GAAU7Y,EAAAA,OAAU8Y,EAAGC,EAAG3B,GAAeC,EAC9Cz6C,UAAK07C,QAAQtY,WAAgBpjC,OAAK+6C,KAAQvY,uBAAsBuY,OAAQtY,aAAAA,KAGnE0Y,sBAAPn7C,KAEE66C,qBAME,OAAOsB,EAIT9yC,UAAU+yC,WAAUvB,WAIpB76C,KAAiBq8C,kBACOR,GAAAA,EAAU5gC,UAC9BqhC,MAAAA,WACFt8C,GAAKu8C,KAAAA,UAAeloC,KAAoBkH,EAAAA,CAAAA,IAG1CjZ,EAAItC,KAAKg7C,OAAAA,KAAAA,QA1HkBh7C,KA2HzB67C,UACI77C,IAAK67C,EAAAA,OAAUl8B,GAAO3f,KAAK67C,UAAUG,SAC/Bh8C,GAAAA,KAAK67C,UAAUl8B,UAGVk8B,EAAAA,EAAAA,EAAAA,GAAUW,KAAQp8B,QAEjCgjB,UAAwBqZ,EAAAA,EAAAA,KAAAA,QAGxBja,gBAFKqZ,KAAAA,QAAwBpZ,mBACxB8Z,EAAAA,UAAmChhC,KAG1C,SAGMjZ,EAAAwI,EAAAyE,EAAAnK,GAAA,GAAAg3C,KAAAA,EAAAA,KAAR,OAAkBvB,EAQhB,IAAA76C,KAAaqhC,UAGPv2B,GAAA,OAAA,EAAA4xC,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,KAARb,UACE5gC,IAAAhK,GAAQmP,GAAQpgB,MAAK27C,EAAAA,OAAeZ,KAAAA,eAAQvY,EAAAA,EAAAA,EAGtCp9B,IAAA,EAAA,GAAApF,KAAA28C,kBAAR,IAAuBv8B,CAAAA,IACrBnR,EAAAA,EAAOqB,KAAKqL,UAAc3b,KAAK27C,KAAAA,UAAeZ,SAAQtY,KAAAA,UAGhD9iB,KAAA3f,KAAAu8C,UAAAA,OAARn8B,MAAA,IAEEk8B,EACA15C,KAIA65C,aAAA3xC,EAGAmE,GAAM2tC,OAAcF,KAAAA,UAAeJ,IAAWl8B,EAAAA,GACxCy8B,KAAS78C,eAAK28C,EAAeL,EAAWl8B,EAAAA,IAAAA,EAC9C/L,OAAIyoC,GAAAA,EACFR,UAAsBt8C,UAAKo7C,SAAgBE,GAAAA,OAAAA,EAC3CsB,KAEA58C,KAAK+6C,EAAAA,UAAQvY,eACbxiC,SAAayiC,GAAAA,OAAAA,EAAAA,KACb7/B,OAEA5C,KAAK+6C,QAAQvY,iBACbxiC,EAAK+6C,UAAQtY,eAAAA,SAITngC,GAAA,OAAAy6C,KAAAA,MAAAA,EAAAA,KAARpB,QAAA37C,KACE+6C,QAAU/6C,kBAAa+T,EAAOiB,UAAKlS,eACbiR,SAAOiB,EAAAA,EAAKgoC,EAE3B53C,GAAAwO,IAAAA,EAAAA,QAAAA,CAAAA,IAAoBopC,EAAAA,KAGrBN,eAAAO,EAAAA,OAAAA,EAAAA,KAARN,eACE7xC,EAAI9K,OAAK+6C,EAAAA,UAAQ5mC,EAAAA,SAAAA,KAMPrE,QAAO40B,KAAAA,aAAAA,EAAAA,EACR1kC,KAAK+6C,QAAQhnC,gBAAOtV,KAEnBqR,QACD9P,iBAAK+8C,EAAAA,EAAAA,KAAuBlC,QAE9B76C,gBAAa+T,KAAOrV,QAAAA,oBAGrBw+C,EAAAA,UAAAA,uBACIntC,SAAO20B,GAAAA,OAAAA,EAAAA,KAAAA,QACR90B,OAAMiB,KAAO7Q,OAAK+6C,KAAQhnC,QAAOrV,OAAAA,KAEhCqR,GAAKotC,EAAAvpC,oBAEDmpC,IAAAA,EAAAA,UAEP/8C,oBAAoBvB,SAAAA,GAKrB,OAAAuB,KAAAy8C,QAAAA,kBAAsCr8B,EAC5CpgB,EAAAA,KAAKg7C,EAAAA,uBAEAU,KAAQlW,QAGbzxB,OAAwB/T,WAAKi9C,EAAAA,GAAAA,IAAAA,KAAoBpC,uBAGpCrmC,EAAAA,IAAAA,KAAAA,QAA2BT,OACxC/T,YAAasV,EAAAA,UAA4B1Q,oBAC5B4Q,SAAexV,GAAAA,OAAK+6C,EAAQvY,KAAAA,EAAAA,uBAA8BC,EAAAA,MAAAA,OAAAA,KACvEziC,QAAK07C,OAAQlnC,YAAAA,EAAAA,GAAAA,IAA2BxU,KAAA+8C,uBAGR/8C,EAAAA,IAAK+6C,KAAQ/U,QAAAA,OAAiBhmC,YAAK+6C,EAAQ9U,UACrEmX,aAA2B,SAAW96C,EAC5CtC,GAAAA,KAAK07C,oBACuB17C,KAAIA,QAAK+6C,OAAQx6C,IAAWP,EAAAA,KAAK+6C,oBAAQ90B,GAAgBjmB,KAAMA,QAAK+6C,yBAC3FW,OAAQhY,KAAAA,QAAeC,UAAAA,EAAAA,IAE5B3jC,KAAK07C,QAAQpmC,SAAYtV,EAAAA,EAAKk9C,KAAAA,QAAAA,gBAGpB3b,KACRvhC,QAAK07C,kBAAsB17C,KAAA4lC,QAAAA,yBAGDxE,cAAe2Z,IAAAA,EAAAA,EAAQtY,KAAAA,KAAAA,QAInDuD,eAAqB0V,KAAQhmC,QAAAA,WACrB1V,EAAK+6C,EAAAA,OAAQvY,SAAAA,GAAAA,KAAiBxiC,QAAK+6C,KAAQtY,EAAAA,IAAAA,EAAAA,IAAAA,KAE/C4a,QACCr9C,SAAK+6C,KAAQ5mC,QAAAA,iBACgBkmB,MAKHr6B,KAAhB66C,QAAMzZ,WAAuB2Z,KAAQ5mC,QAAAA,aAC7CmpC,EAAA3Z,cAEH3jC,KAAK07C,QAAQzX,UAAe7C,KAAAA,oBAAuBqB,GAAAA,IAAAA,EAAAA,MAAmB8a,KAItEjL,QAAiBoJ,YAAQhmC,EAAAA,aACjB1V,KAAK+6C,QAAQvY,SAAAA,EAAAA,MAAiBxiC,EAAK+6C,KAAAA,QAAQtY,kBAPnB8a,IAgBpCv9C,EAAAA,KAAK07C,QAAQ7V,aAGH7lC,EAAAA,EAAAA,KAAK08C,QAAAA,gBACAC,KAAAA,QAAev8B,kBAEfuyB,GAAAA,EAAAA,GAAAA,KAAaL,QAG5Bn+B,oBAEEkpC,EAAO9hC,EACPiiC,EAAAA,IAAAA,GAAU,MAIZl7C,EAAA8+B,QAFKqc,KAAAA,QAAAA,kBAKC,IAAAA,IAAAA,EAAAA,EAAAA,GAAAA,IAAAA,KAAR/B,QAA0BY,SAA1Bh6C,EAAA8+B,MAKQ,EAAAphC,KAAA+6C,QAAAtY,iBAAkCjV,GAAAA,EAAAA,EAAAA,EAAAA,KAAakwB,QAAAA,aAKhDxC,EAAAA,EAAAA,KAAAA,QAAuB5wC,gBAGxBtK,KAAKm7C,QAAAA,kBAIJA,IAAAA,KAAAA,KAAAA,QAAuBn6C,UAAOqK,IAAAA,EAAAA,KAAWqxC,eAAM5xC,GAAK6yC,EAAAA,KAAAA,eAnT3B7yC,GAAA9K,KAsTxBi8C,UAAA0B,aAAAA,EAARj4C,EAAAC,GAAA,IAAAC,EAAA,CAAAwa,MAAAtV,EAAAuyC,QAC+Br9C,EAAKk7C,UAAAA,GAAAA,OAAAA,KAClCl7C,kBAAKk7C,GAAAA,GAAAA,EAAyB7xC,UACvBu0C,kBAAkB59C,SAAKs7C,GAAAA,IAAAA,EAAc95C,OAAK,sBAEhCq8C,SAINz4C,EAAIooB,WAA4B1qB,EAAQsC,WAIzCo4C,KAAAA,uBAGLrC,KAAAA,GAAAA,OAAuBn7C,KAjTMm7C,uBAAzBnB,KAAAA,qBAuTbh5C,OACEqK,YAAY9E,WACV,OAAAuE,EAAA6yC,oBAF+B,QAK1BxB,EAAA9yC,UAAAi8B,gBAIL/pB,WAEO,IAXXjZ,EAAmCtC,KAAAu5C,EAAAA,KAAAA,uBAwBjCv5C,KAJIq9C,uBAEYtuC,GAAAA,OAAc6uC,kBACD59C,KACXs7C,cAA2Bx4C,MAAQy6C,SACrC9nC,GAAK8nC,EAAAA,QACL9nC,EAAAA,IAAc,IAAOjG,EAAAA,EAC/B8iC,EAAU78B,EAAAA,OAAcrQ,IAC1BktC,EAAU78B,GAAAA,UAAmB,KAKjCzV,KAAAm7C,qBAjCWF,QAjRsBzY,yECpFnC,OAAAlgC,EAAA4D,KAAAlG,OAOEA,KAAmBg8C,OAAAE,EAAAF,EAAAA,GAAAA,EAAAA,UANX8B,KAA8C,SAC9CC,EAAAA,EAAmCxuC,EAAAnK,GACnC,OAAA44C,GAAmClzC,GAAAuwC,EACnC9B,wBACD55B,EAAAA,EAAe7U,GAsHxB,IAAA,IAlHUyE,GAAA,EAAAnK,EAAA0F,EAAAiE,OAAAkvC,GAAAA,EAAAA,EAARlvC,OAAA,GAAoB0H,IAClBd,EAAMuoC,EAAOznC,OACPqC,EAAOrC,IAAKqC,EACdrC,EAAAA,EAASzW,EAAAA,KAAK+9C,OAChB/9C,GAAAA,EAAK+9C,EAAAA,KAAQjlC,KAEF9Y,GAAAA,EAAKg+C,KAAAA,EAAAA,KAChBh+C,GAAKg+C,EAAAA,KAEM/uC,EAAA,KAATivC,EAAAA,EACFA,KAAKplC,EAAOA,GAED,EAAAvJ,GAAA,EAATuJ,OACGolC,EAAAA,EAAOA,cAIR1uC,GAAA2uC,KAAAA,CAAAA,EAAAA,KAARtqC,OAAoB4C,eACAunC,EAAAA,aACdI,CACFA,OAAKtlC,IAEPrC,EAAKynC,YACLznC,EAAY,IACZzW,EAAAA,oBACIA,EAAAA,GAAK+9C,KAAAA,SACFA,EAAAA,KAWFD,KAAA,GAAA99C,KAAA+7C,MAAAA,KAAP/7C,KAAAg+C,MAEE,KADAh+C,KAAiBA,UAAKq+C,GACbj5C,KAAOA,KAAWA,EACzBk5C,OAAcC,EACZL,UACAplC,YACA3V,SACAe,GAAO,IAAA4G,EAAAxI,EAKN47C,KAAA3uC,EAAAjN,EAAAwW,KAAAmC,IAAPjb,KAAA+9C,QAGE/9C,KAAaA,MAAK89C,GAAK36C,IACvBnD,KAAAg+C,QAAaj9B,KACX/gB,MAAKi+C,GAAAA,OAAYxnC,IACjBzW,EAAAA,KAAKm+C,GAAAA,OAAY1nC,IACLvS,EAAAA,KAEP4G,IAAAyzC,EAMFl1C,UAAA80C,YAAP,SAAiBh7C,GACf,IAAMsT,EAAOzW,KAAK89C,MAAK36C,OACvB2H,IAAAA,EAAAgO,KAAIrC,GACKA,EAAKvS,KAEP4G,EAAAxI,EAAAwW,KAGF,KAAA9Y,KAAAw8C,MAAPl6C,EAAA,OACEtC,KAAMw+C,QAAYT,KAClBA,MAAgBz7C,IAAAi8C,EAAAl1C,UAAmBnF,SAG9B,SAAA5B,GAAAod,IAAP,IAAA5U,EAAA9K,KAAwBkE,UAEXlE,EAAK89C,EAAAA,EAAAA,EAAK36C,IACrB2H,EAAAR,KAAayW,CAAAA,KAEXtK,KAAOzW,KAAK89C,KACZ99C,IAAKi+C,KAAAA,MAAAA,QACA/5C,EAAAA,UACA+W,IAAIjb,SAAaA,GAAAA,IAAKg8C,EAAAA,KAE3BvlC,KAAOzW,GAAK+9C,YACZ/9C,IAAKi+C,GAAAA,KAAYxnC,YACVzW,GAAK89C,KAAU36C,YACXA,GACNe,EAAAA,OACLlE,MAAK89C,EAAAA,UACAW,UAEYz+C,SAAKq+C,GAClBC,IAASx7C,EAAAA,KAASg7C,KAEbQ,GAASr0C,YACX9G,IACAe,EAAAA,EAAQA,MAGXg6C,MAAMK,EAAAl1C,UACAmzC,KACH,WAIPx8C,IAAAA,EAAK89C,KAAK36C,MACVnD,OAAK2f,OAEP3f,EAAKm+C,KAAAA,EAAAA,OAAY1nC,EAErBpN,UA3HayyC,IAAAA,kXAiCT97C,ynBCtCJ8K,EAAAyE,GAAAnK,EAAA,GACA,iBAEAgvC,SACA,mBAEAA,QACAC,SAE8BplC,EAAAmlC,QAAAC,SAAA/xC,EAAAwI,EAAAyE,EAAAnK,QAEN,IAAA,IAClBs5C,EAAkBp8C,EAAAQ,OAAA,EAClB67C,GAAc,EAAAx5C,KAAA8L,EAAA3O,EAAA6C,MAUpB8J,GAAA0G,EAAA,EAAA1E,EAAAhC,GAAA0G,EAcE,EAAA1E,EAAAnG,EAAAyE,EAAAN,GACU0xB,EACS5oB,EACA+K,KAEA87B,GAEM7J,OAGU79B,EAVnC,GAAAjI,GAYE4E,OAAA+D,mBAXQ3I,GAAA0xB,GAAAA,EAAAA,MACS5oB,KAAAA,SACA+K,SAAAA,EAAAA,GAAAA,OACA8L,SAAAA,EAAAA,GAAAA,EACArf,EAAAqvC,EAAAA,KAAAA,OACAhnC,eAEkBinC,EAAAxzB,aAAAA,CAAAA,OACD,IAAArI,EAAAA,iBACD,EAAA9L,IAAAA,EAAAA,EAAAA,MAtB3B4nC,EAAAA,EAAAA,MAAAA,EAAAA,EAAAA,KAKAC,EAAAl4C,EAAAA,MAAAA,EAAAA,EAAAA,MAoBDD,EAAAA,EAAAA,MAAAA,EAAAA,EAAgBL,MAAAA,EAAAA,EAASC,MAAAA,EAAAA,4BACXE,EAAAA,YAzCK8I,EAAA,YA0CxB+L,EAAK3U,cAAcsF,EAAAA,EAAAA,EAAM1L,SAAAA,YACzBw+C,EAAKp4C,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAcH,EAAAA,EAAAA,GAAAA,IAAAA,EAAaw4C,EAAA/4C,KAAAlG,OAAeA,KAAA,OAC1Ck/C,EAAAA,QAAAA,EAAAA,EAAAA,SAAyBhoC,EAAAA,EAAAA,eAA0BA,EAAAA,EAAAA,iBACxDjG,EAAKkuC,EAAAA,WAAAA,EAAAA,EAAAA,YAA+B34C,EAAAA,EAAAA,iBACpCd,EAAKy5C,EAAAA,gBAAAA,EAAoBz4C,EAAAA,eA1CLd,EAAAC,EAAAi5C,eA2CfK,IAAAA,EAAAA,aAAoB14C,GAAAA,EAAAA,cAAaF,SAAeC,cAEhDwF,OACHw2B,EAAAA,cAAiB97B,UACjB+7B,IAAAA,cACAlL,EAAAA,cACAC,MAAAA,WACAkL,SAAAA,EAAgB97B,cAChB+7B,aACAzL,cACAG,QAAAA,EAAAA,oBACaxxB,EACbuxB,eACAnK,KAAAA,EAAAA,eACAhhB,MAAAA,EAAAA,oBAEGupC,SAAAA,cACA4J,OAEAC,EAAAA,oBAAmCh2B,UAAei2B,IAAAA,mBAAuB/4C,EAAAA,oBAEzEwR,aAASrR,cAA2Co4C,QAAAA,EAAAA,WACpDh8B,CAAAA,gBAAe9b,EAAYy7B,iBAChC,EAAK3f,gBAAe9b,EAAAA,iBAAiBm4C,EAAAA,eAEhCP,EAAAA,cAAWtK,EAAAA,kBAAoB,EAAAjd,mBAAUkoB,EAAAA,YAAaj9C,EAC3D80B,aAAgBmd,EAAAA,gBAAAA,EAAoBtoC,iBAAK,GAAApG,EAAK25C,oBAEzCC,EAAAA,aAAYnL,EAAAA,YAAAA,EAAAA,eAAyBoL,EAAAJ,sBAAkBh9C,SACvDm9C,EAAAA,SAAYlL,EAAAA,SAAAA,UAAoB5tC,IAAAygB,EAAA9kB,EAAAA,gBAAUk9C,EAAAA,eAkTnDx4C,YArWEnB,EAAAe,eAAAf,EAAAid,eAAW9b,YAAAnB,EAAAs5C,qBAAiDt5C,EAAA+4C,WAAWpnC,uDAsDhElV,MAAAuD,EAAA+4C,WAAPrK,qBACOx8B,SAASrR,GAAU2V,OAAOsjC,EAAwB3/C,aAAK8+C,MAAAA,EAAAA,YAI5Dv1C,qBAAwBvJ,SAAK4G,GAAAA,OAAe5G,EAAKm/C,aAAAA,MAAAA,EAAqBn/C,YAAK4/C,qBAAyBC,SAAAA,GAAAA,OAAAA,EAEpGL,aAAMl2C,MAAOzD,EAAA,OAAAi6C,EAAAd,EAGPC,GAAAprC,OAAA+D,eAAA49B,EAAAA,UAAR,kBACOxpC,CAAWw2B,IAAAA,WAAAA,OAAuBnX,IAAAA,EAAAA,cAAiB5d,OAAQzM,YAAOilB,EAAAA,cAClEja,IAAAA,EAAAA,UAAWy2B,QAAmBnyB,WAAUtQ,KAAKqrB,SAAAA,UAAiBlf,OAASnL,EAAAA,KAAOilB,iBAAAA,EACnFjmB,EAAKgM,yBAAWurB,KAAkBv3B,cAAgBwiC,KAAAA,oBAA6BxiC,KAAKgjB,mBAAgBrM,KAAQq/B,yBACvGhqC,EAAAA,UAAWwrB,QAAAA,KAAmBlnB,OAAKqL,EAAM3b,UAAKgM,kBAAWy2B,WAAwBzf,KAAAA,WAAgBrM,gBAAQnW,KAC9GR,iBAAgB0iC,MAAAA,OAAiBzc,iBACjB0c,KAAAA,WAChB3iC,iBAAgBk3B,KAAAA,KAAAA,KAAAA,iBAAyBlrB,OAAWurB,OAAAA,kBAAuBrgB,KAAeyB,WACrF3M,gBAAWqrB,KAAAA,WAAqBr3B,gBAAgBw3B,KAAAA,MAAAA,KAAmBx3B,gBAAKkX,QAC7ElX,eAAgBi3B,KAAAA,WAAc3mB,iBAAgBtE,KAAAA,MAAWkrB,KAAAA,WAAoBl2B,iBAAOilB,KACpFjmB,gBAAgBo3B,QAAAA,YAAoB7mB,KAAMvQ,WAAKgM,eAAWqrB,EAAAA,KAAAA,WAA4BpR,cAAAA,EACtFjmB,KAAKgM,WAAWihB,kBAAkBjtB,KAAKgM,WAAWirB,gBAAmB/f,KAAAA,eACrElX,KAAKgM,KAAAA,WAAWC,mBAAwBD,KAAAA,WAAWorB,iBAAoBlgB,KAAAA,eAEjDpQ,KAAA9G,KAAAA,WAAK6G,YAALyJ,KAAAC,MAAX5I,KAAOqE,WACFyB,kBAAgBzB,OAAWirB,kBACjC/qB,KAAMC,WAAiBH,aAAWC,KAAAA,MAAAA,KAAgBD,WAC5CxL,mBAAqBwL,OAAAA,kBAA2BhM,KAE9D2H,WAAco4C,gBAGX//C,KAAK6/C,WAAAA,YAAAA,KACR7/C,eAAK6/C,KAAAA,KAAAA,WAAmCr5C,iBAAcxG,KACtDA,WAAK8iB,aAAe9b,KAAAA,eAAiB64C,KAAAA,IAAAA,IAAAA,EAAAA,EAAAA,EAGvC7/C,KAAMggD,aACIC,EAAAA,EAAAA,OAALjgD,IAAAA,CAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,MAAAA,MAAAA,KAAAA,WAAAA,YAAAA,KAAAA,EAAAA,MAAAA,OAAAA,KAAAA,WAIagM,iBAAWihB,KAAAA,EAAAA,MAJxBjtB,WAOA6/C,KAAAA,WAAAA,iBAAsCG,KAE3ChgD,EAAKm/C,MAAAA,SAAAA,SAAoBjzC,KAAMC,0BAA+BD,KAAMC,wBAC/D2W,SAAqBrV,cAAgBzB,SAAWirB,KAAAA,eACrDj3B,YAAK8iB,KAAe5W,0BAAuBF,IAAWorB,EAAAA,KAAAA,kBAGjD,wFAKPp3B,KAAAgM,WAAAihB,gBACY2yB,MAAAA,KACR5/C,wBAA0BuG,YAASC,EAAAA,KAAAA,oBAC9Bsc,MAAAA,OAAe9b,KAAAA,iBAAiB44C,MAAAA,OAAAA,KAIvC98B,eACUm9B,MAAAA,MAALjgD,KAAAA,WAAAA,YACQA,KAAK2gC,KAAQliC,eADrBuB,MAAAA,OAAAA,KAEcA,WAAKgjB,aAAgBrM,MAAQrW,EAAAA,UAF3CN,UAAAA,SAGiBgjB,GAAAA,KAAAA,QAAgBrM,EAAAA,KAAAA,cAHjC3W,EAAAA,UAOKigD,WAAAA,WAAiB,IAAA39C,EAAAtC,KAAckgD,KAAAA,qBAApClgD,KACcA,mBAAKgjB,SAAgBrM,cADnC3W,SAGKigD,KAAAA,eAAiBj5C,YAASk5C,KAAAA,qBACjBlgD,IAAAA,EAAKgjB,KAAAA,kBAAwBgjB,yBAEtCia,KAAAA,QAAAA,WAAiBr7C,IAAS,kBAN/B5E,KAAAA,gBAAAA,QAWHM,WAAA,gBAAsCN,KAAK8+C,gBAA3CnoC,QAAApW,SAAA,OAAAuK,GAAA9K,KAKFggD,kBACE,cAAiChgD,EAAK8+C,WAAAA,oBAAtC9+C,KAAAgjB,gBAE4B2d,QAAQ/rB,WAFpC,KAAA5U,KAAAigD,kBAGyBprC,SAAajQ,EAAAA,WAHtC,mBAAA5E,KAMuBA,gBAAa6U,QAAAA,eANpC,KAOY7U,KAAK2gC,kBAPjB,SAYG3gC,EAAAA,aAAKigD,0BAALjgD,GAAAA,+BAAoFA,KAAImgD,eAAAA,iCAAxFngD,GACoBA,0BADpBA,KAAAA,eAAAA,8BAAAA,KAAAA,QAAAA,OAAAA,IAAAA,aAIkEogD,KAAYzf,QAAI0f,aAAAA,IAAkB,gCAASF,KAJ7GngD,QAAAA,aAAAA,IAAAA,aAKyC8+C,KAAAA,QAAAA,OALzC9+C,IAAAA,OAAAA,GAAAA,KAAAA,kBAOKigD,mCAA6DP,EAAAU,aAAY,IAAIV,EAAAW,yBAAsBF,yBAPxGngD,KAAAA,QAAAA,OAAAA,IAAAA,2BAAAA,KAAAA,kBAAAA,6BAAAA,EAAAA,aAAAA,IAAAA,EAAAA,mBAU8E,SAAImgD,EAAAA,yBAVlFngD,mCAWgC4U,KAAOhQ,eAC/B5E,0BAA0B4E,KAZlC5E,kBAcKigD,6BAA8CG,EAAAA,aAAgB,IAAAE,EAAAA,mBAdnEtgD,IAAAA,EAAAA,yBAekBgjB,6BAAmChjB,KAAA8+C,eAAene,0BAEpE3gC,KAAKigD,kBAjBLjgD,6BAiBmDogD,EAAYA,aAAIG,IAAAA,EAAAA,yBAjBnEvgD,wBAkB2B2gC,KAAAA,QAAe/7B,OAlB1C5E,IAAAA,YAsBKigD,KAAAA,QAAAA,aAALjgD,IAAAA,KAAAA,KAAAA,kBAAAA,iBAAAA,EAAAA,aAAAA,IAAAA,EAAAA,uBAOKigD,kBAPLjgD,KAAAA,gBAAAA,QAAAA,YAAAA,UAAAA,KAAAA,QASmBA,OAAK2gC,IAAAA,WAAQ7rB,KAAAA,kBAGrC9U,iBAAkBgf,EAAAA,aAAQ,IAAI5Z,EAC5B46C,6BACgCQ,2BAAqCxgD,KAC3DigD,QAAAA,OAAAA,IAAiB,WAAwBn1C,GAAA9K,KAAAigD,kBAA6B,8FAGgBjgD,KAAK2gC,kBAAQjiC,iEAC7DgmC,KAAsB/D,QAAA7rB,qBAA6B6rB,IAAAA,KAAQliC,KAAAA,QAAcuW,KAE3HhV,SAAK4/C,SAAAA,EAAAA,GAAmB50C,GAAAA,EAAAA,kBAGnB,KAAA0qC,EAAAA,EAAAA,aAAAA,EAAAA,IAAAA,MAAPpzC,EAAA29C,kBACOzK,KAAAA,EAAAA,EAAAA,wBAGC0J,EAAAA,IAAAA,SAARp0C,GAAA9K,KAA0C8G,kBAEtBD,KAAAA,EAAAA,EAAAA,uBAChB,aAAqBL,EAAAA,MAAAA,OAAcxG,KACnCA,QAAK4G,YAAcI,IAAAA,MAAAA,KACnBhH,kBAAkBsK,KAAK8nB,EAGzBquB,EAAA/b,uBAAyB5hC,wBAClB8D,KAAcsD,QAAAA,WAAiBrD,IAAAA,MAAaoD,KAAAA,mBAI9ClC,YAAP+C,GAA8BhE,EAAAA,UACvBo4C,yBACLl/C,WAAKw1C,KAAAA,qBAGAI,EAAAA,UAAAA,oBACAJ,SAAAA,EAAAA,GAAAA,IAAAA,IAGAjmC,EAAAvP,KAAA6G,aAAP/D,OAAAyM,GACEvP,EAAAA,IAAK4G,CAAAA,IAAAA,EAAAA,SAAcF,cAAiBi4C,OAG/B3+C,KAAA4G,cAAPI,YACOJ,GAAAA,KAAAA,aAAcF,KAAUC,GAAIg4C,KAG5B3+C,KAAA6G,aAAAgqB,OAAAA,GAAAA,KAAPjqB,cAEEsD,YAAYi1C,KAAAA,aAAoBx0C,QAAS7H,EAAAA,UAClCq8C,SAAAA,SAAAA,EAAoBj1C,GAAAA,KAAAA,oBAAiBi1C,EAAAA,GAAAA,KAAoBx0C,qBAShEq0C,EAAA31C,UAAoCrJ,kBAAKkX,WAAsBtL,KACxCzD,qBAAc+O,EAAAA,UAAsBtL,OAC5B0E,WAA2BtQ,KAC7BsQ,cAAyBtQ,UAAKkX,OAAepQ,IAAAA,EAAOuC,UAGnDrJ,QAAKkX,WAAAA,KAAepQ,cAKzBP,UAASooB,IAAAA,IAAAA,EAAAA,UAAAA,mBAGf3nB,SACV05C,EAAAA,EAAAA,GAAAA,KAAAA,KAAAA,oBAAkEjK,SAAgD3zC,QAInHm8B,KAAgCuX,oBACyBtsC,YAAUgN,KAAAA,oBACxDlQ,SAAiB05C,IAAAA,GAAAA,GAAAA,EAAAA,CAAAA,IAAAA,EAAAA,EAAAA,GAAwBlK,KAAkCtX,eAK5Fv8B,OAFiBqE,MAAAA,EAAAA,EAAYhH,GAAAA,KAAK0gD,eAAAA,OAAwBlK,MAA+Bx2C,EAAAA,KAAKkX,IAAAA,EAAAA,GAAAA,EAAAA,KAAeyB,IAAMgoC,EAE/GnK,KAAiDt/B,eAEUpQ,KAAK9G,GAAKkX,KAAAA,GAAAA,KAAAA,eACtDlQ,MAAYhH,EAAAA,GAAK0gD,CAAAA,IAAAA,EAAAA,SAAAA,yBAGjCvB,GAAAA,EAAAA,EAAAA,YAAoBn4C,KAAAA,wBASnB05C,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,EAAAA,EAAAA,QAAR,CAAA,IAAAl9C,EAAA4B,IAA6Cw7C,EAAkBC,EAAgBx7B,GAAAA,EAAAA,EAAA1P,IAAA0P,EAAAA,EAAAA,GAAArlB,KAC7EkX,eAAyB1Q,KAAAA,EAAAA,YAKzBxG,KAAA0gD,wBAJ0C10C,EAAAA,EAAAA,IAAAA,IAAWC,EAAAA,EAAAA,EAAAA,EAAAA,GAAAA,EAAAA,YAC7CC,KAAMqB,wBAA+BtB,EAAAA,EAAAA,EAAAA,KAAAA,eAC/BoB,KAAUuzC,IAAW5gD,IAAKgM,EAAAA,CAAAA,IAAAA,EAAAA,IAAWihB,EAAAA,EAAAA,GAAAA,KAAAA,eACrCxf,KAAWzN,EAAAA,YAAKgM,KAAWihB,wBAClCtlB,EAAAA,EAGF/B,KAAA5F,KAAAm/C,oBAAPn4C,YAIO7B,MAAA65C,EAAAld,UAAAA,wBAEA0T,SAAAA,EAAAA,EAAAA,EAAAA,QACLx1C,IAAKo/C,IAAAA,EAAAA,GAAAA,IAGAnuC,EAAA1K,SAAAuM,cAAP,OACkB,OAAA7B,EAAAjR,MAAK6G,OAAAA,EAAAA,KAALmF,WAAAC,iBACA,KAIXgF,EAAA/E,MAAAqB,IAAAwoC,EAAAA,KAAAA,WAAW7tC,iBACQlI,KAAKkX,EAAAA,MAAAA,KAAevU,EAAAA,KAAOgqB,WAAazV,gBAAevU,KAAAA,EAAO4Y,MACtEjL,MAAStQ,KAAKkX,WAAAA,iBAAyBlX,EAAKkX,GAAAA,KAAAA,GAAAA,EAAAA,UACtDxW,aAAmBsiB,aAAgBrM,EAAAA,UAAQjW,iBAEd,WACdV,KAAK6G,oBACbiF,KAAYszC,cAEPp/C,EAAKkX,UAAAA,MAAevU,WAC9B+I,IAAW1L,IAAKkX,EAAAA,EAAAA,EAAAA,KAAAA,aAAsBrN,EAAAA,EAAMoR,OAC5CkuB,IAAcnpC,EAAKgjB,GAAAA,UAAAA,IAAgBrM,EAAAA,UAAQwyB,WACtCniC,SAAAA,EAAYhH,GAAAA,IAAKq/C,IAAAA,EAAAA,KAAYyB,eAA0B1uB,OAA+C1xB,MAAaV,KAAKgM,eAAWihB,OAAAA,EAAiBjtB,EAAAA,KAAKkX,IAAAA,KAAAA,eAIxKvU,OAAAC,EAAA5C,KAAAkX,eAAYyB,KAAA,GAAA1H,EAAAjR,KAAAgjB,gBAAZrM,QACEjW,YAAmCV,EAAAA,EAAK8+C,GAAAA,EAAAA,IAAAA,CAAAA,IAAAA,mCAGlC,GAAA,IAAA35C,EAAAwQ,EAAA4pC,KAAAA,eAAR58C,OACE3C,MAAK+gD,EAAAA,KAAAA,eAA0BnlC,OAAMF,MAAUpZ,IAAEqW,GAAAA,EAAM3Y,KAGjDgjB,gBAAAw8B,QAARrW,YACEnpC,EAAAA,YAAK+gD,KAAAA,YAA0BnlC,UAAYC,EAAIvZ,EAAEqW,IAAAA,EAAMjT,EAAAN,EAGjD6L,EAAAjR,KAAAgM,WAAA+0C,gBAAR/gD,KAA0B4C,eACxB+V,SAAmB4C,OAAU3D,eACV/Q,EAAAA,UAAa0U,oBAIjB6W,CAAAA,IAAIznB,WACbq2C,MACG90C,IAAM+0C,EAAAA,KAAAA,gBAA2BC,YAAc,EAAAC,cAGhD,IACJ5lC,EA7WgBlS,UAqBnB4sC,aAAAA,SACA3zC,GAAAtC,KAAAovB,kBACA9sB,EAAAmZ,GAAAkJ,EAAAA,GAAAA,EAAAA,GAAAA,EAAAA,GAAAA,EACAhM,MAAA,IAAA6D,EAAAA,UAxBQgV,aAAoBplB,SAApBolB,GAAAA,KAAAA,oWA6BgBhxB,mXCrD7ByO,GAAA4E,OAAA+D,eAEA9M,EAAAyE,EAAAN,GACAA,GAAAmyC,EAAAphD,MACAA,KAAAy0C,SAEA,SACAnyC,EAAAwI,GAEa,OAAAo1C,SAAa3wC,EAAAnK,GAAA0F,EAAAyE,EAAAnK,EACb9C,KAAA++C,OAAYzpC,eACZ0pC,EAAAA,aAAe,CAAAp9C,OAAA,IACfq9C,EAAAC,sBAAkBD,EAAAhB,6BAClBkB,EAAsBnB,uBACtBiB,EAAAnB,yBAAemB,EACflB,mBAAAA,EAAqBD,aAAAmB,EAAAE,oBACrBtB,EAAAA,gBAA2BoB,EAAAD,aAAAC,EAC3BF,UAAAf,EAAAA,gBAAAA,EAAyB,IAAAoB,EAAAC,EAAA,MACzBC,EAAArB,EAAAA,KAAAA,EAAAA,EAAAA,KAAAA,EAAAA,EAAAA,MAAAA,EAA+BoB,EAAA,MAAAE,EAAAF,EAAA,MAAA/7C,EAAA+7C,EAAA,MAE5CJ,EAAArB,WAAA,aAIqB3xB,EACToS,UADS,YAAApS,EAAAA,aACToS,eACkCpR,EAAAA,gBAAAA,kBACRvM,EAAAA,oBACH2Z,sBAPH4kB,EAAInB,aAgOpC,eArNSmB,EAAA32B,mBAAU7W,qBAIVwtC,EAAApB,yBAAP,qBAUEoB,EATAjB,uBAAgC3xB,mBAAAA,EAAAA,6BAENY,yBAA4C6C,IAMrD0vB,EACRl/C,oBAA8B+V,EAAQrW,EAAGM,EAAAA,EAAKwC,EAAGxC,GACxD5C,KAAakpC,UAAStmC,EAAG5C,KAAKi3C,QAAAA,EAAW/R,KAAAA,wBAAckT,EAAmB2J,KAAen/C,gBAM3FwC,EAAApF,KAAa28B,aACFuM,EAAAA,KAAAA,UAAiB+N,IAAAA,EAAAA,SACdj3C,OAAKi3C,EAAAA,UAAUlqB,UAGb,SAKdzqB,GAAIw1C,KACAC,QAKO/3C,GAAKi3C,EAAAA,UACZ+K,UAAsB,SAAwB1/C,EAAGiN,EAAAnK,EACnD0yC,EAAAA,EAAWt0C,EACXmC,EAAAE,GAAcm8C,IAAar+C,IAAAA,EAI3B4/B,KAAOhV,UAAIypB,yBAEAC,EAAAA,KAAAA,wBAAwCJ,oBAK5BtoC,GAGfg0B,EAAKxW,EAAAA,EAAAA,KAAAA,IAGfzqB,EAAM2/C,OAAmB1zB,GAAAA,EAAAA,GAAAA,EAAU/nB,IAAAA,GAAAA,EAAAA,SAAcgJ,EAAAxP,KAC7CyN,WACUvB,YAA6BuB,EAAK2qC,gBAMlClsC,GAAMg2C,IAAAA,EAAU,CAAAluC,EAAAxE,EAAA,EAAA,MAKb5M,IAAKiqB,EAAWkrB,EAAAA,EAC7BlrB,EAAUjqB,IAIT5C,CAAAA,EAAAA,SAAK28B,EAAAA,KAAaqM,WAAAA,IAAkB+Y,EAAAA,KAAqBl1B,UAC5Do1B,WAAsBt7C,GAAAA,IAAIy5C,EAAAA,CAAAA,IAAAA,GAAAA,EAAAA,EAEtB1/C,EACFuhD,EAAYv7C,KAAAA,UAAc,GAAA25C,EAAAA,OAAAA,GAAAA,IAAAA,EAGpBlX,GACN,GAAA,CAAK9hB,GAAA,EAAA,IACS3gB,EAAAA,EAAAA,QAAUC,EAAI,IAAA25C,EAAAA,eAAAA,KAC1BrJ,UACG30C,EAAA21C,mBACSvxC,EAAUC,EAAAA,GAAI8I,EAAA8wC,IAAAA,EAAAA,GAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,EAAAA,EAAAA,WAE5B,IACE0B,EAAYv7C,KAAAA,UAAcF,cAAA25C,QAAAA,GAAAA,EAK5B5c,IAAKyB,EAAAA,MACPid,MAAYv7C,EAAAA,EAAAA,MAAc2gB,IAAA64B,EAAAA,MAAAA,QAGnB7a,SACP4c,GAAYv7C,GAAAA,GAAAA,IAAUC,EAAI6I,KAAA8xC,KAAAA,aAGnBlc,gBACez+B,GAAAA,IAAI06C,EAAAA,OAAAA,EAGxB9d,UAAKqV,IAAAA,EACPqJ,cAAsBt7C,GAAI6gB,EAAAg6B,UAAAA,IAAAA,EAGxBje,oBACUv4B,GAAAA,IAAAA,MAAci6B,EAAAA,UAAAA,IAAAA,EAAAA,wBAEKjB,MAAc,IAAAiB,YAAAA,EAAAA,UAGtC4T,IAAAA,EAAAA,8BACmB4I,cAAAA,EAAAA,UAGnBle,IAAKsB,EAAAA,0BACSyB,EAAAA,UACT3B,EAAAA,UACS8B,IAAAA,EAAAA,YACjBjC,EAAAA,YAAmBA,EAAAA,UAEvB79B,IAAaoJ,EACbA,cAEcs2B,EACdA,SAKF7e,EAAA9gB,UACEC,IAAK46C,EAAAF,WACA95B,EAAAqxB,eACM5T,EAAYj1B,UAAeiT,IAAAA,EAAAA,iBAAgBrM,EAAQouB,cAAAA,EAAAA,YAC1Dh1B,EAAAA,qBAEQoyC,EAAAA,YAAmCniD,EAAAA,YAAatB,EAAAA,qBAAyBsW,EAAAA,mBAC3DrO,EAAAA,UAAIA,IAAYoJ,EAExC0xC,qBAEA,IAAMh6B,EAAQF,EAAAxY,aACXgB,EAAMwX,EAAA+e,iBAEM1jC,EAAb2kB,EAEGvnB,aAAKmiD,EAAAA,EAAAA,iBAAwCxhB,IAAAA,EAAAA,YAAQjiC,GAAYkpB,EACpE5nB,CAAAA,IAAKoiD,EAAAA,EAAAA,EAAAA,EAAAA,EAAUH,EAAa,IAAAn6B,EAAAJ,EAAAA,EAAU26B,EAAStyC,EAAGtE,EAAAA,OAASic,GAAA,KAAU,SAEvE,KAEF,SACYy6B,EAAAA,UAAAA,EAAAA,GAAAA,KAAsBF,gBAA0BvjD,QAAAA,6BACpD8lC,GACFyd,GAAYv7C,KAAAA,sBAA0Bg+B,EAAAA,KAAAA,QAAAA,WAM9C1kC,KAAQwmC,QACDxxB,KAAAyS,KACLD,EAAA9gB,UACEu7C,IAAYv7C,YAAc+gB,GAAA,MAAA,KAAY3X,SAExC,IAAKiY,EAAAriB,EAAAqJ,KACH/O,QAAKoiD,GAAAA,GAAUH,IAAax6B,GAAA,EAAA,IAAA,IAAAA,GAAAznB,KAA8B8P,sBAAsB0X,EAChFxnB,KAEF2gC,QACM6D,WACU99B,IAAUC,KAAIy7C,UAAA56B,EAAY,UAAAkd,EAAAA,EAAAA,SAAAA,IAInC19B,IAAAA,IAAAA,cAIXhH,KAAO0uB,sBAGDyzB,EAAAA,KAAAA,QAARzjD,WAAoDoR,KAClD6wB,QAAI3gC,aAAKgjB,GAAAA,EAAAA,UAAwBkjB,IAAAA,YAAAA,EAAAA,wBAKRvF,OAAQ1rB,GAAAA,KAAAA,SAAc/B,KAAAA,SAAc+jC,EAAAA,UAAcj3C,IAAKi3C,YAAUlnC,GAQ1F,MAAA,KALsBgR,SACJ/gB,KAAA4P,UAAMa,EAAAA,qBAAiCuS,EAAAA,EAAAA,SAAAA,IAAgBrM,IAAAA,IAAQuvB,cAAAA,GAAAA,EAAAA,UAC1EvF,IAAQ1rB,YAAAA,EAAchC,wBAAwBnD,EAAAA,YAASmnC,GAAAA,EAAUlnC,GAAIo2B,OAAAA,GAAiBmc,EAAAj5C,UAI3FrJ,sBAAwB,SAAuB4E,EAAAA,EACxC2K,GAMH,GAAA,IAAAvP,KAAAoiD,gBAARzrC,QACEhP,qBAAqB,OAAYA,EAAQiC,IAAAA,EAAAA,KAAAA,QAAaqL,cAAsB/B,SAzN3ElT,KAAAyvB,UAAAA,GAAAA,KAAAA,UACA9K,IAAAA,YAAAA,IACAvf,IAAAq4B,EAAAA,EAAAA,MAAAA,oBA2Nan5B,EAAci+C,EAAiBz/C,KAC/CkgB,gBACE1e,QAEF4hC,sBAvOWoZ,KAAAA,+FCfb8C,UAAA9/C,EAAA,SAuBE8C,EAAAR,MACUsS,IAAAA,EAAAA,UAAAA,UApBHsrC,SAAAA,EAAAA,GAAAA,EAAAA,aAOAC,QAAAA,IAAAA,EAAAA,aAoBA,UAAA,IAAAptB,EAAAA,MAAAA,EAAAA,CAAAA,EAAP,EAAAwsB,EAAApyB,yBACOyF,EAAAA,EAAAA,EAAiBnU,iBACjBqU,EAAAA,EAAAA,EAAAA,eACAotB,GDOI5/C,YCNT5C,EAAAA,EAAAA,EAAKyiD,GAAAA,KAAAA,EAAAA,OAAAA,GAAuBngD,EAAAwI,EAM9BxI,EAAA,OAAAA,EAAAi/C,EAAAjC,sBAAWwC,GAAA,IAAA,CAAAY,EAAAC,KAAA9uC,sBACT8uC,EAAA,aAASH,CAAAA,OAAAA,IAAAA,EACAI,oBAGCxtB,EAAAA,IAAiBp1B,EAAAA,oBAIpBA,EAAAA,GAAK6iD,KAAAA,eAAAA,EAAAA,KAA+B7iD,mBAAKo1B,EAHvCp1B,KAAKk1B,yDAUhB,WAAWl1B,KAAAk1B,oBAAA,EAAAl1B,uBAAX,EACMA,KAAKwiD,mBACP,EAAAxiD,KAAQA,qBAAoB2Y,GAAM3Y,OAAKkX,eAAevU,EAAAA,UAAe3C,sBAA2B,CAAAib,IAGlG,WAAUia,OAAAA,KAKVstB,kBAAUptB,CAAAA,EAAAA,GAAgBp1B,KAAK6iD,cAAAA,KAAAA,gBACL7iD,KAAKk1B,6BAAyButB,KAAAA,aACtDziD,KAAsBA,gBAAKkX,YACjB4rC,EAAkB9iD,cAAKkX,IAAeyB,OAAM3Y,eAAKk1B,EAAAA,UAAyBvZ,oBAA6BzE,CAAAA,IAAAA,WAEzG4rC,GAAiB9iD,KAAKk1B,kBAIhC,MAAIl1B,CAAAA,KAAKyiD,eAAAA,KAAAA,KAEHziD,eAAkB2C,OAAO3C,MAAKk1B,KAAAA,eACnBljB,KAAIhS,GAAAA,GAAKk1B,KAAAA,eAAoBl1B,CAAKyiD,IAAAA,KAAAA,cAAsBziD,KAAKo1B,6BAAuBA,CAAAA,IAAa9yB,EAAAtC,KAG3GA,eAAKo1B,oCAMP9yB,EAAAtC,KAAAkX,eAAA2rC,KAAAA,CAAAA,EAAAA,KAAAA,eACLlqC,KAAc3Y,KAAKk1B,eACPl1B,GAAAA,KAAKo1B,MAAAA,EAAAA,KACjBle,eAGOhP,OAAe,CAAA5F,EAAAtC,KAAak1B,eAA4B/sB,IAAI,OAQ9DnI,KAAAyiD,sBAULziD,KAAAo1B,aARSF,KAAAA,KACPl1B,eAAKk1B,GAAAA,CAAAA,KAAqB7E,IAExBrwB,KAAKo1B,eACPp1B,GAAAA,KAAKo1B,qBAIEA,KAAAA,aAAgBp1B,IAAKo1B,KAAAA,aAC5Bp1B,IAAKq1B,KAAAA,eACE6rB,YAIAhsB,EAAAA,cAAkBl1B,IAAKk1B,EAAAA,UAAe2tB,2BACzB,WAvH1B,IAAavgD,EAAAsgD,KAAAA,oXA8CkB5iD,sKCpD/B8K,EAAAyE,GACAnK,EAAA,GAAA,iBAeEgvC,SAAA,mBAGoCpxB,QAAAA,SAZ7BvV,EAAAA,QACA4mC,SAAAloC,EAAiBrB,EAKhByE,EAAAnK,QAAA29C,IAAAA,IAAAA,EAAAA,EAAoBjgD,OAAI0U,EAAAA,GAAAA,EAAAA,KAQ9BxX,EAAAA,EAAAA,MAAKgjD,GAAAA,EAAAA,EAAAA,EAAAA,GAAmBrtC,EAAA,EAAIstC,EAAmB18C,EAAUgQ,EAAevW,GAAAA,EAAKgjB,EAAAA,KAAAA,GAAAA,OAWjFrN,EAAA,GAAA1G,GArBE4E,OAAA+D,eAAW9M,EAAAyE,EAAAN,GAAAA,GAAAi0C,EAAAljD,MAAAA,KAAAy0C,SAAX,SAAAnyC,EAAqCwI,GAAA,OAAO9K,SAAauP,EAAKvP,GAAAA,EAAKmM,EAAAA,EAAAA,0CAGnE,CAAAjI,OAAA,IAAAi/C,EAAAh0B,qBAAW,EAAA,IAAAi0B,EAAAC,EAAA,QAAXA,EAAA,MAAAC,EAAA,oBAA0DP,EAAAA,EAAAA,EAAAA,GAAAA,KAAkB3/C,oCAUrE+I,OAAA,EAAAnM,KAAAsrB,kBACL,IAAM3a,EAAS3Q,aAAKgjD,KAAAA,iBACTv1C,IAAAA,EAAUzN,EAAAA,EAAAA,KAAKyN,iBAA2BzN,OAAKmM,OACxDnM,eAAoByN,EACpBzN,UAAKmM,eACA42C,CAAAA,IAAAA,WAAAA,OAAkB5mC,KAzBD1O,MAevB,GAAAkX,KAAAA,OAAAA,GAAAA,YAfQwK,EAAAA,cAAAA,IA6Cbtb,OAAA+D,eAIE2rC,EACUh1B,UAAA,mBACAi1B,CAAAA,IAAAA,WAAAA,OACAxgC,KAAAA,kBANFygC,OAA0BvC,YAAY/0C,EAAAA,cAQvCu3C,IAAAA,EAAAA,UAAkB1jD,QAAKuuB,WAAU/nB,IAAAA,EAAcxG,KAAAgjD,iBAC/CU,UAAgBh9C,EAAAA,QAAUC,KAAI8G,OAAAnL,EAAA6J,SAAAnM,KAAAmM,SAC9Bu3C,KAAAA,MAAAA,EAAAA,MAAgB14C,KAAAA,OACrBhL,EAAAA,OAAK0jD,KAAAA,kBAAgBj9C,SAAak9C,EAAA,CAAAT,EAAA,EAAeE,EAAAz+B,kBAC5C6+B,GAhDP,GAgDOA,EAAex8C,gBAAYhH,EAAK0jD,IAAAA,EAAAA,oBAGhCE,EAAAthD,EAAAwI,EAAAyE,GAAA+b,KAAAA,UAAPhpB,EAAAtC,KACEA,eAAK0jD,EAAAA,KAAgBx3C,gBAAmBlM,EAAKgjB,KAAAA,QAAAA,CAAAA,MAAgBrM,EAAAA,OAAQrW,GAAAA,KACrEN,gBAAK0jD,KAAgBx3C,UAAM3L,cAAmByiB,QAAAA,KAAgBrM,gBAAgBjQ,UAG7D1G,IAAK0jD,8BAAgBt2C,KAAAA,gBAIlCy2C,YAA4C,IAAX13C,KAAAA,gBACtBsB,aAAiBA,cACjBtB,QAASmE,KAAK2B,eAGtBjS,YAAKyjD,KA9BhBC,8XAayCA,yoBC3DzCtP,SACA,mBAIAA,QAAAC,SASEplC,EAAAmlC,QAAkChT,SAAlC9+B,EACEwI,EAAAyE,EAAAnK,QAAA,IAAO,eANF8T,EAAAA,GAAkB,EAGlB/T,KAAA2+C,EAAAA,EAAAA,MAAuB70C,GAI5B0G,EAAK5F,EAAAA,EAAKg0C,GAAUh0C,EACpB,EAAKD,EAAKi0C,EAAUj0C,EAAAA,GACfg0C,EAAAA,EAAAA,KAAAA,GAAAA,OACAnI,EAAAA,GAASluC,UA6BlBmK,eA1BS9M,EAAAyE,EAAAN,GAAA+0C,GAAAA,EAAAA,MAAPhkD,KAAAy0C,SAEE,SAAOnyC,EAGFwI,GAAA,OAAA,SAAAiiB,EAAP3nB,GAAA0F,EAAAyE,EAAAnK,EAAA9C,KACEuR,OAAO7T,eAGFikD,EAAA,aAAAjgB,CAAP9/B,OAAA,IACE+/C,EAAAz0B,uBAAYs0B,EAGP9L,oBAAA9S,EAAP,IAAAgf,EAAAC,EAGE,MAAAC,EAAOD,EAAA,KAAAE,EAGFF,EAAA,KAAAG,EAAAH,EAAAI,MAAAA,EAAAA,SAAPjiD,YACEkiD,EAAA15C,EAAAyE,EAAMnK,GAAIwC,IAAAA,EAAMtF,EAAA4D,KAAAlG,OAAAA,KAAA,OAGXiR,EAAAiI,QAAAurC,EAAAA,EAAAA,aAAP,GAAAxzC,EACElB,GAAAjF,EAAOiF,GAAC/P,EAAAA,GAAK+P,EAAI/P,GAAAA,EAAKgkC,aAAYhkC,EAAK+sB,EAAAA,OAAAA,EAAY/sB,EAAAA,OAAKklC,EAAAA,EAAAA,GAAAA,EAE5D77B,UA3CoCo8B,WAAvBuS,WAAAA,OA6Cb,SAAAwM,EAAAn7C,UAOE0jB,SAC0B,WAAA7V,OAAAA,KALlBykC,QAAA+I,EAAAA,UAAAA,SACA,WAAAC,OAAAA,KAAAA,cACA1N,EAAAA,UAA0BpP,QA0QpC,WApQS,OAAA//B,SAAP08C,EAAAn7C,UACEk7C,gBACWI,SAAAA,GAAAA,MAAAA,IAAAA,MACTjuC,oBAGGguC,EAAAA,UAAAA,cACEE,WAGF,MAAAnwB,CAAAA,KAAAA,GAAAA,KAAPuP,WACEhkC,KAAK+sB,WAAe/sB,KAAK0kD,YAAAA,EA/BpBH,CA+BsCzhD,EAAAA,eACrC9C,EAAK0kD,eAAAA,EAAkBt/C,IAAGmU,EAAAA,oBACvBmrC,EAAAA,GAAAA,KAAAA,eAA4BpiD,EAC1BtC,KAIX0kD,kBAGK,GAAA7M,KAAAA,uBAAoBzlB,EACzBpyB,KAAsCi3C,UAA7ByN,IAAAA,EAAAA,SAAkB5hD,OACzB+hD,EAAAx7C,UAGFvB,SAAkBoP,SAAAA,GAAAA,IAAevU,EAAAA,CAAAA,GAAOkH,KAAMoR,yBAC5BnY,QACTR,GAgBT,OAbAtC,KAAmC0kD,kBACdzM,KAAAA,GAAkBntC,EAMnCg6C,IACAC,EAAqB17C,UAEF8R,WACLH,SAAW1Y,GAEhB,IAAO0Y,IAAKgqC,EAAAA,EAAAA,EAAAA,KAAAA,kBAClB9b,OAAStmC,IAAG5C,GAAKi3C,KAAAA,kBAEbA,GAAAA,KAAUlqB,EAAAA,OAAnB/sB,KAMIA,kBAAe+P,OAAsB/P,EAAKi3C,IAAAA,EAAAA,OAAUnnC,GAAOm1C,EAG7D57C,UAQEwuC,oBAP0BqN,SAAAA,GACxBC,GAEAJ,IAEAD,KAEWJ,kBACXU,OAAYpD,MAKhB8C,GACAO,IACAC,EAActlD,KAAKi3C,eACLj3C,OAAKi3C,MAAAA,IAAUnnC,GAG/Bi1C,IAAsB/kD,GAAKi3C,IAAAA,EAAAA,OAAUjT,MAAAA,GAAWlhC,IAAAA,IAAUmiC,EAAAA,GAAAA,EAAAA,EAAAA,mBAAqBniC,GAI7E9C,EAAAA,EAAAA,EAAKkX,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,MAAeyB,GAAOmsC,EAAmBh6C,EAQhDy6C,MAPqBvlD,GAAAA,EAAKklD,EAAAA,EAAAA,EAAAA,mBAKxBJ,IAEO1/C,GAAOA,EAAI48C,SAAqB58C,EAAAA,KAChCkF,WAIX,IAAAtK,KAWMi3C,UAAAlqB,WAAAm4B,CAAAA,GAAAA,KAARjO,UAAuCuO,KAAsC95C,GAAuBuzB,KAClGgY,UAAkBrhC,KAAAA,EAAAA,CAAU4vC,GAAYC,EAIlCzD,EAAmChiD,EAAAA,IAAK0kD,IAAAA,EAAAA,KAAAA,iBAA6BpgD,EAAAA,EAClEc,EAAI0F,EAAG1F,GAAIpF,EAAAA,EAAK0kD,EAAAA,EAAAA,OAAAA,IAAAA,EAAkB5hD,KAAAA,EAAQsC,IAGjD6L,EAAAtL,EADAsJ,EAAA0G,EAAM+vC,EAAe1lD,KAAK0kD,UAAAA,GAAAA,EAAAA,KAAkBt/C,UAAWd,GAC9Cgc,GAAOA,KAAiBxd,UAC/B0sB,WAAuBm2B,QAAwCrlC,EAAAA,qBAG9DslC,OAAAA,GAAAA,KAAAA,eAYCjtC,KAAA1H,EAAA,EAAA,IAAA20C,EAAAA,KAAAA,iBAARxgD,EAAA6J,EAAA0G,EAAA7K,EAAAmG,GAA8D+J,EAAmBikB,EAAAA,EAC/Er5B,EAAA9C,OACI+iD,IACAd,EAAqBz6C,KACCw7C,EAAAA,IAGrBC,OAIAx2C,GAAAs1C,EAAIjiD,UAAuBsU,iBAAeyB,SAC7C7N,EAAAyE,EAAM9B,EAAQuN,EAAK+R,GAAAA,IAAAA,IACb9d,EAAS+L,EAAKgrC,UAAUpjD,EAAAA,GAAGE,EAAAA,KAAU4hD,kBAAAzf,GAAAA,QAI3Ch2B,GAAczL,EAAA,EAAViK,EAAJzN,KAKK6lD,kBACejjD,OACIY,IAIP,IAAMuhD,IAOrBr/C,EANAqgD,KAAkBnjD,kBAOhBY,GAOekT,QACfqvC,GAAapgD,EAAK/C,EAClBijD,EAAsBngD,EAAA5C,OAQ1BiiD,IAAsBF,EAKpBkB,aACqB7uC,EAAAA,EAAAA,IAAAA,OAAeyB,KAAAA,0BAY1CxT,EAA4BigD,EAA4Ba,GAEtD9gD,GADA0/C,EAAAx7C,UACau8C,0BACUxgD,SAyBnB9C,EAAI2jD,EAAS12C,GAAA,IAAYnK,EAIvB,EAAA6L,GAAA,EADAm0C,EAAOhgD,EAAI6J,EAAA3M,EAAG8C,GAAK6gD,GAASh3C,EACrBm2C,CAGT,IAAIa,IAAS9gD,EAAM6T,EAAM7T,EAKvBnF,KAAAkX,eAFmB5G,KAAK0B,IAAa,CAAA,IAAUtM,EAAAoF,EAC/Cs6C,SAAchgD,GAAGO,EACVy/C,EAKTA,UAAiBjgD,GACjBC,QA1CFg/C,EACEnf,qBAEEmgB,OAAOnrC,GAAU,IAAGgsC,EACbb,CAGT,IAAIa,GAASh3C,EAAM+J,IAAMrD,IAIvB1G,EAAA,GADA+J,EAAM/H,GAAA,GAAKX,EAAK6B,IAAI8zC,EAAS,CAAA,GAAUh3C,EAAA,GAChCm2C,IAGIn2C,EAAK+J,IAAM5T,IAGtB4T,MAAW1I,EAAAA,IAAK6B,GAAalD,EAAA,GAAU9J,EAAA8L,GAAA,GAC7BA,GAAA,EAoChB0E,GAAAhQ,GARIugD,IAEKd,EAAOtiD,GAAAA,KAASoU,eAGhB5M,QA1QAklB,EAAsBm2B,aAQ9BnpC,SAAAA,EAAAA,GARQgT,IAAA,IAAAA,GAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,OAAAA,gGCnDbxd,IAAAlH,EAAA,GAAAmG,EAAA,IAGE3O,EAAA2X,OAAA7U,EACUs3B,GAAAp6B,EAAAA,EAAA2X,OAAAyiB,EAAAA,GAAAA,QAIV,CAAA,GAAA5xB,EAAA,IAAAmG,EAAA,GAAA,OAAW3O,EAAA2X,OAAA7U,EAAA,EAAA0F,GAAAxI,EAAA,GAAAwI,EAAA,MAAX,GAAA,OAAAmG,EAEE,GAAAX,KADwBtQ,IAAK08B,EAAAA,GAAAA,EAAAA,IAAUypB,EAAAA,EAAAA,GAAAA,EAAAA,KAAcnmD,EAAK08B,GAAAA,KAAAA,IAAUypB,EAAAA,GAAAA,EAAAA,IAAyC5/C,GAAAA,IAAAA,OACtF6/C,EAAAA,EAAAA,EAAAA,OAAkBpmD,GAAAA,GAAK08B,EAAAA,GAAAA,EAAAA,KAAan2B,GAAAA,GAAS8/C,EAAAA,EAAAA,CAAAA,EAAAA,EAAAA,EAAAA,oBDgEpC9sC,4BC1EvByV,GAAAA,KAAAA,CAAAA,EAAAA,khBCDblkB,EAAAyE,GAAAnK,EAAA,GAEA,iBAGEgvC,SAEqC/oB,mBADFplB,QACEouC,SAAAhpB,EAAAA,QAAAA,SAqBvC/oB,EAjBSwI,EAAAyE,EAAAnK,QAAAgd,IAAAA,IAAAA,EAAP9f,EAAAQ,OAAiBM,EAA2CuE,GAAwC0d,EAAkB4Y,KACpHhtB,EAAA3O,EAAA6C,MAAOid,GAAAA,EAAAA,EAAAA,EAAAA,GAELza,EACAo2B,EACA1Y,EACArlB,EAAAA,EAAAA,GAAKqrB,EAAAA,EAAAA,KAAAA,GAAAA,OAAiBsL,EAAAA,GAAAA,GAAAA,OACjB1wB,eAAe+F,EAAAA,EAAAA,GAAAA,GAAWihB,EAAAA,MAAAA,KAAAA,SAC1BhnB,SAAAA,EAAAA,GAAe+F,OAAAA,SAAWC,EAAAA,GAAAA,EAAAA,EAAAA,EAAAA,KAK5B4H,OAAA+D,eAAAka,EAAAA,aAAP,CAAwB1uB,OAAyC26B,IAC/DuoB,EAAMnkC,kBAAcC,EAAiBza,IAAmB0d,EACxDkhC,EAAA,MAAOC,EAAAD,EAAAz0B,MAAAA,EAAAA,oBApBN20B,EAAA72B,EAAAA,GAAAA,KAAAA,eACAR,EAAAA,KAAAA,iBALQe,EAAAA,OAAAA,EAAAA,+WAwBF2B,+nBC1BXhnB,EACAyE,GAAAnK,EAAA,GAAA,iBAEAgvC,SACA,mBAGAA,QAQAC,SAAAplC,EA2BEmlC,QAAAC,SAImB7pB,EACkBa,EACnBkT,EAAAA,QAEhB,IAAA,IAAAp5B,EAAA7C,EAAAQ,OAwBA,EA/BQqC,GAAAuhD,EAAAA,KAAAA,EAAAA,EACAvhD,MAAAmgB,GAAAA,EAAAA,EAAAA,EAG2BrW,GAAAoc,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,GAAAA,EAAAA,EA1B7B9b,KAAAo3C,GAAAA,OACAhxC,EAAAixC,GAAAA,GAAAA,OAAAA,eACAC,EAAAA,EAAAA,GAAAA,GAAAA,EAAAA,MAAAA,KACApS,SAAAqS,SAAAA,EAAAA,GAAAA,OACAC,SAAAA,EAAAA,GACAj8C,EAAAk8C,EAAAA,EAAAA,KAAAA,OACApvC,eAAAqvC,EAAAA,aACClmC,CAAAA,OACP5Y,IAAK4Y,EACL+P,mBAAAA,EAGM,IAAAo2B,EAAAA,EAAAA,MAAAA,EAAAA,EAAAA,MAAsBC,EAAIC,EAAA5vC,KAAAA,EAAAA,EAAAA,MAE1BkR,EAAAA,EAAAA,MAAY2+B,EAAAD,EAAI,MAAA5vC,EAAAA,EAAAA,MAEhB8vC,EAAAA,SAAAA,YAAwBC,EAAA/vC,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,GAe9B,IAAK1P,EAAAA,EAAAA,KAAWwB,OAAStJ,KAAA,GAAA0F,EAAMghD,UAAKA,EAAAA,EAAAA,UAAUp9C,EAAAA,EAAAA,iBAEzCk+C,EAAAA,EAAAA,WAAuB5hC,EAAAA,EAAAA,mBAAgB,EAAQzd,EAAAA,yBAAyBD,EAAOC,EAAAA,wBACjEq/C,EAAAA,EAAAA,aAEdx+C,EAAAA,EAAAA,cAAwBC,EAAAA,EAAAA,gBACxBD,CAAAA,WAAAA,EAAAA,SAAkBE,EAAAA,kBAAkB,GAAAxD,EAAAwhD,oBAAKxR,IAAAA,EAAAA,aACzC5tC,EAAAA,UAAckB,IAAAA,EAAAA,aAEdlB,EAAAA,kBAAgC,IAAAtE,EAAAlB,aAAUmlD,EAAAA,SAAAA,CAAAA,QAC1C3/C,WAAwBwnB,OAAAA,EAAAA,UAAehmB,aAAM5D,EAAA8hD,iBAAe1lB,IAAAA,EAAAA,iBAC5Dh6B,SAAcujB,EAAAA,GAAAA,OAAAA,EAAAA,YAAiBq8B,EAAAA,MAAiBhiD,EAAAoC,SAAMpC,EAAA8hD,kBAAK5R,EAAAA,kBAG3D8Q,IAAU91B,EAAAA,iBAAgBlrB,EAAAsD,kBAAUgrB,aAAc9rB,WAASC,OAAKzC,EAIrEgwC,8BAAcvsC,EAAAA,SAAyBnI,EAAAA,mBAAkB0E,EAAAoC,SAAMmH,EAAAlH,UAAK2tC,SAAAA,GAAAA,OAAAA,EAAAA,mBAIhEhwC,EAAAoC,SAA0B9G,EAAAA,gBACP2mD,WAAAA,OAAAA,EAAqBjB,UAAApkD,uBAAUslD,EAAAA,SAAsBtlD,EAAEA,iBAAkBulD,kBACrFC,WACJhgD,OAASpC,EAAE4D,wBAAe5D,EAAAghD,UAASqB,iBA0I9C,SAxMmCzlD,GAAA,OAmBjCoD,EAAAsuB,YAAA1xB,EAAW4F,MAAA5F,EAAA6F,KAAA,MAAAzC,EAAAoC,UAAA,EAAkBlC,4BAA4CshD,OAAAA,UAAAA,mDAEzE,yBAAWlmD,OAAA,CAAA,IAAA6E,EAAA,IAAA8hD,sBAAX,SAAqF3nD,GAAAA,OAAK0oB,EAAAA,kDAE1F,IAAA7iB,EAAAiiD,QAAW1iD,GAAAM,EAAAoC,SAAA,CAAAwB,QAAA,kBAAXzD,EAAAkiD,gBAAoFT,OAAAA,EAAAA,OAAAA,EAAkBlkD,EAAAA,GAAAA,kCAEtG,qBAAW,CAAA6X,IAAA,WAAA,OAAAjb,yBAAyCA,OAAK0mD,YAAU16C,EAAAA,wCAyC3Du7C,EAAAl+C,UAAAu+C,yBAAR,CAAA3sC,IAA8By+B,WACvBiN,OAAAA,KAAqC5lC,UAAnBinC,OAAAA,YAAsCC,EAAAA,cAAAA,IAAkCD,OAAAA,eAGrFrB,EAAAA,UAAmBt7B,mBAAiBsL,CAAAA,IAAAA,WAC5C32B,OAAKqrB,KAAAA,kBAGFrrB,OAAK2mD,YAAa3mD,EAAK4mD,cAAAA,IAAAA,OACrB5yB,eAAeh0B,EAAAA,UAAKslB,aACpBshC,CAAAA,IAAAA,WAAoB,OAItB5mD,KAAA0mD,UAAA1yB,YAAPktB,YAA+CgH,EAAA/G,cAAA,IACzCnhD,EAAK2mD,UACP3mD,sBAAK4mD,SAIL5mD,GAAAA,KAAK6mD,eAAAA,IAAAA,EAA0BmB,eAE5BR,IAAAA,EAAAA,mBAAqCxnD,EAAKslB,eAGzCtlB,KAAA2mD,WAAAp/C,KAAAA,iBACNvH,cAAe+1C,KAAAA,iBAGN+Q,WAAAA,KAAAA,WACP9mD,KAAK0mD,oBAAU71B,KAAmB7wB,YAAKinD,EAAAA,KAAAA,UAAuBjnD,GAAKinD,KAAAA,mBAAqBjnD,IAAKinD,EAAAA,UAAAA,YAAgBn2B,SAC7G9wB,EAAAA,EAAK8mD,QAAAA,IAAAA,IAAAA,GAAAA,GAAAA,KAIF9mD,UAAK6mD,KAAAA,mBACR7mD,GAAK0oB,IAAAA,KAAUvM,yBAEjBnc,GAAK6mD,KAAAA,iBAA0Bt7C,QAG1BjJ,EAAAwI,EAAA9K,KAAA6vB,aAAP03B,EAAc5uC,UACP2M,YACLtlB,SAAKmoD,EAAAA,GAAAA,KAAAA,UAGApS,WAAAqS,EAAAA,GAAAA,KAAAA,yBACA1B,KAAU5kB,UAAAA,mBACV9N,KAAAA,gBAAoB1O,MACzBtlB,KAAKmoD,gBAAAA,IAAAA,KAGClB,gBAAAkB,kBAARnoD,KAAA8mD,wBAEqB96C,GAAWirB,KAAAA,yBAAqB8vB,KAAgB/mD,UAAK0mD,KAAU16C,CAAAA,MAAAA,EAAWorB,IAAAA,IAAAA,KAAAA,yBAG7Fp3B,GAAKknD,EAAAA,UAAAA,OAAoB/qC,SAAKnc,EAAK0mD,GAAAA,KAAAA,UAAU16C,EAAAA,KAGxCm8C,uBAAPZ,EAAAl+C,UACE++C,cAAa,WAGRpoD,KAAA0mD,UAAAn7B,mBAAYmE,KAAnBsE,YAEEh0B,EAAK0mD,KAAAA,UAAUp9C,GAAAA,KACftJ,uBACK0mD,EAAAA,UAAU91B,oBAAgBtuB,WAAU0xB,KAAAA,UAAc9rB,WAASC,cAG3D2+C,KAAAA,cAAAA,KACL9mD,UAAKynD,WAGCrwB,eAAAqwB,KAAAA,eAARznD,KACMA,oBACG4mD,KAAAA,KAAAA,UAEL5mD,aAAKg0B,EAAY3qB,UAAQic,QAAY,WAIlC+iC,EAAAh/C,UAAAytB,QAAAA,KAAP92B,mBACmCurB,YAAnB,SAATm7B,GAAAA,IAAAA,EAAAA,KAAAA,KAASA,UAAAp9C,UAAEwtB,KAAAA,UAAAA,EAAAA,KAAiB4vB,UAAA91B,iBAC5B62B,SAGAnlD,GAAA,OAAAsoB,EAAAA,YAAPtoB,EAAA4F,MACElI,EAAAA,KAAK0mD,MAAAA,KAAU97B,wBACV68B,EAAAA,KAGAA,gBAAA/R,EAAAA,UAAAA,aAAP,WAGE11C,KAAKqrB,UAAAA,KAAiBC,mBAEjBo7B,EAAAA,KAAUhR,YAAAA,EAAAA,KAAAA,UACV1hB,IAAAA,EAAAA,UAAeh0B,kBAGf,WAAA+H,IAAAA,EAAAA,EAAAA,QAAP+C,EAAgB6N,QACd3Y,EAAK0mD,KAAAA,iBAAU3+C,IACf/H,OAAAA,EAAKynD,EAAAA,yBAIA7R,IAAAA,GAAAA,EAAAA,KAAPtzC,GAAAtC,KAAAynD,gBACOf,EAAU9Q,UAAAA,UAGV,SAAAtzC,GAAAuG,KAAAA,UAAP+hB,UACO87B,GAAAA,KAAU79C,gBAGV0+C,EAAAl+C,UAAAknB,yBACAm2B,WAAUn2B,KAGVlF,iBAAAwF,UAAAA,KAAP61B,UAAkG51B,2BAC3E5oB,KACrBlI,YAAKinD,EAAAA,KAAAA,UACLjnD,IAAKinD,EAAAA,UAAAA,SAAgBn2B,SAAAA,EAAmBA,GACxC9wB,KAAK0mD,UAAU71B,SAAAA,EAAAA,GAAAA,KAAmB3oB,gBAG7Bq/C,EAAAl+C,UAAA+gB,kBACLpqB,WAAK0mD,KAAUt8B,UAAAA,qBAGjBm9B,EAAAl+C,UACErJ,OAAK0mD,WAAU5zC,KAtMO4zC,UA+BrB/hC,UAAAA,EAAAA,UACAyK,QAAAA,WACApvB,KAAAwc,UAAAA,WAjC8B+qC,EAAAn7C,UAAAA,mBAAtBujB,8VAsBH23B,4oBCnCVx8C,EAAAyE,GACAnK,EAAA,GAAA,iBAEAgvC,SACA,mBAGAA,QACAC,SACAplC,EAAAmlC,QACAC,SAwBMiU,EAA0BtlD,EAAAA,EAAAA,QAAOC,IAAAA,IAAakC,EAAA7C,EAAAQ,OACXyX,EAAAA,GAAAA,EAAO+tC,KAAyBr3C,EA4BzE3O,EAAA6C,MAAA8J,GAAA0G,EAAA,EAmDE1E,EAAAhC,GAAA0G,EAAA,EAAA1E,EACmB8G,EACA+K,EACA87B,GAEcjiB,EACC3e,EACEgF,KAPpC/T,GAAA,OAUE0G,EAAA,GAAA1G,GAAA4E,sBATiBkE,EAAAA,EAAAA,GACA+K,GAAAA,EAAAA,MAAAA,KAAAA,SACA87B,SACgB1nC,EAAAA,GAAAA,OAAAA,SACFylB,EAAAA,GAAAA,EAAAA,EAAAA,EAAAA,KACC3e,OAAAA,eACEgF,EAAAA,aACD/c,CAAAA,OAAAA,IAAAA,EAAAA,sBAlD3BsiD,EAA4B,IAqB5BC,EAAAA,EAAAA,MAAWC,EAKXC,EAAAzR,KAAAA,EAAAA,EAAsB,KAAI0R,EAAA9gB,EAAAA,MAE1B+gB,EAAAC,EAAAA,MAAAA,EAAAA,EAAAA,MAAAA,EAA8BH,EAC9B,MAAAI,EAAAA,EAAAA,MAAAA,EAAAA,EAA4B,KAC5BC,EAAAA,EAAAA,MAAAA,EAAAA,OAAAA,aACAC,KAAAA,EAAAA,IAAAA,OAAiDjoC,EAEjD,KAAAkoC,EAAAA,SAAAA,YAA8BnhD,EAAAA,EAAAA,EAAAA,EAASmJ,EAAA0E,EAAI1G,EAAAuI,EAAAA,GAAAA,IAAAA,EAAAA,EAE3CtR,KAAAgjD,OAAAA,KAAAA,OAAwBphD,EAAAA,SAAagD,EAAA0M,EAAAA,eAErCmR,EAAAA,EAAAA,WAAAA,EAAqB9iB,EAAKiC,eAAa0P,EAAAA,EAAAA,aAEvC2xC,EAAAA,EAAAA,cAAAA,EAAAA,EAAwBnmC,gBAAkBxL,EAAAA,EAAAA,eAgB3C8L,EAAAA,EAAAA,kBAAqB,EAAAzd,EAAAzC,UAAS,EAAK8a,EAAAA,UAAa9a,IACrDgmD,EAAKC,SAAAA,EAAAA,oBAA4B,EAAAxjD,EAAAijD,kBAAgB1lD,EAC5Cu5B,EAAAA,wBAAa2sB,EAAYzjD,EAAAmjD,sBACnB17B,EACPznB,EAAKwvB,uBAGJk0B,EAAAA,SAAAA,IAAqBryC,EAAAA,cAAevU,EAAAA,iBAAoBkD,EAAAiC,SAAAuoB,IAAUs4B,EAAAnxC,cAAa6Y,EAAAA,mBACjEnZ,EAAAA,SAAe+T,IAAAA,EAAAA,cAAQgP,EAAAA,sBAAsBp0B,EAAAiC,SAAK0hD,IAAAA,EAAAA,cAEhEn4B,EAAAA,mBAEa,SAAAuxB,GAAAA,OAAoB1rC,EAAAA,aAAAA,IACjCuyC,EAAAA,iBAAAA,SA41BTnnD,GAz6BsC,OA2CpCuD,EAAA6jD,WAAApnD,IAAAuD,EAAA82B,aAAW2sB,aAAA,WAAAzjD,EAAqBynB,cAAhCznB,EAAqDwvB,oBAAY4zB,EAAAA,cAAuB7lD,EAAAA,oCAExF,SAAAd,GAAA,OAAAuD,EAAA8jD,QAAWrnD,MAAAuD,EAAAiC,SAAAjC,EAAAqR,eAAX+T,QAAqEgP,kBAAYivB,SAAiB9lD,GAAAA,oCAElGiuB,SAAAxrB,EAAA+jD,OAAA,IAAWnB,EAAA7F,eAAA/8C,EAAAqR,kBAAXuyC,qBAAsDzpD,EAAK2oB,EAAAA,OAAAA,EAAAA,EAAAA,GAAAA,OAAmBvlB,mDAE9E,CAAA6X,IAAW,WAAA,OAAAjb,KAAAipD,uBAAX7lD,OAA+E89C,YAAYiI,EAAAA,cAAAA,IAAsB/lD,oDA+B1GkG,CAAAA,IAAAA,WAAP,OACOugD,KAAAA,iBAAAA,OAGA3I,YAAA,EAAAp3B,cAAP,IACE9pB,OAAKq1B,eAOAy0B,EAAAzgD,UAAA+nB,oBACLpxB,CAAAA,IAAKq1B,WAAAA,OACLr1B,KAAKwoD,mBAMAplD,OAAAiuB,YAAP,EACErxB,cAAKwoD,IAGP30C,OAAA+D,eAAWkyC,EAAAzgD,UAAA,uBAAX,CAAA4R,IAAA,WAAmEjb,OAAK4pD,KAAOG,yDAC/E,IAAAD,EAAAzgD,UAAAC,QAAW,WAAAtJ,KAAA6pD,6BAAsD7pD,EAAAA,UAAYgqD,MAAAA,WAAAA,mCAK7E54B,QAAA,WAAApxB,KAAWq1B,iBAAAr1B,KAAAwoD,UAAX,GAAAsB,EAAAzgD,UACgBrJ,OAAK4pD,WAAOG,KAAAA,UACpB5hD,GAAMnI,OAAK4pD,eAAOI,EAAAA,UACxB,iBAGwB,CAAA/uC,IAAM/S,WAAiB,wCAMjDg5C,YAAA,EAAAC,cAAW,IAAAttC,OAAA+D,eAAXkyC,EAAAzgD,UACgBrJ,eAAY+pD,CAAAA,IAAAA,WAAAA,OACd/pD,KAAK4pD,OAAOI,mBACnB9hD,YACH,EAGFi5C,cAAoBjqC,IAAAA,OAAAA,eAGpB4yC,EAAkCzgD,UAAzBogD,eAAAA,CAAAA,IAEP,WAAiBthD,IACf7F,EAAAtC,KAAO4pD,OAGJG,oBAA+B3kD,EAAKpF,KACjCiqD,OAAkBt+C,kBAAAA,SAA4BvG,IAAS8C,GAAM5F,EAAI6F,KACvEwI,EAAOrG,IAAAA,EAAK2/C,KAAAA,EAET,KAECC,YAA8B/hD,EAASA,cAI7C,IAHOmC,OAAYqB,eAAAA,EAAAA,UAAAA,gBAAsDu+C,CAAAA,IAG5DhiD,WAAuB,IAAKiiD,EAAG/kD,KAC1CwkD,OAA0B//C,oBACF8B,EAAAA,KAAAA,OAAAA,kBACpBihB,IAAyBkS,IAAAA,EAAAA,MACpBnuB,GAAO7N,IAAAA,EAAS9C,KAAMiqD,eAOvBtnD,OAAWyC,EAAA,GACAzC,GAAOkH,IAAAA,KAAU1B,qBACZwD,CAAAA,GAAAA,EAAAA,KAAAA,EAAAA,GAAAA,MAAgC,GAAU,IAAO,IACrEihB,EAAAA,EAAcA,GAAYkS,GAAAA,EAAAA,GAC5BnuB,IAAc7N,CAAAA,IAAAA,EAASyM,EAAA5D,4BASEmK,GAAI,EAAAq0C,EAAA,GAAAnvC,EAAAA,IACjC5V,EAAAkF,KAAYkC,QAAQ49C,CAA8B,IAAAn7C,EAAAk7C,EACjD9mD,KAAKglB,EAAQ8N,GAAAA,EAAAA,QAAAA,EAAY,IAAS/wB,EAAAkF,mCAQhC6/C,EAAA,IAAA,EAAAA,EAAA,GAAA90B,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,GAAPvqB,EAAA,GAAA,EAAAmG,IACEjR,CAAAA,IAAK4pD,EAAAA,EAAAA,MAAOv0B,IAAAA,GAAAA,EAAAA,EAAAA,4BACPw0B,GAAAA,GACL7pD,GAAAA,EAAKuL,UACLvL,EAAAA,EAAAA,OAAK2oB,IAAAA,EAAAA,EAAAA,KAAmBxM,GAAAA,EAAAA,KAQnBrR,EAAA,KAAAtH,EAAA+L,EAAAhE,MAAAA,IAAPT,EAAA,IAAeu/C,EAAAA,EAAf1+C,4BAEYkuB,EAAAA,IAAAA,EAAAA,EAAAA,EACR75B,IAAAA,GAAK65B,EAAAA,UAAAA,EAAAA,EAAAA,OAAyB74B,IAAAA,EAAOykB,EAAAA,KAAAA,IAAAA,OAAAA,EAAAA,KAAsB,SAAMnjB,GAAA,OAAKg4B,EAAAA,QAAAA,EAAAA,QAK5D3M,KAAW08B,EACCrqD,UAAKkO,OAAAA,OACTpL,YACXmmD,EAAAA,cAAAA,IAAuB9sC,EAAAA,UAAUjO,eASpC,WAAAosB,KAAAA,OAARjF,iBACOwE,KAAAA,4BACAqvB,KAAAA,UAAiB/sC,KACpBjU,mBAAmB6hD,QAAAA,EAAAA,UACnB5hD,QAAUyhD,SAAOI,GAAAA,IAAAA,EAAAA,KAAAA,KACjBl5B,yBAAuB24B,KAAAA,uBAQnBzoD,OAAAspD,uBAAR,WACE,OAAetqD,EAAKuqD,eAAAA,EAAAA,SACNvqD,GAAAA,KAAK4pD,cAAOG,QAAAA,KACd/pD,uBAAYgqD,KAAAA,KAExB97C,gBAIOlO,EAAAA,UAAKwqD,SAAAA,WAAqCriD,KAGzC0xB,4BAAA2wB,EAAAA,KAAVtB,iBACE/sC,KAAe,CAAAjU,MAAWlI,KAAa4pD,OAClC1hD,oBAAqCA,IAAMlI,KAAa4pD,OAAYI,kBACzD7hD,iBAA4B,IAAanI,KAASypD,wBACpBK,EAAAzgD,UAAyBihD,oBAOjEG,SAAAA,GAAAA,IAAR3/C,EAAA9K,KAAAuqD,sBAEiDjoD,GAAjCiN,EAA2BvP,KAAA4pD,OAA3B5pD,oBAAgB0gB,EAAAA,KAAAA,OAAWspC,kBAAEprC,SAAIrP,GAAAnK,GAAA0F,IAAA9K,KAAEgZ,sBAE1C4wC,EAAAA,EAAAA,IAAO10B,EAAAA,UAAAA,sBAA2ChtB,SACvDlI,EAAK4pD,EAAAA,GAAAA,OAAOnH,EAAAA,GAAAA,EAAAA,IAAAA,EAAAA,GAAAA,EAAuB,IAAAiI,EAAAA,KAAAA,EAAAA,IAAAA,EAAe1xC,KAAOhZ,EAAKkX,IAAAA,EAAAA,IAAAA,EAAAA,IAAeyB,EAAAA,GAC7E3Y,EAAAA,IAAK4pD,EAAAA,GAAAA,EAAOx0B,IAAAA,EAAAA,KAAAA,EAAAA,IAAerU,EAAAA,GAI7BxR,EAAA,IAAevP,EAAAA,GAAKuqD,EAAAA,IAAAA,EAAAA,KAAAA,EAAAA,IAAAA,EAAAA,IACpBz/C,EAAA,IAAAg/C,EAAI3nC,UACGwoC,oBACL3qD,SAAK4pD,EAAOx0B,GAAAA,IAAAA,EAAAA,EAAAA,EAAAA,QACLhwB,EAAA,QAQJmK,EAAAvP,KAAAs1B,WAAP5U,mBACOkpC,IAAOpH,OAAAA,EAAAA,EAAAA,YACZxiD,IAAKuL,OAAAA,EACLvL,EAAK2oB,MAAAA,GAAAA,EAAAA,OAAAA,KAAmBxM,OAGnB+Y,eAAAK,CAAAA,EAAAA,MAAP3yB,EAAA,EAAAqO,EAAmB/I,MACjBlI,EAAAA,GAAK4pD,KAAAA,OAAOv0B,sBACCrjB,EAAW44C,EAAAF,gBACJ1qD,EAAAA,KAAKkX,eAAevU,MAAOkH,KAAM/G,OAASsyB,kBAClDF,GAAAA,EAAAA,IAAAA,EAAkBl1B,KAC9BA,sBAAYo1B,GAAe,QAAMle,IAAAA,KAAAA,cACjClX,EAAAA,GAAKuL,KAAAA,OACLvL,kBAAK2oB,GAAAA,IAAmBxM,EAAAA,UAOlBmZ,UAAAq0B,WAAQt5B,KACOrwB,OAAK4pD,mBAExB5pD,EAAKuL,KAAAA,UAQDvL,KAAAuqD,mBAAAA,QAART,EAAAzgD,UACQ8Y,YAAcnE,SAAcoE,EAAAA,GAAAA,KAAUhf,OAAY0f,iBAAgB9iB,EAAKkX,KAAAA,IAAAA,EAAAA,GAAAA,EAAeyB,KAAM3Y,IAAKkX,EAAAA,KAAAA,eAAqBvU,OAW5HkH,MAAA/G,OALO,GACA9C,KAGPmiB,OAAaniB,eAAKkX,CAAAA,EAAAA,GAAevU,KAAOiJ,OACjCuW,aAQD,CAAA0oC,KAAAA,eAAAA,KAAAA,GAAR7qD,KAAAuL,UACMgyC,KAAS50B,mBAAAgV,QAAAA,EAAAA,UAAuC7a,QAAAA,SAC9CgoC,GAAiB9qD,KAAKiG,OAAAA,OAAe+F,IAAAA,KAAAA,WAAWorB,EAAAA,UAClDmmB,sBAIQuN,SAGHx6C,GAAK6B,IAAI7B,EAAAA,KAASitC,cAC3BA,UACsB3pB,EAAAA,KAAetjB,eAAWitC,KAQ3CrmC,eAAAqc,KAAAA,KAAAA,eAAPzsB,MACE,GAAA,GAAIuhB,EAAQld,OACGqnB,EAAAA,KAAAA,EAAUxyB,KAAKgjB,EAAAA,IAAAA,KAAAA,eAAwB+nC,OAAAA,MAAAA,GAAAA,EAAAA,UAG/C3nD,2BAOF6tB,SAAP3uB,GAAA,IAAAwI,GAAmB1H,EAIjB4nD,EAHAhrD,4BAAiCirD,EAAAA,KAAAA,gBAGvBx9B,GAAgBztB,EAAAA,KAAKstB,eAKVthB,WAKrBorB,aAAUoxB,OACR19C,GAAK9K,GAAAA,GAAKuzB,EAAAA,GAAAA,EAAAA,IAAAA,GAAAA,GAAAA,EAAAA,KACRphB,IAAA7B,KAIIlC,IAAAA,GAAAA,IAAAA,KAAAA,GAIF3D,IAAAA,KAAAA,IAAAA,GAAAA,KAGNzK,MAAKuoD,GAAAA,KAAAA,EAAAA,UAEIC,qBACPxoD,SAAKkrD,GAAAA,OAAAA,EAAAA,MAAoB9nD,EAEJovB,QAAX24B,KACRnrD,gBAAKorD,QACqBL,8BACrBM,EAAejoD,UACL+nD,EAAAA,UACVG,YAAAA,SAITtrD,GAAKurD,GAAAA,KAAAA,oBACAhgD,EAAAA,WAAQ,IAMPjJ,EAAAmrB,SAAA89B,KAAAA,eAAAA,IAARjpD,EAAAmrB,OAAA,CAAA,IAAAztB,KAEMA,SAAK8iB,CAAAA,IAAAA,KAAAA,qBACP9iB,GAAK8iB,OAAAA,EAAAA,kBAA6B7hB,EAAAA,iBAAiBjB,KAAAuoD,kBAAkBjlC,EAAAA,KAAAA,UAChER,EAAAA,SAAAA,KAAe0L,oBAAcvtB,GAAAA,IAAAA,EAAAA,OAAiBjB,KAAWA,eAAKqpD,GAAAA,IAAAA,EAErErpD,OAAKwrD,KAAAA,eAAAA,GAA2BxqD,IAAAA,EAAOqpC,QAAAA,KAAYihB,eAAMhpD,GAAAtC,KAAKyrD,yBAMxDzrD,KAAA6pD,SAAAA,KAAAA,EAAAA,UAAR0B,uBACWzoC,WAAe0L,IAAAA,EAAAA,KAAAA,KACtBxuB,eAAK8iB,gBAA6B3Y,KAAAA,eAAoBqkB,cAAaxuB,iBAAKsjB,YACnER,KAAAA,oBAAe0L,KAAcrkB,eAAAA,cAA+BnK,iBAAKqpD,UAExErf,KAAAA,mBAAmBwhB,KAAAA,yBACdA,OAAAA,aAAAA,WAQC,OAAAN,EAAAA,gBAAAA,KAARpB,EAAAzgD,UACMrJ,0BACFA,WAAYo1B,KAAAA,eAAoBm1B,gBAAAA,KAAsBnnD,eASlDorB,cAAA48B,oBACNprD,YAAYyiD,KAAAA,oBACPmH,KAAAA,eAAOpH,cACPiH,oBAAuBzpD,UAAKi0B,KAAAA,mBAGjCj0B,cAAYk1B,KAAAA,0BAAsBq1B,KAAAA,8BACjBr1B,GAGjBl1B,EAAAA,UAAYo1B,oBAGZ,SAAap1B,GAAKkX,KAAAA,OAAAA,iBAA4B+D,KAAIjb,OAAK4pD,aAAO10B,KAAeq1B,sBAMpDX,KAAAA,EAAO10B,UAAAA,eAMvBw2B,SAAS1rD,GAAAA,GAAK4pD,KAAO10B,OAAAA,qBACvB00B,EAAAA,KAAO10B,OAAAA,mBAQR,EAAAl1B,KAAAqrD,qBAARrrD,KACMA,mBAAKyqD,GAAAA,EAAoBrnD,EAAAA,KAAOwmD,OAC7BH,eAAAA,KAAuBc,sBASxBe,GAAAA,KAAAA,OAARp2B,eACiBl1B,CAAAA,KAAKuqD,OAAAA,kBAAsBnnD,EAExCpD,IAAKypD,EAAAA,KAAAA,eACLzpD,OAAK2rD,MAAAA,IAAAA,KAAqB/B,OAQvB10B,eAAAjB,IAAAA,GAAAA,EAAAA,SAAPj0B,KAA0BoD,OACxB8xB,eAAyB7M,IAAQld,IAAAA,EAASnL,SAAKgjB,KAAAA,OAAgBrM,eAAQo0C,KAAAA,KAAAA,OAAAA,eAQjE,OAAA7sC,EAAAA,UAARmtC,eAIQ3gD,SAAAA,GAAAA,KAAAA,oBAIIk/C,GAAAA,KAAO10B,KAAAA,qBAMiB00B,IAAOx0B,EAAAA,UAAgBp1B,eAAYo1B,SAAAA,GAAa,IAAIp1B,EAAK4pD,KAAAA,sBAA0BtnD,GAIrHwI,IADA9K,KAAK4pD,qBAAsB5pD,EAAKuqD,KAAAA,cAAAA,EAAAA,MAC3BvqD,EAAAA,UAAYo1B,mBAMbp1B,SAAKypD,GAAAA,OAAAA,EAAAA,UACEG,EAAAA,OAAOx0B,KAAAA,gBAAuBw0B,QAAO10B,gCAChCE,EAAAA,UAEZp1B,aAAYo1B,SAAAA,GAAa,GAAKp1B,EAAAA,2BAEvBA,KAAKypD,OAAAA,eACdzpD,CAAAA,IAAK4rD,EAAAA,KAAAA,OAAgB5rD,aAAYo1B,CAAAA,KAAAA,OAInCp1B,aAAKuoD,GAAAA,KAAAA,OAAyBsC,aAAAA,IAAAA,KAAAA,GAAAA,KAKIjB,OAA9B5pD,aAAKypD,KAAAA,sBACElB,GAAAA,KAAoBqB,OACtBA,aAAOx0B,CAAAA,IAAAA,KAAkBp1B,qBAAoB2Y,KACzC3Y,OAAKuoD,aAAAA,GAAoBvoD,KAClCA,OAAK4pD,eAAOx0B,GAAap1B,KAO7B4pD,OAAe5pD,aAAKkX,GAAAA,EAAAA,KAAevU,OAC/B3C,aAAYo1B,GAAAA,KAAAA,eAA+BtyB,KAAAA,IAC7C9C,KAAa2C,sBAAsBinD,KAAOx0B,gBACiBp1B,KAA/Cgb,OAAK0wC,cAAc9B,KAAOx0B,kBACpCp1B,KAAK4pD,2BAMctnD,GAAA,IAAOtC,KAAK4pD,uBACZ5pD,KAAOA,kBAAYo1B,EAAAA,KAAaw0B,OACrD5pD,aAAa,GAAAA,KA5CbA,eAAa2Y,KAoDT3Y,KAAAuoD,kBAAR,IAAAvoD,KACE4pD,OAAK5pD,aAAYo1B,GAAAA,IAAAA,IAAiBp1B,EAAAA,KAAK4pD,eAAO10B,OAG1Cl1B,GAAKuoD,KAAAA,OAAAA,aACFY,GAAAA,EAAAA,MAAAA,OAAAA,CAAAA,IAAsBhtC,EAAK5M,EAAE8gB,MAAQrwB,IAAAA,KAAKuoD,OAAAA,aAAmB73B,IAAAA,GAAAA,IAAAA,EAAAA,SAKlE1wB,KAAeA,OAAKkX,aAAevU,KAC/B3C,KAAKuoD,OAAAA,aAAoB,KACvBvoD,GAAAA,EAAKypD,KAAAA,KAAAA,OAAAA,aACFG,IAAAA,EAAOx0B,KAAAA,KAAAA,OAAkBp1B,aAAKkX,IAAAA,KAAeyB,SAE/CixC,QAAOx0B,KAAAA,SAAa,KAAUjjB,EAAAA,UAAmBnS,YAAKkX,WAAepQ,GAAa+C,KAAAA,OAAM/G,cAEzF9C,KAAKypD,OAAAA,gBACPzpD,KAAK4pD,kBAAoB,CAAK5pD,KAEhCA,sBAAYo1B,KAAkBzyB,CAAOiJ,OAEvC5L,KAAKuL,kBAQDmlB,qBAAR,IAAA,IACEpuB,EAAAtC,KAAoBoD,eAAkBpD,OAAK6oD,KAAAA,kBAEtCgB,GAAAA,IAAAA,KAAAA,uBAEI37C,KAAAA,OAAcpL,aAnoBQ,GAAA9C,KAmoByDwyB,eAAexP,MAAAA,KAAAA,OAAgB6oC,aAAU,GAAAv7C,KAAA6B,IAAA7P,EAAAsJ,MAC3H5L,KAAKkX,eAAevU,KAAOgqB,EAAAA,MAAU3sB,OAAKkX,KAAAA,IAAAA,KAAevU,uBACvC3C,KAAKge,OAAAA,aACvB5a,GACApD,GAAAA,KAAK+X,OACL/X,aAAKkX,GAAAA,EAAeyB,OACpB3Y,KAAKkX,YAAAA,EAAepQ,UAGtB4iD,WAAsC3oC,SAAPze,GAAA,IAAuCye,EAAnB+qC,EAAYb,UAC5CjrD,KAAA2/B,oBAAmBmsB,GAAY9rD,KAAoB6pD,4BAA6B7pD,KAAK28B,cAAa7vB,QAAAA,GAAAA,EAAgB6mB,KAAAA,EAAAA,QAAAA,KAAAA,gBAC9HgJ,UAAa5vB,wBAItB/M,GAAAA,KAAK+rD,eAAAA,OAAAA,QAID/rD,KAAAkX,eAAA60C,OAAAA,MAAAA,CAAAA,IAAAA,EAAR/rD,KAAAge,cACgBhe,UAAY+pD,EAAAA,KAAAA,SAAAA,KACpB5hD,eAAkB6hD,KAAAA,KAAAA,eACU7hD,MAAQD,GAAM,GAAWqH,QAAA,IAAmBpH,EAAI,SAE7EmlB,IAYAttB,EAAAA,GAAK+oD,CAAAA,IAAAA,GAAAA,EAAAA,EAAAA,oBAA4BC,EAAAA,GAAAA,EAAAA,EAAAA,GAC9B,EAAAhpD,KAAOA,eAAK+oD,KAAAA,aAAsC/oD,gBAAK+oD,uBAClD/oD,KAAKgpD,aAAiBj8C,iBAAsBi8C,GAAAA,UAAAA,KAAiB+C,gCAErC5jD,EAAKmlB,UAf/Bw7B,6BACFkD,WAAAA,IAAAA,EAAuB9jD,KAAYolB,OAkBtCy8B,oBAAAiC,EAAAA,KAAAA,OAARhC,kBACOjB,KAAAA,IAAAA,GAAAA,EAAAA,KAAqB7gD,EAC1BlI,IAAKgpD,EAAAA,KAAAA,EAAAA,IAAAA,EAAAA,GAAmB7gD,IACxBnI,KAAK8oD,oBACL9oD,KAAK2oB,kBAAmBxM,EAAAA,KAGlBnc,KAAA+oD,mBAAAS,IAARlnD,EAAA,KAAAtC,KAAA+oD,mBACO1zB,IAAAA,EAAAA,KAAAA,KAKLr1B,iBAAmBsJ,IAAAA,EAAAA,KACnBtJ,KAAKupD,iBAAkBrvB,IAAAA,KAAAA,uBAA0B53B,EAAA+tB,EAAAA,IAAUrwB,KAAA8oD,kBAQrD9oD,KAAAgsD,uBAAAC,EAAAA,EAAAA,IAAAA,EAAAA,UAARD,uBACkB7pC,SACAA,EAAOrX,EAAAyE,GAASnK,KAC9B2jD,mBAAsC/oD,EAAAA,KAAKi3C,iBAAWjT,EAAAA,KAAWlhC,iBACxDm0C,EAAAA,KAAUlqB,mBAIM5K,QAAc/c,EAIrC8mD,UAGJ1C,kBAGK,SAAAz0B,GAAAA,IAAPjqB,EAAA9K,KAAAA,KAA8C8C,iBAChCuyB,KAAAA,cACZr1B,UAAK6pD,KAAAA,cACL7pD,EAAAA,aAAYk1B,MAAAA,QAAkB/C,SACzBy3B,GAAAA,OAAOnH,EAAAA,QAAAA,OAAAA,EAAuB3/C,UAC9ByI,oCAGP,SAAwB0B,EAAAA,GACjBjN,IAAKsqD,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,EAAAA,EAAAA,IAAoBr9C,EAAAA,IACxBjN,CAAAA,IAAKyqD,EAAAA,EAAAA,SAAAA,EAAAA,KAAwBxT,WAC1B1rC,WAEPvL,OAAK+rD,IAAAA,KAAAA,UAAAA,WAQDx8C,IAAA0B,EAAA,GAAAnG,EAAA,KAAAqhD,IAAAA,GAARl7C,EAAA,GAAA,OAA6Cm7C,GAAgFC,EAAAA,UAAzCt3B,aAAA,SAAyCs3B,EAAAA,EAAAA,GAAArsD,KAEvHmiB,OAAaniB,iBAAKkX,KAAeyB,4BAIjBzB,KAAevU,OAChBA,eAAwB,CAAAL,EAC3CwI,GAAK8hB,KAILg9B,OAAoBj+C,qBAAAA,EAAAA,KAAmCJ,WAGtCvL,EAAAA,UAAKisD,iBAAAA,SAAAA,GAAgD9pC,KACvDqjC,oBAMX8G,KACsBtsD,KAEMyqD,oBAE9BnoD,GAAA,IAAoBtC,KAAqCuL,SAA3BghD,GAAO/G,KAAauG,iCAGZQ,EAAAA,UACpC9G,WAOExmB,SACS9c,EAAOrX,EAAAyE,EAIkBnK,GAAlCwnB,QAAWG,IAASkS,IACtButB,GAAAA,QACAvtB,IAEalS,IAAAA,GAAAA,KAASmS,EACtButB,IACAvtB,KAIFhoB,eAA0B8uC,MAAkBljD,CAAAA,IAAAA,EAO5C9C,KANIkX,eAEUvU,OAIIgT,EAAA1E,EAAKu0C,MAAmBxlD,IAAK0sD,EAAAA,IAAAA,GAAAA,EAAAA,CAAAA,IAAAA,EAAAA,EAAAA,4BAA4DzV,EAAAA,IAAAA,GAC9F/N,EAAAA,KAAAA,oCACS+N,EAAAA,GAAAA,EAAUjT,EAAAA,EAAAA,EAAAA,GAAAA,EAAWlhC,EAAAA,EAAAA,EAAAA,EACP+C,EAAA,EAA9B7F,EAAAA,EAAKi3C,GAAAA,MAAAA,EAAUlqB,OAAAA,GAAAA,CAEjBy/B,KACAvtB,EAAAA,GACS,MAGTqtB,EAAsBC,OACRpnD,EAAS,IAEzBqgD,IACAvmB,KAEFz7B,EAAAyL,EAAOiwB,QAAoBp8B,MAAqBmM,EAAI+L,OAAKlY,EAAAA,IAAW9C,QAAK0sD,CAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,EAAqB9/B,GAAWsc,IAAAA,EAAAA,SAAqBlpC,KAAKi3C,IAAAA,KAAa,IACnI/N,EAAAA,SAAkB9hB,KAAGpnB,IAAKi3C,KAAAA,IACrCjjC,EAAA2B,EAAMqwC,UAAc/O,GAAAA,OAAUjT,IAAAA,EAAAA,IAAWlhC,GAAAA,EACP,EAAAU,GAA9BxD,EAAAA,GAAKi3C,EAAAA,GAAAA,EAAAA,IAAUlqB,KAAAA,qBAOjB4/B,EAAuBzjB,SACF/hB,EAEvBs+B,EAAAA,KACAvmB,aAUAsmB,CACEoH,EACAJ,SAKOl8C,EAAK6B,EAAAA,KAAInS,WAAKkX,IAAAA,EAAeyB,KACxC8sC,UAKEkH,WAE6E7pD,OAAvCqO,IAAMq0C,KAAsBqH,UAKtE9/B,YACoDpnB,IAA/BinB,KAAWurB,EAAAA,IAAAA,GAAAA,EAAa,EAAqBhzC,GAC9DqK,EAAMs9C,GAAqBnqD,IAAOkH,IAAMoR,KAAWmM,EAAAzR,EAAK7S,QAC9B8pB,EAAWkS,EAAAA,EAAAA,SAA+E9+B,KAA/Cm4C,qBAAkBjhC,EAAAA,SAAAA,EAAeyB,EAAAA,KAA4Bs+B,aAC1FkV,CAAAA,EAAAA,SAAYnsD,EAAAA,EAAKkX,KAAAA,WAAeyB,IAAO4C,EAAG4G,KAAY80B,UAAiBjT,WAE3GlhC,OAAe9C,IAAKkX,KAAAA,UAAeyB,YACnCzQ,IACApF,KAAUy6C,EAOlB,IAAI8O,GACEnkD,EAAQpF,EAAAA,GAAW9C,EAAAA,GAAKkX,IAAAA,KAAAA,IAAeyB,IAAAA,EAAkExT,EAAAO,EAAAC,EAA1DinB,EAAWurB,EAAAA,KAAAA,IAAAA,KAAan4C,eAAKkX,KAAeyB,EAAOxT,EAAqBQ,EACzHC,EAAAC,EAAMknD,GAAwBljD,GAAAA,GAAMoR,KAAIkH,EAAOhR,MAC/ChM,EAAI4nD,GAAkBA,OAAejuB,CAAAA,GAAAA,GAAgD,IAAnCiuB,GAAe5U,KAAAA,EAAAA,aACzD6U,GAAuBhtD,CAAAA,IAAKmsD,EAAAA,EAAAA,MAAWlxC,IAAIkH,EAAO,GAAK,GAAI,GAAOoF,GAAO5R,EAAAmpB,WAE9Ch8B,KAAAA,EAAAA,aAM9BoF,KAAOpF,eAQR6V,KAAA,GAAA,CAAAgyC,IAAAA,EAAAA,KAAAA,WAAV,CAAwBxoC,KACtBjL,eAA0Bi1C,KAAAA,EAAWhqC,EAAQiqC,GAC7C,IAAA,GAAkB,GAEhB,GAAoBlkD,GAAAA,EAAAA,CAAQ,IAC1B+kD,EAAa/kD,KAAAA,eAAcgP,KAAAA,EAAeyB,MACnC0O,GAAAG,EAETxnB,GAAAA,IAAK4pD,GAAAA,GAAO10B,EAAAA,IAAAA,KAAAA,eAA6Cvc,MACzD3Y,KAAK4pD,EAAAA,aAAOnH,KAAAA,eAAoC3/C,KAQ5C,GAAA,CAAA,IAAA8oD,EAAAA,EAAAA,MAAAA,IAAAA,EAAR,GAAA,GAAA,GAAwBzpC,GACtBsF,EAAAqX,WAA0BqtB,KAAAA,EAAAA,aACR,GAIhB,CAAA,IAHAzkC,EAAI7G,KAAgBsrC,WAGQ,CAC1Bc,EAAa/kD,EAAAA,GAAAA,IAASlI,GAAAA,GAAKkX,GAAAA,IAAAA,GAAAA,EAAeyB,SAM5C,MAAK3Y,CAAAA,MAAK4pD,EAAAA,OAAO/G,OAAAA,EAAAA,UAAAA,cACK36C,SAAqBpF,EAAAA,GAAS9C,IAAKkX,EAAAA,KAAAA,WAAeyB,EACpEs0C,GAAanqD,GAAAA,EAAAA,CAAAA,KAAU9C,EAAKkX,MAAAA,GAAAA,EAAAA,OAAeyB,KAK/C3Y,eAAYo1B,KAAAA,EAAAA,KAAgBp1B,KAAK4pD,OAAO/G,eAAAA,CAAAA,EAAAA,MAAAA,EAAAA,IAA4C36C,KAAAA,OAAqBA,qBASrGqH,EAAAzM,SAAA4pD,EAAAA,UAAAA,gBAAqBnpB,SAGHjhC,GAApBihC,IAAKxW,EAAAA,KAAAA,WAGG/J,GAAAA,GAAAA,GAAAA,EAAAA,CAAAA,IAAgBrM,IAAAA,EAAQu2C,EAAAA,GAAAA,EAAAA,MAActyC,GAAAA,EAAAA,OAAaopB,KAAAA,eAOvDrrB,KAAApJ,IAAAo8C,IAAAA,KAAAA,OAAV9I,6BAC4B3rC,KAAevU,EAAAA,MAAOwqD,EAAAA,OAAAA,KAAAA,eAC3CvD,MAAAA,EAAO10B,QAAAA,KAAAA,eACZl1B,KAAK4pD,IAAAA,KAAOx0B,OAAAA,aAAqBle,CAAAA,KAAAA,OAAeyB,6BACpC8pC,EAAAA,MAAAA,EAAAA,MAAuB33C,EAv6BVhI,OAuDxByM,KAAAiN,EAAAA,UACAkwC,qBACA,SAAAjoC,GAAAA,OAAAA,IACAniB,EAAAyqB,YAAApI,KAAAA,gBACAiL,QA3DQY,cAAyBpkB,QAAzBokB,EAAAA,aAAAA,kNC9DbiyB,qBAGarzB,GAAAA,EAAAA,CAAAA,EAAAA,EAAAA,EAAAA,gBAAmBg+B,EAAAA,EAAAA,EAAkC3vB,cAAA4vB,EAAA,EAAAzE,EAarDnkC,eAAAyK,EAAAA,EAAAA,EAAAA,iBAAsBk+B,EAAAA,EAAAA,EAAqCx9B,iBAAAk6B,GDwF9Db,CCjFGqE,EAAA7oC,YAAAA,EAAAA,iBAAgB2oC,GAAAA,KAA+B,CAAA9qD,EAAAwI,EAAAyE,KAAAsE,OAQ/C+b,eAAiB9kB,EAAA,aAAAsiD,CAAAA,OAAgC,IAAAtiD,EAAA2kB,wBA+BjD/K,EAAAA,cAAoB0oC,EAAAA,kBAAmCtiD,EAAA8kB,eA4BvDM,EAAAA,cAAgBk9B,EAAAA,oBAA+BtiD,EAAAskB,sBAQ/CK,EAAAA,IAAAA,EAAAA,EAAAA,MAA0B29B,EAAAA,kBAAyC,EAAAhoD,EAAAgoD,iBAAA,ihBCnGhFtiD,EAAAyE,GAAAnK,EAAA,GAAA,iBAkB6BgvC,SAAApxB,mBAoC7BoxB,QAjDEC,SAAAplC,EAAAmlC,QAAkBC,SAAA/xC,EAAAwI,EAAAyE,UAAlB,IAAA,IACEpK,EAAA7C,EAAK2tB,OAAas9B,EAAAA,GAAAA,EAAAA,KAChBt8C,EAAMu8C,EAAyCxsD,MAAeysD,GAAAA,EAAAA,EAAAA,EAAAA,GAAAA,EAAiBzsD,EAAAA,EAAAA,EAAAA,EAAe0sD,GAAAA,EAAAA,EAAAA,KAAAA,GAAAA,OACzFF,EAEH,GAAAv+C,GAAA4E,OADAtR,eAAauI,EAAAyE,EAAAN,GAAAA,GAAA0+C,EAAA3tD,MAAAA,KAAAy0C,SAAA,SAAAnyC,EAAAwI,GAAA,OAAA,SAAAyE,EAAAnK,GAAA0F,EAAAyE,EAAAnK,EAAA9C,KAAAuR,OACN+D,eAEI21C,EAAAA,aAEf,CAAArpD,OAAoBqpD,IAAAA,EAAAA,wDAQf72B,EAAAA,GAAAA,KAAP1T,gBACciN,EAAa29B,OAAAA,OACzBh2C,eAG4Bi2C,EAAAA,eAAAA,CAC5Bx5C,IAAIy5C,WAAAA,IAAgB9tD,EAAAA,cAAK+tD,CAAAA,IAAAA,EAAAA,OAA0BC,cAAAA,OAAqBhrC,mBAAgBrM,IAAAA,EAAQs3C,OAAAA,QAAa14C,KAAA,4FAO/G,KAAA24C,EAA6BC,cACNntD,IAAAA,EAAOotD,OACtBC,EAAMC,eACMC,YAAAA,EAETnpD,cACPopD,IAAWF,EAAaG,UAAWrpD,cAGxBzC,WAGP,IAAAmI,EAAAojD,EAAAF,aAAAA,GAARljD,EAAA,CAAA,IAAAyE,EAAwBm/C,EAKtBb,qBAAgB/iD,EAAAgjD,gBAlCfnpC,KAAAA,qBAlBQsL,KAAAA,6FCFb0+B,aAAAp/C,EAgBArH,MAAA,QAYEgmD,EAAA7kD,UACU0kD,qBARH,SAAAa,GAAAA,IAAAA,IAAkB9jD,EAAI9J,OAAAwW,KAAAA,GAEtBjI,EAAAzE,EAAAhI,OAAA+rD,EAAAA,IAAAA,WAAsBr3C,GAAAA,EAAAA,EAAAA,EAAAA,EAAAA,IAEtBpS,EAAA0pD,GAAAA,EAAAA,WAAgB79C,GAAI,OAAAuG,EAAAA,QAMzBxX,EAAK+uD,UAASf,gBAAkBgB,SAChChvD,GAAAA,OAAKivD,EAAAA,MACLjvD,KAAKkvD,IAAAA,EAAAA,EAAU,CAAAvB,EAuMnB,EAAAwB,EAAAxqC,kBAlNEupC,MAAWkB,EAAAn/B,aAAAo/B,GAAA,KAAA,KAAXC,KAAAz7C,OAA8C+D,eAAYg3C,EAAAA,aAAgBxrD,CAAAA,qCAE1EmsD,EAAAD,EAAA,MAAAE,EAAA,oBAAWC,EAAAntD,GAAAtC,KAAAgvD,WAAX1sD,EAAAtC,KAA8C4uD,gBAAYC,IAAAA,EAAAA,qDAE1D7uD,KAAA8uD,cAAW,IAAAS,EAAA/3C,kBAAXu3C,OAAsC,IAAAW,MAAO1vD,KAAK8uD,YAAc1rD,KAAAA,oCAUhEyQ,OAAA+D,eAAW63C,EAAApmD,UAAA,gBAAX,WACE,OAAOrJ,KAAKgvD,gBAGd5rD,OAAqBusD,YAEf3vD,EAAKgvD,cAAT,IAMAn7C,OAAiB+D,eACDxS,EAAIkL,UAASq/C,WAAmB7sD,CAAAA,IAASsC,WACzCpF,OAAK+uD,KAAO/uD,gBAAK4vD,OAEjC5vD,YAAc6vD,EACd7vD,cAAKgvD,IACLhvD,OAAKivD,oDAGP,OAAAjvD,KAAA8uD,cAAW1rD,OAAA89C,YAAX,EAAAC,cACSnhD,IAAKkvD,sBAGIY,EAChBzmD,UAAqB6lD,YACd,CAAAj0C,IAAQjb,WAAKkvD,OAAwB9pD,KACxCpF,YAAYoF,IAAAA,SAGX8pD,GAAAA,GAAAA,yCAWA5sD,GAAAiN,EAAA,EAAAA,EAAA0L,KAAP9I,IAAA7P,EAAAtC,KACE8C,QAAO9C,IAAK+uD,EAAAA,GAAAA,KAAO/uD,OAAK4vD,KAAAA,gBAWnBrgD,IAAAvP,KAAA0f,OAAP5U,EAAA9K,KAA0BkE,WACnB6qD,EAAO/uD,KAAK4vD,YAAAA,IAAgBxvC,YAQ5B,EAAA+gC,cAAP,IAAAttC,OACE7T,eAAiB4vD,EAAAA,UAAAA,SAAqBV,CAAAA,IAAAA,WAC7BA,OAAAA,KAAYlvD,SAAKgvD,IAAAA,SACnBC,GAAAA,GAAAA,EAAAA,KAAgBjvD,QAAKivD,IAAAA,IAAcjvD,EAAAA,KAAKgvD,QAAAA,EAC7ChvD,EAAAA,IAAK8uD,KAAAA,OAAc3yC,QAAAA,EAEnBnc,KAAKkvD,QAAAA,GASFhO,YAAA,EAAA6O,cAAP,IACEN,EAAIzvD,UAAKkvD,IAAYlvD,SAAKgvD,GAAAA,OACxBhvD,KAAM+uD,OAAInnD,KAAMgoD,gBAAAttD,KAAAmtD,EAAApmD,UAAAqW,IAAA,SAIlBpd,EAFAtC,GAAAA,KAAKivD,OAAAA,KAAgBjvD,gBAAmBA,IAAKgvD,GAAAA,EAAAA,UAC7ChvD,KAAK8uD,SAAAA,GAAc3yC,KAAK4yC,OACZA,KAAAA,gBAAYa,KAAAA,UAAqBV,EAAAA,KAAUA,UAMzDlvD,KAAAgvD,YAAWhvD,KAAAivD,mBAAXA,YACEjvD,KAAOA,WAAKkvD,KAAYlvD,cAAKgvD,qCAOxBe,QAAA,WAAP,GAAA/vD,KACEkvD,UAAYH,KAAAA,WAAYa,MAAAA,IAAAA,MAAqBV,4CAYjChnD,YAAoC+mD,cAAAjvD,KAAAivD,YAAAjvD,KAAAgvD,WAAAhvD,KAEhD8uD,cACW1pD,KAAWA,GAAIpF,KAAKkvD,OAAUc,KACrChwD,gBAAYA,KAAK4vD,QAAAA,KAAgBxqD,OAAMpF,eAAiB4vD,EAAAA,UAAAA,SAE1D5vD,CAAAA,IAAKkvD,WACLlvD,OAAK4uD,KAAAA,UAAgBzyC,KAAOiE,YAAciQ,YAInCjrB,EAAIpF,cAAe,IAAeoF,EAAAA,UACpC2pD,IAAO/uD,WAAK4vD,OAAAA,KAAoBK,OAAMntD,KAAW9C,gBAAiB4vD,KAAAA,UAAAA,KAEzEH,EAAApmD,UAA0BvG,OAAQsC,SAC3B2pD,EAAAA,GAAAA,IAAO/uD,IAAK4vD,EAAAA,GAAAA,EAAAA,EAAAA,EAAAA,UAA8BK,OAOjD7qD,IALUtC,EAAAA,EAAAA,GACR9C,UAAK6uD,GAAAA,GAAAA,EAAAA,CAAAA,IAAgB1yC,IAAOiE,EAAAA,EAAAA,EAAOlY,KAAOmoB,QAAcvtB,EAAAA,IAAAA,KAItD9C,OAAKkvD,KAAgBpsD,gBAAcksD,IAAAA,KACrCD,OAAqB/uD,KAAKkvD,gBAA0BlvD,EAAAA,IAAKgvD,KAAAA,SACpDC,EAAAA,KAAAA,gBACAC,KAAUlvD,CAAAA,MAAKgvD,EAAAA,OACpBhvD,IAAK8uD,IAAAA,EAAAA,KAAAA,QAAmBoB,EAAAA,GAAAA,EAAAA,IAExBlwD,KAAKkvD,OAAWe,KAAMntD,gBAQnBqtD,EAAAA,EAAAA,SAAPnwD,KAAA+uD,OACc/uD,KAAKkvD,gBACFA,IAAAA,IAAAA,EAEflvD,EAAAA,EAAKivD,EAAAA,OAAAA,IAAe1vB,KACpBv/B,OAAKkvD,KAAW3vB,gBACXuvB,EAAAA,IAAc3yC,EAAAA,GAAKojB,GAGnBhwB,EAAAzM,QAAA9C,KAAAowD,gBAAPj0C,KAAoCojB,CAAAA,MAClCj9B,EAAA+tB,OAAA9gB,EAGAzM,SAAiBoF,KAASlI,QAAKkvD,EAC7BpsD,OAAM9C,KAAI4H,WAAM,CAAA,IAAA+N,EAAA3V,KAAAkvD,QAAA3/C,EAAAzM,OAENy6C,KACVyR,WAAUpnD,KAAMqnD,aAAAt5C,EAAA3V,KAAAkvD,QAAAlvD,KAAAgvD,WAAAhvD,KAGdu9C,cACOn4C,KAAeA,QAAQA,KAC9BpF,SAAqBu9C,EAAQv9C,QAAKib,EAAI/S,UAElCmoD,UAA0CrwD,SAAKkvD,GACrD5sD,EAAI+tD,KAEFnB,UADKA,EAAAA,KAAWmB,SACJnB,KAAUlvD,aAAKgvD,EAAAA,KACzBhvD,SAAKkvD,EAAAA,KACLlvD,cAAKivD,KACLjvD,IAAK8uD,EAAAA,UAAc3yC,cAIvB,SAAoBojB,EAAOn6B,EAAAA,GACzBpF,KAAK0f,GAAIxX,GAAYq1C,CAAAA,GAAQv9C,EAAAA,GAAKib,GAAI/S,KAAQ9C,QAW5C,MAAAwqD,IAAAA,MAAAA,+BACOX,GAAAA,EAAAA,EAAAA,EAAAA,MAAuBjvD,IAAKgvD,MAAAA,6GCpO7C,IAAA/9C,EAAA3O,EAAAwI,EAAAyE,EAAAvP,KAAyBswD,QACvB,GAAAr/C,EAD+B,EAAA,IAAAs/C,KAAArB,SACZj+C,EAAAjR,KAAAkvD,QACjBlvD,KAIFgvD,YAAgCwB,KAAAA,UAAoBxwD,KAEpDivD,cAEe9rD,KAAOotD,cAAqCE,KAAUttD,QAGrE,IAAAiC,EAAOsrD,EAAAA,8HDSP,gcEPF5lD,EAAA+I,OAAAxK,UACA0vC,eAEA7yC,KAAA4E,EAAAyE,KACAjN,EAAAiN,GACAzE,EAAAyE,MAAAohD,EAEAC,IAAA,SACAtuD,EAAAwI,GAAA,GACA,mBAEAA,GAAA,OACAA,EAAA,MAAA,IACA4vC,UAGA,uBAMA13C,OAAA8H,GAAA,mDAgBU+lD,YAAYvuD,EAAI8C,EAAAoS,EAAAA,GAAAA,EAAAA,UAEhBs5C,OAAUhmD,EAAA+I,OAAI2D,OAAAA,IAEZu5C,EAAAA,UAAcjmD,EAAAzB,UAAImO,IAAAA,KAEpBxP,OAAAA,eAAgBwP,EAAAA,aAEdwZ,CAAAA,OAAY,IAAIxZ,EAAAA,kBA2BnB4R,EAAAA,IAAAA,EAAAA,EAAAA,KAAwBna,EAAA+hD,EAAI,MAAAC,EAAAA,EAAAA,MAAAA,EAAAA,EAAAA,MAC5BzmC,EAAAA,EAAAA,KAAAA,EAAAA,EAAAA,MAAqB5kB,EAAAsrD,EAAAA,MAAAA,EAAAA,EAAAA,MAC1BhqC,EAAKkC,EAAAA,MAAAA,EAAAA,EAAAA,MAAAA,EAAAA,EAAsB6F,MAAAA,EAAAA,EAAW,MAAAtK,EAAAA,EAAAA,MAAAA,EAAiBqsC,EAAKxmC,MAAAA,EAAAA,EAAAA,MAC5DlD,GAAA,EAAKpQ,EAAAA,SAAAA,YAA+Bi6C,EAAK/nC,GAAAA,IAAAA,EAAAA,EAAAA,KAAAA,OAAsBC,KAAAA,OAAAA,EAAewnC,UAAAO,IAAAA,EAAAA,aACzEhoC,EAAAA,QAAAA,IAAsB6F,EAAAA,aAAWzS,EAAAA,YAAqBtF,IAAAA,EAAAA,aACtDC,EAAAA,UAAc,IAAKiS,EAAAA,aAAAA,EAAAA,UAAsBC,IAAAA,EAAAA,aAAegoC,EAC7DjoC,sBAAKA,IAAsB6F,EAAAA,qBAAwB1f,EAAK4H,eACnDtK,IAAAA,EAAAA,eAAmB/E,GAASyH,EAAK6Z,sBAAsBC,WAAAA,EAAAA,gBAA4B9Z,EAAAib,gBAAMjb,EAAKkmB,eAAAA,EAAAA,SAC9FrM,EAAAA,sBAAsB6F,eAAWwO,EAAAA,gBAAmB5wB,EAAAA,sBAC5Buc,WAAAA,EAAAA,eAAsBC,EAAAA,gBAAeioC,EAAAA,YAC7DloC,EAAAA,sBAAsB6F,eAAWsiC,EAAAA,YAAmBhiD,EAAK2hB,sBACzDsgC,WAAAA,EAAAA,YAAwBpoC,EAAAA,aAAsBC,EAAAA,YAAe9Z,EAAAkiD,SAAAA,EAAAA,sBAC7DroC,eAAsB6F,EAAAA,aAAWyiC,WAAuBF,OAAAA,EAAAA,qBACxDG,EAAAA,sBAAsBvoC,WAAsBC,EAAAA,aAAeuoC,EAAAA,aAC3DxoC,EAAAA,iBAAsB6F,EAAAA,sBAAWvS,eAAsBi1C,EAAAA,kBACvDE,EAAAA,sBAAuBzoC,WAAsBC,EAAAA,kBAAeyoC,EAAAA,kBAC5D1oC,EAAAA,iBAAsB6F,EAAAA,sBAAiC4iC,eAAAA,EAG5DJ,iBAAqBliD,EAAA6Z,sBAAsBlS,WAAgBjI,EAAK4iD,iBAAiBtiD,EAAK1C,kBAAkB2kD,EAAAA,eAAuBr6C,EAAAA,sBAAkBqT,eAAqB0G,EAAAA,gBAAuBygC,EAAAA,sBAC/KxnC,WAAAA,EAAazN,gBAAmBlU,EAAAA,gBAAiBuoD,EAAAA,gBAC1DjpD,EAASshB,sBAGTthB,eAASqiB,EAAAA,gBAAkBjT,EAAAA,sBAA8BlP,WACzDF,EAAAA,gBAASqiB,EAAAA,iBAAkBtd,EAAAA,cAAyBikD,IAAAA,EACzDiB,aAAcxiD,EAAA2H,eAAa3H,EAAK1C,gBAAYmlD,EAAAA,YAAenB,EAAAA,iBACxCrmC,EAAAA,YAAe8E,EAAAA,eAAe/f,EAAA2hB,iBAAO3hB,EAAK6b,gBAAejoB,EAAAA,UACvE2E,EAAAA,EAASqiB,cAAKjT,EAAAA,cAAwB1O,WACpCwoB,EAAAA,cAAiBxnB,EAAAA,SAAe0N,EAAAA,eAAevU,EAAAA,UAAOiJ,EAAO4O,EAAAA,cAC7Dg3C,EAAAA,eAAiBS,SAAe1iD,EAAK2H,YAAAA,EAAAA,UAAsBwjB,EAAAA,EAAAA,cAAgBxjB,EAAAA,YAAsBg7C,OAAAA,EAAAA,UAExG3iD,EAAKzH,UAAS,EAAKyhB,EAAAA,cAAcnhB,EAAAA,YAAS4pD,SACnChhC,EAAAA,YAAiBxnB,EAAAA,SAAe0N,EAAAA,eAAevU,gBAAc6X,SAC7Dg3C,GAAAA,OAAAA,EAAAA,eAAiBS,OAAoB/6C,EAAAA,SAAAA,EAAevU,eAAO+3B,UAAgBxjB,SAAevU,GAAAA,EAAAA,UAAOuvD,KAAAA,CAAAA,SAInGC,EAAAA,eAAmBC,OAAAA,MAAY53C,OAAA,IAAO63C,EAAkBb,iBAAKjoC,eAA0B8oC,EAAAA,eAzFrD1vD,OAiBzC+3B,UAAAnrB,EAAA2H,eAAWvU,OAAAuvD,kBAAX3iD,EAAAzH,SAAwCyH,EAAOvP,cAAK6wD,wCAEpDrnD,SAAA+F,EAAA2H,eAAWvU,OAAAiJ,MAAA4O,WAAXjL,EAAAiiD,iBAA6CxxD,eAAaoD,kCAE1DmM,EAAA2H,eAAAvU,OAAWuvD,kBAAA3iD,EAAA4iD,aAAX,IAAA9qC,EAAwC+qC,aAAYrB,SAAAA,EAAY3tD,GAAAA,qCAEhEmM,EAAA,OAAA0B,EAAAkgD,EAAAmB,GAAAz+C,OAAW+D,eAAAu5C,EAAA9nD,UAAX,WAAgE,CAAA4R,IAAA,WAAYjT,OAAU5E,kDAOtF,IAAAyQ,OAAW+D,eAAAu5C,EAAA9nD,UAAX,SAAA,CAAA4R,IAAA,WAOE,OANKjb,KAAKuyD,QAAAA,OACRvyD,YAAKuyD,EAAepR,cAAI3pC,IAAAA,OACnB1P,eAAckpB,EAAAA,UAAU5tB,aAAM6J,CAAAA,eACjC,OAAKslD,KAAAA,YAAYnvD,OAAA89C,YAAU13C,EAAAA,cAGxBxJ,IAAKuyD,OAAAA,2CAGd,WAAA,OAAAvyD,KAAWgI,UAAA5E,OAAI89C,YAAf,EAAAC,cAAmCnhD,IAAKkX,OAAAA,2CACxC,WAAA,IAAA5U,EAAAtC,KAAW,OAAAA,KAAAuyD,eAAXvyD,KAAAuyD,aAAmCvyD,IAAKkX,EAAAA,aAAepQ,oCACvD,SAAAgE,GAAA,IAAAyE,EAAA,QAAWA,EAAAjN,EAAAiwD,wBAAXhjD,GAAAA,EAAmC4M,KAAArR,EAAO9K,eAAKkX,KAAe+T,gDAC9D,IAAApX,OAAA+D,eAAWu5C,EAAA9nD,iBAAX,CAAA4R,IAAA,WAAgDjb,OAAKwqB,KAAAA,eAAegoC,MAAAA,uCAiD7D56C,eAAPu5C,EAAA9nD,iBACMrJ,CAAAA,IAAK+qB,WAGT,OAAA/qB,KAAMsJ,eAAOxC,MACIo6C,YAAjBlhD,EAAKyyD,cAAAA,IAAAA,OAAY76C,eACjB5X,EAAAA,UAAKyyD,UAAe1xC,CAAAA,IAGf,WAAAle,OAAP7C,KAAAkX,eACOi7C,SAAAA,YAAyB9Z,EAYzB8I,cAAAuR,IAAAA,OAAP96C,eACWT,EAAAA,UAAYgc,UAAY,CAAAlY,IAAA03C,WAAaC,OAASC,KACrD7yD,eAAiBuV,eAAK2rC,YAAA,EAAAC,cAAA,IAAAgQ,EAAA9nD,UACtBwpD,QAEF7yD,WAAKmyD,IAAaO,EAAAA,KAAAA,cAGbJ,EAAAjpD,UAAAwmB,QAAP3pB,KAAyBqV,MACnBu3C,QAAYA,EAAAA,KAAMv3C,oBAIT3Y,IAAGmwD,GAAAA,EAAAA,UACP/gD,KAAIuJ,kBAAGy3C,IAEX97C,EAAAA,UAAAA,MAAe2Y,SAAUtU,EAOzBzQ,GAAA9K,KAAAmyD,aAAPtvD,MAAAP,EAAc2wD,IAA2Bn0B,EAAAA,UAAAA,UACvC9+B,SAAKkX,EAAAA,GAAAA,KAAeg8C,YAUf//B,UAAAlkB,EAAA1E,aAAPqoD,OAAmBz+B,IAA6C3Z,KAC9Dxa,YAAKkX,KAAAA,qDAOPoQ,GAAmB6rC,GACjBnzD,KAAKkX,aAAek8C,UAAAA,EAAYD,IAM3BhC,EAAA9nD,UAAAgqD,OAAAA,SAAP/wD,EAAAwI,GAAAgoD,MACE9yD,IAAKkX,MAAAA,KAAAA,EAAem8C,KAAAA,IAAAA,EAAAA,EAAAA,cAMf59B,EAAAA,KAAAA,IAAAA,EAAAA,EAAPu9B,cACEhzD,KAAKkX,eAAeue,OAAAA,EAAAA,KAGf07B,EAAA9nD,UAAAiqD,OAAAA,SAAPhxD,EAAAwI,QAAA,IACOoM,IAAAA,GAAAA,GAAAA,KAAeo8C,eAAat4C,OAI5B1Y,EAAAwI,IAAAqmD,EAAAoC,UAAAA,YAAP,SAAmDlb,EACjDvtC,EAAAyE,GAAAvP,KAAOA,eAAmBuzD,YAAAA,EAAAA,EAAAA,IAAmBh6C,EAAI8+B,UAI5C+a,YAAAI,SAAAA,GAAPxzD,KAAAkX,eACEk8C,YAAY7pC,IAAAA,EAAAA,UAAciqC,YAAmBj6C,WAIxCvZ,KAAAkX,eAAAu8C,eAAmBl6C,EAAyB8+B,UAC1Cr4C,eAAKupB,WAAckqC,KAAAA,eAIrBh+B,kBAAAi+B,EAAAA,UAAPJ,aACE,SAAOtzD,GAAKupB,KAAAA,eAAcmqC,aAAmBC,IAAOtb,EAG5ChvC,UAAAkqD,mBACJvzD,SAAKwqB,EAAAA,GAAAA,OAAe7T,KAAAA,cAAQi9C,mBACzBC,EAAAA,IAAAA,EAAAA,UAIFL,mBAAP,SACOjqC,EAAAA,GAAAA,OAAcO,KAAAA,cACd5S,mBACLlX,EAAK6xD,IAAAA,EAAAA,UAAgB/nC,mBAChBjd,SAAYid,EAAAA,GACjB9pB,OAAKkxB,KAAAA,cAAiBpH,mBAGdsB,EAAAA,IAAAA,EAAAA,UAAVsoC,mBAEE,SACOpxD,EAAAwI,GAAA,OACH9K,KAAKirB,cAAQ4E,mBAAuB/oB,EAAAA,IACpCqqD,EAAA9nD,UACG6f,OAAA,WACMsB,KAAAA,eAAuBopC,QAAAA,aACzBC,KAAAA,sBAEL7zD,EAAAA,UAAKyyD,MAAAA,WAAYzyD,KAAEsJ,cACnBtJ,QAAKyyD,KAAAA,eAMH3oC,QAAA+pC,KAAAA,gBAAV/pC,QAAA9pB,KAAA6M,YACO7M,QAAKyyD,KAAAA,iBAEInoD,SAAU9B,EAAAA,UAAW4iB,eAAA0oC,SAAAA,GAAAA,IAA8BtsD,EAAAA,OAAKlF,GAAMtC,IAAKkX,aAAAA,KAC/E+T,QAAiBjrB,OAAKyzD,KAAAA,KAAAA,KAAmB3sD,MAAEitD,MAAO,IAAO,cAEvD/zD,KADA8zD,eAAAA,QAAAA,YAAmC58C,KAAAA,sBAGhCu7C,QAAAA,EAAAA,KACHnpD,oBAAS,IACSwB,GAAAA,EAAAxB,UAAAtJ,KAAAyyD,kBACZnpD,KAMd6nD,EAtPA9nD,UAA2C+C,mBAArByrB,6GCxBtBrwB,KAAA,KAAAxH,KAAAkX,kBACU88C,EAAAA,KAAgCh0D,KAEhCyzD,mBAwCV,CAAAM,MAtCE,MAAA,WAAA,OAAW,EAAAvkD,EAAAskD,+BAAXG,EAAA/8C,iBACOlX,MAAKk0D,KACRl0D,aAAc,CAAAsJ,QAcZ,WAbK0qD,IAAAA,IAAAA,EAAW1pD,EAAAA,EAAK4b,EAAAA,EAEnB5c,EAAAA,OAAShH,IAAAiN,EAAAjN,GAAAgH,cACG6qD,EDmEbj9C,CClEKvB,EAAAvJ,YAAoBgoD,EAAKJ,aAAWlxD,GAAAA,KAAQsC,CAC1CivD,EAAAC,KAASN,OAAAA,eAEPM,EAAA,aADKN,CAAAA,OAAW/5C,IAAO7U,EAAG+kB,aAU5B+pC,EAAAA,8CAGPK,IAAAp4C,KAAP63C,WAAqBQ,GAEnBx0D,KADAm0D,WACa,EAAOn0D,OAAKg0D,OAAAA,eACjB1pD,EAAAA,UAAU0pD,QAAW5uD,CAAAA,IAE7B,WAA0BtC,IAAAA,EAAAA,KACxB2xD,OAASvuD,KAAAA,SAAsBsuD,KAI5BN,OAAA,SAAA5qD,GAAP,OAAAhH,EACMtC,WAAKg0D,KAAAA,GACPh0D,CAAAA,QAAKg0D,WAAWlxD,IAASR,EAE3BtC,UAAKm0D,IAAAA,IAET5kD,EA3CA,EAAAA,EAAajN,EAAAkV,WAAAA,OA6CbjI,IAAA,GAAAjN,EAAA0xD,WAAgCU,KAC9B5pD,EAAA,YAAYxI,EAAA0xD,WAAK/5C,OAAGkC,EAAK7Z,OAAAA,+lBC5D3B4D,KAAA4E,EAAAyE,KACAjN,EAAAiN,GAAAzE,EACAyE,MAAAolD,EACAC,IAAA,SACAtyD,EAAAwI,GAAA,GACA,mBAEAA,GAAA,OAEAA,EAAA,MACA,IAAA4vC,UACA,uBAEA13C,OACA8H,GAAA,0CAmCM+pD,IAAyB70D,KAQ/B26C,YAAwCma,EAAAA,EACtCxyD,EAAI2O,GAAI3O,EACN+G,UAAY0rD,OAAAA,EAAAA,OAEdja,OAAQ7pC,IACN1B,EAAAlG,UAAQyB,EAASgqD,UAAKE,IACtBzlD,KAAQsE,OAAA+D,eACRq9C,EAAA,aAAiBH,CAAAA,OAAKI,IAAAA,EAAAA,aACdD,EAAAl+B,8BACR,EAAQ,IAAAo+B,EAwEqB7yD,EAxEZwyD,EAAKM,EAAAA,MACtBC,EAAAC,EAAA,MAAQC,EAAAD,EAAA,MAAcE,EAAAA,EAAAA,KACtBC,EAAKH,EAAG,MAAA1vD,EAASkvD,EAAKY,KAAAA,EAAAA,EAAAA,MACtBC,EAAKL,EAAG,MAAAM,EAASd,EAAKe,KAAAA,EAAAA,EAAAA,KAAAA,EACtBP,EAAA,MAAQQ,EAAAR,EAAA,MAAcS,EAAAA,EAAAA,MACtBC,EAAAV,EAAA,MAASW,EAAA,CAAA,IAASnB,EAAKoB,IAAAA,EAAAA,IAAAA,EAAAA,IACvB,EAAK,IAAI,EAAA,IAAA,GAAcC,EAAAA,gBAClB1mD,EAAInN,EAAAwI,GAAA,GAASgqD,EAAKsB,GAAAA,OAAAA,EAAAA,cACd,EAAA,OAAcC,GAAAA,KAAAA,EAAAA,QACvBvrD,EAAKkqD,WAAaF,KAAKwB,EAAAA,QAAAA,EAAAA,YAClB,KAAI,EAAA,QAAcC,EAAAA,eACvB,KAAS,EAAA,QAAcC,EAAAA,iBACvB,KAAS,EAAA,QAAcC,EAAAA,SAAAA,KAAAA,EAAAA,QAClB3rD,EAAI0qD,SAAckB,KAAAA,EAAAA,QACvB5rD,EAAA4qD,WAAS,KAAciB,EAAAA,QACvB7rD,EAAA+qD,gBAAuBe,KAAAA,EAAAA,QAClB9rD,EAAAirD,YAAkBc,KAAAA,GACvB,QAAS/rD,EAAAorD,cAAcnB,KAAAA,GAEzB,QAGFjqD,EAAAqrD,YACE,KAAA,GAAA,QAAArrD,EAAAsrD,eAAA,KAAA,GAAA,QACAtrD,EAAAurD,iBAAA,KAAA,GAAA,QAAAvrD,EAAAwrD,oBAFUv/B,KAAAA,GAAAA,QAAAA,EAAAA,kBAAAA,KAAAA,GAAAA,QAAwBjsB,EAAA0rD,gBAuCpC,KAGE,GAAA,QAEU75B,EACAxlB,mBAFAD,KAAAA,GACA,QAAAylB,EAAAA,aACA,KAAAxlB,GAAAA,QACArM,EAAA6rD,YAAA3zC,KAAAA,GAAAA,QANF8zC,EAAAA,UAAyBC,KAAAA,GAAY,QAsD/CjsD,EA7CS+rD,SAAA,KAAAG,GAAP,QAAAlsD,EAAYmsD,YACLH,OAAYC,GAAYz0D,EAOxB40D,EAAPjC,EAAAl+B,2BAEI/2B,EAAK82D,yBACE,KAPJx0D,EAAA00B,oBAAIvhB,GAAmBvN,sBACfivD,EAAAA,EAAAA,qBAAwBC,GAASlvD,uBAQ9C,IAAasf,EAAA,oBAAcxnB,EAAK82D,EAAAA,EAAAA,EAAAA,GAEhC92D,KADAA,eAAiB+2D,EAAAA,KAAAA,aAGfjsD,EAAK9K,KACHA,YAAK28B,EAAAA,KAAa5vB,gBAAoB3H,EAAA4mB,KAAGC,MAAG,IAAA8qC,YAAgB,GAAA,OAC5DM,EACFhuD,UACErJ,KAAK28B,SAAAA,GAAa5vB,KAAAA,MAAAA,IAAAA,YAA0B,IAAAsqD,EAAAhuD,UAAgB4iB,IAAG,SAC/D3pB,EAAAwI,EACFyE,GAAKvP,KACH82D,OAAiB92D,EAAAA,EAAKkX,QAAAA,KAAAA,MAAevU,EAAO+3B,SAAAA,EAAYnrB,KAChD8nD,EAAOr3D,UAAKkX,OAAAA,SAAsBg7C,GAAAA,IAAAA,EAAAA,OAAoBlyD,KAC9DA,MAAK28B,IAAAA,YAAa5vB,IAAAA,EAAAA,IAAAA,GAAAA,EAAoBif,EAAGC,eAAeD,KAAGC,OAAG,OAEhEjsB,KAAK82D,MAEH92D,IAAK28B,YAAa5vB,GAAAA,GAAAA,IAAAA,KAAAA,KAAoBif,aAAMjf,iBAC5CuqD,EAAAtrC,GACFC,IAAK,UAEC/f,EADsC8f,GAAAC,IAAS,MAAG,MAAa,IAAG,KACnDjsB,KAAKgjB,aAAAA,iBAAwBmmB,EAAAA,GAAAA,IACvCnpC,aAAKgjB,EAAAA,GAAAA,IAAgBrM,MAAAA,MAAQjW,IAAAA,IAAc,IACpDV,EAAAA,KAAK28B,eAAa5vB,OAAAA,UAAuBkf,EAAAA,KAAGjsB,KAAOkM,eAAgBvJ,OACnEuvD,aAGAlyD,GAAAA,IAAKmX,KAAAA,aAAkBpK,iBAAAuqD,EAAqB7hD,GAC5CzV,IAAK28B,OAAAA,EAAAA,EAAAA,GAAa5vB,IAAAA,MAAAA,MAAoB,IAAAif,IAAGC,KAAG0Q,aAAa5vB,iBAnDjEuqD,EAAAtrC,GA0FAC,IAAA,SAmDEqrC,EAAAtrC,GAAAC,IAAA,MAGmB0Q,MAGA3Z,IAEA5L,KACAmgD,IAAAnyD,EAAA,CAAA+iC,MAAAovB,EAAAp2C,UAAqCq2C,EAAAA,IAAAA,GAAAA,KAAAA,gBAEtD7gD,QAAOwyB,aAVUjyB,GAAAA,KAAAA,gBACA26C,QACAl1B,YAAAA,EAAAA,EACA38B,KAAAwxD,aAAAA,iBACAr6C,EACA6U,GAAAhJ,IAAAA,OAAAA,EAAAA,KACAy0C,EAAAA,GAAAA,IAAAA,MAAAA,cACArgD,KAAAA,YACAmgD,MA3DX,oBAAgCR,GAAAA,KAAAA,aAChCW,iBAAoCJ,EAAAK,GAAAA,IAAAA,OACpCL,EAAAM,GAAAA,IAAAA,MAA4B,OAAIC,GAAAA,EAtEzB,GAsEyBA,EAAAA,SAChC5gB,YAA0BpP,EAAAA,EAAAA,EAAAA,EAC1B52B,EAAA6mD,EAAAA,EAAAA,EAAAA,EAAAA,QAAAA,IACAC,IAAAA,EAAAA,IACExC,EAAAyC,sBACA,IAAAC,EAAAA,EAAAA,KAAAA,OAEFj4D,KAAAk4D,EAAAA,eAA+BrhC,EAAAA,EAAAA,gBAC/BshC,EAAAC,EAAAA,aAAAA,EAAAA,EAAAA,iBAAyCvhC,EAAAA,EAAAA,YAIzClhB,EAAA0iD,EAAAA,gBAAqB3yD,EAAA8R,EAAAA,kBAErB8gD,EAAAA,EAAAA,gBAAwBnxC,EAAI3X,EAAAgI,QAAAA,EAAAA,EAE5B+gD,aAAAC,IAAAA,YAAsBhhD,MAAAA,EAEtBkgD,eAAAe,IAAAA,EAAAA,cAA0BjhD,EAAAA,aAE1BkhD,IAAAA,EAAAA,YAA0BlpD,EAAAynC,UAAIz/B,IAAAA,EAE9BqwB,SAAA8wB,EAAAA,aAAAA,GAAAA,EAAAA,UAAqCnhD,GAAAA,EAAAA,kBAGrCohD,GAAAA,EAAcX,eAAIzgD,GAElBhI,EAAAqpD,aAAaC,EAAIjiC,kBAEjBpO,QAAAA,EAAAA,uBAEAqwC,EAAA/H,kBAAkBv5C,QAAAA,EAAAA,eAEN,IAAIm+C,EAAAn+C,aAEhBhI,EAAAoZ,sBAAqBpR,IAAAA,EAAAA,aAErBuhD,EAAAA,gBAAyB,IAAAvhD,EAAAA,aAGzBwhD,EAAAA,oBAENC,IAAAA,EAAAA,aACAC,EAAAA,wBAEA1vD,IAAAA,EAAAA,aAeK1B,EAAAA,+BAGqBoP,IAAAA,EAAAA,aAAevU,EACzCi2D,YAAc,IAAK1hD,EAAAA,aAAe+T,EAAAA,WAAQgP,IAAAA,EAAAA,aAAiB33B,EAAAA,cAAU03B,IAAAA,EAAAA,aAAkBE,EAAAA,YAKlFq9B,IAAAA,EAAQ4B,aAAAA,EAAAA,UAAsB,IAAAxD,EAAAn+C,aAC5BL,EAAAA,eAAkB,IAAAw+C,EAAAn+C,aAAwB4hD,EAAAA,mBAAyBC,IAAAA,EAAAA,aAAsBpC,EAAAA,YAAeqC,CAAAA,QAE/G,EAAK/B,aAAQgC,EAAAA,aAAAA,EAAsBC,cAC5BriD,EAAAA,SAAYgC,GAAAA,EAAAA,SAAM3J,EAAA+nD,SAAA/nD,EAAsBwqB,cAAmBu9B,EAAAA,eAAQ8B,OAAc1F,EAAAA,SAEnF4D,EAAAA,eAAQkC,QAAAA,kBAA0Bp4B,SAChClqB,GAAAA,OAAYgC,EAAM6gB,cAAA13B,EAAA43B,iBAAgC1qB,EAAA+nD,QAEpDA,uBAAQmC,SAAsBp3D,EAAAwI,GAACsuD,EAAYvnC,YACzC1a,MAAAA,qBAAkB,CAAAiiD,WAAwBA,EAAAA,QAAYvnC,cAAYvvB,GAAA20D,OAEpEM,EAAAA,eAAQoC,EAAAA,QAAAA,uBACI,SACbC,GAAkBN,EAAAA,YAEfniD,MAAAA,qBAAkB,CAAAiiD,WAAwBA,EAAAA,QAAAA,cAAyBC,QAAAA,EAAAA,QAAsBxnC,2BAM3F0lC,SAAQsC,GAAAA,EAAAA,YAAgB1gD,MAAOjR,yBAAuCC,CAAAA,KAKtEovD,OAAAA,EAAQ9D,QAAAA,uBAAmC,SAAAwD,EAAAA,EAAU1nD,GAAAC,EAAA2H,YAAK2iD,MAAY7C,qBAC9DxD,CAAAA,WAAqBsG,EAAAA,OAAAA,EAAAA,KAAexqD,OAAKwkD,EAAOwD,QAAOoC,uBAAeK,SAAW/C,EAAAA,EAC9F1nD,GAAKgoD,SAAQ9D,IAAAA,EAAAA,EAAAA,WAAqBM,EAAAA,YAAc56C,MAAA89C,qBAAwBA,CAAAA,WACnEM,EAAAA,QAAQ9D,cAAqBsG,GAAAA,OAAAA,EAAAA,QAAoBhG,OAAOvkD,EAAO+nD,QAAAsC,iBAAeI,SAAYhD,EAAAA,EAAAA,GAC1FM,OAAAA,EAAQ9D,MAAAA,EAAAA,EAAAA,MAAAA,EAAmB8D,QAAS9D,mBAAiB,CAAAM,MAAKmG,MAAAA,SAAWjD,GAC1E,OAAKM,EAAQ9D,YAAAA,MAAAA,EAAqBM,QAAON,mBAAiB,CAAAsG,cAAKI,IAAAA,MAAclD,MACxEM,SAAQ9D,GAAAA,OAAAA,EAAAA,WAA4BnxD,MAAOkN,EAAA+nD,QAAAN,mBAAemD,CAAAA,MAAenD,MAC9E,SAAaxD,GAAAA,OAAAA,EAAAA,SAAqBM,MAAOvkD,EAAA+nD,QAAO9D,mBAAe4G,CAAAA,cAAepD,IAC9ElD,MAAKwD,MAAQ9D,SAAAA,GAAAA,OAAqBM,EAAAA,YAAczxD,MAAA20D,EAAUM,QAAA9D,mBAAK6G,CAAAA,MAAoBrD,MAC9EM,SAAQ9D,GAAAA,OAAAA,EAAAA,WAA4BnxD,MAAOkN,EAAA+nD,QAAAN,mBAAesD,CAAAA,MAAAA,MAAmBtD,SAC7EM,GAAAA,OAAQ9D,EAAAA,cAAqBM,MAAOvkD,EAAA+nD,QAAO9D,mBAAe+G,CAAAA,MAAAA,MAAevD,SACzEM,GAAAA,OAAQ9D,EAAAA,eAAqBM,MAAOvkD,EAAA+nD,QAAO9D,mBAAegH,CAAAA,MAAAA,MAAiBxD,SAC3EM,GAAAA,OAAQ9D,EAAAA,eAAqBM,MAAOvkD,EAAA+nD,QAAO9D,mBAAeiH,CAAAA,MAAAA,MAAezD,SACzEM,GAAAA,OAAQ9D,EAAAA,oBAAqBkH,MAAa5G,EAAAA,QAAON,mBAAiB,CAAAM,MAAK2G,MAAAA,SAAezD,GAC3F,OAAKM,EAAAA,mBAAQ9D,MAAqBM,EAAOwD,QAAO9D,mBAAemH,CAAAA,MAAAA,MAAY3D,SACtEM,GAAAA,OAAQ9D,EAAAA,eAAqBkH,MAAQnrD,EAAA+nD,QAAY9D,mBAAiB,CAAAM,MAAA,MAAK6G,SAAY3D,GAAAA,OACnFM,EAAAA,iBAAQ9D,MAAqBM,EAAAA,QAAON,mBAAiB,CAAAM,MAAK8G,MAAAA,SAC/Dv4D,GAAKi1D,OAAQ9D,EAAAA,eAAAA,MAAqBM,EAAOwD,QAAO9D,mBAAeqH,CAAAA,OAAAA,IAAY7D,MAC3E,MAAKM,SAAQ9D,GAAAA,OAAAA,EAAAA,eAAmCnxD,MAAAkN,EAAA+nD,QAAU9D,mBAAiBwD,CAAAA,MACtEM,MAAAA,SAAQ9D,GAAAA,OAAAA,EAAqBM,YAAczxD,MAAAkN,EAAA+nD,QAAU9D,mBAAcwD,CACxE0D,OAAKpD,IAAQ9D,MAAAA,MAAAA,SAAqBM,GAAAA,OAAcvkD,EAAAorD,YAAUt4D,MAAAkN,EAAKurD,QAAAA,mBAClDtH,CAAAA,MAAAA,MAAAA,SAAqBM,GAAO,OAAOvkD,EAAAqrD,YAAUv4D,MAAK04D,EAAAA,QAAAA,mBAClDvH,CAAAA,MAAAA,MAAAA,SAAqBM,GAAO,OAAOvkD,EAAAsrD,YAAUx4D,MAAK24D,EAAAA,QAAAA,mBAC1D1D,CAAAA,MAAQ9D,MAAAA,SAAAA,GAAqBM,OAAOvkD,EAAA0rD,YAAOjE,MAAUznD,EAAA+nD,QAAK4D,mBAC1D5D,CAAAA,MAAAA,MAAQ9D,SAAAA,GAAAA,OAAqBM,EAAOqH,SAAO94D,MAAA20D,EAAAA,QAAUxD,mBAAK4H,CAAkBpE,MACjF,MAAKM,SAAQ9D,GAAAA,OAAAA,EAAAA,WAA4BnxD,MAAOkN,EAAA+nD,QAAU9D,mBAAK6H,CAAAA,MAAAA,MAAAA,SAC/Dh5D,GAAKi1D,OAAQ9D,EAAAA,WAAAA,MAAqBM,EAAAA,QAAON,mBAAiB,CAAAM,MAAKwH,MAAAA,SAAAA,GAAAA,OAA4BtE,EAAAA,kBAC9ExD,MAAAA,EAAAA,QAAqBkH,mBAAoB,CAAA5G,MAAO,MAAAkD,SAAU30D,GAAKk5D,OAAAA,EAAAA,gBAAAA,MAA8BvE,EAAAA,QACrGM,mBAAQ9D,CAAAA,MAAqBM,MAAO,SAAOzxD,GAAA,OAAUkN,EAAA6rD,kBAAKI,MAAgBxE,EAAAA,QAC1EM,mBAAQ9D,CAAAA,MAAqBM,MAAO,SAAOzxD,GAAA20D,OAAUznD,EAAA8rD,yBAAuBrE,MAC5EM,EAAAA,QAAQ9D,mBAAqBM,CAAAA,MAAO,MAAO,SAAUzxD,GAAA,OAAKo5D,EAAAA,4BAClDjI,MAAAA,EAAAA,QAAqBM,mBAAc,CAAAkD,OAAU,IAAAlD,MAAK4H,MAAS1E,SACnEM,GAAAA,OAAQ9D,EAAAA,8BAAmCnxD,MAAA20D,EAAUM,QAAKqE,mBAC1DrE,CAAAA,MAAQ9D,MAAAA,SAAAA,GAAqBkH,OAAQnrD,EAAAisD,gBAAmBn5D,MAAAkN,EAAAynD,QAAUxD,mBAAoBwD,CAAAA,MACtFM,MAAAA,SAAQ9D,GAAAA,OAAAA,EAAmBoI,kBAAgBv5D,MAAA20D,EAAUM,QAAKuE,mBAC1DvE,CAAAA,MAAQ9D,MAAAA,SAAAA,GAAAA,OAAqBkH,EAAQe,WAAYp5D,MAAOkN,EAAA+nD,QAAAN,mBAAe8E,CAAAA,MAAAA,MAAiB9E,SACxFM,GAAQ9D,OAAAA,EAAAA,SAAmBnxD,MAAEyxD,EAAOwD,QAAO9D,mBAAeuI,CAAAA,MAAAA,MAAAA,SAC1DzE,GAAAA,OAAQ9D,EAAAA,QAAAA,MAAAA,EAAqBM,QAAON,mBAAiB,CAAAkH,OAAKsB,IAAAA,MAAAA,MAAahF,SACvEM,GAAQ9D,OAAAA,EAAAA,eAAqBkH,MAAa5G,EAAAA,QAAON,mBAAiB,CAAAM,MAAKmI,MAAAA,SAAAA,GAAoBjF,OAC3FM,EAAAA,UAAQ9D,MAAAA,EAAAA,QAAqBsG,mBAAoBhG,CAAAA,OAAO,IAAOA,MAAA,MAAU,SAAKoI,GAAAA,OAAUlF,EAAAA,iBAChFxD,MAAAA,EAAAA,QAAqBsG,mBAAoBhG,CAAAA,MAAO,MAAO,SAAAkD,GAAU,OAAKmF,EAAAA,eAAenF,MAC7FM,EAAAA,QAAQ9D,mBAAqBM,CAAAA,MAAO,MAAO,SAAAkD,GAAU,OAAKoF,EAAAA,aAAAA,MAAgBpF,EAC/EM,QAAKA,mBAAQ9D,CAAmBkH,OAAS,IAAA5G,MAAO,MAAAkD,SAAU30D,GAAKg6D,OAAAA,EAAAA,oBAClD7I,MAAAA,EAAAA,QAAmBA,mBAAgB,CAAAsG,cAAewC,IAAAA,MAAAA,MAActF,SACxEM,GAAAA,OAAQ9D,EAAAA,UAAAA,MAAqBM,EAAAA,QAAcN,mBAAU,CAAK+I,cAAcvF,IAAAA,MACxEM,MAAQ9D,SAAAA,GAAAA,OAAmBjkD,EAAEuqD,eAAez3D,MAAMyxD,EAAOwD,QAAO9D,mBAAegJ,CAAAA,MAAAA,MAAAA,SAC/ElF,GAAAA,OAAQ9D,EAAAA,gBAAqBsG,MAAAA,EAAAA,QAAetG,mBAAoB,CAAAM,MAAU,MAAA,SAAK2I,GAAAA,OAAczF,EAAAA,WAK7FM,MAAQoF,EAAAA,QAAAA,mBAA0B,CAAA5I,MAAM,MAAA,SAAKtqC,GAClD,OAAK8tC,EAAQoF,cAAAA,MAAkB3wC,EAAAA,QAAOynC,mBAAWmJ,CAAAA,MAAAA,MACjD,SAAaD,GAAAA,OAAAA,EAAAA,cAAqBE,MAAIrtD,EAAA+nD,QAAM9D,mBAC5C,CAAAsG,cAAa4C,IAAAA,MAAAA,MAAkB3wC,SAAO1pB,GAAA,OAAMkN,EAAAitD,cAAKG,MACjDptD,EAAK+nD,QAAQoF,mBAAkB3wC,CAAAA,cAAO,IAAM+nC,MAAA,MAAK+I,SAAAA,GAAAA,OAC5CvF,EAAAA,cAAQoF,MAAAA,EAAAA,QAAqBI,kBAAUzF,EAAAtrC,GAAKgxC,KAAAA,WAC5CzF,OAAAA,EAAQoF,UAAAA,EAAAA,QAAkB3wC,kBAAasrC,EAAAtrC,GAAAixC,IAAKC,WAC5C3F,OAAQoF,EAAAA,cAAAA,EAAkBpF,QAAG4F,kBAAU7F,EAAAtrC,GAAKoxC,IAAAA,WAC5C7F,OAAQoF,EAAAA,cAAAA,EAAkBpF,QAAG8F,kBAAU/F,EAAAtrC,GAAKsxC,IAAAA,WAG5C/F,OAAQoF,EAAAA,cAAAA,EAAkBpF,QAAGgG,kBAAWjG,EAAAtrC,GAAK5L,IAAAA,WAC7Cm3C,OAAQoF,EAAAA,oBAAqBa,EAAAA,QAAKb,kBAAWc,EAAAA,GAAAA,IAClD,WAAad,OAAAA,EAAAA,eAAqBe,EAAAA,QAAKf,kBAAWgB,EAAAA,GAAAA,IAM7CpG,WAAQ7D,OAAAA,EAAAA,SAAsBlkD,EAAA+nD,QAAIqG,kBAAWnoD,EAAuDuW,GAAAmxC,IAA7C,WAAc1nD,OAAYooD,EAAAA,cAA0BruD,EAAA+nD,QAE3GA,kBAAQ7D,EAAAA,GAAmB2J,IAAG,WAAIO,OAAWpuD,EAAA8tD,aAAQ9tD,EAAA+nD,QAAKsG,kBAE1DtG,EAAAA,GAAQ7D,KAAAA,WAAAA,OAAsBlkD,EAAI4Q,WAAAw9C,EAAAA,QAAWjB,kBAAamB,EAAAA,GAASroD,KAAAA,WAGnE8hD,OAAQ7D,EAAAA,cAAsBlkD,EAAA+nD,QAAIqG,kBAAWnoD,EAAQsoD,GAAAL,KAAKM,WAAAA,OAAavoD,EAmC5EkoD,YAAapK,EAAAA,QAAAA,mBAA4B,EAAO,IAAAh4C,EAAAqiD,YAAM,SAAKtB,GAAAA,OACtD/E,EAAAA,SAAQhE,GAAAA,EAAAA,YAAqBQ,IAAAA,MAAOvkD,EAAO+nD,QAAA7D,mBAAW8I,EAAAA,IAAAA,EAAAA,YACtDjF,SAAQhE,GAAAA,OAAAA,EAAmBsK,YAASv7D,OAAOkN,EAAA+nD,QAAM7D,mBACjD6D,EAAAA,IAAQhE,EAAAA,YAAAA,SAAqBQ,GAAO,OAAOvkD,EAAAsuD,SAAMx7D,OAAAkN,EAAKiuD,QAAAA,mBAC9ClK,EAAAA,IAAAA,EAAAA,YAAqBQ,SAAczxD,GAAA,OAAMkN,EAAAwuD,aAAKL,OAC3DnuD,EAAK+nD,QAAQhE,mBAAqBQ,CAAAA,MAAO,MAAO,WAAM,OAAAvkD,EAAKyuD,gBAAAA,EAC3D1G,QAAKA,mBAAQhE,CAAmBQ,MAAEA,MAAO,WAAO,OAAMvkD,EAAAgtD,mBAAK0B,EAAAA,QAC3D3K,mBAAaA,CAAAA,MAAAA,MAAqBQ,WAAc,OAAAvkD,EAAM4Q,WAAK+9C,EAAAA,QAAAA,mBACtD5G,CAAAA,MAAQhE,MAAAA,WAAqBQ,OAAOvkD,EAAAiuD,cAAajuD,EAAA+nD,QAAK6G,mBACtD7G,CAAAA,MAAQhE,MAAAA,WAAqBQ,OAAOvkD,EAAAmuD,YAAOnuD,EAAM+nD,QAAK8G,mBACtD9G,CAAAA,MAAQhE,MAAAA,WAAAA,OAAqBQ,EAAOkK,kBAAazuD,EAAA+nD,QAAK8G,mBACtD9G,CAAAA,MAAQhE,MAAAA,WAAmB,OAAS/jD,EAAA0uD,2BAAkBG,EAAAA,QAAU9K,mBACxDA,CAAAA,MAAAA,MAAmB,WAAS,OAAO/jD,EAAA2uD,uBAAqB3uD,EAAA+nD,QAChEA,mBAAQhE,CAAAA,MAAqBQ,MAAO,WAAO,OAAMvkD,EAAA4uD,eAAKC,EAAU9G,QAChEA,mBAAQhE,CAAAA,MAAmB,MAAEwG,WAAe,OAAKhG,EAAOsK,UAAO,MAAM7uD,EAAA+nD,QAAK+G,mBAAAA,CAAAA,MAC/E,MAAK/G,WAAQhE,OAAAA,EAAAA,UAAqBwG,MAAAA,EAAexC,QAAKxD,mBAAoB,CAAAA,MAAA,MAAKuK,WAAAA,OAAAA,EAAAA,gBACpEC,EAAAA,QACJhH,mBAAQhE,CAAAA,MAAqBwG,MAAAA,WAAoBhG,OAAOwK,EAAQF,UAAM,MAAA7uD,EAAA+nD,QAAKiH,mBAC3EjH,CAAAA,MAAAA,MAAQhE,WAAAA,OAAqBwG,EAAAA,UAAe,MAAKhG,EAAAA,QAAeR,mBAAWiL,CAAAA,cAAc,IAAMD,MAC/FhH,MAAAA,WAAQhE,OAAAA,EAAmB+K,0BAA6BC,EAAAA,QAAQhL,mBAAWiL,CAAAA,cAAoBD,IACpGxK,MAAKwD,MAAQhE,WAAAA,OAAqBwG,EAAAA,0BAAmC,IAAA1yC,EAAA,SAAM/kB,GAAAglB,EAAKk3C,QAAAA,mBAC3EjH,CAAAA,cAAQhE,IAAAA,MAAmBjxD,IAAEy3D,WAAe,OAAKhG,EAAAA,cAAe,IAAMzxD,MAAAglB,EAAKk3C,QAAAA,mBAC3EjH,CAAAA,cAAQhE,IAAAA,MAAmBjxD,IAAEy3D,WAAe,OAAKhG,EAAAA,cAAe,IAAMzxD,MAAAglB,EAAKk3C,QAAAA,mBAC3EjH,CAAAA,cAAQhE,IAAAA,MAAmBjxD,IAAEy3D,WAAe,OAAKhG,EAAAA,cAAe,IAAMzxD,MAAAglB,EAAKk3C,QAAAA,kCAPvED,IAAQE,MAAAA,eASnB,OAAKlH,EAAAA,cAAQhE,IAAAA,MAAqBwG,EAAAA,QAAAA,mBAAkC,CAAAA,cAAM,IAAK2E,MAAAA,IAAAA,WAAAA,OAK/ElvD,EAAK+nD,cAAQoH,IAAAA,MAAgBr3C,EAAAiwC,QAACt2C,mBACvB9J,CAAAA,cAAkB,IAAA48C,MAAAzxD,IAAmB2e,WAOvCs2C,OAAQ/D,EAAAA,cAAAA,IAAqBuG,MAAAA,EAAAA,QAAexG,mBAA+B,CAAKr8C,cAAAA,IAAqBylB,MAAAA,IAAAA,WAAmBxlB,OAAkB6L,EAAAA,cAAAA,IA4jFnJ1gB,OArzFkCglB,EAAAtnB,KAgBhC,IAAA,IAAAunB,KAAA8tC,EAAAoJ,SAAWp3C,EAAAE,GAAA,OAAA/X,EAAA+nD,QAAAhE,mBAAX,CAA2CwG,cAAY1B,IAAAA,MAAAA,MAAej1D,gDAEtEoM,EAAA+nD,QAAWoH,iBAAA,SAAAr8D,GAAA,qBAAXmC,MAA4D,kBAAY6zD,GAAAA,KAAAA,EAAAA,0CAExE,IAAAvE,MAAA,KAAA,IAAAvsC,EAAWhY,EAAA0H,eAAA1H,EAAAmtB,eAAXxlB,YAA4C3H,EAAAwT,kBAAYw1C,EAAAA,OAAgBp1D,EAAAA,uCAExE,gBAAA,CAAW6X,IAAA,WAAA,OAAAjb,KAAAq4D,eAAXj1D,OAAgD89C,YAAOlhD,EAAKy4D,cAAAA,IAAoBr1D,yDAEhF,CAAA6X,IAAW,WAAA,OAAAjb,KAAAs4D,sBAAXl1D,OAAoD89C,YAAOlhD,EAAK04D,cAAAA,IAAAA,OAAwBt1D,4CAExF,CAAA6X,IAAA,WAAW,OAAAjb,KAAAw4D,gBAAAp1D,OAAA89C,cAAXC,cAA+E,IAAOnhD,OAAK24D,eAAAA,EAAAA,UAA+Bv1D,4CAG1HpD,KAAAy4D,oBAAWr1D,OAAA89C,YAAU,gBAAqB,IAAArtC,OAAY+kD,eAAYx1D,EAAAA,mCAElE,CAAA6X,IAAA,WAAA,OAAWjb,KAAA04D,wBAAXt1D,OAAA89C,YAAgDlhD,EAAK64D,cAAWz1D,sCAEhE,gCAAW,CAAA6X,IAAA,kBAAXjb,KAAA24D,+BAAoEv1D,uCAEpEyQ,OAAA+D,eAAWgnD,EAAAv1D,UAAA,kBAAX,WAAwC,OAAOrJ,KAAK+wD,YAAY3tD,uCAEhEyQ,OAAA+D,eAAWgnD,EAAAv1D,UAAA,aAAX4R,IAAA,WAAwC,OAAOjb,KAAKgxB,WAAU5tB,uCAE9DyQ,OAAA+D,eAAWgnD,EAAAv1D,UAAA,gBAAX4R,IAAA,WAA6C,OAAOjb,KAAK4oB,cAAexlB,uCAExEyQ,OAAA+D,eAAWgnD,EAAAv1D,UAAA,aAAA,CAAA4R,eAAX,OAAgEjb,KAAOA,YAAK+4D,OAAAA,YAAmB31D,0CAmNxFw7D,EAAAt1D,UAAP,WACE,CAAA2R,IAAA,WAAM3R,OAAOtJ,KAAAgxB,UAMP5tB,OAAAy7D,YAAAA,EAAR1d,cAA0F33C,IACxFxJ,OAAKg5D,eAAqB4F,EAC1B5+D,UAAKg5D,gBAAYC,CAAAA,IAAeA,WAC3BD,OAAYE,KAAAA,eACZF,OAAAA,YAAYQ,EAAAA,cACZR,IAAAA,OAAYxvD,eAGXo1D,EAAAv1D,UAAAy1D,oBAAR,CAAA7jD,IAAA,WAEW9D,OAAAA,KAAYgc,mBAAYw/B,OAAaC,YAC5CmM,EAAQC,cAAaD,IAAAA,EAAQ11D,UAACvH,QAAa,WAAAuJ,EAAAA,UAAW/B,QAAMpD,KAAIlG,OAAA4+D,EAAAv1D,UAzY7Cw1D,eA0YhBI,SAAM38D,EAAA48D,EACL3vD,EAAAnK,GAAYpF,KAAAg5D,YAARkG,QACF,EAEF38D,KAAAA,YAAa02D,aAAA32D,EAAAtC,KAAAg5D,YAAAE,aAAApuD,EAAA9K,KAkBdg5D,YAAAmG,cAAM1pD,EAA2B48C,KACtC2G,YACwBh/B,SAAAA,GAAcp3B,EAClCs2D,UAAoBl/B,uBAENh6B,SAAKg5D,GAAAA,KAAYoG,YAI7BzuD,UAAc4mD,EAAAA,aAAcv3D,MAAKu4D,QAAcv4D,KAAKg5D,CAAAA,EAAAA,IAAAA,SAAYQ,SAAAA,EAAenH,GAEjF,OADAryD,YAAK8+D,WAAAA,OACEnuD,EAETsoD,mBAAgCA,UAAAA,OACjBj5D,SAAKg5D,GAAAA,GAAYE,kBAC3BF,EAAAA,MAAAA,EAAAA,QAAYoG,KACb3pD,uDAKD0B,EAAAA,UAAYgC,MAAM,SAAA7W,EAAgBmT,GAGnCzV,IAAAA,EAAKu4D,EAAAA,KAAAA,cAA2Bz1D,EAAAA,EAAAA,KAC9B9C,cAAKu4D,EAAAA,EAAaz1D,EAAAA,EAAAA,KAAS+xD,YACxB0D,OAAe,GAAAtpD,EAAI8nD,CAAAA,GAAAA,EAAAA,KAAYzmD,QAAK6B,MAASrP,KAAQ+xD,aAOvDrD,KAAAA,YAAiB6N,cAIfv8D,GAAAA,OACP9C,KAAK8+D,uBACHvvD,GAAAA,EAAMpH,EAAM/C,KAAkCtC,YAAsC2S,aACvDxE,EAAAjR,KAAAg5D,YACzBh5D,aAAK03D,KAAe4H,YAAY1pD,QAAUxQ,EAAG+C,EAAMnI,OAAKu4D,IAAAA,EAAAA,KACxDv4D,YAAK43D,SAAa0H,GAAAA,GAAYlI,KAAAA,YAAkBp3D,MAAKu4D,eAC5Cv4D,GAAAA,KAAKu3D,aAAcv3D,OAAKu4D,EAAAA,QAAclK,KAGjDkK,aAFKsG,OAAAA,IAAe5F,KAA4B5K,aAC3CyQ,IAAAA,YAAAA,KAAuBnuD,IACrBA,EAAAA,OAIN4uD,KAC0BtwD,GAAAjP,KAAAwxD,iBACpBkG,aAAAA,EAAe4H,OAAO7pD,EAAMzV,IAAKu4D,IAAAA,EAAAA,EAAAA,EAAAA,EAAAA,OACjCX,GAAAA,EAAAA,CAAAA,IAAAA,EAAAA,EAAa0H,EAAAA,EAAAA,OAAat/D,EAAKu4D,EAAAA,EAAAA,OAAAA,EAAAA,iBACd4G,EAAAA,KAAMn/D,eAAKu4D,OAGnCj2D,EAAAsT,UAFKipD,EAAAA,GAAAA,KAAAA,cACL7+D,KAAK8+D,aAAAA,OAAAA,EAAuBnuD,SAMzBqpB,EAAAA,GAAAA,KAAAA,cAAoCh6B,GAAKg6B,EAAAA,KAAAA,QAAcze,MAC9Dvb,KAAKyoB,aAActM,GAAAA,OAIrBnc,KAAKs4D,eAAAA,EAAAA,EAAsBn8C,EAAAA,GAAKnc,KAAKwxD,uBAAwBxxD,GAAAA,OAAKwxD,IAAAA,IAAAA,EAAAA,iBAG7DlvD,EAAAtC,KAAAw/D,eAAwCr3D,OACzCk5B,EACAo+B,KACYz/D,cAAK6xD,KAAAA,aACI7xD,OAAKgjB,EAAAA,KAAAA,cAAwB0I,EAAAA,KAAAA,QAAAA,MACzC1rB,KAAKkX,aAAeyB,IAC3B+mD,OAAsB/iC,KAAAA,eAAa7vB,EAAAA,EAAAA,EAAAA,GAAgB6yD,KAAAA,uBACjChjC,GAAaijC,EAAAA,KAAMC,cAC3B7/D,IAAKk4D,GAAAA,KAAAA,cACAl+B,IAAAA,GAAAA,KAAcnwB,cAAemwB,OAAAA,KAAAA,sBAA2BA,KAAcze,KAE3Fvb,iBAAKwxD,MAAiBsO,KAAAA,iBAAe9lC,MAAcze,EAG/Cvb,UAAKg6B,MAAAA,SAAiC13B,EAAAwI,EAAsDyE,GAAjDwwD,IAAUhzC,EAAAA,EAAAA,EAAAA,KAAS/sB,gBAAmB4C,QACzEo9D,EAAAA,KAAAA,gBAAqBhgE,QAAKg6B,iBAA2BimC,EAAQlwD,KAAYD,eAGrF6I,KAAKnV,EAAI2J,KAAaA,aACbsI,gBAIQ2B,WAAAA,EAAgB8oD,KAAAA,aAKbC,MACVC,WAAoBn9D,EAAAA,KAAAA,aACtBm9D,EACF/+B,KAAUotB,cAYd5kD,MAPE7J,IAAK44D,KAAAA,cAAiBjsC,MAAA0zC,KAAAA,cAAoBh/B,GAOvCo+B,KAAWz/D,iBAAKg6B,UAejBh6B,KAAKg6B,cAAkBylC,GAAUz/D,KAGnCg6B,cAEcA,GAAAA,EAAAA,EAAAA,GAAAA,IAAcp3B,EAAI+V,SAClBqnD,KAAAA,cAAqBhgE,EAAAA,IAAKg6B,EAAAA,qBAAiCjqB,KAAYD,cAEnF9P,EAAAA,EAAKg6B,EAAAA,EAAAA,EAAAA,GAAAA,EAAAA,GAAcp3B,EAAI09D,UAClBtmC,IAAAA,IAAAA,EAAAA,EAAcze,EAAAA,IACfvb,EAAKg6B,CAAAA,GAAAA,EAAAA,EAAAA,GAAAA,EAAAA,KAAoBh6B,gBAAKg6B,QAAck4B,GAAAA,EAAAA,KAAev8C,EAC7D3V,CAAAA,IAAKg6B,EAAAA,EAAAA,OAAAA,aACA9iB,IAAAA,IAAAA,EAAAA,EAAAA,WAAsBlX,IAAKugE,GAAAA,GAAAA,KAAAA,YAE5BvgE,MAAKg6B,EAAAA,EAAAA,qBAAwB9iB,IAAAA,IAAAA,KAAepQ,cACzCkzB,EAAAA,CAAAA,GAAAA,KAAkBh6B,cAAKkX,EAAAA,EAAAA,GAAepQ,EAAAA,GAAOtD,EAIpDxD,CAAAA,KAAKg6B,KAAAA,cAAoB/e,EAAAA,GAAIjb,EAAAA,qBAA2BA,KAAKg6B,cAAcze,IAAIujB,EAAAA,EAAAA,EAAAA,GAAAA,EAAYhvB,GAG7FiwD,EAAY//D,UAAKg6B,KAAAA,cAAwBh6B,EAAAA,EAAKg6B,KAAAA,cAAcrN,IAAQ3sB,KAAKg6B,cAAcze,IAAAA,KAEvFvb,cAAKg6B,aACW,GAGdh6B,KAAAg6B,cAQMwmC,IAAAA,KAAAA,eAAiBxmC,OAAcp3B,KAAY5C,kBAAKg6B,KAAcymC,KAAAA,cAI1D1zC,GAAAA,KAASpU,eACXqnD,OAAAA,KAAAA,cAA+B5nB,EAAAA,KAAAA,eAAgBsoB,KAAiBT,GAAQlwD,KAAYD,cAAYwwD,MAKpGN,IAAAA,KAAAA,cAA0BhmC,MAAAA,KAAAA,cAA0CjqB,GAAIkwD,WAAoBK,GAAAA,EAKlGb,KACFzlC,cAEYgmC,MAAAA,IAAAA,KAAAA,cAA0BhmC,MAAAA,KAAcp3B,cAA+BkN,QAAYwwD,GAAAA,KAAAA,cApEvEtgE,EAAAA,EAAKg6B,EAAAA,IAAAA,EAAAA,SAAkB,GAM7C+lC,IAAUY,EAAAA,YAAAA,KAAmB3gE,cAAKg6B,EAAcp3B,EAAI5C,KAFpD+/D,cAAUY,YAAwB3mC,GAAAA,GAAAA,IAAAA,EAAAA,SAwEpC7xB,EAAMD,IAAQrC,EAChBk6D,qBAAwB/lC,EAAAA,EAAAA,EAAAA,eAA0Bid,EAAAA,gBACzCA,EAAAA,GAAAA,EAAAA,GAAUlqB,EAAAA,WAAoB/sB,EAAAA,qBAA2BA,KAAAg6B,cACnD4mC,IAAAA,EAAAA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,EAAqBN,UACpBrpB,EAAAA,EAAAA,OAAU+M,GAAAA,EAAAA,qBACX4c,KAAAA,cAA0B3pB,IAAAA,EAAAA,EAAAA,EAAUjT,GAAAA,EAAAA,GAAAA,EAAAA,eAEjDhkC,EAAAA,SAAKu3D,KAAQqJ,cAAAA,EAAqB5gE,GAAAA,EAAKi3C,mBAKvCj3C,KAAKg6B,cAAcp3B,EAAI+V,EAAAA,GAAczQ,EAAQy4D,mBAAwB3gE,KAAKg6B,cAAcp3B,EAAAA,EAAam9D,GAAUc,EAAAA,EAAAA,IAAAA,EAAW7gE,SAAKg6B,KAAAA,cACvHgmC,EAAAA,EAAAA,KAAAA,WAAqBhgE,IAAKg6B,KAAAA,UAAiBjN,YAA0Bjd,KAAYwwD,UAG7FtgE,UAAKwxD,MAAAA,KAAiBsO,QAAAA,mBAAe9lC,EAAcze,KAM9C07B,UAAA+M,aAAAyP,KAAAA,QAAPmN,mBACE5gE,KAAAi3C,UAAO8c,WAAqB4G,WAAcZ,GAAAA,KAAAA,QAS9BxC,mBAAQ9D,KAAAA,UAPXzzD,SAAKu3D,KAAQ9D,cAAAA,EAAmBl6C,GAAIhK,EAAAzE,EAAA,GAAA,IACzCjF,EAAAknB,SAAgCkqC,KAAAA,cAAgBj0C,KAAAA,EAAAA,WAAwBu5C,KAAAA,cAGxDtF,IAAAA,EASf+I,qBAAAxM,KAAAA,cAAmBj6C,EAAyB8+B,EACjD,EAAA1yC,EAAAoK,GAAO/P,EAAAA,GAAKu3D,EAAAA,UAAQ/D,KAAAA,iBAA2BsM,UAAAgB,KAAWzoB,cAMrDkb,IAAAA,EAAAA,UAAAA,mBACL,SAAOvzD,EAAKu3D,GAAAA,IAAQhE,EAAAA,KAAAA,MAAAA,MAAmBh6C,EAAI8+B,OAMtC0oB,EAAApG,QAAAjH,EAAAA,cAAAA,KAAP6D,QAAyClf,mBAC3Bkf,EAAAA,GAAQ7D,KAAAA,QAAAA,mBAA8BkK,GAAAA,SAW7Ct7D,GAAA,OAAAmnB,EAAAA,EAAAA,OAAP,GAAAla,EAEEyT,gBADKq1C,QAAAA,gBAcAvtD,EAAAxI,OAAAs8D,EAAAhC,UAAPpJ,mBACExzD,SAAKwxD,EAAAA,GAAAA,OAAiBsO,KAAAA,QAAe9lC,mBACjCh6B,EAAAA,IAAKgjB,EAAAA,WAAgBrM,KAAAA,EAAAA,UAAQqqD,mBAC1BhnC,SAEPh6B,EAAAA,GAAKg6B,OAAAA,KAAAA,QACDh6B,mBAAmBub,EAAMvb,IAAAA,EAAKg6B,UAAAA,mBAChCh6B,SAAKg6B,EAAAA,GAAAA,OAAcze,KACnBvb,QAAKkX,mBAAsBlX,EAAKugE,IAAAA,EAAAA,WAAAA,KACvBvgE,EAAKg6B,UAAAA,KAAcze,WAAUrE,OAAAA,KAAepQ,eAChDkzB,QAAAA,GAAcze,EAAIvb,UAAKkX,SAAepQ,WAGzC9G,OAAKg6B,KAAAA,iBAAwB9iB,UAAeyB,KAAAA,cACzCqhB,GAAAA,KAAcp3B,gBAEhB4uD,QAAiBsO,aAAU9/D,KAAKg6B,cAErCh6B,EAAAA,GAAK+wD,KAAAA,cAAY50C,IAUZnc,KAAAg6B,cAAA8iC,IAAAA,KAAP9iC,cAEEk4B,aADKl4B,GAAAA,KAAAA,cAeAze,IAAAvb,KAAAg9D,eAAP9J,YAEEqN,mBAAU5jC,KAAa7vB,cAAgBm0D,GAAAA,KAAAA,eACrCjhE,OAAKkhE,KAAAA,cACDlhE,EAAKg6B,KAAAA,eACPh6B,KAAKg6B,GAAAA,KAAAA,cAUTp3B,GAFA5C,KAAKkhE,eAAgBlhE,MAAKkX,KAAAA,cAEtBlX,IAAAA,KAAKg6B,iBACPh6B,UAAKg6B,KAAAA,cAUwBze,GAAzBvb,KAAKg6B,YAAAA,QAAcp3B,GACXo3B,EAAAA,UAAAA,eAAuBA,WAAcU,OAC1C16B,KAAKg6B,cAAcze,EAAAA,GAAKvb,GAAKg6B,EAAAA,UAAAA,UAAck4B,WACkC,IAA7E5vD,EAAAtC,IAAAA,KAAKg6B,aAAcnwB,gBAAemwB,kBAAsBh6B,OAAKg6B,KAAAA,kBAAgBh6B,KAAAg6B,cAAE8E,EAAAA,GAEpF9+B,KAAKg6B,cAAcnwB,KAAAA,EAAMoR,GAAIjb,KAAKg6B,gBAAcrN,KAAQ3sB,eAAKg6B,MAAkB8E,KAAAA,cAC1E9E,EAAAA,EAAAA,KAAAA,cACAA,SAAAA,GAAAA,IAAkBh6B,KAAKkX,cAAeyB,GAAAA,KAK3CqhB,cAAkBA,EAAAA,KAAAA,cAAwBh6B,WAAKg6B,KAAAA,cAA2BA,GAAAA,KAAAA,cACjE0xB,eAAc1xB,QAAAA,EAAcp3B,KAAOoY,cAAgBhb,MAAKg6B,IAAAA,KAAAA,cAC1DA,MAAAA,KAAcp3B,cAOzB5C,UAAKkhE,IAAAA,OAAAA,EACE5+D,EASFw8B,WAAAo+B,CAAAA,KAAPljC,cACMh6B,MAAKg6B,IAAAA,KAAAA,cAAwB9iB,MAAAA,KAAeyB,cAGhD4C,GAAAujB,WAAuB9E,EAAAA,KAAAA,cACvBh6B,IAAKg6B,KAAAA,cAAkBh6B,EAAKg6B,KAAAA,eAAcmnC,KACtCnhE,EAAAA,IAAKgjB,EAAAA,KAAAA,cAAgBrM,MAAQ+U,IAAAA,KAAAA,cAC1BmtC,MAAAA,KAAW18C,cAAU6d,GAAAA,EAAAA,SAErBh6B,KAUFg6B,cAAAojC,KAAPtyD,EAAA+1D,WAEE7gE,KADAA,cAAK6xD,IAAAA,KAAgBwM,cAWhBz7D,IAAA,OAAA06D,KAAAA,mBAEL,GADAt9D,EAAAA,UAAK6xD,IAAAA,WAAgBwM,GAAUr+D,KACxBg6B,cAMDknC,GAAAA,KAAAA,eAARvoD,KAAwByoD,OAAA,EAAAA,IAAAA,EAAiBphE,KAAKkX,cAAAA,EAAeyB,OAC3D3Y,KAAKg6B,cAAcp3B,EAAI0N,KAAK6B,cAAiBH,WAAYgoB,KAAAA,gBACpDA,QAAAA,kBAAuB2C,KAAAA,WAAa7vB,KAAAA,KAAgBu0D,cAC5CrhE,EAAAA,IAAAA,GAAKg6B,EAAAA,UAAck4B,SAAAA,WAAuBlyD,OAAKg6B,KAAAA,gBAAyBh6B,UAAKg6B,IAAAA,GAAAA,EAAcze,UAC/FpJ,QAAS+E,WAAAA,OAAepQ,KAAUwJ,gBAAiB0pB,UAAAA,IAAAA,GAC5Dh6B,EAAAA,UAAKwxD,gBAAiBsO,SAAe9lC,QAAAA,IAAAA,IAAcze,EAM7Cvb,KAAAkX,eAAAoqD,KAAR,GAAAthE,KAAmB4C,cACZ4uD,EAAAA,KAAAA,IAAAA,EAAiBsO,KAAAA,IAAU9/D,EAAAA,KAAKg6B,cAAcze,IAC/Cvb,KAAK28B,cAAa7vB,EAAAA,KAAAA,aACpB9M,gBAAKg6B,OACLh6B,KAAKg6B,IAAAA,KAAAA,cAAuBA,aAAcU,KAAAA,IAAYnf,KAEtDvb,cAAKg6B,UACLh6B,KAAKg6B,cAAkBze,IAEzBvb,KAAKkhE,IAAAA,KAAAA,eACA1P,KAAAA,EAAAA,KAAAA,IAAiBsO,EAAAA,KAAAA,cAAe9lC,IAAAA,KAAcze,iBAM7CgmD,UAARvhE,KAAAg6B,cAGOknC,IAAAA,EAAAA,UAAAA,WACAI,SAAWthE,EAAKg6B,GAAAA,KAAAA,iBAA0BA,UAAAA,KAAkBze,cAU5DA,GAAAimD,KAAAA,aAASvK,gBAESj9B,QAAAA,KAAkBh6B,cAAKg6B,EAAAA,EAAcU,KAAAA,cACxD+mC,EAAazhE,KACfA,cAAiB06B,UAASvoB,IAAe8kD,KAAOA,cAEhDj3D,EAAKuhE,EAAAA,KAAAA,cAAwBtK,EAAAA,GAAOj3D,KAAMkhE,kBAYvChH,KAAAA,iBAAWjD,UAEKj3D,KAAKg6B,cAAck4B,IAAAA,EAAAA,UAAoBl4B,YAAAA,SAM5D13B,EALIo/D,GAAgB1hE,KAClBA,kBAAoBsQ,KAAK6B,WAAyB8kD,KAAaj9B,cAE1DunC,EAAAA,EAAAA,KAAetK,cAAoB17C,EAAAzQ,IAWrC8zD,EAAAv1D,UAAA8wD,SAAAA,SAAP73D,GAAA,IAAqB20D,EAEnBj3D,KAAAg6B,cADKunC,EAAAA,KAAmBtK,cAAgBv8B,UAUnC,OAAA0/B,GAAAA,EAAAA,KAAAA,YAAP,GAAsBnD,KAEpB9kD,IADAnS,EAAAA,EAAAA,OAAKuhE,IAAAA,IAActK,KAAOA,YAAiB,IACpC30D,EAWF20D,OAAA,IAAA,KAAAoD,GAAAA,EAAAA,UAAPH,WAGE,SAFKA,GAAAA,IAAAA,EAAAA,KACLl6D,cAAKg6B,aAYAh6B,KAAAg6B,cAAAsgC,EAAAA,OAAAA,GAAAA,EAAPt6D,KAAAuhE,YAGE,EAFAvhE,KAAKwhE,IAAAA,EAAAA,EAASvK,OACdj3D,IAAKg6B,IAAAA,KAAAA,YAUA,EAAA13B,EAAA20D,OAAAsD,IAAAA,IAAAA,GAAAA,EAAAA,UAAPJ,cACEn6D,SAAKshE,GAAAA,OAAmBrK,KAAAA,YAAqBj3D,EAAAA,OAAKg6B,IAAAA,EAAAA,IAAAA,GAC3C4kC,EAAAv1D,UAYF+wD,eAAAI,SAAPl4D,GAAsB20D,OAOpBj3D,KANAA,cAEGi3D,EAAOn0D,OAAAA,IAAgBm0D,GAAOA,IAAAA,GAAO2H,EAAAv1D,UAErC4tD,eAAyB,SAYvB30D,GAAA,OAAA64D,KAAAA,WAAP74D,GAAAtC,KAAAg6B,cACEh6B,EAAKshE,GAAAA,GAAAA,EAAAA,UAAmBrK,oBAA0Bj9B,SAAAA,GAAcze,OAU3Dvb,KAAAwhE,SAAAnG,GAAAA,KAAAA,cAAPz4D,EAAyBq0D,GAAAA,GAEvB2H,EAAAv1D,UADKk4D,mBAA0B,SACxBj/D,GASF,OAAAtC,KAAAy7D,YAAAA,EAAAA,OAAP,IAAuBxE,GAErB,EAAAj3D,KADAA,cAAKshE,IAAAA,GAAgBtnC,EAAAA,UAAAA,eAAgC,SAAW13B,GACzD,OAUFtC,KAAAshE,WAAAzF,EAAAA,QAAP,GAAAv5D,EAAA20D,OAEE,IAAA,GADAj3D,EAAAA,GAAKuhE,EAAAA,OAAAA,IAAetK,GAAOA,IAAAA,GAAO2H,EAAMv1D,UAYnC8xD,gBAAAO,SAAPp5D,GAAA,OAEEtC,KADAA,YAAKw6D,EAAAA,OAAevD,IACb,GAcF,EAAAj3D,KAAAg6B,cAAPze,IAAA,GAAgB07C,EAAAA,UACOA,kBACP,SAAV0K,GACK3hE,OAAKg6B,KAAAA,YAAmBh6B,EAAAA,OAAKg6B,IAAAA,EAAAA,IAAAA,GACjB4kC,EAAAv1D,UACd2wB,gBAAc4nC,SAEdt/D,GASF,OAAAtC,KAAAy6D,WAAAA,KAAPzgC,cACEp3B,GAAI5C,EAAAA,OAAKg6B,IAAAA,GAAAA,IAAcp3B,GAAK5C,EAAKkX,UAAAA,kBACxB,SAELyqD,GAAQ1K,OAAOA,KAAasK,YAEzBvnC,EAAAA,EAAAA,OAAAA,IAAcp3B,IAAI5C,GAAKg6B,EAAAA,UAAAA,WAAcmnC,SAErC7+D,GAQF,OAAAtC,KAAAi7D,eAAAA,IAAAA,GAAP2D,EAAAv1D,UACMrJ,SAAKg6B,SAAcp3B,GAAK5C,IAAKkX,EAAAA,EAAAA,OAAAA,GAAAA,OAC/B,IAAApM,SAEF9K,KAAYi3D,cAAoB2K,KAEzBD,KACL3hE,cAAKg6B,GAAkBh6B,IAAAA,IAAKg6B,KAAAA,cAAc6nC,KAE5C,KAAA,GAWMjD,EAAAv1D,UAAAy4D,iBAAAA,SAARx/D,GAA2BiZ,GAA0BpT,KAAa45D,cAAAA,GAAA/hE,KAChEkX,eAAkB8iB,KAAAA,OAAcnwB,EAAMoR,IAAIjb,IAAKg6B,EAAAA,EAAAA,OAAAA,IAAcrN,EAAAA,KAAQpR,KAChEymD,cAEH75D,EACAnI,KAAKg6B,cAAcymC,WAAYzgE,OAAKugE,GAAAA,EAAAA,UAAAA,kBAC/BA,SAEHwB,GACGjjC,GAAAA,KAAAA,cASDl8B,GAAA5C,KAAAiiE,eAARtpD,KAAA,OACE,EAAA,IAAa3Y,IAAKg6B,EAAAA,EAAAA,OAAAA,IAAcnwB,EAAAA,KAAMoR,KAAIjb,cAAKg6B,EAAcrN,KAAAA,cACnD3sB,WAAKg6B,OAAcymC,GAAAA,EAAAA,UAAiBF,mBAC9CvlD,SAAK8jB,EAAAA,EAAYvvB,EAAAnK,QA2BZ,IAAAA,IAAAs1D,GAAAA,GAAAA,IAAAA,EAAP16D,KAAAg6B,cAGEnwB,MAFA7J,IAAAA,KAAKkhE,cAAgBlhE,MAAKkX,GAAAA,EAAAA,aAElB+/C,EAAOA,EAAAA,KAAOj9B,cAKlBymC,YAHSzmC,KAAAA,kBACJw3B,KAAAA,kBAA2BlxC,IAChCtgB,EAAK8hE,WAAAA,IAAAA,EAAAA,UAAwB9hE,iBAAsBA,SAAKkX,GAAAA,IAAAA,EAAAA,KAAeyB,cAAWqhB,MAAAA,IAAAA,KAC3E1Z,cAASpJ,MAAAA,GAAepQ,EAAAA,KAC7B9G,KAAKiiE,cAAAA,YAEFzQ,KAAAA,mBAAiBsO,EAAUx/C,WAElC,GAAKs+C,EASHv1D,UARIrJ,eAAmBub,SAClBi2C,GAAAA,IAAAA,EAAAA,OAAiBsO,KAAAA,gBAEjBgC,KAAAA,eAAyB9hE,MAAKg6B,EAAAA,OAAAA,IAAcp3B,KAAO,EACpD5C,IAAAA,EAAKg6B,KAAAA,cAAuBh6B,EAAAA,KAAKkX,iBAAeyB,UAE7CqhB,GAAAA,KAAAA,mBAAgC8E,IAAAA,KAAAA,cAGhCmjC,EAAAA,KAAAA,eAEPjiE,KAAKwxD,IAAAA,KAAAA,cAAiBsO,GAAUh1D,EAChC9K,KAAAkX,eAEIlX,KAAKkX,IAAAA,KAAAA,iBACJs6C,GAAAA,KAAAA,iBAA2BlxC,UAE9BtgB,GAAAA,MAAKiiE,KAAAA,EAAAA,IAAAA,EAAiB3hD,KAExBtgB,cAAKwxD,EAAAA,KAAiBsO,iBACtBA,UAGAh1D,GAAMo3D,KAAiBliE,mBAAmB6J,EAAM/G,EAAAA,KAAS9C,cAAKkX,EAAAA,GAAAA,GAAepQ,KACxDkzB,cACdA,EAAAA,GAAAA,KAAcnwB,eAAgBq4D,OACnCliE,KAAKg6B,cAAcrN,MAAQrc,IAAK0B,EAAIhS,GAAAA,WAAKg6B,GAAAA,KAAcrN,KAAwBs1C,iBAC1EjoC,GAAAA,KAAcpuB,iBAAsBouB,UAAAA,GAAcpuB,MAAQs2D,KAE/DliE,EAAAA,IAAKgxB,EAAAA,KAAAA,eAIXlqB,KAAO9G,KAyBFwxD,iBAAAoJ,UAAP9vD,EAAmBmsD,GAEjBnsD,KAAA9K,KADAA,iBAAKkhE,GAAgBlhE,KAAKkX,iBAAeyB,UAC1Bs+C,GAAO,MACpB,KACEj3D,EAAAA,IAAK8hE,EAAAA,KAAAA,cAAwB9nC,MAAAA,OAAAA,KAAiBh6B,eAAKg6B,KAAiBh6B,EAAAA,IAAKkX,KAAAA,cACzErN,MACFsmD,UACEnwD,GAAK8hE,KAAAA,cAAmB9hE,MAAKg6B,KAAAA,IAAAA,KAAiBA,cAAQA,MAAAA,EAAcp3B,GAAI5C,KACxEg6B,cAEK8nC,MAAAA,KAAAA,IAAAA,KAAmB9hE,cAAKg6B,MAAiBzqB,EAAGvP,GAAAA,KAAKkX,UAAAA,KAAeyB,IAIzE,OADA3Y,GAAAA,EAAKwxD,UAAAA,YAAiBsO,SAAe9lC,GAAAA,OAAAA,KAAcze,gBAa9Cvb,KAAA66D,eAAPliD,MACE3Y,EAAAA,OAAKkhE,IAAAA,KAAAA,EAAAA,KACLY,mBAEA9hE,KAAIA,cAAKg6B,EAAAA,KAAkBh6B,cAAKg6B,EAAAA,KAAck4B,eAAqBl4B,MAAAA,MAAAA,KAAkBh6B,EAAAA,KAAKg6B,mBAAcU,KACtGV,cAGI5H,EAAcpyB,EAAAA,KAAKg6B,cAAcrN,EAAAA,GAAQ3sB,MAAKg6B,KAAAA,EAAAA,KAAcze,mBAE9BrE,KAAepQ,cAAgBkzB,EAAAA,EAAAA,KAAAA,eAAck4B,MACpDlyD,OAAKkX,KAAAA,iBAA+B8iB,UAAAA,KAAcrN,cAI7E3sB,IAAAA,GAAKg6B,EAAAA,UAAcnwB,YAAMoQ,SACzBja,GAAAA,KAAKg6B,kBAAoB/f,IAAAA,EAAOmY,EAAK6kC,OAAQj9B,IAAAA,EAAAA,GAAAA,KAAcpD,cAAa52B,EAAAA,KAAKugE,cAAAA,cAG1E/O,KAAAA,cAAiBS,EAAAA,KAAAA,cAAoBj4B,UAAcze,OAAGvb,EAAKg6B,IAAAA,IAAAA,EAAAA,KAAck4B,cAC9ElyD,MAAKg6B,KAAAA,cAaAze,EAAAnW,EAAApF,KAAAkX,eAAPpQ,KAAA,EAAA9G,KACEA,cAAKkhE,aACDS,EAAQ1K,KAAOA,eAEfj3D,KAAKg6B,EAAAA,KAAAA,cAAuBA,MAAAA,EAAAA,EAAAA,KAAck4B,KAAAA,cAAqBl4B,MAAAA,OAAkBh6B,EAAAA,EAAKg6B,GAAAA,KAAAA,cAAcU,MACtGzgB,OAGF1K,EAEI+Q,EAFE8R,KAAcpyB,cAAKg6B,aAA2BA,KAAAA,mBAGhDh6B,OAAKkX,KAAAA,iBAA0BlX,eAAmBkyD,KAAAA,cAClDlyD,EAAKkX,KAAAA,cAAsBg7C,cAASl4B,KAAAA,cACjC2nC,EAGL3hE,GAAAA,GAAKg6B,EAAAA,UAAcnwB,YAAMoQ,SACzBja,GAAKg6B,KAAAA,kBAAoB/f,IAAOqG,EAAGhe,EAAGtC,OAAKg6B,IAAAA,EAAAA,GAAAA,KAAcpD,cAAa52B,EAAKugE,KAAAA,cAK7ErO,cAFKV,KAAAA,cAAiBS,EAAAA,KAAAA,cAAoBj4B,UAAiBh6B,OAAKg6B,EAAAA,IAAAA,EAAAA,EAAAA,KAAck4B,cAC9ElyD,MAAKg6B,KAAAA,cAeAze,EAAA,IAAAhM,EAAAvP,KAAA85D,eAAPhzD,KAAmBmwD,EACjBj3D,KAAKkhE,cAAAA,aACQlhE,EAAKg6B,KAAAA,eAAoB/e,KAAIjb,EAAAA,KAAKg6B,cAAcrN,MAAQ3sB,EAAKg6B,KAAAA,KAAAA,cACtEhf,MACGwlD,OAAAA,EAAAA,GACHxgE,KAAKg6B,cAAcp3B,MACZq0D,OAAO1nD,EAAM,EACpBvP,KAAKg6B,cAAcymC,aAAYzgE,KAAKugE,mBACpCvgE,OAAKugE,KAAAA,iBAEF/O,eAAiBsO,KAAAA,cAAe9lC,EAAAA,KAAAA,cAgBlCk4B,cAAAgJ,KAAAA,cACLl7D,EAAAA,GAAAA,GAAKkhE,EAAAA,UAAAA,YACQlhE,SAAKg6B,GAAAA,KAAcnwB,kBAAemwB,IAAAA,EAAAA,KAAcrN,cAAaqN,MAAAA,IAAcze,KAUxFye,cAROmoC,MAAAA,KACHniE,cAAKg6B,GAAcp3B,OACZq0D,IAAOnsD,EAAA01D,YACTxmC,KAAAA,cAAcymC,EAAAA,EAAYzgE,OAAKugE,IAAAA,EAAAA,KAAAA,cAC/BA,YAAAA,KAEPvgE,kBAAsB8/D,KAAAA,kBAAe9lC,KAAAA,iBAalC8lC,UAAA1E,KAAPphC,cACEze,KAAA,GAAmB07C,EAAAA,UAAaiE,YAGzBlhC,SAAAA,GAAAA,KAAcnwB,kBAAkBmwB,IAAAA,EAAAA,KAAcrN,cAAaqN,MAAAA,IAAcU,KAAAA,cACzEV,MAAAA,KAAAA,cAAoB/f,GAAOja,OAAKg6B,IAAAA,EAAAA,YAAsBh6B,KAAKg6B,cAAck4B,EAAAA,EAAAA,OAAc,IAAGlyD,EAAAA,KAAKg6B,cAAcpD,YAAa52B,KAAKugE,kBAGtIvgE,KADAA,kBAAKwxD,KAAiBS,iBAAejyD,UAAKg6B,KAAAA,cAAyBh6B,KAAAA,GAAKg6B,EAAAA,UAAck4B,SAAAA,SASjF5vD,GAAA,IAAA,IAAAy4D,EAAAA,EAAAA,OAAP,IAAA,EAAkB9D,KAGhBj3D,KAFAg6B,cAA0BnwB,MAEnB83D,OACL3hE,KAAKg6B,cAAcnwB,MAAMoQ,KAAOja,cAAKg6B,UAAsBh6B,GAAAA,KAAKg6B,cAAck4B,MAAAA,OAC9ElyD,KAAKg6B,cAAcnwB,MAAMoQ,KAAAA,cAAY+f,aAAsBh6B,EAAAA,KAAKg6B,cAAcU,aAAc16B,KAAKg6B,mBAAcpD,OAAaC,KAAAA,iBAG9Ho7B,eADKT,KAAAA,cAAiBS,UAAejyD,KAAKg6B,cAAcU,eAAgBV,GAAAA,EAAAA,UAAck4B,WAC/E,SAqBF5vD,GAAA,IAAA03D,IAAAA,EAAAA,EAAAA,OAAP,IAAkB/C,EAAAA,KACZj3D,KAAKg6B,cAAcze,MAASye,OAAAA,KAAAA,cAAck4B,MAAgBlyD,KAAKg6B,cAAkBh6B,aAAKg6B,GAAAA,KAAcU,cAC/F7wB,MAEToQ,OAAqBg9C,KAAAA,cACRj3D,MAAKg6B,KAAAA,cAAyBze,UAAUye,EAAAA,KAAAA,cAAck4B,aAC3Dl3C,EAAOhb,oBAAmB6J,OAAMoR,KAAIjb,iBAAmB2sB,eACxDw1C,KAAAA,cAA2BnoC,UAAAA,KAAcymC,cAAiBF,eAAAA,GAAmBvgE,EAAAA,UAAKugE,WACvFvlD,SAAK8jB,GAAY,GAGnB9+B,KAAAg6B,cADKw3B,EAAAA,KAAAA,cAAiBS,cAAoBj4B,KAAAA,cAAyBh6B,EAAAA,KAAKg6B,cAAck4B,UAAAA,OAuBjF,EAAA,IAAA,IAAA+H,EAAAA,EAAAA,OAAAA,IAAP,EAAA1qD,EAAAvP,KACEg6B,cAASA,UAAkBh6B,GAAAA,KAAKg6B,cAAck4B,eAAgBlyD,EAAKg6B,CAAAA,IAAAA,EAAAA,KAAAA,cAAuBA,MAAAA,IAAcU,KAAAA,cAIxG/N,MADMg1C,GAAQ1K,EAAOA,YACZ17C,EAAIvb,EAAAA,KAAKg6B,cAAcU,YAAgB16B,KAAKg6B,kBAAck4B,KAAAA,kBACpDlyD,EAAKg6B,WAAAA,EAAcnwB,OAAMoR,KAAIjb,iBAAmB2sB,eACxD6zC,KAAAA,cAA2BxmC,UAAAA,KAAcymC,cAAiBF,eAAAA,GAAmBvgE,EAAAA,UAAKugE,YACvFvlD,SAAK8jB,GAAY,GAGnB9+B,KAAAg6B,cADKw3B,EAAAA,KAAAA,cAAiBS,cAAoBj4B,KAAAA,cAAyBh6B,EAAAA,KAAKg6B,cAAck4B,UAAAA,OAajF,EAAA,IAAA,IAAAuK,EAAAA,EAAAA,OAAAA,IAAP,EAAAltD,EAAAvP,KAAqBi3D,cACVj9B,UAAcze,GAAIvb,KAAKg6B,cAAck4B,eAAgBlyD,EAAAA,CAAKg6B,IAAAA,EAAAA,KAAAA,cAAuBA,MAAAA,IAAcU,KAAAA,cAIxG/N,MADApd,GAAMoyD,EAAQ1K,YAAoB,EACzB17C,EAAIvb,KAAKg6B,cAAcU,YAAWnf,KAAKvb,kBAAmBkyD,KAAAA,kBACpDlyD,EAAAA,WAAKg6B,EAAAA,OAAcnwB,KAAU7J,iBAAKg6B,eAC1CwmC,KAAAA,cAAiBxmC,UAAcp3B,KAAU5C,cAAKg6B,eAAcymC,GAAYzgE,EAAAA,UAAKugE,cAAwBA,SAAAA,GAAAA,GAAAA,KACrGzhC,cAGPvjB,EAAAvb,KADAA,cAAKwxD,cAAiBS,KAAAA,cAAoBj4B,EAAAA,KAAAA,cAAyBh6B,UAAKg6B,OAAck4B,EAAAA,IAAAA,IAAAA,EAAAA,EAC/E+E,OAYF,IAAA,EAAA1nD,EAAAmtD,KAAAA,cAAPhiC,UACM16B,GAAAA,KAAKg6B,cAAkBh6B,eAAKg6B,EAAAA,CAAck4B,IAAAA,EAAAA,KAAAA,cAAqBl4B,MAAAA,IAAkBh6B,KAAKg6B,cAAcU,MAAAA,GAAAA,EACtG8lC,YAEFxgE,KAAM2hE,cAA4B/+D,EACzB2Y,EAAIvb,KAAKg6B,cAAcU,YAAWnf,KAAKvb,kBAAmBkyD,KAAAA,kBACpDlyD,EAAAA,WAAKg6B,EAAAA,OAAcnwB,KAAU7J,iBAAKg6B,eAC1CmoC,KAAAA,cAAiBnoC,UAAcp3B,KAAU5C,cAAKg6B,eAAcymC,GAAYzgE,EAAAA,UAAKugE,cAAwBA,SAAAA,GAAAA,GAAAA,KACrGzhC,cAGPvjB,EAAAvb,KADAA,cAAKwxD,cAAiBS,KAAAA,cAAoBj4B,EAAAA,KAAAA,cAAyBh6B,UAAKg6B,OAAck4B,EAAAA,IAAAA,IAAAA,EAAAA,EAC/E+E,OAWF,IAAA,EAAA1nD,EAAAyrD,KAAAA,cAAPtgC,UACOwmC,GAAAA,KAAAA,cACClmD,eAAYgf,EAAAA,CAAAA,IAAcnwB,EAAAA,KAAMoR,cAAS+e,MAAcrN,IAAAA,KAAQ3sB,cAAKg6B,MAU1EzqB,GAAAnK,EAAA+8D,YAROH,KAAAA,cACEhoC,EAAAA,EAAAA,KAAcp3B,cACdo3B,YAA0Bi9B,KAAAA,kBAC1Bj9B,KAAAA,kBAA0Bh6B,EAAAA,WAAKugE,EAAAA,OACpCvgE,KAAKugE,iBAEPvgE,eAAKwxD,KAAAA,cAA2BxxD,UAAKg6B,KAAAA,cAgClCk4B,eAAAoJ,GAAAA,EAAAA,UAAAA,WAAP,SACOt7D,GAAAA,KAAKu3D,kBAAQqJ,IAAAA,EAChB5gE,KAAAg6B,cAGai9B,MAAOA,IAAOj3D,KACvByV,cAAWshD,MACR3xD,KAAOA,cACJpF,GAAKu3D,OAAAA,IAAQqJ,EAAAA,aAAAA,KAGzB5mC,cADWvkB,EAAMzV,KAAQ8C,cA6BpBF,GAAAN,EAAA20D,OAAAsE,IAAAA,GAAAA,KAAAA,cAAPkF,YACEzgE,KAAAugE,kBAGIvgE,KAAKoiE,kBAAqBA,KAAI5Q,iBAAmBxxD,UAASA,KAAAg6B,cACvD2C,KAAAA,GAAa5vB,EAAAA,UAAAA,yBACT/M,SAASsC,GAAA,IAAAtC,KAClBA,QAAK28B,mBAAa5vB,OAAiBif,EAAGC,IAAM,IAAAnhB,EAAAxI,EAAA20D,OA6BzC,IAAA,EAAA1nD,EAAA,IAAAisD,YAAAA,GAAAA,EAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAPp2D,GAAApF,KAAqCi3D,QACnC2J,mBAMI5gE,OAAKoiE,KAAI5C,MACXx/D,EAAAA,EAAK28B,EAAAA,SAAAA,GAAa5vB,EAAAA,UAAAA,4BACT/M,SAASsC,GAAA,OAAAA,EAAA20D,OAClBj3D,GAAK28B,IAAAA,KAAAA,IAAa5vB,UAAAA,KAAiBq1D,IAAAp2C,iBAAShsB,KACnCA,IAAKoiE,UAAIpiE,KAGlBA,aAAK28B,iBAAa5vB,EAAiBkqD,GAAOA,IAAAA,UACjCj3D,KAAKoiE,IAAI,UAClBpiE,KAAK28B,aAAa5vB,iBAAiBuqD,EAAAtrC,GAAGC,IAAM,UAAA,GAAA2yC,EAAAv1D,UASxCmyD,8BACN,SAAQx7D,GAAKgjB,OAAAA,EAAAA,OAAgBrM,GAAAA,IAAAA,KAAQ0rD,IAAAA,SAAeznD,KAAQxZ,aAoBvD2L,iBAAPuqD,EAAeL,GACbhrC,IAAK,cAAsBnpB,KAAQsC,IAE1B,gBADeA,KAElBpF,aAAK28B,iBAAmBkjC,EAAAA,GAAa5zC,IAO3C,cAoHKjsB,KAAAsiE,IAAAA,SAAAA,KAAP3lC,aACO5vB,iBAAsBjK,EAAQsC,OACjC,GAAA,KAAe6xD,KAAO7xD,IACpB,WACEpF,KAAK28B,aAAa7vB,iBAAgB6mB,EAAAA,GAAAA,IAAAA,mBAClC,GACGirC,EACH5+D,UAAK6xD,IAAAA,SAAgB0Q,GAAAA,OAAY,KAAGC,KAAAA,gBAC/B3Q,QAAAA,SAAgB0Q,IAAAA,QAAYjgE,IAAGkgE,EAAAA,UAAAA,QACpCxiE,SAAK6xD,GAAAA,IAAAA,IAAgB0Q,EAAAA,EAAAA,EAAAA,EAAAA,OAAeC,IAAAA,IAAAA,EAAAA,OACpCxiE,KAAK6xD,KAAAA,aAAgB0Q,MAAAA,YAAeC,GAAAA,OAAAA,GAEpC5D,EAAAv1D,UAOIrJ,eAAKgjB,SAAgBrM,GAAAA,IAAQ4lD,IAAAA,EAAAA,EAAAA,EAAAA,EAAcxH,OAAAA,IAAAA,OACxC79C,EAAAA,OAAAA,IAAAA,KAAe2Y,EAAAA,KAAO8M,aAAUzlB,gBACrClX,uBAAqBmc,EAAAA,MAEvB,KACF,EAAKnc,KACHA,gBAAkB8M,YAAAA,EAAAA,EAAgBu0D,iBAC7BC,KAAAA,gBAEPiB,YACO5lC,EAAAA,EAAAA,iBAAa7vB,KAAAA,gBAClBy1D,YACG,EAEHlN,EAAAmN,iBAEK7lC,KAAAA,gBAAa7vB,YAAgBm0D,EAAAA,EAAAA,iBAClC,MACG,KACHjhE,EAAAA,KAAKmX,gBAAkBR,QAAA4lD,cAAAxH,cAAA/0D,KAAAkX,eAClBylB,OAAa7vB,IAAAA,KAAAA,eAAgB21D,MAAAA,KAClCziE,gBAAK04D,QAAAA,MAAwBv8C,KAAAA,EAC7Bnc,KACF28B,aAEO86B,gBAAAA,QAAkBnkC,EAAAA,KAAAA,WACvB,EACF,GAAA,MAEEtzB,KAAKy3D,EAAAA,KAAAA,aAAkBnkC,gBAAiBqsC,YACxC,EACF,MAAK,KACH3/D,GAAKy3D,MAAAA,KAAAA,GAAAA,KAAkBnkC,aAAiBxmB,gBAE1Cm0D,mBAGOxJ,EAAAA,MAAAA,KAAkBnkC,GAAAA,KAAAA,YACvBna,MACF,6CAGoC4S,KAAAA,aAC7B0sC,gBAAAA,mBAEP,EAAKz4D,KACHA,wBAAuBmc,OAAA,MAAA,KAAA,EAAAnc,KAAAy3D,kBACvBnkC,eAEAtzB,MAAKy3D,MAAAA,KAAAA,IAAkBiL,KAAAA,kBACvBpvC,eAEAtzB,QAAKmX,MAAYgC,KAAAA,KAAMnZ,KAAAy3D,kBAAAnkC,eACvB,OACF,MACEtzB,KAAK28B,KAAAA,KAAAA,kBAAaqM,eAEf,MACHhpC,MAAKs8D,KAAAA,KACLt8D,KAAA28B,aAEA38B,gBAEF+rB,WACA,EAAK/rB,KACHA,oBAAoBirB,OAAAA,MAAQ03C,KAAAA,KAAAA,KAAkB3iE,YAAKugE,MAAAA,yCACjCrsC,MAClBl0B,KAAKs4D,KAAAA,KAAAA,kBAA8Bt4D,eAAKkX,MAAepQ,MACvD9G,KAAK04D,KAAAA,KAAAA,YAAAA,MAAwBv8C,yCAGXrP,MAAAA,KAAgBJ,GAAAA,KAAAA,aAAqBs8B,gBA4BxD,EAAA,MAAA8yB,KAAAA,KAAP97D,KAAAs8D,aACO,MAAWl3D,KAAWtC,KAAQsC,KAE1Bk3D,aADel3D,KAElBpF,GAAAA,KAAK28B,KAAAA,KAAaijC,eAAMC,QAO9B8C,kBAgHK3iE,KAAA+7D,kBAAP/7D,KAAwBi3D,aACT/iC,qBACX,EAAQ+iC,KAAOA,sBAENt6B,KAAAA,EAAAA,KAAa7vB,eAAgB6mB,KAAAA,GAAAA,KAAAA,wBAE/BxX,OAMM6G,MAAAA,KAAAA,KAAgBrM,KAAAA,aAAQ4lD,gBAAcxH,oBACxC79C,EAAe2Y,OAAO,GAAI7vB,EAAAA,UAAKkX,UAAepQ,SAC9C0xD,GAAAA,IAAAA,IAAAA,EAAAA,EAAgBr8C,EAAAA,EAAAA,OAEvBrR,IACF,IAAKxI,EACHtC,OAAK28B,KAAAA,KAAAA,aAAa7vB,MAAgBu0D,YAClCrhE,GAAKshE,OAAAA,GAAW1C,EAAGv1D,UAErB0yD,iBACOp/B,SAAa7vB,GAAAA,IAAAA,IAAAA,EAAgB6yD,EAAAA,EAAAA,EAAAA,OAAa70D,IAC/C,OACFxI,EAAK20D,OAEHnsD,IACF,KACE9K,EAAAA,KAAK28B,aAAa7vB,gBAAgBm0D,uBAClC,EACF,MAAK,KACHjhE,EAAKmX,KAAAA,gBAAkBR,QAAA4lD,cAAAxH,cACvB/0D,KAAK28B,eAAa7vB,OAAAA,GAAAA,KAAgB21D,eAAoB37D,MACtD9G,KAAK04D,gBAAAA,QAAwBv8C,MAC7B,KACF,EAAAnc,KACA28B,aACK7vB,gBAEH9M,QAAKy3D,EAAAA,KAAAA,WAAkBnkC,EAAAA,GAAAA,MAAiB,KAAA,EACxCtzB,KACF28B,aACE38B,gBAAkB8M,YAAAA,EAAAA,MAAgBif,KAAAA,GAClC,MACF,KAAK,GAAA/rB,KACHA,aAAKmX,gBAAkB8pD,mBAAA,EAAA,MAAA,KACvB,GAAAjhE,KACFmX,YACEnX,MAAKy3D,oCAAmCz3D,KACxC28B,aAEA38B,gBAAKmX,mBAAkB,EAAAnX,KAAA04D,wBACvBv8C,OACF,MACEnc,KAAK28B,EAAAA,KAAAA,IAAAA,KAAaqM,KAAAA,KAAAA,KAClBhpC,KACFy3D,kBACO+E,eACL,OACF,MAAK,KAEL,KACAx8D,KAAK28B,aAEEzlB,gBAAe+T,WAAQ23C,EAAAA,MAAAA,KAAAA,KACH5iE,KAArBi3D,YACFj3D,MAAKw8D,yCAEWtoC,MAAAA,KAAAA,KAClBl0B,KAAKs4D,kBAAAA,eAAmCphD,UAAAA,MAAepQ,KAAO,KAC9D9G,KAAK04D,YAAAA,MAAAA,yCAGA/7B,MAAa7vB,KAAAA,GAAAA,KAAgBJ,aAAAA,gBAIxC,EAAO,MAMD,KAAA,KAAAm2D,KAAAA,gBAAR,MAAsDC,KAAwB7lD,KAS5E,KARa,GAAT8lD,KACFnzD,KAAS5P,KACT4P,eACAA,QAAS61B,uBAA4Bq9B,OAAQ7lD,EAC3Bg6C,OAAT8L,IACTnzD,KAAS4sD,gBACAx8D,KAAsB8iE,aAS3B5uC,qBAAR,EAAAl0B,KAAsBi3D,sBAKI96C,KAAM,EAG1B6mD,KAGU9rD,eAGa+/C,KAAOA,GAAAA,KAAagM,wBAE3C9mD,OAAyB+mD,MAAAA,KAAAA,KAAmBD,KAE5CtmC,aACW7vB,gBAGck2D,oBACAlgE,EAAAA,OAAcmgE,GAAcD,EAASG,UAC9DN,iBAGQ,SAAgCvgE,EACtBwI,EAAAyE,EAAZ4zD,EAAKlyD,GAAYgyD,OACvB,IAAAn4D,GAGEq4D,GAAK,SACE7gE,IAAA,SAEqBQ,GAAAA,EAAAA,cAAkCA,aAGhDqgE,CAAAA,EAAKrgE,EAAAA,KAAAA,IACNgI,IAAbq4D,IAAK/9D,SACG9C,GAKd,SAAa,IACXiN,GAAAjN,GAAKs8D,EACH1jD,UAAe2nD,cAAAA,SAA+BvgE,EAAAwI,EAAIq4D,GAAK,IAAS/9D,EAAI+9D,CAAAA,EAAK,GAAA,EACzE,EAAA,EACF,GAAAlyD,EAAK,EAAA0E,EACHuF,IAAUlb,CAAAA,GAAAA,EAAK6iE,EAAAA,GAAAA,EAAAA,OAAAA,EAAiB3nD,GAAKpL,EAAIqzD,aAAuBr4D,EAAIq4D,GAAK,CAAA,IACzEl0D,EAAA3M,EACF4gE,aACO5C,EAAAA,GAAAA,EAAWplD,KAAKolD,IAAAA,EAAS7P,KAAAA,EAC9Bv1C,GAAKolD,EAAAA,EAAAA,EAAAA,EAAS8C,GAAAA,EAAAA,WAAiBpjE,EAAAA,EAAK6iE,QAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAiB3nD,QAAKolD,MAAS8C,GAAAA,IAAAA,EAAAA,IAAqBztD,EAAA1E,GAAS,GAAIkyD,IAAK/9D,EAAI+9D,IAAKxtD,EAGvH1E,GAAA,EAAA,MAYM7L,EAAA,KAAA6L,EAAA,WAAAoyD,EAAAA,EAAAA,EAAAA,QAAR1tD,EAAA1E,EAA0B/E,EAAegP,QAGlColD,IAAAA,EAAWplD,EAAKolD,EAAAA,EAAAA,SAAS7P,GAAAA,IAGxBvkD,EAASA,KAAQ9G,EACrB8G,GAAQ,GAEVgP,OAAKolD,EAAAA,IAASgD,KAAAA,GAAAA,EAAAA,GAAiBp3D,KAC1B6D,iBAGD7D,EAAAA,GACG6D,EAAAA,GAAM3K,EAAA,GAAAA,EAAA,GAAAA,EAIb8V,IAAKqoD,MAAAA,KAAAA,GAAAA,EAoFAzzD,GAAA9P,KAAA6iE,iBAAA7G,EAAPlsD,GAAA1K,EAAA,GAAsB6xD,EAAAA,GAEpB7xD,EAAsB,GAAlB6xD,EAAOn0D,IAAAA,MAAqC,KAAdm0D,GAAAA,EAAAA,SAGhC1nD,EAFAvP,SAAKk4D,QAAAA,EAAanoD,SAAK8mB,eAAkB9mB,KACzC/P,iBAAuBuP,EAAAsnB,SAAAA,eAQzBzxB,EAAA,GAJAA,EAAA,GAAMM,EAAIuxD,GAAOn0D,EAAAA,IAEXoY,OAAYg9C,GAAAA,EAAAA,UAELmL,kBACApM,SACF30D,EAAAwI,GAAMsc,EAAKk5C,SAEbvwD,EAAMuwD,SACXplD,WAAW5Y,GAAAA,EAAqB8kB,KACvBA,EAAAA,GAAKtc,EAAMsc,SAEftX,eACLoL,EAAKpL,EAAAA,IAAM,UAAyB,IAC3BsX,IAAKtc,EAAMsc,KAAK,WAEdtc,EAAAy4D,kBACA3E,EAAqBx3C,UAClB40C,eAETlsD,SAAMxN,GACX4Y,GAAKpL,IAAMxN,EAAAQ,QAAyB,IAAAR,EACrB20D,OAEf/7C,GAAKnL,OAAK8mB,KAAAA,aACV3b,GAAKpL,EAAK+mB,kBAAAA,GAAkB/mB,KACbooD,aAEJpoD,GAAAgpD,EAAAjiC,kBAGA/mB,IAAA,EACI,IAANsX,IAEJrX,EAAAA,EAAMzN,EAAAQ,OACX9C,EAAAA,KAAKqjE,aAAAA,EAAAA,EAAkBpM,EAAOuM,EAAAA,KAAAA,EAAAA,EAAAA,OAAyBN,KAAAA,IAAAA,GAAa99D,IAAIA,EAAK2K,KAAuBmL,SAG/FnL,EAAAA,IAAM,SACIjF,EAAA,IAGfoQ,GAAKnL,IAAMjF,GAAA,IACI1F,EAAA0K,KAEfoL,SAAW9V,EAAA0K,IAAA,SAGNC,EAAAA,IAAMjF,GAAA,IAAAA,GACI,IAANsc,EAETlM,KAAKpL,SAAM1K,EACI2K,IAANqX,SAEJi8C,EAAAA,IAAAA,GAAAA,KAAAA,GAAkB,KACRj+D,EAAA0K,KAANsX,SAEEhiB,EAAA0K,IAAA,SACAhF,EAAA,KAAA,IACIA,GAAA1F,EAANgiB,GAETlM,EAAKpL,kBACIsX,GAETlM,EAAKnL,GAAAA,EAAM8mB,kBAGN9mB,IAAAA,IAAMjF,EAAA1F,EAAA2K,IACI,UAEVA,IAAMjF,EAAA1F,EAAA0K,IACI,SAEVC,IAAAA,GAAM3K,EAAA2K,IAAA,UAGXmL,KAAKnL,kBACIqX,EAETlM,aAAWjK,GACXiK,EAAKnL,aAAMkB,GAAA4lB,GAAAA,EAAAA,IAAAA,IAAAA,EAAAA,EAAkB9mB,IACd,UAEVD,IAAAA,EAAM1K,EAAA2K,IAAA,SACuB,IAAAjF,EAAA1F,EAAvB2K,IAAA8mB,WAAAA,IAAAA,EAAkB/mB,EAAAA,IACd,WAAMsX,IAAkBtc,EAAA1F,EAANgiB,IAE5BpnB,UAAKyjE,KAAAA,EAAAA,KAAsBr+D,kBAE3Bk7D,EAAAA,GAAWplD,KAAKolD,GAAAA,EAAAA,KAAS7P,UACzB6P,EAAAA,KAAS8C,WAAAA,KACdloD,EAAKqoD,EAAAA,KAAAA,SAAAA,KACUz4D,EAAA1F,EAANgiB,KAEJrX,UAAM,KACNA,EAAAA,EAA6BA,KAAA,UAAvB8mB,KAAAA,EAAAA,EAAAA,KAAAA,SACN/mB,KAAMhF,EAAA1F,EAAA2K,KACND,WAAM,KAAA+mB,EAAAA,EAAAA,IAAAA,WAEX72B,KAAKmX,GAAAA,EAAAA,KAAAA,SAAkB/R,EAAA2K,IAAA,SAAA+oD,EAAAjiC,kBAG3B9mB,IAAO,KA4BFjF,GAAA1F,EAAA0K,KAAAmsD,SAAAA,EAAAA,IAAP,SACEnD,EAAAjiC,kBACE/mB,IAAA,KAEE9P,GAAK28B,KAAAA,GAAAA,KAAa5vB,EAAAA,GAAAA,KAAAA,cAAuBkf,EAAGhb,EAAA7L,GAAA,KAC5C0F,GACF1F,EAAAk7D,SAEQ/kD,EAAIvb,SAAKg6B,QAAAA,EAAcze,SACnBvb,gBAAKg6B,EAAkB50B,EACjCpF,kBAAkB+M,MAAAA,GAAAA,EAAAA,KAAAA,SAAuBkf,EAAGlc,IAAIwL,SAAMu9C,EAAAjiC,kBAOrD9mB,GAAA3K,EAAA82D,KAAAA,SAAAA,EAAAA,IAAP,SAA2BjF,EAAAA,kBAGHnnD,IAGlB9P,KAAUA,YAAKg6B,MAAAA,6BACkBlvB,GACjC9K,OAAK28B,GAAAA,EAAAA,UAAa5vB,aAAoBif,SAAM1pB,GAAKiZ,OAAK3Y,EAACq0D,OAmB3D,IAAO,KAsBF,EAAAj3D,KAAA28B,aAAP5vB,iBAkBEuqD,EAjBAt3D,GAAAA,IAAK28B,OAAAA,MAAaqM,KAAAA,EAAAA,IAAAA,EAAAA,KAClBhpC,cAAK04D,EAAAA,EAAAA,EAAAA,KAAAA,cACA1+B,EAAAA,EAAAA,KAAAA,aAAcU,iBACdV,EAAAA,GAAAA,IAAck4B,IAAAA,EAAAA,IAAelyD,EAAAA,KAAKkX,OAAAA,GAAAA,EAAAA,UACvClX,oBAAoB62B,SAAAA,GAAAA,GAAAA,IAAkB45B,EAAAA,OACtCzwD,GAAK28B,CAAAA,IAAAA,EAAAA,KAAa7S,cACb+nC,EAAAA,EAAAA,EAAAA,KAAAA,cAGL7xD,EAAKg6B,EAAAA,KAAAA,aAAc0pC,iBACd1pC,EAAAA,GAAc2pC,IAAAA,KAAS3jE,EAAAA,IAAKg6B,EAAAA,KAAAA,OAAcrN,GAC/C3sB,EAAAA,UAAKg6B,UAAc4pC,SAAAA,GAAAA,OAAsB5jE,KAAKk4D,aAAanoD,gBACtDiqB,EAAAA,KAAc4pC,wBAA2B1L,OAAAA,KAAapoD,cACtDkqB,UAAc6pC,EAAAA,KAAAA,cAAoBhS,aAAgBsO,KAGvDngE,eAAK28B,KAAa7vB,EAAAA,KAAAA,aAAgBu0D,EAASxqC,kBAuBtCulC,QAAAA,KAAAA,aAAenF,QACNA,KAAOA,gBACb0K,QACD3hE,KACLg6B,cACOhX,OAAAA,EAAAA,KAAgBrM,cAAQwyB,OAAcnpC,KAC3Cg6B,cAEFrN,MACE3sB,KAAKgjB,cAAAA,iBAAwBmmB,GAAAA,KAAc+uB,aAC3CnoD,GACF/P,KACAg6B,cACOhX,iBAAgBrM,GAAAA,KAAQwyB,aAAcr5B,GAG/C9P,KAAmB2hE,cACnB3hE,aAAKgjB,KAAAA,gBAAwBtiB,QAAcojE,KAWtCnnC,aAAA0/B,gBAAPgF,QAAA,GAAuBpK,GACrB2H,EACImF,UADe9M,eAGfA,SAAgB30D,GAAA,IAAe20D,EAAOA,EAAAA,OAAO,IAAOj3D,EAAKkX,OAAAA,GAAAA,KAAepQ,EAAAA,KAAmB,EAAA9G,KAAX+jE,gBACpE7sD,QAAepQ,YAI7B9G,QAAKg6B,MAAAA,KAAcU,EAAAA,KAAAA,EAAYntB,KAC/BvN,gBAAKg6B,QAAck4B,YACnBlyD,YAAKshE,MAAc,KAEd,EAiCF,KAAA,EAAAthE,KAAAu8D,gBAAP5lD,QAAqBsgD,YACaA,MAAO,IAAIj3D,EAAAA,EAAKgjB,GAAAA,EAAAA,OAAAA,KAAgBrM,gBAAQ4lD,QACtE77D,YAEcu2D,GAAAA,GAAOn0D,EAAAA,UAAqBm0D,gBAC7BA,SAAO30D,GACpB,IAAKwI,EAAAyE,EACYjN,EAAA20D,OACbj3D,IAAK24D,EAAAA,OAAAA,EAAAA,OAAAA,IAAAA,EAAAA,EAAAA,OAA+Bx8C,IAA8B6a,KAAAA,eAEpElwB,MACF,IAAAgE,KACE9K,EAAAA,KAAK24D,eAAAA,MAAAA,EAAAA,IAAAA,KAA+Bx8C,cAA8Bmb,UAAAA,EAClE,EAAAt3B,KACFg6B,cACW9iB,aACPlX,EAAAA,EAAAA,KAAK28B,WAAa5vB,EAAAA,KAAAA,GAAAA,EAAAA,UAAuBkf,cAAc/U,SAAAA,GAAAA,IAAepQ,EAAAA,EAAImwD,OAAIj3D,GAAKkX,KAAAA,gBAAmBP,QAG1G4lD,eACiC,OAAXyH,EAClBhkE,IAAKg4D,EAAAA,EAAAA,OAAAA,EAAAA,EAAAA,OAAkB1tD,GAAKtK,EAAAA,OAAK83D,EAAAA,OAC7B93D,IAAKg4D,KAAAA,GAAAA,IAAAA,GAAAA,KAAkBl1D,+BACpBk1D,KAAkBr0D,EAAAA,qBAIzB3D,MAAKi4D,KAAAA,GAAAA,KAAe3tD,+BACX2tD,KAAAA,EAAAA,sBACFA,MAAAA,KAAet0D,GAAAA,KAGxBuT,gBAEelX,KAAgB28B,aACpBq7B,iBAAkBl1D,EAAAA,GAAAA,IACzB9C,MAAK89D,KAAAA,eAAc9F,KAAAA,IAAAA,KAAkB/tD,eAGrB+5D,KACdhkE,KAAKi4D,MAAAA,KAAAA,GAAen1D,IAAAA,GACtB9C,IAAK69D,IAAAA,KAAAA,kBAAiB5F,KAAehuD,KAAAA,cAiBxCjK,KAAAg4D,kBAAPl1D,OAAkBm0D,IAMhBj3D,KAAAg4D,kBALKh+B,SAAuBh6B,IAAAA,GAAKg6B,IAAAA,IAAAA,KAAcp3B,eAC1Co3B,KAAc2pC,KAAAA,WAAc3pC,KAAAA,eAAsBh6B,OAAKg6B,IAAAA,KAAcze,eACrEye,SAAc4pC,MAAAA,KAAAA,GAAiB7zD,IAAK/P,GAAKk4D,IAAAA,GAAAA,KAAAA,kBACzCl+B,QAAc4pC,KAAAA,SAAiB9zD,KAAK9P,kBAAkB8P,OACtDkqB,IAAAA,GAAAA,IAAAA,GAAc6pC,KAAAA,eAAoBhS,QAAAA,KAAgBsO,YAalDngE,KAAAi4D,eAAAuE,OAAP,OAAA,GAAqBvF,EAUnB5tD,UATArJ,WAAKg6B,SAAkBh6B,GAAKg6B,OAAAA,KAAAA,cAC5Bh6B,OAAKg6B,KAAAA,cAAuBhoB,EAAIhS,KAAKg6B,cAAc2pC,OAAS3jE,KAAKg6B,cAAcrN,MAAO3sB,KACtFA,cAAKk4D,EAAanoD,KAAK/P,cAAKg6B,iBAAc4pC,GAAiB7zD,KAC3D/P,aAAKk4D,GAAapoD,KAAK9P,cAAKg6B,iBAAc4pC,GAAiB9zD,KAC3D9P,aAAK6xD,GAAAA,KAAgBsO,cAAwB8D,aACzCjkE,KAAKg6B,gBAAc6pC,SAAAA,GACrB7jE,EAAAA,UAAK6xD,cAAgBsO,SAAenmC,GAAAA,OAAAA,KAAc6pC,cAEpD7jE,EAAKkhE,KAAAA,cACEwC,QAcF,EAAA1jE,KAAA89D,cAAPviD,EAAAjL,KAGE0B,IAAAhS,KAFAA,cAAK83D,OACL93D,KAAK4oB,cAAezM,MACb,GAOFnc,KAAAk4D,aAAA2F,GAAAA,KAAP7jC,cAEE4pC,iBADK7L,GAAYtiD,KAITyiD,aAAAgM,GAAAA,KAAAA,cAAVN,iBACE9zD,GAAMa,KAAkCoD,gBAE1BosD,QAAAngE,KAAAikE,cAAAjkE,KAAAg6B,cAAA6pC,eAGExqD,KAAMiC,gBACNhR,QACZqgB,KAAAA,cAA2Bk5C,cACtB3yD,KAAegwD,mBACbhwD,GAASmJ,EAAMhR,UACtBjK,SAAM8R,SAAmB5O,GAAA,OAI7BtC,KAAI2Q,aAAc7N,EAAAA,KACT8lB,eAaJzM,KAAA6hD,IAAAA,GAAAA,EAAP30D,UAAoBoM,YACJzV,SAAKkkE,GAAAA,OAAAA,KAAsBzuD,UACrCrS,GACFpD,GAAK+4D,EAAAA,UAAAA,sBAGA5hD,SAAAA,GAAY5B,IAAK,IAAAzK,EAAAyE,EAAA,CAAAwE,OAAA,IAAA3O,EAAA,uDAcnBq4D,QAAP3yD,EAAA1F,EAAAkW,KAAAhZ,KAGEiN,EAAAwE,OAFKimB,KAAAA,CAAAA,WAAkB9oB,SAClBkP,EAAAA,IACEthB,IAQFoS,SAAApG,EAAAozD,GAAAA,IAAAA,MAAAA,SAAPpzD,EAAA,GAAA,IAAA1L,KAIE8R,SAHKiG,EAAAA,GAAAA,MAAAA,OAAkB,IAAA5H,EAAAwE,OAAAjR,OAAA,KAAAyM,GAAAqvD,EAAAv1D,UAAA20D,aAClBrhC,SAAAA,GAAa7vB,IAAAA,EAAAA,KAAAA,sBAAoCxK,GACtDtC,OAAK04D,EAAAA,KAAAA,mBAAwBv8C,KACtBrR,GAQF9K,KAAAmX,YAAAgnD,KAAAA,0DACkB77D,IAAA,GAAAs8D,EAAAv1D,UAAAo0D,SACvBz9D,WAAK28B,OAAa7vB,KAAAA,cAAgB21D,EAAAA,EAAAA,KAAAA,SAAoB,GACjD/J,EAAAA,UAAAA,sBAUA,WAAA,OAAA4F,KAAAA,YAAPnlD,MAAA,6CAEEnZ,KAAK6xD,aAAAA,gBAA+B4Q,mBAAAD,EAC7BxiE,KAmBF04D,wBAAPv8C,QAAA,GACEyiD,EAAAv1D,UAAI86D,kBACG7F,WAAAA,OAAAA,KACEnnD,YAEUgC,MAGd04C,oCAAuD7xD,KAAAy+D,aAA+B3xD,gBAAA01D,mBAatF,EAAApiD,KAAPs4C,wBACOwI,QAAAA,GAAAA,EAAAA,UACAlnC,qBACDh6B,WAAKg6B,OAAcze,KAAMvb,gBAAmBkyD,UAAAA,GAAelyD,KAC7DA,gBAAmBub,YACdrE,EAAAA,EAAAA,kBAAsBlX,GAAKugE,EAAAA,UAAAA,cAClBvmC,SAAAA,GAAcze,OAAUrE,IAAAA,EAAAA,QAAAA,KAAepQ,wBAChDkzB,IAAkBh6B,MAAKkX,EAAAA,IAAAA,KAAepQ,gBAExCo6D,YAAAA,EAAAA,EACE,IAaF7L,EAAAoJ,SAAAd,EAAAA,KAAPtI,EAAAmN,kBACExiE,IAAKg6B,EAAAA,UAAc4nC,MAAK5hE,WAAKg6B,OAAcp3B,KAAKs+D,kBAa3CjD,KAAAA,cAAP1iD,IAEEvb,KADAA,cAAKkhE,IAAAA,KACDlhE,cAAKg6B,aAAyBA,GAAAA,KAAAA,cAAcU,IAI9C16B,KAA2BA,eAAKg6B,OAAck4B,KAAAA,mBAAoBl4B,KAAcU,cAC3EV,GAAAA,KAAAA,eAAoBo2B,OAAAA,KAAcpwD,cAAKg6B,EAAAA,KAAcrN,eAAaqN,KAAAA,GAAcze,KAAuB2lD,mBACvGlnC,GAAcnwB,EAAAA,UAAU7J,OAAKg6B,WAAcrN,OAAQ3sB,KAAKg6B,cAAiBh6B,KAAKg6B,KAAAA,cAAcpD,IAAAA,GAAAA,GAAa52B,EAAKugE,UAAAA,aAC9G/O,WAAAA,GAAAA,KAAiBS,kBAAoBj4B,KAAAA,cAAcU,IAAAA,KAAW16B,cAAKg6B,UAAck4B,CAAAA,IAAAA,EAAAA,KAEtFlyD,cAAKg6B,aACAknC,KAAAA,cAEPxmC,UAQK16B,KAAAg6B,cAAAokC,MAAPhO,cACEpwD,KAAKu3D,cAAQztC,MACR0uC,KAAAA,cAAgBr8C,EAAAA,EAAAA,GACdnc,KAGFg6B,cAAPnwB,MAAA6V,IAAA1f,KACEA,cAAoB2sB,MAAAkK,KAAAA,cAAkB45B,EAAAA,KACtCzwD,cAAKo4D,aAAyBvhC,KAAAA,mBAAkB45B,KAM1Ce,iBAAA+O,eAARvgE,KAGEg6B,cAFKo+B,UAAAA,KAAAA,cAA6BlG,mBAC7BkG,KAAAA,cAAoD78C,IAAAvb,KAAvBA,kBAAkB8P,OACxCsoD,GAAAA,EAAAA,UAAAA,UAaP,WAAAiG,OAAAA,KAAP9G,QAAiB6M,QACfpkE,KAAK6xD,gBAAgBwM,QAAAA,GAAU+F,EAAAA,UAY1Bt6C,MAAA40C,WAAAA,KAAAA,aAAP5F,EAAAjiC,kBAEmBgR,QACZ3uB,KAAAA,uBAAyCu1C,EAAW53B,kBAC1CqhC,SAAanoD,EAC5BwzB,UAAe20B,eAGfl4D,WAAKshE,OAActhE,KACnBo4D,uBAAqClhD,KAAAA,SAAepQ,KAClDsxD,uBAAiBp+B,IAAcrN,SAAaqN,KAAAA,aACtChf,GAAOhb,KAAKg6B,wBAAwB5H,EACtCpX,UACGqpD,UACAvlC,SAAYx8B,GAKrB,OAFAtC,KAAKwxD,gBAAiB8S,UAAAA,IAAAA,GACtBtkE,EAAKshE,UAAAA,uBAlzFyBl1D,WAArB2lD,IAAAA,EAAAA,IAAAA,gICrNbjnD,EAAA,EAAAA,EAAA9K,KAAAkX,eAIEpQ,OAHUgE,EAAAy5D,CAAAA,IAAAA,EAAAA,KAA8BvqC,cAC9BjP,MAAAA,KAqCZiP,cA7BSze,EAAAzQ,EAAAxB,EAAAA,KAAP0wB,cACEh6B,MAAK+qB,IAAAA,GAAAA,IACL3lB,EAAAi/D,KAAgB/hE,GAAA8C,EAAA05B,WAAKylC,GAAAA,OAALvkE,KAAAwxD,iBACZloD,eAECi7D,KAAAA,WAAazhE,EAAS,IAAA,GAQtB87D,EDiMiC/G,CCjMjC2M,EAAAp4D,YAAP6oD,EAAAlD,aAEEtqC,GADAznB,IAAAA,CAAKukE,EAAAA,KAAAA,OAAaj6D,eASbm6D,EAAA,aAAAC,CAAAA,OAAP,IAAyCv9C,EAAAA,0BACPvM,EAAAA,aAC5BwF,EAAAA,gBACGmkD,EAAAA,IAAatqD,EAAAA,oBAQxB0qD,IAA6BC,KAC3BL,aAAgBK,GAAA5kE,KAAA+qB,aAAJ,EACRzhB,OAAAA,EAEJs7D,UAhDoBt7D,QAAA8C,WA4CtBpM,KAAA+qB,aAUA,EAAA,IAAA,IAAAzoB,EAAA,EAAAwI,EAAA9K,KAAAukE,aAA0CM,EACxC/5D,EAAAhI,OAASwG,IAAAA,EAAShH,GAAAgH,UAAMtJ,KAAAghB,uJCnD1BpG,QAAqCtY,IAAA,IAAAwI,GAAA9K,KAAAukE,aACnBtqD,OAAWnP,EAASg6D,IAAAA,ED+Bd7qD,YC/BwB8qD,EAC1CC,GAAW,IAAW,IAASF,EAAAA,EAAAA,EAAAA,EAAAA,EAAUE,EAAAA,OAElCl6D,IAAA0iB,EAAAA,GAAAA,UAAsBxpB,EAAAA,OAAS,EAAAygE,EAAAr4D,WAC/BsxC,EAAW+mB,EAAAzjD,aAAA5b,EAAAq/D,EAAAjnD,0BAKXrS,SAAS7I,GAAA,MAAa,CAAAgH,QAAA,WAAsB,OAAAlE,EAAUpB,OAAAA,KAASghE,CAC/D1iE,EAAA2iE,KAAAA,OAAsBrtD,eACtBstD,EAAwB,aACxB,CAAA/uC,OAAAA,IAAarrB,EAAA6iB,QAAW7iB,EAAAqrB,UAASrrB,EAAAo6D,SAASp6D,EAAS9G,OAAAA,EAASghE,MAC5Dr3C,EAAAA,SAAmB/S,EAAAA,eAAQ,4BCTqB1W,UAK3DkB,EAAAmK,EAAA,OAL0ErH,UAAA68D,UAAmB58D,EAAc08D,EAAM/hE,OAAAA,UAK9FA,SACjBgI,EAAO+5D,UAEM/hE,EAAAA,SAAwBA,WACtBA,EAAAA,SACHA,iCAITqiE,KAAQj9D,GAAWC,EAAAA,MAChB/C,CAAAA,YAEDy/D,wFAzBT1uC,UAAA,CAAA,UAAoEjuB,QAElE,QAAUm8D,SACUngE,SAEA2gE,GAAO3gE,EAAOgE,QAGpC+I,EAAA2J,QAAA,UAwBA,GAAA,KAAA,CAAAwqD,EAAAC,cACiBC,EAAKngE,EAAEw1C,EAAAA,EAAAA,GAAAA,QAAAA,IAAsB73C,IAAWA,EAAAA,QAAAA,IAGvDsC,IAFOsa,EAAAA,EAAIva,QACAsK,GAAGtK,EAAErC,OACT6N,gHC3CTrO,EAAAuR,OAGA+D,eAAAytD,EAAA,aAAA,CAAAnhE,OAAA,IAA8Cq6B,EAW5C44B,OAA2Bx0D,EAAAA,aAAasY,EAAIsjB,UAAc57B,EAAOgqB,EAAAA,KAAsBhqB,SAAWL,EAC5FijE,EAAWvqD,EAAAA,GAAAA,OAAI1Y,EAAJ0Y,KAAMC,EAAIsjB,KAAc5lB,EAAOvT,EAE1Cq4D,GAAWl/B,EAAc57B,EAAAA,EAAAA,EAAOkH,IAAAA,EAAMoR,aAAyB0R,EAAAA,EAAAA,OAAsBhqB,SACvF86D,EAAY8H,GACd9H,IAAS3+B,EAAAA,IAAAA,EAAaymC,YAASC,EAAAA,OAAAA,EAAAA,QAA0BptB,OAAAA,EAAAA,IAAAA,GAAkBmtB,EAAS7lD,IAAA8lD,EAAAA,EAAAA,QAAAA,IAAAA,KAAAA,CAA0BC,EAAAtgC,EAAAA,KAAAA,OAAAA,8HChBlH,SAAA7iC,GAAA,IAsBSwI,EAAAxI,EAAAyN,OACAlG,MAAKoR,IACL3Y,EAAAg+D,OAAAA,MAAeoF,EAyFxB/iE,OAhHgB4Y,EAAAmqB,GAAAA,EAAAA,MAAd56B,OAAA,EAAyB5G,EAAAA,IACvB5B,EAAAqW,KACEzU,GAAU+M,EAAuB3O,EAAAK,OACEkH,MAC3BoR,IAAR/W,EAIUvB,OAAAgjE,MAAAA,EAAdhjE,OAAA4Y,GAA2BrX,GACzBqL,IAAA0B,EAAmB6tB,UAALvvB,EAAanK,EAAAogE,wBAGtBpgE,EAAAgzC,gBAAP7oC,EAAAnK,EAAAogE,wBAKEpgE,EAHAwgE,wBACiB91D,KACVwwD,CAAAA,EAAAA,KAAWtgE,OAAKsgE,eAChBsF,EAAAA,aASFphC,CAAAA,OAAAA,IAAPqhC,EAAAH,cAAoDG,EAAApgC,mBAAL11B,EACxC,IAAAR,EAAA,oBAA4Bu2D,IAAA9lE,KAAiB+P,GAAA,EAAA/P,KAAVA,GAAK+P,EAAAA,KACxCuwD,SAAA1nB,IAAAA,EAAAA,OAAPktB,EAAApgC,WAAmC,SAAiBpjC,GAAA,MAALyN,CAAAA,IACxC,GAAA,IAAAzN,IAAAyjE,EAAAA,IAAAA,IAAPzjE,IAAAwjE,EAAAH,aAAoD,SAAV3lE,GAAK+P,OACxC,IAAAzN,EAAA,KAAAq2C,IAAAA,IAAAA,EAAP,KAAA,EAAA,IAAmCr2C,EAAA,IAAAwjE,EAAiBz8D,UAAVrJ,MAAK+P,WACxC,IAAAs1B,EAAAA,IAAAA,EAAAA,OAAPv6B,EAAAiF,GAAmC/P,KAAA+P,GAAiBjF,EAAAgF,GAAA9P,KAAVA,GAAK8P,EAAAA,SACxC9P,KAAAolC,SAAPqrB,QAAmC3lD,GAAAg7D,EAAAz8D,UAAiBm7B,UAAL10B,WACxC,OAAA+oC,SAAAA,KAAP9oC,IAAA+1D,EAAAz8D,UAAoD27B,OAAA,WAALj1B,OAGxC,UAAAu2B,KAAAA,IAAAA,EAAPj9B,UAAAuvC,YAAmD,WAAL7oC,OACvC,UAAA02B,KAAAA,IAAAA,EAAAA,UAAPs/B,QAAkC,WAAO/lE,OAAK8P,UACvC9P,KAAAqkC,IAAAA,EAAAA,UAAPsU,YAA4E,WAAxB,OAAV34C,WACnCA,KAAA+P,IAAA+1D,EAAAxhC,UAAPe,SAAkC,WAA0C,OAAxB,SAAVrlC,KAAK8P,IACxCg2D,EAAAz8D,UAAA28D,MAAAA,WAAP,OAAkC,UAA0ChmE,KAAA8P,IAAxBg2D,EAAAz8D,UAAL0G,gBAA6D,WAAV/P,OAAK+P,WAChG/P,KAAAw4C,IAAAA,EAAAA,UAAPlS,eAA4E,WAAxB,OAAVtmC,SAA0FA,KAAA+P,IAAA+1D,EAAxBz8D,UAAVrJ,eAC3F,WAAA4kC,OAAP,SAAA5kC,KAAkC8P,IAA0Cg2D,EAAAz8D,UAAlCrJ,QAAK+P,WACxC,OAAA00B,WAAP,SAAkCzkC,KAAA+P,KAAkB+1D,EAAAz8D,UAAVrJ,QACnC,WAAAimE,OAAAA,WAAAA,SAAPjmE,KAAuC8P,KAAmBg2D,EAAAz8D,UAAP0G,YAAiBD,WAG7D,OAAA+0B,WAAP,SACE7kC,KAAkB+P,KAAA,WAALA,SACN/P,KAAA+P,KACL+1D,EAAKz8D,UAAqBmvC,YAAOx4C,WAC5B,OAAA,WAAsC,SAAVA,KAAK+P,KACtC,WAAkC,SAG/B/P,KAAA8P,KAAA60B,EAAAA,UAAPC,YACE,WAAQ5kC,OAAK8P,IACX,SAAK9P,KACL+P,KAAK+1D,EAAAz8D,UAAqBo7B,YAAY30B,WACjC,OAAqB,IAAA,SAAiB9P,KAAVA,KACjC8lE,EAAAz8D,UAA0B48D,mBAKvBC,WAAAA,OAAP,IAAAlmE,KACE+P,IAAA,IAAiB/P,KAAA8P,IAAV9P,EAAAA,UAEF6kC,WAAA0+B,WAAAA,OAAP,SACMvjE,KAAKsgE,IAAAA,KAASjjB,SAChBr9C,KAAK8P,SAAM,OAEX9P,IAAK8P,KAAMC,GAAA,KAGR,SAAA,OAAAo2D,SAAAA,KAAPp2D,WACE,OAAe,IAAA+1D,EAAV9lE,UAAoCA,WAAKsgE,WAAS8C,OACrD,SAAuCpjE,KAAA8P,IAA/B9P,KAAKsgE,SAAS8C,KAAAA,SACpB,OAAK,IAAApjE,KACL8P,GAAK,KAAA,SAAqB,OAAO9P,SAAKsgE,KAAS8C,WAAAA,OAC/C,IAAK0C,EAAAz8D,UAAqB68D,iBAAY5F,WAAS8C,OAAAA,UAC/CpjE,KAA0B8P,IAAO9P,EAAAA,UAAK6kC,eAGnC7kC,WAAK6kC,KAAAA,SAEPwY,UAAA+oB,KAAAA,KAAAA,UAAPpmE,KAAA8P,IACE,WAAkBg2D,EAAAz8D,UAALyG,kBAA6CszD,WAAAA,GACvB,UAA/BpjE,KAAKsgE,KAAAA,KAAS8C,SAAAA,eACT98B,OAAAA,SAEJtmC,KAAAsgE,SAAA+F,gBAAP,KAAA,SACE,KAAkB,SAAVrmE,OAAoCA,IAAAA,KAAKsgE,SAAS8C,eACE,KAAA,SAAxB,OAA1B9C,SAAS8C,KAAAA,SAAAA,uBAGd,OAAAkD,KAAAA,aAAAA,OAAPtmE,KAAA6kC,cACoBihC,EAAAz8D,UAAVrJ,sBAAkDojE,WAAAA,OACE,UAAxBpjE,KAA/BA,KAAKsgE,KAAAA,SAAS8C,eAC8C,SAAxBpjE,KAAAsgE,SAA1BA,eAAS8C,KAAAA,kBACf4C,EAAAA,UAEJK,oBAAAE,WAAP,OAAA,UACoBvmE,KAAA8P,KAAV9P,KAAK8P,SAA+B9P,eAAcojE,WACE,SAAxBpjE,KAA/BA,SAAKsgE,gBAAS8C,KACfpjE,WAAK4kC,EAAAA,UAEJ0hC,wBAAAE,WAAP,OACE,UAAiBxmE,KAAVA,KACQA,KAAAsgE,SAALxwD,eAAiCwwD,WAASgD,SAChDtjE,KA/GRsgE,SAAa76B,iBAwHb,WACE,SAAAzlC,KAISojE,SAFAA,gBAEApjE,KAAAojE,eAFAE,EAAAA,UAAAA,wBAEAF,WAGF,OAAA,UAAPpjE,KAAA8P,KACE9P,KAAAsgE,SAAyBtgE,eAAKsjE,IAAgBtjE,SAAKojE,KAAAA,SAO9CA,gBAAA/lB,KAAPzY,eACEkhC,EAA+Bz8D,UAAnBi6D,kBAjBhB,WAAaoC,OAAAA,wEA5FJ,mDC/BT56D,QAAA,IAAAxI,IAGAA,EAAA,QAAA,IACAwI,IACAA,GAAA,GAAA9K,KACAsjE,eACAhhE,EAEAtC,KAAAojE,eAGat4D,EAAA27D,OAAAA,EAAAA,UAAkBhW,MAAA,WAS/B,OAAA,IAoBEiW,EAAA1mE,KAAAsjE,eACUqD,KAAAA,iBACA3jD,EAAAA,UAAAA,QACA,WAAA9L,OArBH,IAAAlX,KAAA4L,gBACgB86D,KAChBb,EAAAtqD,cAMAnW,GAAAu+D,KAAAA,CAAAA,EAAiBiD,EACjBC,KAAAnD,OAAiB9rD,eACjBgsD,EAAAA,aAAmB/sC,CAAAA,OAAAA,IAAAA,EAAkB45B,qBACrCoT,EAAAA,OAAqCrB,EAAAA,qBACrC9tC,EAAAA,IACCoyC,EAAAD,EAAA,MAAAE,EAAAA,EAAAA,MAAuBl/B,EAAAA,EAAAA,KAASm/B,EAAAA,EAAAA,KAAAA,EAAcH,EAAG,MAAAI,EAAAA,EAAAA,MAAAA,EAAgBJ,EAAAnG,MAAAA,EAAAA,EAAAA,MAAiBkG,EAAAxuB,gBAClF,WAAA8uB,IAAAA,EAAAA,oBAAsCF,EAAAA,EAAAA,EAAAA,GAAchnE,KAAGilC,eAAAA,EAAAA,KAAsBkiC,gBAAAA,EAAAA,KAAuBjwD,eAAAiuB,EAAAA,KAAAA,MAS1GnlC,EAAKonE,KAAQpnE,MAAKkX,EAAAA,KAAAA,EAAAA,EAAAA,KAAeyB,EAAAA,EACjC3Y,KAAKqnE,OAAQrnE,EAAAA,KAAKkX,OAAAA,EAAAA,KAAepQ,iBAChBwgE,EAAAC,kBAA+BC,QAAAA,KAAAA,aAAwBxnE,EAAAA,gBACnE06B,KAAAA,QACL16B,GAAKkyD,KAAAA,UAAelyD,EAAKqnE,SACzBrnE,aAAK4rB,CAAAA,EAAAA,EAAAA,eAGA67C,EAAA/G,gBAAP+G,EAAArvB,iBACMl9B,KACFlb,gBAAoBkb,EAAKnL,SACpBg3D,aAAe7rD,CAAKpL,EAAAA,EACzB9P,qBAAesgE,EAAWplD,sBAErB6rD,EAAAA,uBACAA,KAAeK,MACfL,KAAAA,eAAqBpuD,KAAI+sD,KAAAA,MAAAA,KAEzB1lE,eAGF8G,KAAA9G,KAAA6J,MAAA69D,IAAAA,EAAAA,aAAP1nE,KAAyBkb,wBAEhBgsD,KAAAA,QAAqBhsD,KAC1Blb,UAAKknE,EAAAA,KAAAA,aACLlnE,KAAKknE,MAAAA,EAAAA,KAAAA,gBAAgC5G,OAErCtgE,EAAAA,UAAKknE,YAAqB,SACrBA,GAAAA,OAAAA,GAAAA,KAAqBH,UACrBG,GAAAA,EAAAA,GAAAA,KAAgB5G,UAAWxwD,GAAIxN,EAAAojE,GAAAA,KAAAA,UAE/B1lE,SAAKknE,EAAAA,WAGPlnE,KAAA+mE,UAAAnwC,GAAAA,EAAAA,KAAPmwC,UACEj3D,GAAA,EAAA9P,KAAO+mE,UAAIY,SAAgBzwD,IAAAA,EAAAA,eAAqBlX,KAAKygE,WAAYvlD,EAAAA,UAGnEwsD,kBAAW,SAAAplE,GAAA,OAAAA,GAAAtC,KAAaknE,gBACtBn3D,GAAAzN,EAAAyN,GAAO/P,KAAK2mE,gBAAkB3mE,GAAAA,EAAK6J,GAAAA,KAAM+9D,gBAAiBP,2CAG5Dt3D,GAAA,EAAA/P,KAAAknE,gBAAWp3D,GAAA,EAAA9P,KAAAknE,gBAAX5G,SAAA,IACEuH,EACMC,eADyB9nE,KACDA,iBAC9B+nE,EAAQD,UAA8B9nE,mDAQhCA,KAAAwnE,eAAAA,KAAAA,KAAR/G,YACOzgE,GAAAA,IAAK2mE,OAAAA,eAIVoB,EAAA1+D,UAAmCrJ,gBAAKgjB,CAAgBrM,IAAAA,WAAQgkB,OAEhE36B,KAAOgoE,gBAAsBvB,KAAkBA,MAAAA,UAAkBuB,KAM5DX,OAAAnmB,YAAA+mB,EAAAA,cAAP,IACEp0D,OAAI7T,eAAW8C,EAAAA,UACIie,qBACJ8V,CAAAA,IAAAA,WAETzxB,IAAIpF,EAAKqnE,KAAAA,MAEXrnE,KAAK6J,EAAAA,KAAMS,MAAKtK,OAAK42B,GAAAA,GAAAA,EAAAA,KAAasxC,OAQjChnB,YAAApuC,EAAPquC,cACEnhD,IAAK4L,EAAAA,UACA+gB,wBAGL3sB,SAAK6J,GAAQ,IAAI7J,KAAAunE,eAA+BC,OAAAA,EAAAA,IAAAA,EAAAA,EAAAA,KAAAA,gBAChDxnE,QAAK06B,WACL16B,OAAKkyD,EAAAA,EAAAA,gBACLlyD,EAAAA,gBAAK4rB,GAAAA,EAQAviB,UAAA4+D,iBAAOE,SAENC,GAAWpoE,GAAAA,IAAKygE,KAAAA,MAAY5pC,OAAAA,MAAAA,IAAAA,IAIb72B,EAAAA,EAAAA,mBAAKwnE,IAAAA,IAAwBa,EAOlDroE,KANmBA,MAAK6J,KAAM+9D,KAAAA,MAC5B5nE,KAAK6J,KAAAA,aAAkB8lD,MAKhB9lD,EAAAA,UAAM/G,MAEb,WAASskE,KACPx7D,MAASxG,EAAIpF,KAAOA,MAAK6J,EAAAA,KAAM/G,EAAAA,EAAQsC,KACrCpF,EAAAA,EAAK6J,KAAAA,MAAUzE,IAAIyqB,EAAAA,aAKnBy4C,KACJd,wBACexnE,KAAKqnE,QAAWgB,KAAS9sD,UAC3B1R,EAAM/G,KAAAA,aAAwB6pB,KACjC3sB,MAAKgjB,EAAAA,KAAAA,iBAAwB4wC,EAAAA,UAG/B5zD,OAAK6J,SAAWvH,EAAIwI,GAAA68D,IAAAA,EAAAA,KAAWQ,YAEtBx7C,EAAAA,mBAAwB7pB,EAAAA,KAAU9C,wBAGzCA,GAAK2sB,GAAAA,EAAAA,KACL27C,MACS18D,YAEP5L,KAAK4L,MAKP5L,UAAK6J,GAAMS,KAAKT,MAAI89D,OAAAA,EAAWQ,CAAAA,GAASC,KAAAA,MAMhD9lE,EAASiZ,IAAIvb,IAAKqnE,EAAAA,EAAO9rD,EAAI8sD,KAAS9sD,MAC3B1R,OAAM/G,IAAAA,KAAmB9C,MAAK2sB,IAAAA,GACjC3sB,OAAK6J,EAAAA,GAAM/G,IAAAA,EAAS9C,EAAAA,GAAK2sB,KAAQ3sB,MAAKub,EAAI,IAE5Cvb,IAAK6J,EAAAA,KAAMI,MAGXjK,EAAAA,EAAK2sB,IAAAA,KACL3sB,MAAK4L,OAQbd,EAAA9K,KAAmBA,QAAK6J,KAAM+9D,gBAEP5nE,QAAW8C,YACb9C,KACjBA,MAAK6J,KAAMsmD,IAAAA,EAAAA,WACNxjC,EAAAA,IAAQrc,KAAK0B,MAAIhS,GAAK2sB,KAAQ47C,MACnCvoE,QAAK4L,KAAQ0E,MAAStQ,KAAK4L,EAAAA,EAAAA,GAAQ28D,KACnCvoE,QAAK2jE,IAASrzD,KAAK0B,MAAIhS,GAAK2jE,KAAAA,SAE9B3jE,KAAK6J,MAAM+9D,KAAAA,IAAYjY,EAIzB3vD,WAAcmS,EAAAA,UAAYg2D,IAC1BnoE,EAAAA,KAASsQ,MAAK6B,EAAAA,EAAInS,IAAKub,KAAa1R,MAElC7J,OAAKub,EAAK+sD,KAEZtoE,QAAK0jE,KAASpzD,MAAStQ,OAAK0jE,KAAQyE,MAEpCnoE,KAAK06B,EAAAA,EAAAA,KAAY7wB,MAGnB7J,OAAKkyD,KAAAA,QAEDlyD,KAAKwoE,UAAAA,GAAAA,EAAAA,KACPxoE,MAAKyoE,UAAiBJ,CAGlBroE,IAAAA,EAAKonE,KAAQe,MACfrlE,OAAoB9C,EAAAA,EAAAA,IAAK6J,KAAM/G,MAAQsC,UAChCyE,GAAAA,KAAUzE,MAAIyqB,KAAOs4C,IAKhCnoE,KAAKonE,MAAQe,EACbnoE,GAAAA,KAAKqnE,MAGP/2D,KAAA0B,IAAAhS,KAAA4L,MAAApI,EAAY,GAAAxD,KAAA2jE,OAAArzD,KAAA0B,IAAAhS,KAAA2jE,OAAZngE,EAAA,IAAAxD,KACE6J,MAAA+9D,UAAYjB,EAAAA,KAAAA,EAAAA,KAAmB3mE,IAAKgjB,KAAAA,EAAAA,EAAAA,GAAAA,KAAgBrM,EAAAA,KAAQi9C,IAAAA,KAAAA,EAAAA,qCAGtDzhD,IAAAnS,KAAAyoE,OAAAA,EAAR,GAAAzoE,KAAgBmoE,UACLf,EAAAA,GAAAA,KAAUe,aAKAf,EACjBpnE,EAAAA,KAAK0oE,mBAEL1oE,KAAK2oE,QAAAA,EAAAA,GAAeR,KAASE,MAIzB/lE,GAAA,IAAAqT,EAAA+yD,EAAAA,EAAAA,KAAAA,MAAR5lE,OAAsBqlE,IAAiBE,KAC/BO,MAAqB3tD,IAAA4tD,GAAAA,OAAAA,EAAAA,GAAAA,KAAAA,MAAAA,EAA6B7oE,KAAK6J,MAAO7J,GAAAA,OAAYmoE,eAAsBnoE,EAAAA,UAAaygE,mBAAY5pC,CAAAA,IAAAA,WAC3H+xC,OAAS9lE,KACX6jE,iBAAwBmC,KAAAA,gBAAAA,QAAiCj/D,aACzDk/D,YAAAA,EAAAA,cAAAA,IAA2B/oE,EAAK6J,UAAuBm/D,QACvDhpE,SAAKipE,EAAAA,GAAAA,KAAAA,QAAAA,IAA4Bd,EAASE,KAAyBa,MAAAA,KAAAA,cAI/D5mE,EAAA2mE,GAAAA,KAAAA,eAAAA,EAAAA,KAARlB,EAAA1+D,UAAsE6/D,cACnDlpE,SAAKygE,EAAAA,GAAY,IAAA5pC,GAAAA,EAAAA,EAAAA,8BAI5B72B,KAAK2sB,MACH3sB,KAASonE,MACXpnE,EAAKub,KAEHvb,MAAK6J,KAAM/G,EAAAA,KAASulE,YAEX/9D,EAAAA,oBAAoB69D,GAASC,EAAAA,OAGtCpoE,EAAK4L,CAAAA,IAAAA,GAAAA,EAAU5L,EAAK2sB,6BAGnBA,KAGT3sB,MAAK2jE,MAASrzD,EAAAA,4BAGRtQ,KAAA6J,MAAA8+D,EAAAA,QAAAA,KAARM,4BACwBxI,EAAAA,EAAAA,EAAAA,gBAAY5pC,EAAAA,UAGjBoyC,4BAGgB,SAAW1tD,EAE1CzQ,EAAAyE,GAAIkuD,IAAWz9D,IAAK6J,EAAAA,KAAMoR,YACrBwiD,EAAaA,mBAA+BzY,EAAAA,EAAAA,KAAAA,GAAAA,IAAsBmjB,KAMvEx7C,OADMw8C,KAA8B1L,EAC7BA,GAAS3+B,KAAAA,IAAavjB,KAC3BkiD,MAAWz9D,OAAWib,GAAAA,KAAMM,MACflR,KAAQozD,IAKvB6J,EAAAK,WAAuBh7C,EAAAA,MAAapR,KACpC3P,QAAsBw9D,KAAgBD,OAAarmE,KAInD8I,QAAoCu9D,KAAarmE,SAAYkiD,KAAAA,OAAAA,KACvDqkB,IAAkBrpE,KAAAspE,OAAAA,EAAAA,IAAAA,EAAAA,UAAAA,eAAkDlC,SACvDiC,EAAgBvmE,GAAAA,IAASqmE,IAAarmE,EAAAA,KAEtC29D,YAAV9zC,EAAAA,mBAA+B9iB,EAAM/G,GAAAA,EAAAA,EAASmM,EAEtCqB,KAAK0B,MAAOhS,OAASA,EAAAA,GAAK6J,EAAAA,IAAM+9D,CAAAA,IAAAA,EAAAA,KAAY2B,MAEvCv3D,IAAI/C,GAAGjP,MAAK6J,IAAM/G,EAAAA,WAAc+G,EAAAA,oBAItDvH,GAAA,CAAMknE,IAAyB,IAClB9jE,EAAGN,CAAImkE,GAAYnkE,EAAAA,WACdpF,EAAK42B,GAAAA,EAAAA,KAAAA,MAAaC,MAAAA,GAAAA,EAAAA,QAAmBrzB,GACrDgmE,IAASl/D,EAAKm/D,KAEH3mE,MAAAA,KACX4mE,EAASp/D,KAAK3E,GAGZuC,GAAAA,EAAOqT,EAAI4tD,EAAarmE,QACxB0mE,CAAAA,IAAAA,EAAAA,EAAQ9jE,EAAAA,EAEVikE,OAA0B7mE,GAAAA,mBAEP0mE,GAAAA,EAGrBI,EAAIC,gCAIQR,EADVQ,KAKFzC,MAFI0C,GAAeX,EAAarmE,EAAAA,OAAsB4C,EAClDqkE,OACmBnkE,EAAG,IACxB5F,KAAoBsQ,OAASy5D,KAQ7BxuD,IAPA4tD,KAA4Ba,MAAAA,OAAcb,EAAaW,KAAwBG,IAAuBA,EAAaA,KAAa1uD,EAEhHvb,KADhBkqE,MAGEA,UAGa/iD,GAAA7W,KADL25D,IAERH,EAAAA,KACMK,MAAoB75D,OAAuBtQ,KACjD+pE,MAASK,UAAAA,GAAAA,IAAAA,IAAAA,EAAAA,GAAAA,EAA4BjB,EAAcgB,EAAmBnqE,EAAAA,IAAKonE,CAAAA,IAAAA,EAK/EpnE,KAASoF,aAAwBtC,EAAQsC,mBAErBilE,GAAAA,EAAQhB,KAAoBjB,GAMhDhhD,EAAAtkB,OADIwnE,IAAmCC,EAChCD,KAAwB,CAAApiE,MACzBlI,EAAAA,EAAK2sB,OACH3sB,EAAAA,SACFA,IAAAA,GAAKub,EACLvb,QAAK6J,EAAAA,KAAMI,MAEXjK,EAAAA,GAAK2sB,IAAAA,EACL3sB,EAAAA,OAAK4L,EAAAA,EAAAA,EAIH5L,GAAAA,IAAK2sB,IAAQrc,EAAAA,IAAK6B,IAAInS,IAAK6J,IAAAA,EAAM+9D,EAAAA,OAAW5nE,EAAAA,EAAAA,EAAK6J,EAAAA,GAAM/G,GAAAA,CAAAA,IAAS6mE,EAAiBtB,KAC/EroE,IAAK2sB,EAAAA,GAAAA,GAAU3sB,EAAAA,GAAK4L,cACjBA,EAAAA,GAAAA,EAEP5L,EAAAA,EAAK2sB,EAAAA,GAAAA,GAAAA,IAIX3sB,GAAK2jE,KAAAA,EAASrzD,IAAK6B,IAAInS,IAAAA,GAAK2jE,GAAAA,CAAAA,IAAqB3jE,IAAK2sB,EAAAA,KAAQ07C,IAAU/gD,EAM1E,GAAIoiD,GAAAA,EAAS5mE,EAAAA,6BAOS9C,EAAAA,EAAAA,KAAK6J,QAAM/G,IAAQsC,EACrColE,EAAclgE,EAAAA,EAAKtK,OAAK6J,IAAMoR,EAAAA,GAAI7V,GAEpCM,EAAAsO,GAAMy2D,QAA2B5gE,EAAAA,GAAM/G,GAAAA,IAEnC4nE,IAA0CjjD,EAC1CkjD,EAAoB/kE,EACpBglE,KAAwBD,GAC5B3qE,IAAK6J,KAAM/G,MAAAA,KAASwN,EAAK6B,EAAAA,GAAInS,KAAK6J,IAAM+9D,KAAAA,MAAW5nE,QAAK6J,KAAM/G,QAC9D9C,KAAyB4L,SACZ0E,KAAK6B,MAAInS,KAAK6J,IAAM+9D,KAAAA,MAAe6C,UAA+CzqE,KAAGoF,MAC5FwlE,OAA6B1iE,GAAQwiE,IAEvC1qE,KAAK2sB,QAAyB68C,KAAAA,OAAS1mE,KAAY+nE,QAAYA,KAC7D7qE,SAAW0f,KAAIta,OAAkBokE,KAASqB,IAE5CzlE,KAGA0lE,OACE1qD,EAAAA,KAAOsqD,MACPr6C,EAAAA,KAAqBm5C,GAAAA,EAAAA,OAAS1mE,EAAAA,CAAAA,IAGhCioE,EAAsBH,GAAapB,EAAAA,GAAAA,IAAS1mE,EAAAA,EAAAA,EAC5C8nE,KAA0BD,MAAAA,OAErB9gE,IAAAA,EAAM6V,KAAIta,KAAiBslE,MAKpCzvD,IAAyBjH,IACzB,IAAa82D,EAAahoE,KAAAA,MAAYsC,OACpC0lE,EAAa1lE,EAAAA,EAAGgb,EAAAA,EAAAA,EAAS4qD,EACzBhrE,GAAAA,KAAK6J,MAAMglD,OAAAA,KAAAA,IAAgB1yC,KAAkB/W,MACvB0lE,UAAgBz6C,KAExCxmB,MAAqByG,OAASqF,GAAyBg0D,IAAgB3pE,EAAAA,EAAK6J,IAAAA,EAAM+9D,KAAAA,IAAAA,KAC/D/9D,MACZA,UAAMilD,EAAAA,EAAAA,EAAAA,GAAAA,GAAc3yC,EAAAA,IAAKosD,GAoB7BzgD,GAAAA,EAAA5f,MAAA6S,EAAAA,EAAAA,CAAAA,IAAAA,IAAAA,EAAAA,EAAAA,SAAPjY,OAAA,EAAgCmoE,GAAwCC,EAAAA,IACtElrE,KAAA6J,MADsEqhE,IAAAA,IAAApjD,EAC/DpN,SACQ1a,IAAAA,IAAK6J,EAAAA,KAAUohE,CAAAA,MACvBjwD,EACH,EAAAqV,OAASvI,EAAI0hD,SAEf1mE,SAAkCkiD,GAAAA,EAAAA,SAAAA,OAA0BliD,EAAAA,IACnDsC,QAAWpF,KAMlB6J,MALSoR,IAAI7V,EAAGxC,EAAAuoE,MAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,OAGMlwD,EAAAA,GAAI7V,EAAG4O,IAAAo3D,EAAAA,GAAAA,OAAAA,EAAAA,KAAAA,MAAsBtoE,gBAG1CqZ,KAAY/W,EAGvB6lE,IAEFl/B,GAAArkB,EAAO1T,GAAYqc,OAad,IAAApI,EAAA3X,KAAA3E,IAAAA,EAAAA,EAAAA,EAAAA,KAAAA,MAAAA,WAAPsc,EAAA,GAAsDijD,KAA0ChsC,MAAAA,cAC9F/iB,KAAMnB,KAAOhb,EAAK6J,UAAUohE,yBAIhBhzB,SAA6BhZ,EAAUC,EAF1C3vB,GAAA,SAKJ,IAAA49C,IAAAA,GAAAA,GAAAA,GAAAA,CAAAA,IAAAA,EAAAA,KAAPtjD,MAAAoR,IAIE3Y,GAAA,IAHA8C,EAAI6T,MACOsC,EAEJtC,GAAQ,GAAKjZ,IAAK6J,IAAAA,EAAMoR,EAAAA,EAAIhC,mBAInC7T,EAAAtC,OAAkB9C,EAAAA,EAAK6J,EAAAA,IAAM/G,EAAAA,GAAAA,EAAU9C,IAAAA,GAAK6J,EAAAA,yBAC1CwhE,GAEFjmE,EAAA6V,IAAShC,GAAAA,EAAKmyD,sBAOTtoE,QAAA8oB,GAAAA,EAAAA,EAAP,MAAA,CAAAtpB,EAAqB8C,GAUnB9C,IATI8C,MAAAA,CAAAA,EACGpF,IAAK4hE,EAAAA,UACJ5hE,4BAGD4hE,SAIAx8D,EAAIpF,EAAAA,EAAAA,QAAKonE,IAAYpnE,IAAKgjB,EAAAA,GAAAA,IAAAA,EAAAA,KAAgBrM,MAAAA,IAAQ20D,GAAAA,OACvDtrE,EAAAA,EAAAA,kBAQG8K,EAAAyE,EAAAnK,GAAAy8D,IAAAA,EAAAA,UAAP1U,uBAEQntD,SAEEA,GAAK4hE,IAAAA,IAAOh/D,EAAAA,EAAMA,EAAIN,EAAAwI,EAC9B,GAAA9K,KAAO4C,MAAUwkE,IAAAA,GAAQpnE,WAAa8K,IAAQ,KAAQlI,EAOjD,EAAA5C,KAAA6J,MAAAs3D,QAAPnhE,KAAA6J,MAIEoR,IAHIrY,EAAAA,GAAAA,WACE5C,IAAK4C,MAEEg/D,CAAAA,MAAOh/D,EAAAA,KAAU5C,IAAKonE,EAAAA,UACnCx7C,cAAiBw7C,SAAaA,GAAAA,IAAYxkE,MAAYA,EAAAA,KAGjDg/D,KAAAt/D,KAAAqyB,EAAAA,KAAAA,SAAPryB,KAAAtC,KAAA4hE,KACQ2J,GAASjpE,EAAA,GAAIkpE,EAAAA,KAAOjwD,MA0B1BjZ,GAAAtC,KAzBAA,gBAAkBurE,QACXzjE,aAAc+B,KAAM4hE,KAAOnpE,IAAA,GAAAylE,EAAA13C,UACzBrV,SAEIA,SACF1R,GAAAA,IAAAA,MAGJxB,IAAAA,EAAAA,KAAS9H,IAAK6J,KAAM6hE,OAAAA,IAASppE,EAAA,IAAA,OACvB0Y,GAAAA,KAAcoF,MAAAA,KAChBpF,MAAQ5X,EAAMitB,EAAAA,EAAAA,EAAAA,GAAAA,EAGzBk7C,UAAOzjE,SAAc+B,SAAM8hE,GAAAA,IAAS,MAAAvoE,IAE9BmoE,EAAOvwD,KAAQ5X,IAAMgd,KAASmrD,OAAcnoE,IAAMgd,EAAAA,KAAciQ,QAClEk7C,OAAOjiE,GAAAA,KAIE0R,MAAaoF,KAAAA,MACfpF,EAAAA,EAAQ5X,EAAMitB,EAAAA,GAAAA,EAAAA,UAGlBvoB,UAAgB8jE,SAAUC,GAAA,IAAA/gE,EAAA9K,KAAMuP,EAAA,IAAKu8D,EAAAA,OAAAA,GAAAA,OAAcP,KAIpD72C,QAAApqB,KAAAwhE,GAAAA,EAAAA,SAAR9rE,KAAA6J,MACE7J,QAAK00B,SAAQza,GAAOja,EAAAA,MAAK00B,EAAAA,EAAAA,KAAQ9Z,GAAAA,EAAQ2wD,cAGpCh8D,EAAAzH,SAAA8Q,KAAP/O,MAAgBqhE,UAAoFa,SAC3FzpE,GAAI0pE,EAAqBhsE,MAAMkrE,EAAW1lB,QAAqCumB,EAE1F/wD,MAhlBaixD,EAAAA,YA8lBb18D,EAAAzH,SAAA9H,KAGE6J,MAAA8hE,UAKUO,SAFA5pE,GAAAiN,EAAA0/C,MAAA3sD,EAAA8d,OACA7Q,EAAA48D,KAAAA,EAAoBC,MAAQviE,EAAM/G,QAAAA,EAAAA,UAClCopE,EAAAlxD,KAAA1Y,EAAA8d,QACAisD,EAAAA,MALA/pE,EAAA+tB,YACA9gB,EAAAzH,SAAAwkE,EAAAA,WACArd,WAAAA,OACAkd,EAAAA,cACAD,OAAAA,GAAAA,EAAAA,UACAG,cAAAA,SAECpd,GAAAA,KAAAA,QACPjvD,OAAKivD,KAAAA,QAEHjvD,QAAKmsE,GAAAA,IAAYnsE,EAAKosE,UAAQviE,SAAM/G,SACjCqpE,EAAAA,EAAAA,EAAAA,EAAAA,GAAYnsE,OAAKosE,IAAAA,EAAQviE,KAAM/G,EAAAA,EAAAA,EAAAA,EAEtC9C,IAAAA,EA/lBMknE,GA+lBDqF,EAAAA,OAAWvsE,EAAKivD,IAAAA,EAAAA,oBAGhBud,EAAAlqE,EAAAuW,EAAAA,EAAAA,EAAAA,EAAPlD,QAAA,IACEpG,IAAAA,EAAOvP,QAAAA,IAAKusE,IAAWvsE,EAAAA,EAAKmsE,MAAAA,aAGvB,IAAArzD,IAAP7H,EAAA,QAAA,IACE0E,IAAc3V,EAAAA,GAAKosE,KAAAA,QAAQjf,EAAAA,KAAAA,WAAuBntD,EAAAA,KAAKusE,YAE7CtzD,EAAAA,KAAQjZ,UAAKivD,EAAAA,KAAcjvD,eAAKksE,EAAAA,KAClCjzD,aAAag2C,EAAAA,KAAAA,YAAmBid,IAAAA,KAAAA,YAEvBlsE,GAAKmsE,KAAAA,UAAiBE,KAAAA,QACrCrzD,MAAMqyD,SAAYc,KAAAA,UAAiBE,KAAAA,QAG/BpzD,MAAQ3I,QAAK0B,KAAUiH,SACvBoyD,KAAO/6D,YAAe+6D,OAAMrrE,EAAKosE,UAAQviE,QAAM/G,WACrD,OACSsC,KAAU6T,SAAkBoyD,KAAAA,WACxBrrE,EAAKosE,UAAQzgE,KAAAA,WAAAA,IAAAA,EAAAA,KAA+B3L,QAAKssE,uBAEzDC,KAAAA,UAAwBjqE,EACpB0W,MAAKhZ,KAAEkZ,YAzCpBlZ,KAAagsE,iBAAAA,EAAAA,4GClnBbhsE,KAAAqsE,cACA/pE,EAAA2W,MACA3I,KACA0B,IAAA1P,EAAA2W,MA4Ba4d,GAAAA,EAAAA,KAAAA,KAAAA,IAAoBhjB,EAAAA,KAAOC,KAAOs4D,QAAI3mC,MAAAA,QAiBnD,IAAA,IAAA36B,EAAA,GAAAyE,EAAAjN,EAME2W,MAAA1J,GAAAjN,EAAYqW,OAA+CmmB,EAAAA,GAAA9+B,KAAA8+B,QAAAnzB,4BAJjD8gE,EAAAA,KACAH,YAAAI,OAAAA,KAIR1sE,SAAK82D,EAAQuU,KAAItU,EAAAA,CAAAA,MAAAA,EAxCH79C,QAyCdpO,IAAMy4B,ED2kBe0rB,GC3kBQ2X,EAAA/+B,qBAASm/B,GAAc,KAAGC,CAAAA,EAAAA,EAAAA,KAAAA,OAAgBvG,eAAiBiM,EAAAv0B,aAAAA,CAAAA,OAC3E,IAAOz/B,EAAQvT,WACrBilE,EAAAA,uBAEO1xD,EAsXlB,IA/WSi0D,EAAAC,EAAA,KAAAC,EAAA7xD,EAAAA,KAAP8xD,EAAAF,EAAA,KACEG,EAAAH,EAAM3zD,MAAe49C,EAAAA,kBACAjjD,OACrBC,OACE9T,IAAK82D,EAAAA,eACM,IAAV59C,EACGlZ,oBACOitE,EAAA3qE,EAAA+9D,EAAAA,QAAAA,IAAAA,IAAAA,GAAAA,GAA0BrgE,KACrCkZ,UACW3J,EAAV2J,KACGlZ,UAAKysE,GAAUrsD,KAAOquC,eAAgBge,GAAAA,KAAUrsD,MAAOtd,IAASi0D,YASjE,EAAAz0D,GAAA,IAAAod,IAAPta,EAAA0F,GAAAiiE,EAAW3sD,SACTpgB,aAA+B,CAAWkE,EAAM4oE,EAAAI,eAAAA,EAAAA,gBACtC9B,EAAAA,iBAAsBtoE,EAAAA,EAASmM,EACvCjP,IAAAA,EAAKysE,KAAAA,QAAmBvoE,EAAMkB,GAC9BpF,KAAK82D,OAAM12C,EAAoB,OAAwB6sD,EAAA5jE,UAAkC8hE,IAAAA,SAAAA,GAAAA,IAAAA,EAA0BnrE,KAEnHA,MAAK82D,EAAAA,EA7EO,GA6ED12C,EAAoB,QAAsBgrD,EAAAA,MAAAA,CAAAA,KAAAA,MAAsB3c,EAAAA,EAAAA,GAAAA,QAAiBvqD,EAAMlE,KAAAmrE,UAAAA,GAAAA,GAAAA,EAAAA,EAA0B9K,qBAQzHtzC,GAAAA,GAAPjiB,GAAA,GAAA,QACEA,EAAA9K,KAAOA,UAAWogB,GAAoBquC,WAIjCzuD,KAAAysE,UAAA/gB,GAAP5oD,OAAgBsd,GACd7Q,IAAA09D,EAAA5jE,UAAOrJ,IAAAA,SAAWogB,EAAoBtV,GAAA9K,KAIjC82D,MAAA,EAAA37C,EAAAA,GAAAA,EAAP2xD,EAAAI,sBACcpW,EAAAA,EAAAA,sBAIPvR,OAAP,GAAAvlD,KAAaogB,UACJpgB,GAAAA,EAAK82D,GAAAA,KAAM12C,MAQb,EAAA9d,EAAA,GAAA,QAAAu+D,EAAAA,EAAAA,EAAAA,wBACiD,IAA/C7gE,KAAK82D,MA9GE,EA8GI12C,EAAoB,GAAAtV,EAQjCgiE,EAAA1B,sBAAP3c,WAAoBruC,GAClBtV,EAAMoO,EAAUlZ,wBAChB,IAAcitE,EAAA5jE,UACAojE,SAAAA,SAAiBhe,GAAAA,OAAWzuD,KAAKysE,MAAUrsD,EAAAA,EAAOtd,IAAAA,IAASmqE,EAExD5jE,UAIZqiD,SAAA,SAAA1H,GAAAA,OAAP,SACEhkD,KAAsD82D,MAAA,EAA/C92D,EAAAA,IAAK82D,EAAAA,UAA0B37C,MAIjC,SAAA6qC,GAAAA,OAAPhmD,KAAA82D,MACE,EAAAx0D,EAAM4W,IAAUlZ,EAAK82D,UAA0BvR,MAC/C,SAAcjjD,GAAV4W,OACUuzD,KAAAA,MAAUrsD,EAEV9d,EAAA,IAAA2qE,EAAV/zD,UACKmnD,WAAAA,SAA8B/9D,GAAA,OAGhC,QAOFtC,KAAA82D,MAAA5tB,EAAAA,EAAAA,IAAP+jC,EAAA5jE,UACE8uC,aAUA,SATKj/B,GAAAA,IAAUlZ,EAAK82D,KAAAA,MACpBvzB,EAAKxzB,EAAAA,GAAK/P,OAAK82D,QACfvzB,EAAKzzB,KAAK9P,UAAwBsC,GACfmsD,WAAVv1C,KAAAA,UACF4qC,GAAAA,OAAe9jD,GAAAA,QAAKysE,GAAUrsD,EAAAA,UAEvB4jC,WACPsc,SAAWtgE,GAAAA,OAAK0sE,QAAAA,KAAetsD,MAQjC,EAAA9d,EAAA,IAAA2qE,EAAA5C,UAAPrkB,UAA8BziB,SACTjhC,GAAV4W,IAAAA,EAAAA,KACPlZ,MAAKysE,EAAAA,EAAAA,GAAAA,OAAwB3oB,QAAAA,EAAAA,KAEjB2oB,UAAL38D,GAAAA,QACF48D,GAAAA,EAAAA,EAAAA,qBAA6BpM,QAE/BxJ,GAAAA,IAAM12C,EAAoB/W,UAAqB6P,SAC/C49C,SAA0Bx0D,EAAWihC,GAAKxzB,IAC/C/P,EAAAA,EAAK82D,EAAAA,OAA0BhsD,EAAAoO,QAQ1BlZ,KAAA82D,MAAAkJ,EAAAA,GAAAA,EAAAA,GAAAA,KAAAA,MAAPzwD,EAAA,GAAAzE,EAAAgF,GAA4BsQ,KAAiDrQ,MAAwBo9D,EAC1F,GAAA,QAALr9D,EACF9P,UAAK0sE,EAAAA,aAAwBS,KAE/BntE,UAAWogB,IAAoCgtD,UAC/CptE,EAAAA,KAAK82D,EA3LSwJ,SA4LdtgE,KAAK82D,eAAqChnD,IASrChF,GAAAmiE,EAAA5jE,UAAAs3D,QAAAA,SAAPr+D,EAAAwI,GAA0BsV,QACxBtV,EAAIoO,UAAe49C,KAAM12C,UACX9d,GAAV4W,EAEFlZ,cAAeogB,UAAUigD,EAAAA,KAAAA,KAAAA,eAEX/9D,GAAAwI,EAAVoO,UAIGuzD,KAAAA,MAAUrsD,EAAS9d,EAAA,GAAA+9D,EAAAA,QAAAA,KAAAA,MAA8B,EAAA/9D,EAAA,GAAV4W,EAAAA,GAAoClZ,KAAAqgE,MAAAA,EAAAA,EAAAA,GAAAA,EAAAA,IAAoB+M,EACpGl0D,UAAW8mD,qBAKiB,SAEzBlJ,EAAAA,EAAAA,EAvNO1xD,EAuNDgb,EAAoBzK,GAAgBuD,UAI5CjI,IAAAjR,KAAAwgE,eAAPl+D,GAAmB6K,GAAwBkgE,KAQzCvW,MAPA3pD,EAAOnN,EAAAA,GAAK8C,EAAAA,GAAAA,GAG0B9C,KAA3BA,MAAK+sB,EAAAA,EAAAA,GAAS5f,EAAMnN,KAC7BA,MAAKggE,EAAAA,EAAAA,GAAAA,GAAAA,EAAAA,UAA2BW,mBAAkB,SAAQr+D,EAAAwI,GAAGmoD,IAAAA,EAAAA,KAAS6D,MAAEhnD,EAAAA,EAAM,GAAGmjD,QAAAA,EAAAA,KAAAA,UAAWqN,KAAAA,EAAgBsM,EAAAlH,qBAGjG5iE,IAAAA,QAEXyM,GADAvP,KAAaysE,UAAI5kC,IAAAA,EACRziC,EAAIpF,qBAAgC,QAC3CA,IAAAA,EAAKqqE,EAAAA,qBAA0BnhC,GAAe9jC,IAAGm+B,QAEtCh0B,GAAGnK,SACdpF,EAAKqqE,QAALrqE,EAAKqqE,KAAiBgD,MAAAA,EAGxB/qE,EAAA,GAAS8C,IAASA,EAAIpF,UAAK8C,YACpBunE,SAAWgD,EAKmBviE,EAAAyE,EAAnCvP,GAAAA,IAAK+sB,GAAAA,KAAS/sB,SAAK8C,IAAS9C,KAC9BA,SAAKggE,EAAAA,IAAAA,KAAAA,qBAAyC19D,EAAG2wD,EAAAA,EAAAA,GAAAA,MAAS7tD,OAAT6tD,EAAiB7tD,EAAG6tD,KAAAA,GAAAA,MAAS7tD,OAAT6tD,EAAiB7tD,EAAG6tD,KAAAA,GAAAA,MAAS7tD,OAAT6tD,EAAWqN,EAAAA,WAAgBoF,IAAAA,EAAAA,eAIjH56D,EAAA9K,KAAAmiE,OAAAA,EAAAA,CAAP,IAAA,IAAAlxD,EAAmB9D,IAAwBkgE,EAAyBpa,SAC3DjzD,EAAAA,KAAK8C,OACJ9C,EAAAA,EAAK8C,EAAAA,GAAAA,IAAcqC,EAEzBnF,KADAqqE,QAAiB/nE,EAAAulC,EAAAA,EAAAA,KACRziC,SAAWpF,EAAK8C,EAAAA,IAAAA,IAAemO,EAAAA,EAAK7L,EAC3CpF,IAAKqqE,EAAAA,KAAAA,QAAiBrqE,EAAKkpC,EAAAA,QAAS/7B,IAAU/H,EAAGm+B,EAAAA,EAEnDvjC,KAAaA,SAAK8C,EAAAA,KAAgB9C,QAAK8C,EAAAA,GAAAA,IACrC9C,KAAKqqE,SAAWgD,KAAAA,OAGTjoE,IAASA,KAAIpF,qBACfqqE,KAAQjlE,OAOb+H,EAAkC,EAAA,GAA3BnN,MAAK+sB,OAAAA,EAAe3nB,EAAA2K,KAC7B/P,GAAKggE,MAAAA,OAAAA,EAAAA,EAAAA,KAA2B,GAAM,MAAG/M,OAAAA,EAAAA,EAASqN,WAAWrN,IAAAA,EAAAA,gBAAiBga,EAAA5jE,UAAG4pD,YAAWqN,SAAYh+D,EAAIwI,EAAA46D,EAAAA,GAAAA,GAAAA,GAAAA,KAEnF5iE,OAAvB9C,EAAK+sB,KAAAA,OAAwB/sB,EAAAA,CAAAA,IAAK6gE,IAAAA,EAAAA,IAAW1zD,EAAAA,SAC1C6yD,EAAAA,EAAAA,EAAAA,KAAAA,OAAqB7yD,EAAKrC,IAAG3F,EAAG8tD,KAAAA,QAAS3wD,EAAT2wD,EAAWljD,KAAMm5B,SAAG+pB,EAAAA,EAAAA,EAAShiD,IAAEnB,IAAAA,EAAM9P,KAAGizD,OAAAA,EAAAA,EAASjzD,KAAEsgE,SAAYn7D,EAAAnF,KAAI0lE,QAAAA,EAAAA,QAIrG,IAAAvgE,EAAA7C,EAAA6C,EAAA68D,KAAAA,SAAP78D,EAAAnF,KAAoBkI,QAAqD+qD,EAUvE1jD,GARIrH,GAAsC,IAA7BlI,KAAK+sB,SAAS7kB,EAAQ,IACjClI,KAAKggE,qBAAqB93D,EAAQ,EAAG,EAAG,GAAG+qD,MAAAA,OAAAA,EAAAA,EAAWljD,KAAM,GAAGkjD,MAAAA,OAAAA,EAAAA,EAAWnjD,KAAM,GAAGmjD,MAAAA,OAAAA,EAAAA,EAAWqN,WAAY,IAAI0M,EAAAtH,eAG5Gv9D,IAAMnI,KAAK8C,SAAqCR,IAA3BtC,KAAK+sB,WAAezqB,IAC3CtC,KAAKggE,qBAA0B19D,EAAG,EAAG2wD,GAAAA,MAAAA,OAAAA,EAAWljD,EAAAA,KAASkjD,GAAAA,MAAAA,OAAAA,EAAWnjD,EAAAA,KAASmjD,GAAAA,MAAAA,OAAAA,EAAWqN,EAAAA,WAAY,IAAIoF,EAAAA,gBAG3Fv9D,EAAQD,UAAapF,aAC7BunE,SAAiBgD,EAAAA,EAInB99D,EAAAnK,GAAA,IAAA9C,GAAAutB,IAAAA,KAAP9C,SAA4BsgD,EAC1B,IAAI10D,KAAS3Y,qBAGG8C,EAAAA,EAAAA,EAAAA,GACd,MAAasC,OAAA,EAAI2xD,EAAAA,KAtSL,GAsSiBp+C,MACpB7V,OAAAA,EAvSGsC,EAwSNuT,KAAmB3Y,GAAK82D,MAAMh0D,OAAAA,EAC3B4c,EAAAA,WAASo3C,IAAMM,EAAAA,eAEf13C,EAAAA,KAAI1f,QAAK82D,IAGlB92D,KAAK82D,SACAhsD,EAAA,IAAQ9K,KAAK8C,qBACXunE,EAAAA,EAAAA,GAAQjlE,MAAGioE,OAAAA,EAGRjoE,EACFqQ,KAAO,GAAIshD,MAAAA,OAAAA,EAAYp+C,EACxB+G,KAAI1f,GAAK82D,MAAMM,OAAAA,EAAShyD,EArTnBk7D,WAsTLxJ,IAAAA,EAAQrhD,eAEO63D,EAAAA,GAAKttE,EAAAA,KAAKysE,QAAAA,KACrBrnE,QAAgBtC,IAAAA,IAAQsC,EAAAA,UACnB8L,OAASo8D,SACjBnqE,EAAAA,GAAOwV,GAAAA,IAAAA,KACF3Y,OAAKysE,CAAAA,GAAUtpE,EAAAA,KAAAA,OAIrB2zD,CAAAA,IAAAA,EAAQ,IAAIC,YAAY,EAC7B/2D,GAAAA,KAAKysE,SAAY,EAGrBzsE,EAAAA,KAAK8C,MAAS6V,OAITpJ,EAAAmQ,IAAA1f,KAAAqkE,MAAPjN,SACEp3D,EAAAA,EAAKysE,IAAAA,EAAAA,IAAYzsE,KACjBA,QAAK0sE,KAAAA,MAAiBn9D,EACtB,IAAK,IAAInK,EAAIpF,KAAOA,OAAK8C,EAAAA,IAAUsC,EACjCpF,KAAKqqE,QAAQjlE,EAAGioE,QAKb,GAAA/qE,EAAA,EAAAirE,EAAAA,IAAAA,YAASvyD,EAAAA,IASd0E,IAAK1f,KAAM0xB,MARF5uB,SAAWkY,EAAKlY,EAAAA,IAAAA,KACvB9C,MAAK82D,EAAQ,IAAIC,EAAAA,OAAAA,KAAiBD,KAAAA,WAG7BA,IAAMp3C,EAAI1E,EAAK87C,EAAAA,EAAAA,OAEjBh0D,IAAAA,CAAAA,IAAcA,EAAAA,SACnB9C,EAAKysE,GAAAA,IAAAA,GAAYnqE,UACKmqE,KACpBzsE,UAAKysE,SAAqBA,KAAAA,MAAU/6C,IAGtCqlC,YADA/2D,GAAAA,KAAK0sE,UAAAA,GAAiB1sE,KACA0sE,OAAAA,IAAAA,EACpB1sE,UAAK0sE,KAAAA,SAAqB1xD,GAAK0xD,KAAAA,UAAeh7C,GAEhD1xB,KAAK8+B,eAAiBA,GAAAA,IAIjB,IAAAh0B,EAAA,EAAAA,EAAA9K,KAAAywD,SAAP3lD,EAAA9K,KACEqqE,QAAoB1C,EAAWrlE,IAG/B2qE,EAAK5jE,UAFLogE,SAAgB,SAAI1S,GAAAA,IAAY/2D,IAAK82D,KAAAA,KAC7Bh0D,SAAS9C,EAAK8C,OACL9C,KAAKysE,MAAAA,IACpBhD,YAAkB/3C,EAAM1xB,OAAKysE,KAAAA,MAE/B/sD,IAAKpd,EAAAw0D,OAAY92D,KAAK0sE,OAAAA,EAAAA,OACpBjD,KAAQiD,UAAAA,GAAeh7C,EAAM1xB,UAAK0sE,KAAAA,UAGpC5hE,GAAAxI,EADAmnE,UAAQ3qC,GAAY9+B,IAAK8+B,IAAAA,KAClB2qC,KAGFiD,eAAA1nB,GAAAA,EAAAA,eAAPhlD,KACE0sE,eAAkB5pE,GAAAA,EAAS4pE,eACuB5hE,GAAA9K,KAA3CA,UArXOsC,EAqXI8C,WACd6nE,EAAO7nE,UAAU0xD,MAAM1xD,WAG3B,IAAA0F,EAAO,IAGFmiE,EAAA,GAAA,IAAA,IAAAjD,KAAAA,EAAAA,MAAP,IAAAjT,YAAuFyW,KACrF1W,OAAoBA,EAAAA,OAElB92D,KAAK8C,OAAoB9C,KAAWysE,UAC7B3hE,EAAA2hE,UAA0BrnE,GAAAA,KAC7BpF,UAAYkqE,GAAU3mC,IAAoBn+B,IAjYlCmK,KAiYyDg0B,KAAoBn+B,eAI/DtC,EAAQygC,eArYtBh0B,GAsYqBnK,KAC7BpF,eAAsBujC,GAAoBn+B,OAAc2kE,EAASxmC,UAMjEkqC,KAAkB55D,UAAgB44D,GAAAA,EAAAA,UAC/BrnE,iBAAmCA,WAC9B8L,IAAAA,IAASu8D,EAAgBroE,KAAItC,OAC9BinE,EACT/pE,GAAAA,IAAKysE,EAAAA,GAAAA,QAAyBvC,KAAeuC,MAAAA,EAAUtpE,EAAAA,GAAAA,OAKtDb,GAAAtC,KAAAi4C,MAAAA,EAAAA,EAAAA,IAAAA,IAAP,OAAyBizB,GAA4BjsC,EAAsBC,UAAlD8qC,cAAA,SAA4B/qC,EAAAA,EAAA1vB,EAAAnK,EAAA6L,GAAsB,IAAAiuB,EAAAA,EAAAA,MAAiBl/B,GAAK8C,EAAAA,IAC3FooE,IACFhsC,EAAS5uB,EAAAA,EAAAA,GAAK6B,EAAI+sB,IAAQl/B,IAAKglD,IAAAA,EAAAA,EAAAA,EAAAA,EAAAA,IAAAA,KAGjC8R,MADA,GAAavnD,EAAAN,GACKiwB,GAAQvpB,EACxB,GAAMuD,EAAUlZ,GAAAA,QA5ZJ,IA4ZsCiP,EAAA,EAC5Cy+D,EAAetoE,EAAA6J,IAAA,IACrB0B,EAAqB,EAAAxL,EAAA,EAAAA,IAA4BnF,KAAKysE,MAAAA,GAAAA,EAAUxtC,GAAY95B,GAAOwQ,EAAA,GAAA0qD,EAAAA,GAAAA,GAAAA,IAAAA,EAAAA,OAAoBqN,KAAMzoC,EAAAA,WAAAA,IAAAA,EAC7GhG,EAAAA,EAAa/lB,EAAWpW,OAE1BqC,IAAA,CAAA,IAEJO,EAlYAwL,SAAay2D,EAAAA,GAAAA,IAAAA,wFC/Cb78D,EAAAyE,QAAA,IAAAjN,IAAAA,GAAA,QAAA,IACM0W,IAAM9Q,EAAAA,QAAMqT,IACdhM,IAAAA,EAAMvP,KAAI4H,QAAMtF,IAAAiN,EAAAe,KAAA6B,IAAA5C,EAAAvP,KAA2BmI,qBAAqB,IAAA,IAAAwN,EAAA,GAAA7K,EAAAyE,GAAA,CAAA,IAAAN,EAA6B+J,KAAM9Q,MAAO,EAAA4C,EAAKkO,GAAM9Q,EAAAA,QAAO+G,EAE9H0G,GAAA,QAAqBqD,EAAM7Q,KAAQ6Q,UAAYuC,GAAMvC,GAAM7Q,EAAIvF,EAAIoW,+CCoMnElO,GAAI1F,GAAMyE,IAAM/G,EAAAA,OACd6S,GAAAs3D,EFjIMjtE,GEiIOoF,EAAG4/C,WAAAA,GAAAA,KAAAA,CAKlB2oB,EAAAC,KAAqB/jE,OAASg3D,eAAyD+M,EAAA,aAAvB7gD,CAAAA,OAAgB,IACf6gD,EAA7B/jE,oBAAsB,EAC1D+jE,EAAAljB,iOAnMF,CAAAmjB,EAAAC,cAAAC,EAAAzrE,EAAAwI,EAAAyE,GAAA,GAAAzE,IAAAxI,EAAAQ,OAAiHkrE,EAAyB5F,OAGxI9lE,EAAAwI,GAAM89D,mBAE6B,IAAGrtD,GAEpCjZ,EAAAwI,GAAI1F,WACiB6V,EAAM7V,IAC3B,IAAc05B,EAAAA,GAAAA,SAMdvvB,EADA,GAAM45D,EAA6B,IAAOluD,EAAAA,EAAIM,GACvCnW,SAAUtC,GAAU26D,OAAS3+B,GAAAA,EAAAA,EAClCqqC,EAAa7+D,EAAAA,OACFT,eAKTmkE,EAAmBzyD,aACHzY,CAAAA,OAAS,IAD7BgrE,EAUA1D,4BADa0D,EACNhE,+BAEqBmE,EAAuBlE,2BAIpCF,EAAeG,4BAAwE8D,EAEpG5D,kCAMe+D,EACbnE,EACAC,6BAKoCh9C,SAASo7C,EAAUr9D,EAAA1F,EAAA6L,EACrDk4D,GAAaU,IAAeG,IAAAA,EAAAA,GAAAA,EAAcb,EAAaU,EAAgBvnE,EAAAQ,OAAiBonE,EAAW/kE,IAAG,CAAA,IAEzF0kE,EAAgB1kE,EAAGklE,EAAAA,EAAAA,MAAkB7mE,GAAG4kE,GAM3De,EAAaU,UAAe7H,CAAAA,IAAAA,IAAsBmG,EAASC,CAAAA,EAI3DntD,IADA9V,IAAI+oE,EAAgB5rE,EACXQ,QAAiBA,EAASg8B,WACzB+qC,EAAwDv/D,KAAvC6+D,GAAazjE,EAAGs/C,EAAAA,MAAAA,GAAAA,GAAAA,GAAAA,GADE/zC,EAAAzN,EAEzC0qE,GAMAA,EAAgBprE,OACTwH,MAAS6+D,CAAAA,IAAarmE,IAASorE,EAAAA,EACxCtF,EAASt+D,EAAAA,EAAK4jE,EAAAA,GAGhB3yD,EAAK4tD,EAAarmE,EAAAA,EAAAA,EAAAA,EAASA,QAE7B,CAAA,IAQFskB,EAAA2mD,EAAApoE,EAAAuhB,EAAApc,GAAAkJ,EAAAoT,EAAAD,EAAA3X,EAAApK,EAAAS,EAAA0V,EAAAjL,KAAA6B,IAAA6B,EAAAxE,GAA4C3F,EAAkC++D,GAM5EoB,cAHImE,EAAoBjnD,GACA0hD,EAASuF,EAAAA,GAC7BC,IACSvoE,GAAGT,KAAUtC,IAAAA,IAAQsC,EAChC,IAAIipE,GAAsBjpE,KACxBgiB,IAAsBwhD,IAAWuF,EAGjCtkE,GAAM+kD,IAAAA,GAAAA,IAAAA,GAAAA,IAAgBzyC,EAAKvW,EACzBwa,GAAAA,SACAiQ,EAAAA,KAAQ69C,EAGV9oE,GAAK8oE,cAE0BC,EAAAA,EAAAA,GAAAA,EAE/BnF,EAAO1+D,IAAKlF,GAAAA,GAGhBO,EAAAC,EACEojE,GAAAA,QACAE,EAAAA,EAAAA,IAAAA,EAAAA,GAAckF,aAUlBvoE,EAAAT,EAAAuQ,GAAA,IAAA,IAAA0R,EAAA,EAAAC,EAAA3hB,EAAA7C,OAA6EwrE,EAG3EhnD,EAAA,IADAA,EAAMinD,GAA+B,IACxB5oE,EAAGP,GAAIkpE,oBACEzkE,IAAMoR,IAAc7V,EAAAA,IAI1C6J,EAAS7J,KAAOA,EAAImpE,EAAezrE,OAAQsC,GACzCyE,EAAM6V,KAAIta,IAAkBA,GAE9ByE,EAAM/G,OAASwrE,IAAUxrE,OAiB3BmM,GAAA6+D,EAAAhF,4BAAA,SAA+CK,EAA4BqF,GAAiBrG,IAS1F,IARA54D,EAAMk/D,GAA2BrpE,EAC3BspE,EAAcvF,EAAarzD,EAAAA,GAAIH,EAAA,EAAA1G,EAAA,EAACvJ,EAAGN,EAAAA,OAAM6J,IAA4Bk6D,GAAiBqF,IAAAA,EAAUG,CAAAA,IAAAA,EAAAA,IAAOvpE,GAAA9C,EAAAssD,gBAAcprD,KAIvHumE,CAAS3pD,MAETwuD,EAAiBj5D,EACdi5D,OACLzpE,IAAkBypE,GAAiBzG,EAEjCsG,EAAenkE,GAAAA,EAAKokE,EAAcE,IAClCxpE,QAEQ+iE,EACV79D,KAAMukE,GAA+C1F,MAAuBqF,CACxEzE,OACFA,EAAU8E,aAGwDl5D,IAA/CwzD,EAAa2F,2BAIlC,SAAgD3G,EAChDsG,GAAenkE,IAAKykE,IACpBH,EAAkBG,GAGpB3pE,EAAA,EAAAA,EAAOqpE,EAAAA,OAGTrpE,IAAAmK,EAAAjF,KAAAhI,EAAA2Y,IAAAnQ,EAAA1F,KAAA,+jBCtMA0F,EAAA+I,OAAAxK,UACA0vC,eAoBE7yC,KAAA4E,EAAAyE,KACmByT,EACA9L,GAFnBpM,EAAAyE,MAIEy/D,EAAAC,IAAA,iBAHiB,mBACAnkE,GAAAoM,OAAAA,EAAAA,MAAAA,IATXsyC,UAAAA,uBAAsCxmD,OAAAwU,GAAAA,0CAC9CjI,IAAAvP,KAAA26C,YAAWr4C,EAAA4sE,EAAA5sE,EAAAwI,GAAAxI,EAAA+G,UAAgB,OAA3ByB,EAAA+I,OAA0FinC,OAAO96C,IAAAA,EAAKwpD,UAAAA,EAAAA,UAAkBpmD,8CAcjH0mB,CAAAA,OAAP,IAAAqlD,EAAAC,eACOC,EAAU,IAAI15D,EAAAs2D,EAAAA,MAAOh9D,EAAMjP,EAAAA,MAAKgjB,EAAAA,SAAAA,YAAsB9L,EAAAA,EAAAA,GAAAA,IAC3DlX,EAAAA,EAAKqvE,KAAAA,OAAQpH,KAAAA,OAAAA,EAAAA,gBAIGn9D,EAAAmhE,EAAAA,eAAmBjpD,EAAAA,EAAAA,kBAAsB9L,EAAAA,SAAAA,IACzDlX,EAAKg6B,cAAgBh6B,EAAAA,QAAKqvE,EAAAA,OACrB7lB,EAAAA,EAAAA,GAAAA,OAAAA,eACHtvB,EAAAA,UAAmBm1C,mBACnBC,CAAAA,IAAgBtvE,WAGlBA,OAAK4rB,KAAAA,kBAMPxoB,OAAA89C,YAAW,EAAAC,kBAAXouB,EAAAlmE,UACEygB,MAAO9pB,6CAMTgjB,gBAAAhjB,KAAWkX,gBAAAlX,aAAXioE,mBACcjuC,KAAAA,KAAAA,qCAMdh6B,KAAAkX,gBAAWlX,KAAAg6B,cAAAh6B,aAAXA,KACEwpD,kBAAY6lB,+CAMPzM,KAAAA,OAAAA,KAAAA,iBACD5iE,OAAKg6B,eAAkBh6B,EAAKqvE,UAGhCrvE,MAAKqvE,CAAAA,IAAAA,WAAiBG,OACtBxvE,KAAKqvE,MAAQ9zD,YAASi0D,EAItBxvE,cAAU8S,IACV9S,OAAKg6B,eAAgBh6B,EAAKqvE,UAC1BrvE,SAAKwpD,CAAAA,IAAAA,WAAuB,OAC1BtvB,KAAAA,eACAo1C,YAAAA,EAAAA,cAAqBE,IAOlB37D,OAAA+D,eAAA+qD,EAAAA,UAAP,SACM3iE,CAAKg6B,IAAAA,WAAAA,OAAuBw1C,KAAAA,SAK3BA,YAAKvH,EAAAA,cACVjoE,IAAU4C,EAAI5C,UAAKqvE,qBACLrvE,WACdA,KAAKg6B,gBAAgBh6B,KAAKwvE,UACrBhmB,KAAAA,QAAAA,EAAAA,KAAkBrtC,KACrB+d,EAAAA,KAAAA,QAAmBs1C,EAAAA,KACnBF,KAAAA,EAAAA,KAAAA,KAAgBtvE,QAAKqvE,KASlBr1C,cAAAnK,KAAPw/C,QAAArvE,KAA+BqoE,kBAChBx4C,KAAgBw4C,CAAAA,aACnBx4C,KAAAA,QAOLy/C,eAAA1jD,KAAAA,SAAP2jD,EAAAlmE,UACErJ,kBAAa4rB,SACb5rB,GAAAA,KAAKwvE,gBAAmBpqE,KAhH5BoqE,OANAxvE,KAM+BoM,KAAAA,iBAAlBgjE,6VAqB4BpsD,0NC/BzCzT,KAAAzE,EAAA+I,OACAxK,UACA0vC,eAKA7yC,KAAA4E,EAAAyE,KAAAjN,EAAAiN,GAAAzE,EAAAyE,MAAAkgE,EAAAC,IAAA,SAAAptE,EAAAwI,GAAA,GAAA,6BAQSoO,EAAAA,MACA,IAAKwhC,UAEL,uBAA+BgrB,OAC/B56D,GAAAg5C,0CAVOkjB,IAAdhnE,KAAA26C,YACQg1B,EAAMC,EAAAttE,EAAIulC,GAEhBvlC,EAAA+G,UADIk7C,OAAAA,EAAAA,OACGorB,OASF7kE,IAAAyE,EAAAy0C,UAAAA,EAAP36C,UACE,IAAAkG,KAAsBsE,OAAf7T,eAGF6vE,EAAA,aAAA9iD,CAAAA,OAAP,IAAA8iD,EAAAhoC,cACS7nC,EAAKkZ,IAAAA,EAAW42D,EAAA,KAGlB7gE,EAAA6gE,EAAA,KAAA9rC,EAAAA,EAAAA,MAAPxgC,EAAA,SACEusE,YAAmBC,IAAfhwE,IAAKkZ,EAAAA,OACAlZ,GAAK8jD,EAAAA,MAAAA,KAEKztC,YAAfrW,KAAKkZ,OACApO,EAAAu1D,QAAAA,EAAAA,EAAAA,GAAAA,EAAAA,EAAAA,GAAmC,EAAAv1D,EAAAw1D,SAAVpnD,IAAAA,EAAAA,cAU7BpO,EAAAg5C,aAAP,GAAAh5C,EAAA,OACEmG,EAAA++D,EAAQhwE,GAAAA,EAAKgkD,aACThkD,SAAK8jD,GAAAA,IAAAA,EAAa2K,IAAAA,EAAAA,OAAWzuD,EAAK8jD,gBAAahhD,GAAAA,GAASktE,EACzC3mE,UAAfrJ,WAGC,WAAA,OAAAukD,QAAAA,KAAPrrC,SACElZ,EAAAA,UAAgBktE,SAAAA,WAAAA,OACXp9D,KACLoJ,SAEA,IAAIhV,EAAMmF,UAAA+hE,SAAAA,WAA+B,OAC5B,QAEmCprE,KAAvCkE,QAAMknE,KAAAA,aAAsBtoE,QACnC9C,KAAakE,SAAMknE,EAAAA,EAAAA,qBAAsB3c,QAGzCzuD,KAAIkZ,SAA0B,IAAA82D,EAAQ3mE,UACf67B,QAAAkmC,WAAAA,OAAsB3c,KAAAA,aAC7BuV,KAAUA,aACjB9qD,WAA6BlZ,KAAV8jD,aAA2BhhD,OAAqBoB,GAAM,QAAAinE,KAAAA,SAAAA,EAAAA,UAGnE5mB,gBAQfvkD,SAAKkZ,GAAUhV,KAAMknE,GAAAA,EAAAA,EAAAA,sBAAsB3c,KAAiBvqD,GAAM,EAAAinE,IAAAA,GAAAA,EAAAA,GAAAA,EAAAA,EAAAA,sBAG7DrnB,OAAAA,EAAAA,GAAe5/C,OAAMknE,GAAAA,IAAAA,EAAAA,EAAAA,sBACXtoE,OAAkC,CAAA,IAAAqoE,EAAAA,EAAAA,EAAAA,sBAI9C1c,WAAAhK,GAAAA,GAAAA,OAAPl1C,GAAAA,GAAA,MACE,CAAA,IAAOnK,EAACpF,EAAAA,EAAK+P,sBAAqB/P,WAAK+sB,GAAY/sB,OAAKklC,GAAAA,GAAAA,MA9E9BllC,KAAAylC,QAAAA,MAAjBoC,EAAAA,OAAAA,EAAAA,6TCRA/C,KAAAA,WAAgB9kC,KAChBiwE,YAAeD,ED6B1B,CC7B0B7qE,EAAasgC,eAAAX,EAAiB+C,SAE7CqlC,GAAAA,IAAAA,CAAAA,EAAAA,KAAuBr5D,OACvBu3D,eAAAA,EAAAA,aACAD,CAAAA,OAAAA,IAAAA,EAAwBhmC,qBACxBqgC,EAAAA,sBAOiB16D,EACjBm6B,qBACAn6B,EAAAstC,eAAiBttC,EAOjB41D,gBAAAz7B,EAAAA,eACAkiC,EAAAA,qBACAhiC,EAAAA,4kBCxBb51B,KAAAzE,EAAA+I,OAIAxK,UAAA0vC,eAYW/9B,KADTlQ,EAGEyE,KAAAjN,EAAAiN,GAAAzE,EAAAyE,qBAFOyL,EATDlQ,GAAAsqC,GAAco2B,mBACf0E,GAAAA,OAICC,EAAAA,MAAAA,IAAaz1B,UAAIljC,uBARCxU,OAM1B8H,GAAA,0CAAAyE,IAA0BvP,KAAA26C,iDAG1BG,OAAAhwC,IAAAyE,EAAAlG,UAAWyB,EAAAzB,UAAA,IAAAkG,YAAXqI,eAA8C5X,EAAAA,aAAgBoD,CAAAA,yCAQvD6L,EAAA,SAAA3F,YAAPwB,EAAAyE,GACMvP,IAAKkwE,EAAAA,EAAAA,KAAAA,OAGTlwE,KAAKkwE,OAAAA,EAAal1D,KAClBhb,EAAKgb,EAAAA,IAAQlQ,EAEb9K,UAAKmwE,EAAAA,YAAWh0D,EAChB/W,EAAA+qE,WAAM7mE,IAAOqM,EAAA6B,aAxBA44D,EAAAA,OAAUn/D,EA0B3BnG,EA9BAxI,GAAAuR,OAG4BzH,eAAfo/D,EAAAA,sGCGA1gE,EAAA2zD,UAAoD,YAKpD+D,CAAAA,IAAAA,WAAwC/D,OAYrDA,KAAAA,WACEr7D,OACK89C,YAEL,EAAKC,cAEA,IACAr2C,EACLzB,UACKC,QAEL,WACKtJ,KACAkwE,aAEAlwE,KACAkwE,YAEA,EACLlwE,KAAKgb,MACA,EACLhb,KACAmwE,WACKh0D,OAEL7Z,EAAK+G,UAELC,QACApD,KAAKlG,QACA8K,EACLslE,QACA,EAAAtlE,EDlCO,CCkCFulE,EAAA,KAQP5R,YACE6R,EAAK9E,OAOP/M,GAAAA,KAAAA,CAAAn8D,EAAAwI,KAAgBiW,OAOhB09C,eACO3zD,EAAA,aAEA,CAAA5G,OACL,IAAM4G,EACN03D,gBAEA13D,EAAA2zD,cACA,EACA3zD,EAAK2zD,SAQPA,GAAAA,EAAAA,gBACA3zD,EAAgB2zD,SAEdz2C,EAAAld,EAAA2zD,SACK,GAAA,CACL,IAAK,IACLt5D,EAAK,IACLsK,EAAK,IACLjM,EAAK,IACL2jB,EAAK,IACL7kB,EAAK,IAQPuD,EAAA44D,IAAAA,EAAAA,IACE94D,EAAA,IACAP,EAAA,IACAkb,EAAA,IACAuH,EAAA,IACAniB,EAAA,IACA2hB,EAAA,IACApW,EAAA,IACA0E,EAAA,IACAyR,EAAA,IAAKklB,EAQP,IAAAmyB,EAAAA,IACExvD,EAAA,IACAnE,EAAA,IACAlF,EAAA,IACAoO,EAAA,IACAwT,EAAA,IACA5kB,EAAA,IACA2Y,EAAA,IACAixB,EAAA,IACA,IAAK,IACL,IAAK,IAQPiyB,IAAAA,IAAA,IACE,KAAK3zD,EACL2zD,SACA92C,EAAA,CAAM,IACN,KAAK7c,EACL2zD,SACAz2C,OAAA,EACAld,EAAK2zD,SACA,GAAA,CAQP,IAAAA,IAAAA,IAAgB,IACT,IACL,KAAK,KACL,IAAK,IACL,IAAM,IACN,IAAK,IACL,IAAK,IACL,IACA,IAAK,KACL3zD,EAAK2zD,SACAl3C,EAAAzc,EAQP2zD,SAAAA,GAAA,CACA,IAAAA,IAAAA,KAAgB,IACT,IACL,IAAK,IACL,IAAM,IACN,IAAK,IACL,IAAK,IACL,IACA,IAAK,IACL,IAAK,KACL3zD,EAAK2zD,SACA32C,EAAA,CAQP,IAAA22C,IAAAA,IAAgB,IACT,IACL,IAAK,KACL,IAAK,IACL,IAAM,IACN,IACA,IAAK,IACL,IAAK,IACL,IAAK,KAQPA,EAAAA,SACAxxB,EAAAwxB,CAAAA,IAAAA,IAAA,IACE,IAAK,KACA,IACL,IAAM,IACN,IAAK,IACL,IAAK,IACL,IAAK,IACA,IACL,IAAK,IACL,IAAK,IACL,KAAK3zD,EAQP2zD,SAAAA,EAAA,CAAA,IACE,IAAK,IACL,IAAK,KACL,IACA,IAAA,IACA,IAAK,IACL,IAAK,IAEA,IACL,IAAK,IACL,KAAK3zD,EACL2zD,SACA5xB,EAAK,CAAA,IACL,IAAK,gBC1KP,KA3EiB7gB,gEAAAtE,EAAAsE,EAAAA,SAAE,GAAA,CAEJukD,IAAM,IAEN,IAAAC,IAAM,KAENC,IAAM,IAEN36C,IAAM,IAEN46C,IAAM,IAEN,IAAM,IAEN,IAAAC,IAAM,IAENC,IAAM,IAEN7T,IAAM,KAEN8T,EAAMpS,SAENxB,EAAM,CAAA,IAEN,IAAM,IAEN,IAAM,IAAA,IAENlnC,KAAM,IAENonC,IAAM,IAENE,IAAM,IAENyT,IAAM,IAENC,IAAM,KAENC,EAAAA,SAEAC,EAAMnmE,EAAA2zD,SAEA,GAEN,CAAA,IAAAyS,IAEA,IAAAC,IAAM,KAENC,IAAM,IAENC,IAAM,IAENC,IAAM,IAENC,IAAM,IAEN,IAAM,IAEN,IAAM,IAEN,IAAM,IAEN,KAAMzmE,EAAA2zD,SAEA,KAEN+S,CAAM,IAEN,IAAAC,IAAM,IAOJ,IAAA1T,IAAAA,KAAE,IAEJ2T,IAAM,IAENC,IAAM,IAENC,EAAAA,IAEA,IAAAC,IAAM,IAENtU,IAAM,IAENC,IAAM,IAEN,IAAM,IAEN,MAAM,KAEN,CAAAE,EAAAA,KAEA,IAAAoU,EAAM1sE,EAAAyO,OAENk+D,eAIAjnE,EAAAknE,aAEK,CAAA9tE,OAEL+tE,IAAMnnE,EAENizD,GAAAmU,EAAAA,QAAM,GAEA9sE,EAAA0F,EAENkhB,KAAAmmD,EAAMnmD,GAEN,KAAAomD,IAAM,KAENC,EAAM7B,IAEN,IAAA8B,EAAM7B,IAEN,IAAA8B,EAAKz8C,IAEL,IAAA08C,EAAM9B,IAEN,IAAA+B,EAAMC,IAEN,IAAAC,EAAMhC,IAEN,IAAAiC,EAAOhC,IAEP,IAAAiC,EAAM9V,GAAA,KAEN+V,EAAMjC,GAAA,KAENkC,EAAK9V,GAEL,KAAA+V,EAAMnW,GAEN,KAAKz3D,EAAA6tE,GAEL,KAAM7tE,EAAA2wB,kGC7IrBq7C,IAAA,IAAAhsE,EAAAisE,IAGM6B,IAEJ9tE,EAAIksE,GAAC,IAAKlsE,EAAAmsE,IACN,IAACnsE,EAAK6mB,IACV,IAAK7mB,EAAA+tE,GAAK,IACV/tE,EAAAguE,GAAK,IAAKhuE,EAAAiuE,GACV,IAAKjuE,EAAAkuE,GAAK,IACVluE,EAAIosE,GAAC,IAAKpsE,EAAAqsE,IACN,KAAMliE,EAAAzE,EAAAizD,KACLjzD,EAAAizD,GAAK,KACV2T,IAAK,IAAKniE,EAAAoiE,IACV,IAAKpiE,EAAKqiE,IAGV,IAAKriE,EAAAsiE,IAAM,IACXtiE,EAAAguD,IAAM,IAAKhuD,EAAAiuD,IACX,IAAMjuD,EAAKgkE,IAAA,IACXhkE,EAAMikE,IAAK,IAAAjkE,EACXmuD,IAAM,IAAKnuD,EAAAuiE,IACX,IAAKviE,EAACwiE,IAAK,IACXxiE,EAAKkkE,IAAC,IAAKlkE,EAAAyiE,IACL,IAAAziE,EAAKmkE,GAAA,IACXnkE,EAAM0iE,IAAA,IAAM1iE,EACZ2iE,IAAK,IAAC3iE,EAAKokE,IACX,IAAMpkE,EAAA4iE,IAAM,IAGd5iE,EAAA6iE,IAAA,IAAA7iE,EAAA8iE,IAAA,IAAA9iE,EAAA+iE,IAAA,IAAA/iE,EACEtC,GACA2mE,IAEAj+C,EAAAA,IAEA,IACE1xB,EAAAA,IAAM,IAGN+uB,EAAAA,IAEA7vB,IAAAA,EAAAA,KAAK4d,IAEY9T,EAAGwlB,IAAAA,IAAWljB,EAAAujE,IAAatgD,IAAAA,EAAAA,GAAS,IAAIjjB,EAAMtC,IAAGqlB,IAAAA,EAAAA,GAAc,IAAS4D,EAAAA,IAAAA,KAEzF,KACiB,CAAA29C,EAAAC,EAAAC,KAAAlgE,OAAA+D,eACTg8D,EACW,aAAS,CAET1vE,OAAG+nB,IAAM6nD,EAAAp+C,2BAGN,EAARvyB,IAEDA,EAAAA,EADLywE,MACW5nD,EAAGC,CAAAA,GAAM,CAAA,IAET,KAAGA,GAAM,CAAA,IAGN,KAAA,GAAA,CAAA,IAAA,KAAA,GAAA,CAAA,IAAXhf,KAEL0D,GAAOxN,CAAAA,IAAM,KAAG8oB,GAAAA,CAAM,IAAA,KAETD,GAAGC,CAAAA,IAAM,KAGN,GAAA,CAAA,IAAA,KAAA,GAAA,CAAA,IAAXhf,KAAG9J,GAERwN,CAAAA,IAAOxN,KAAM6oB,IAAGC,CAAAA,IAAM,KAETD,IAAGC,CAAAA,IAAM,KAG1B,IAAA,CACF,IAAA,KAEE,IAAOwG,CAAAA,IAAAA,KACL9hB,IAAOxN,CAAM,IAAA6oB,KACb,IAAA,CACK,IAAI/e,KAAGulB,IACZ7hB,CAAAA,IAAOxN,KAAM6oB,IAAGC,CAAM,IAAAD,KACtB,IAAA,CAAA,KAEK7oB,KAAM6oB,IAAGylD,CAAAA,IAChB,KACF,IAAK,CAEH,IAAIxkE,MAAGwlB,EAAAA,sBACiB,SAGjBtvB,EAAAA,EAAMoM,EAAAyc,GAAG6kD,IAChBlgE,EAAOqiB,CAAAA,KAAAA,EAASA,QAChB,EACF7vB,SAAK,GAEU8J,GAAGulB,EAAAA,SAAYvG,EAAAA,IAAMD,EAAG+J,OAAK/J,EAAG+J,IACtC/C,EAAAA,QACP,EAAA,IACF1wB,EAAA4zB,QAES/yB,EAAAA,GAAM,OAAG8oB,EACZhf,SAAGulB,KACErvB,EAAM,sBAER6vB,EAAAA,IAAAA,EAAS7vB,IAChB2H,EAAA1F,EACF4mB,GAAAC,IAEE,KAAOiK,EAAAA,GAAAA,IACL,KAEE89C,wBACoB1xE,EAAS0xE,IAAiB/kE,EAAA9L,IAIrCA,EAAAA,EAAAA,GAAQ8oB,IAAGA,KAAM7mB,EAAA4mB,GAAAC,IAC1Btb,KAAOxN,yBAA8Bb,EAAAa,IAGhCA,EAAAA,IAAM2H,EAAAkhB,EAAGC,GAAAA,IAAM,KAETD,EAAGC,GAAAA,IAAM,KAExB,wBAIE3pB,EAAAa,MAEE6wE,EACFrjE,IAAOxN,EAAMiC,EAAA4mB,GAAGC,IAAM,KAAA7mB,EAAS4uE,GAAY/nD,IAAK,MAIrC9oB,MAAQ6oB,KAAGC,EAAM,GAAA3pB,EAAAmwB,SACnBtvB,CAAM8L,EAAA+c,IAAGC,EAAAA,GAAO9gB,GAAQ,MAAM,GAAA7I,EAAAkwB,OAGhCrvB,CADEywE,EACIzwE,IAAA6oB,EAAGC,GAAMA,IAAA7mB,EAET4mB,GAAAA,IAAGC,MAElBhd,EAAA9L,IACFiC,EAAA4mB,GAAKylD,IAEH,MAAOv7C,KAAAA,EACL,GAAA5zB,EAEE0xE,SACW,CAAA/kE,EAAA+c,IAAGC,EAAMD,GAAAC,IAAS+nD,KAAiB,MAI3C7oE,EAASwF,IAAOxN,EAAAA,GAAQ6oB,GAAGC,EAAAA,QAAM,EAAA,MAC7B9oB,KAAM6oB,GAAGC,EAAAA,IAAM3pB,EAAAkwB,OAGjBrvB,EAAAA,GADEywE,IACI5nD,EAAGC,GAAAA,GAAM7mB,EAAA4mB,GAETA,GAAGC,EAAAA,QAAM,EAExB,MACF,KAEE,GAAIhf,EAAGipB,IAAAA,EAAAA,GACLjK,IAAA3pB,EAEE0xE,SACW/kE,EAAA+c,IAAGC,EAAMD,GAAAC,IAAS+nD,EAAYhoD,GAAKC,KAI3C9gB,EAASwF,QAAOxN,EAAQ6oB,MAAGC,KAAM,GAAA,GACpCtb,EAAOxN,QAAM6oB,MAAS7mB,GAAA8J,EAAA9L,IAGxBwN,EAAOxN,GAAAA,IAAM,OAAG8oB,EAAM,GAAA,IAETD,EAAGC,MAAM7mB,EAAA4mB,GAExBC,IACF,UAEUwG,EAAAA,IAAAA,EAAAA,GAAaxlB,KAAGqlB,EAAAA,IAGtB3hB,WAAgBsb,EAAAA,IAAMnhB,EAAA1F,EAAA4mB,GAExBC,IACF,KAAK7mB,EAAA4mB,GAGM7oB,IADL6wE,KACWhoD,MAAS,KAAA,GAASgoD,GAAY1xE,EAAK4zB,QAEhCjK,MAAM9mB,GAAA8J,EAExB9L,IAAAiC,EACF4mB,GAAAC,IAGItb,OADEqjE,EACW,GAAAhoD,IAAGC,EAAM9oB,MAAS6wE,EAAYhoD,GAAKC,IACvC2nD,UACO3nD,EAAM9oB,IAETiC,EAAA4mB,GAAGC,KAAM1c,EAAA,IAExB,WACGN,EAGD0B,IAAOxN,EADL6wE,EACWhoD,GAAAA,IAAGC,KAAM7mB,EAAA4mB,GAAqBC,IAAK,KAEnC,MAAGA,KAAM,GAET,GAAAD,EAAGC,QAAM,MAExB9mB,GACF8J,EAAA9L,IAEM8J,EAAGwlB,GAAAA,IAAAA,OACExuB,EAAO,GAEd0M,IAAOxN,GAAM6oB,EAAAA,MAAS5mB,EAAA4mB,GAExBC,IAAA,UAGIhf,EAAGwlB,IAAAA,EAAAA,GACL9hB,IAAO1M,UAEAd,EAAMA,IAAG8oB,EAAAA,EAAMD,GAAAC,IAExB,KACF7mB,EAAA4mB,GAAKC,IAGDtb,KAAOxN,MAAM6oB,KAAGC,GAAM,GAAA3pB,EAAS0xE,QAAiB,MAEhC/nD,GAAAA,EAAM9oB,IAExBiC,EAAA4mB,GAAAC,IACF,OAEItb,EAAOxN,GADL6wE,IACWhoD,GAAGC,EAAAA,MAAM7mB,EAAA4mB,GAAqBC,IAAK,UAEhCA,EAAM9oB,IAAAiC,EAExB4mB,GAAAC,IACF,UAEW9oB,EAAAA,IAAM2H,EAAAkhB,EAAGC,GAAAA,IAAM,KAAS+nD,EAAYhoD,GAAKC,IAEnC,KAAGA,MAAM,KAExB,GACF3pB,EAAAmwB,UAEWtvB,EAAAA,UAAS8oB,EAAM9oB,IAAAiC,EAAA4mB,GAAqBC,IAAK,OAEnCD,MAAS,KAExB,GAAA/c,EACF9L,IAAAgC,EAAKC,EAAA4mB,GAEM7oB,IADL6wE,OACc/nD,EAAAA,GAAM,IAAA7mB,EAAA4mB,GAAsBC,IAAK,MAEpCD,MAAS,KAAA,GAExB/c,EAAA9L,IACFgC,EAAAC,EAAK4mB,GAAAC,IAEM9oB,OAAM6oB,EAAAA,GAAGC,IAAMnhB,EAAA1F,EAAA4mB,GAAUgoD,IAAiB,KAEpC5uE,EAAA4mB,GAAGC,IAAM,KAAA,MAExB,KACF,GAAKhd,EAED0B,IAAOxN,EADL6wE,EACWhoD,GAAAA,IAAGC,OAAM9mB,EAAA,GAAsB,IAAK2F,EAAA1F,EAEpC4mB,GAAAA,IAAGC,KAAM7mB,EAAA4mB,GAExBC,IACF,KAAK,MAEM9oB,KADL6wE,GACWhoD,EAAAA,SAAS/c,EAAAhL,KAAsB,EAAKgL,EAAA9L,IAEpC6oB,EAAAA,GAAGC,IAAM,MAExB,MACF,KAAK,GAEDtb,EAAOxN,SAAM6oB,EAAGC,KAAM,EAAAhd,EAAA9L,IAAU6wE,EAAYhoD,GAAKC,IAEpC,MAAGA,MAAM,KAExB,IACFhd,EAAA9L,IAAKgC,EAAAC,EAEDuL,GAAOxN,IAAM,OAAG8oB,EAAM,GAAA,IAAA7mB,EAAU4uE,GAAY/nD,IAAK,KAEpCD,MAAS,KAAA,IAExB/c,EAAA9L,IACFgC,EAAKC,EAAA4mB,GAEDrb,IAAOxN,OAAM6oB,EAAGC,GAAM,IAAA7mB,EAAA4mB,GAAUgoD,IAAiB,KAEpC,MAAG/nD,KAAM,IAExBhd,EAAA9L,IACFgC,EAAAC,EAAA4mB,GAAKC,IAEM9oB,OAAMgC,EAAA6mB,GAAGC,IAAM7mB,EAAA4mB,GAAAC,IAAsB,KAAK,MAEpCD,KAAS,IAAA/c,EAAA9L,IAExBgC,EAAAC,EACF4mB,GAAAC,IAEE,OAAOqG,EAAAA,GAAAA,IAAYrlB,EAAGwlB,GAAAA,IAAAA,KAAgBD,MAAAA,KAAc0D,IAAAA,EAiB7C/yB,IAAMgI,EAAAA,EAASwqB,GAAoB1oB,IAAGulB,QAAc0D,EAAAA,GAAAA,IAUhD/qB,EAAAA,GAAaqnB,IAAAA,OAAcF,MAAAA,KAAeG,IAAAA,EAAAA,IAAYxlB,EAAGipB,EAAAA,GAAAA,IAIzDjpB,QAAWA,EAAGqlB,GAAAA,IAAAA,EAAYrlB,GAAGulB,IAAAA,OAAc0D,MAAAA,KAAcG,IAAAA,EAAAA,IAAWlxB,EAAwBC,EAAA4mB,GAAlB/e,IAAG9J,QAEtFwN,EAAOxN,GAAAA,IAASA,EAAAA,GACJA,IAAAA,OAAUmvB,MACP,KAAXrlB,IAAG9J,EAAAA,IACEA,EAAAA,EAAM6oB,GAAAA,IAAGsnD,QARdrmE,EAAGopB,GAAAA,IAAAA,EACL1lB,GAAO1M,IAAO,OAZkD,MAE5DgwE,KAAqC59C,IAAAA,EAAAA,IACrClzB,EAAM8wE,EAAcA,GAAYhnE,IAAGwlB,QAAWttB,EAAA,GACpD,IACEwL,EAAOxN,GAAM8oB,IAAAD,OAAS7oB,MACjB,KAAOkzB,IAAAA,EAAAA,IAAWlxB,EAAM8H,EAAGopB,GAAAA,IAAAA,QAChClxB,EAAMkxB,GAAUppB,IAAGqlB,EAAAA,GAAUrlB,IAAGopB,OAAU,MAAQA,KAAAA,IAClD1lB,EAAOxN,IAAMgC,EAAA6mB,EAAAA,GAAGC,IAAMjpB,QAAOC,EAAAA,GAAAA,IAAAA,EAAaozB,GAAAA,IAAAA,OAxBrCA,MAAW,KAASA,IAAAA,EAAAA,IAAWlxB,EACpCwL,EAAOxN,GAAAA,IAAMH,QAAOC,EAAAA,GAAAA,IAAagK,EAAGopB,GAAAA,IAAAA,OACZ,cACxB1lB,IAAOxN,EAAMmvB,SACJrlB,EAAGopB,UAAW/zB,EAAM2K,QAAGopB,EAAAA,QAEzBlzB,GAAMH,IAAAA,IAAOC,EAAAA,QAAAA,EAAagK,SAAasC,GAAKjN,EAAAkwB,QAC1CvlB,EAAGopB,SACLlzB,EAAAA,WACiBb,EAAA4zB,QAAZG,EAAAA,MACLlzB,EAAAA,UAAS8oB,EACQuG,SAAZ6D,EAAAA,SACLlzB,EAAMkzB,SACW,IAAfppB,IAAGopB,EAAAA,IAAAA,OACLlzB,EAAMA,IAAGiwE,EAAAA,IA2BxB9wE,EAAAa,KAAOwN,6ICzWT,GAAArO,EAAA+zB,SAAA,IAAA/zB,EAAA+zB,SAAoC+2C,GAClC,CAAA,IAAAznE,EAAIynE,EAAY96C,QACd86C,EAAa/2C,QACNrzB,GAAAA,EAAOC,QAAAA,GAAAA,EAAiCE,IAAAiC,EAAnBgoE,GAAanhD,IAAAjpB,OAAgBA,aAAOC,SAAmCX,EAAA+zB,SAE9FrzB,IAAOC,EAAAA,SAAAA,GAAamqE,EAQ7BjqE,IAAAH,OAAAC,aAAAX,EAA8BmT,QAAsCtN,IAAnB,KAAAD,EAAAA,QAAA+G,EAAmB9L,IAAAgF,EAAAA,GAAAA,IAAmBrF,EAAAA,SACrF,IAAI6N,EAAS0lB,SACWluB,GAAAA,EAAO/C,IAC7BpC,OAAqBoC,aAOnB8uE,EAAa79C,QACHrzB,GAAAA,IAAOC,KAAAA,EAAAA,QAAiCgM,EAAA9L,IAAnB+wE,EAAaloD,GAAAylD,IAAgBzuE,MAAOC,EAAAA,QAAAA,EAAcixE,IAAY9uE,EAAA4mB,GAASC,IAAA,MAE5FjpB,EAAAA,QAAOC,EAAAA,IAAAA,EAAAA,GAAaixE,GAGlC,MAAOvjE,EAOT0lB,UAAApnB,EAAA9L,IAAAiC,EAAA4mB,GAAAonD,IAAA,OACUnkE,IAAAklE,IAAAA,CAAAA,EAAAA,KAkEVtgE,OA7DS+D,eAAA9E,EAAP,aACE9S,CAAAA,OAAKm0E,IAAWC,EAWXvc,YAAAyH,EAAAA,cAAOniC,EAAezzB,cACN5G,EAAAA,yBAMrB,EACesxE,EAGXp0E,oBAEE,SADiByuD,GAAAA,OAAW4lB,EAAAA,OACRrQ,GAAU,MACzBrkD,OAAqC1c,aAArBkxE,OAAW7xE,GAAA,KAA2BU,OAASC,aAGrDjD,EAAAA,KAAKm0E,QACfx0D,OAAUqkD,aAEdmQ,IAAWC,EAGlBE,cAA2BxxE,SACzBR,EAAM++B,EAAOlE,QAAMsxB,IAAWrpD,IAE9B0F,EAAI,QAAA,IAAkBu2B,IAAQ9xB,EAAAjN,EAC5BQ,QAAWA,IAET,IAAAsC,EADApF,GAAAA,EAAKm0E,EAAAA,EAAAA,IAAW9yC,EACT1hB,CAAAA,IAEThK,EAAMquD,EACF/yD,GAAA0E,EAAA,OADiB84C,GAAAA,MAAAA,GAAWrpD,OACEnC,aACG,OAAV0S,GAAA,KAAkBquD,OAAkB/gE,aAGtD0c,EAAU0hB,KACV1hB,QAAUqkD,GAIRhhE,OAAAC,aAIIo+B,GAEnB,OAAO1hB,GAEX,IAnEa40D,EAAA5c,oBAwEb6c,IAAAx0E,KAAAm0E,SAAA,EAAA,OACSK,EAAAnrE,UAAsByJ,MAAIy7C,WAAWvuD,KAgO9Cm0E,SA3NS,GAAAK,EAAAnrE,UAAPi2D,OAAA,SACOmV,EAAAA,GAAQpQ,IAAAA,EAAK/hE,EAAAQ,OAWb,IAAAyM,EAAA+vD,OAAP,EAAA,IAAAl6D,EAAA,EAAc+3B,EAAmBzzB,EAC/B1J,KAAM8C,WAEN,QACEqC,EAAA7C,EAAOmsD,WAMLimB,OAEAR,GAAY,MAIhBppE,EAAI9K,KAAKy0E,MAAAA,KAAYN,SACE,OACZn0E,EAAKy0E,MAAAA,OACW3pE,EAAA1F,KAAVpF,KAAL0tE,SAAiD5iE,EAAV1F,KAALsoE,GAAwB1tE,KAGpEm0E,SAFU,GACNQ,IAAAA,IACIA,EAA4B1jE,EAAA0E,EAAtB3V,IAAKy0E,EAAAA,CAAAA,IAAAA,EAAAA,EAAUtnE,WAC3BugE,GAAO,GACPA,OAGFz+D,GAAAA,GAA4C,MAAV,CAAA,KAAlBjP,GAAKy0E,EAAAA,OAAQz0E,KAA2Dm0E,SAAVllE,EAAlBjP,EAAAA,IAAKy0E,EAAAA,QAAgCtvE,EAAI7C,EAC/FsyE,WACqBj/D,KACrB0+D,GAAYvxE,MACdgI,EAAO1F,KAGY,MAAV6J,EAAA,OADColE,EAAAA,MAGVA,OACiBvpE,EACjB1F,KAAA6J,EAGAjP,EAAAA,KAAKy0E,QAAQtnE,QACN8B,IACPy+D,EAAYtoE,KAGXyvE,GAEU,OACPnH,GAAK8G,EA3IN7c,GA6ID0c,EAEA3qE,cAGEgkE,EAAK,IAAAoH,EAAWpH,oBAAwCqH,IAAA/0E,KAAP0tE,QAG5C/tD,IAAU+tD,WAGEA,GAAK,OAAAqH,EAGxBrrE,UAIN1J,MAAKy0E,WAAQpQ,KAMfoQ,QAFMO,KACF5vE,IACGA,EAAItC,UAeTw8D,OAAW0V,SACK73C,EAAM/3B,GAAAA,IACUmK,EAAAjN,EAAxB2yE,OAAkB,IACM1lE,EAAA,OAAVnK,EAAI,IACMA,EAAA6L,EAAA0E,EAAxBu/D,EAAQ/3C,EAAM/3B,EAAI5B,EAAA,EAAAkC,EAExBgE,EAAOiW,GAAAA,KACAA,QACPjW,GAAOiW,CAAAA,IACPjW,GAAAA,EAAOiW,EAAUu1D,KACZT,QAICt3C,GAAM/3B,GAAAA,MAIZsE,IAAOiW,GAAUw1D,GAAAA,MAGZ,IAAuBvvE,GAAV,GAAA,EAARuvE,IACV,IAAI/vE,EAAKtC,EAEPokB,OAAA,GADAlnB,EAAKy0E,GAAAA,KAAQA,UAIQ5uE,KAAVA,EAAA,GADbovE,IAAc7vE,EAAAA,GAAAA,EACe,IAE3BA,IACA+hB,EAAA,MAGF,IADA+sD,KAAaiB,QAAsBF,IACnB,EAAA,MAGd,IAAAj1E,KAEF0J,QAAiBwqE,IAAAA,EAGZ,EAAA9sD,EAAuBD,EAAAthB,EAAAH,EAAV0hB,GAAR+tD,CAAAA,GACVzvE,GAAIN,EAAAA,OAEF,EAAA,GADApF,MAAKy0E,KAAQvtD,EAAA5kB,EAAK6yE,OAIG,CAAAzvE,IAAVC,GAAA,EADbsvE,MAAc7vE,KACeqvE,QAG3B5uE,KAAAqhB,EAEFthB,IAAIR,EAAKtC,GAGP,GAAAokB,EAFAlnB,IAAAA,IAAKy0E,EAAAA,EAAAA,IAAaU,IAClBn1E,EAAAA,KAAKy0E,EAAAA,IAAQttD,EAAK8tD,EACXt1D,MAGc/Z,GAAA,OADvB8uE,GAActvE,OACe,QAG3BQ,IAAAkF,EAGF3F,KADA+uE,GAAqBtuE,EAARuvE,OAAiBvvE,EAAc,UAAsBkF,EAAR4pE,KAC1C9uE,IAAWsuE,KAAaO,QAAuBpQ,KAAA,GAAyB,IAAA,IAEtFrwD,EAAAzE,EAAA,EAAAC,EAAA9J,EAEFgE,EAAOiW,GAAAA,CAAUu0D,SAGZ1kE,EAAuBwE,IAAA,KAAlBmhE,EAAAA,EACV3lE,KAAIpK,KAEF6L,EAAA3O,EAAAkN,EADAxP,KAAKy0E,KAAAA,EAAQnyE,EAAAkN,EAAK2lE,KAIpB,KAAuBlmE,EAAV3M,EAAAkN,EAAA,MADCpK,EAAAA,KAGZA,EAAAA,EACAD,KAAA8L,EAAAnG,EAEF3F,KAAIC,EAAKtC,EAGPqC,KAAA8J,EAFAjP,GAAAA,EAAKy0E,IAAAA,EAAAA,EAAQjlE,MACbxP,IAAKy0E,EAAAA,KAAQrvE,OAIf,GAAuB,MAAV,IAAAA,GADL+3B,CAAAA,GAAM/3B,GAAAA,EACe,OAG3BpF,KAAAy0E,QAEO3xE,GAIPsC,EAAAD,EAAA,GAHAnF,MAAKy0E,KAAAA,EAAQnyE,EAAK6yE,OACbV,CAAAA,IAAAA,SACLz0E,IAAKy0E,GAAAA,GAAAA,IAAQ,EAAKC,GAIpBzjE,GAAuB,IAAA,CAAAzB,IAAV,SADCpK,EAAAA,KAGZA,OACA,GAAA,MAEF8uE,IAAaiB,GAAAA,CAAiB,GAAA3lE,GAAcD,EAAR0lE,OAA+Bj1E,KAAR00E,QAAsBQ,GACjE9vE,EAAAD,EAAA,GAAY+uE,MAAY,KAEtCjjE,EAAA3O,EAAAkN,OAEKmQ,CAAAA,IAAUu0D,SAKdv0D,GAEXnQ,GAjOAD,EAAa,OAAAsoD,KAAAA,sFCnHb,IA0DIud,GA1DJnkE,IAAA,EAAA,GAIMokE,GACJ,MAAS7xE,GAAA,OAAkBA,GAAA,OAAU,QACrCA,EAAC,SAAQsH,EAAU3F,KAAQ3B,OAAU,GAAA,MAAQ,IAC5C4B,GAAA,CAAQ,GAAAoK,GAASD,EAAC,OAAQvP,KAAUy0E,QAAQ,GAC5CrvE,EAAAD,EAAA,GAAQ,MAAU,KAAQ8L,EAAA3O,EAAAkN,OAAkB,CAAAA,IAAA,SACpC,GAAAA,GAAUD,EAAA,OAAQvP,KAAUy0E,QACrC,GAACrvE,EAAApF,KAAQy0E,QAAkB,GAAAxjE,EAAA9L,EAAU,GAAA,MAAQ,KAC5CwQ,EAAArT,EAAQkN,OAAU,CAAAA,IAAQ,SAAU,GAAQA,GAAAD,EAC7C,OAASvP,KAASy0E,QAAS,GAAArvE,EAAUpF,KAAQy0E,QAC5C,GAAAxjE,EAAQjR,KAASy0E,QAAS,GAAA9+D,EAAUxQ,EAAA,GAAQ,MAC7C,KAAC8J,EAAQ3M,EAAAkN,OAAU,CAAAA,IAAQ,SAAkB,IAAAhM,GAC5C,EAAA4B,IAAQ,IAAA,GAAU6L,IAAQ,IAAA,GAAU0E,IAAA,EAAQ,GAAA1G,GAC5C,OAAQzL,EAAA,QAAkB,SAAUsH,EAAA3F,KAAQ3B,GAC5C,OAAQ2B,GAAA4vE,ED4KmBrH,GC5KT0G,EAAQvc,YAAkBid,GAAA,IAC7C,CAACQ,EAAAC,EAAQC,KAAA3hE,OAAkB+D,eAAkB29D,EAAA,aAC3B,CAACrxE,OAAQ,IAASqxE,EAACE,eACrC,EAAS,IAAAC,EAAUC,EAAAH,EAAA,MAAQ7/D,EAAU,CAAA,CAAA,IAAQ,KAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAA,MAAQ,CAAA,KAC5C,MAAQ,CAAA,KAAU,MAAQ,CAAA,KAAS,MAAC,CAAQ,KAAA,MAC5C,CAAA,KAAQ,MAAU,CAAA,KAAQ,MAAS,CAAC,KAAA,MAAQ,CAAA,KAC5C,MAAQ,CAAA,KAAU,MAAQ,CAAA,KAAS,MAAC,CAAQ,KAAA,MAG7C,CAAC,KAAA,MAAS,CAAA,KAAW,MAAS,CAAA,KAAW,MAAS,CAAA,KAClD,MAAC,CAAS,KAAA,MAAW,CAAA,KAAS,MAAW,CAAA,KAAS,MAAA,CAAA,KACjD,MAAS,CAAA,KAAU,MAAC,CAAA,KAAS,MAAW,CAAA,KAAS,MAAA,CAAA,KACjD,MAAS,CAAA,KAAU,MAAC,CAAA,KAAS,MAAW,CAAA,KAAS,MAAA,CAAA,KACjD,MAAS,CAAA,KAAA,MA0BZ,CAAA,KAAA,MAGE,CAAA,KAAA,MAFgB,CAAA,KAAAigE,MAAAA,CAAU,KAInBR,MACK,CAAA,KAAI7mB,MAAAA,CAAAA,KAAW,MACvB,CAAA,KAAA8V,MAAY,CACZ+Q,KAAW,MAEX,CAAA/Q,KAAAA,MAAe,CAAG,KAClB,MAAAA,CAAAA,KAAY,MAAS,CAAA,KAIrB,MAAAA,CAAAA,KAAY,MAAG,CAAQ,KAAA,MACjB,CAAA,KACN+Q,MAAM,CAAU,KAChB,MAAA/Q,CAAAA,KAAe,MAAQ,CAAA,KAAA,MACjB,CAAA,MAEN,OAAAA,CAAAA,MAAe,OAAQ,CAAA,MACvB,OAAAA,CAAAA,MAAe,OAAQ,CAAA,MACvB,OAAAA,CAAAA,MAAe,OAAQ,CAAA,MACvB,OAAAA,CAAAA,MAAe,OAAQ,CAAA,MACvB,OAAAA,CAAAA,MAAe,QAAQp1D,EAAA,CAAA,CAAA,MACvBo1D,OAAK+Q,CAAO,MAAG,OAAQ,CAAA,MAOlB,OAAW7lE,CAAAA,MAAkBzM,OAAUyM,CAAAA,MAC1C80D,OAAY,CAAA,OAAoB,QAAqB,CAAA,OAa7D,QARS,CAAA,OAAA,QAAAnE,CAAP,OAAA,QACE,CAAA,OAAU,QACA,CAAY,OACZ,QA9Dd,CAAA,OAAA,QACE,CAAA,OACIluD,SAAWlP,EAAS,oBAEWkP,IAAK,GACtChS,KAAA41E,QAEK5jE,KAAOG,EAEZ,CAAAujE,EAAIG,IADJC,WACoB,QACN,EAAAH,EACPtR,MAAIwR,EAAMpgE,GAAKqgE,EAAK,GAGzB,GAAA,EAAAH,EAAOtR,MAFKqR,EAKhB,EAAA,EAAA,KAAA,EA8CeK,EAAKC,MACbD,EAAO,EAAA,IAAA,MAAWA,EAAOJ,EAAAtR,MAAoBqR,EAAA,EAAA,KAAWK,MAAOL,EAAiB,MAGzF,EA/CAA,EAAa,MAAAD,GAAAA,EAAAA,EAAAA,2FCrEb,EAkBiEE,EAAAtR,MAAAqR,EAAA,EAAA,MAAnBO,QAAAA,EAAAA,EAAAA,MAC1CP,EAAA,EAAA,MAAsB3W,QAAAA,EAAQmX,EAAAA,MAAU10E,EAAAA,EAAK20E,MAC7CF,QAAAA,EAAAA,EAAAA,MAGJP,EAAA,EAAA,MAQE,OAAA,IAAoBU,IAAA9zE,EAAA8zE,EAAAA,EAAAA,EAAAA,SAPZjkB,GAAAA,EAAAA,EAAAA,MAAwCujB,EAAA,EACxC//D,EAAArT,GAAA+zE,GAAAA,EAAAA,GAAAA,GAA2C,IAC3C,OAAAC,EAAAA,UACApW,QAAAqW,SAAAA,GACA,OAAAC,EAAAA,GAAAA,EAAAA,EAAAA,IAAAA,EAAiBC,EACjB,MAAAC,EAAAA,GAAAA,SAkLVp0E,EAAAwI,GA3KS,IAAAyE,EAAAnK,EAAA,EAAA6L,EAAAyhD,EAAAA,OAAP,EAAA,GAAApwD,EAAAwI,EAAiB2K,GAA2BkhE,IAI1Cr0E,EAAAwI,EAAAmG,GAA2B8P,GAAvB41D,OAAoC32E,EAAK02E,KAAAA,GAAAA,GAAaC,GAGxD32E,EAAAA,EAAK02E,EAAAA,EAAAA,GAAAA,GAAa,GAAAtxE,EAAAmK,EAWpB,MAPAvP,CAAAA,KAAKs2E,EAAAA,EAAAA,GAAAA,IAAgB7gE,OAAK3S,EAC1B9C,EAAAA,EAAKmyD,EAAAA,OAAAA,EAnBCukB,CAmBDvkB,EAAa7nD,GAAAA,EAAKmL,GACvBzV,QAAKq2E,GAAAA,QAAW/rE,GAAAA,QAGhBtK,GAAK02E,OAAAA,EAAAA,GAAAA,EDDiB,GCGlB12E,EAAKw2E,UAAAA,GAAAA,KAST,CAAAI,EAAIC,KANJ72E,OAAKw2E,eAAiBM,EAOfD,aAAa1kB,CAAAA,OAAaxuD,IAAAA,EAAAA,iBAC1ByyE,EACL,IAAMD,EAAKn2E,oBAAgB2D,eAKxB2yE,SAAAA,GAAAA,QACAC,UAAAA,KAAgBj0E,IAAA2zE,eAGhBO,EAAAA,oBACAE,EAAAA,GAAAA,KAAaN,QAGb9zE,EAAAtC,KAAA6C,aAAP,GAAwCw1C,KAAxCg+B,WACE,GAAIr2E,KAAKs2E,aAhFa,EAiFpBt2E,KAAAu2E,cAAgB,EAAAv2E,KAAAw2E,gBAAA,EAAAx2E,KAAA02E,WAAA,EAAA,OAAAK,EAAA1tE,UAIbrJ,UAAKmyD,SAAarvD,EAAAA,GAAAA,QACrB9C,IAAKu2E,GAAAA,KAAgBG,WACrBrrE,EAAAA,KAAWqrE,WAAM,OAAKM,GAAAA,KAAAA,cAGnBV,EAAAA,OAAAA,KAAgB7gE,aAChB08C,KAAAA,GAAAA,KAAa7nD,WAClBtK,UAAKq2E,GAAW/rE,KAAK+tC,cA+Bbr4C,KAAAg3E,eAAV,CAAA,IAA4C3kB,EAAAA,IAA5CryD,KAAAw2E,gBAAsBS,EAAA1nE,EAAAvP,KAAAmyD,aAAsBxuD,SAC1C,CAAMuzE,KAAwB5+C,QAAKC,GAC5Bv4B,IAAAA,EAAKmyD,KAAAA,WAAarvD,QAAcyzE,GAAAA,IAAAA,KAAAA,aACxBv2E,EAAKmyD,KAAAA,cAAkBokB,WAAAA,KACrBv2E,gBAAayV,EAC5BzV,KAmDE02E,WAAA,IAJOzX,EAAAA,UAAMp8D,MAEX,SADAs0E,EAAIrsE,GAAA,IAAAyE,EAAAvP,KAAO,GAAMk/D,KACVH,aAAQmX,IAAQ,MACtB10E,IAAAA,MA3BwC,+DACjBw1E,KAAAA,aAAeznE,SAChCynE,KAAAA,cA6BLb,EAAKn2E,YAAKq2E,WAAgBE,OAAAA,EAAAA,kBAEhCv2E,KAAKu2E,cACLv2E,EAAAA,OAAKs2E,KAAAA,aAEDh+C,KAAKC,GAAAA,KAnLU89C,WAuLjBr2E,KAAKmyD,IAAAA,EAAAA,UAAarvD,YAAcyzE,SAAAA,EAG9Bv2E,GAAAA,IAAKu2E,EAAAA,UAAAA,IACPv2E,IAAAA,EAAKmyD,QAAAA,IAAenyD,IAAAA,GAAKmyD,GAAAA,IAAAA,IAAahhD,EAAAA,GAAAA,KAAMnR,MAAKu2E,KAAAA,aAC5CF,OAAAA,KAAar2E,eAAgBmR,CAAAA,IAAMnR,EAAAA,KAAKu2E,aAC7Cv2E,KAAKu2E,eAEPlrE,EAAAA,KAAAA,QAAWsK,EAAA7K,GAAA,GAAMmE,EAAA,YAAK+nE,EAAAA,OAAAA,SAEtBh3E,GAAKmyD,OAAAA,GAAAA,WACLnyD,MAAKq2E,KAAAA,QAAWvzE,SAChB9C,MAAKs2E,MAAAA,SACAC,GAAAA,OAAAA,KAAgBh+C,MArL3BtnB,GAAa,GAAAmhD,YAAAA,yFCkBAglB,eAAgB,oGClD7Bt0E,OAAA9C,KACAu2E,eACAv2E,KAEMq3E,cAEN,KAAAr3E,KAAAmyD,aACUmlB,KAAAA,aAAoDx8B,MAAO96C,KAC3Du2E,eACAv2E,KAAAu3E,WACAv3E,KAAAw3E,WAAqCrmE,MAAAnR,KACrCu2E,eACNnX,KAAAA,cACAqY,GAAcpsE,YACdqsE,WA8GJ,OA3GStyE,EAAA4xE,mBAAPh3E,KACEA,aAAKs3E,OAAYzjE,EAAOinC,KAAAA,WACxB96C,OAAKw3E,EAAAA,KAAalB,aAClBt2E,EAAAA,KAAK23E,cAGA,IAAAZ,EF6DAP,GE7DAoB,EAAAA,YAAPC,GAAA,KAAuBlkB,CAAej9C,EAAAA,KAAAA,OAChC1W,eAAe2zD,EAAAA,aACZ2jB,CAAAA,OAAmB,IAE1BxsE,EAAMgtE,mBAAmBR,EAEzBxsE,EAAAssE,cAAO,KACL9tE,KAAS,CAAAyuE,EAAAC,EAAAC,KACPpkE,OAAqBikE,eACCE,EAAlBE,aACiBA,CAAch0E,OAAA,IAMlC8zE,EAAAlX,WAAAqX,EAAAA,eAAP,EACMn4E,IAAAA,EAAKs3E,EAAAA,KAAAA,EAAU3jB,EAAAA,MAAAA,EAAAA,EAAe3zD,MAAKs3E,EAAAA,GAAAA,EAAAA,oBAGlCc,IAAAA,KAAAA,UAAPvkE,OAA0B6C,OACnB8gE,MAAAA,KAAa9gE,QAGbzH,EAAAjP,KAAA8pB,OAAP,EAAA9pB,KAAAw3E,WAEWG,aAAQ70E,KACfu1E,OAAar4E,CAAAA,QAAKq4E,EAAAA,aAAqBA,EAAAA,aAAOZ,GAAAA,OAAmBz3E,EAAK23E,UAAQ70E,QAAYwd,WACxFtgB,KAAK23E,UAAWzgB,OAAOpc,OAGtBu9B,MAAAA,KAAOjZ,WACPuY,aACL33E,KAAKu3E,QAGAtoE,GAAAqpE,EAAAjvE,UAAA2tD,gBAKL,SAHKltC,EAAAA,QAAAA,IACAytD,KAAS5jB,UACTgkB,KAAU33E,KAAKs3E,UAAU3jB,GAAU0jB,IACnCr3E,IAAK23E,EAAAA,KAAQ70E,UAGhBy1E,GAAK,OAAQv4E,EAAK23E,KAAAA,GAAQ70E,CAAAA,QAAYwd,WACpCtgB,IAAK23E,EAAAA,EAAAA,QAAW3gB,IAAKC,IAAAA,GAHvBj3D,EAAAA,OAAKw3E,EAAAA,MAAWx3E,EAAAA,UAAam4E,aAQ1B,SAAAK,GAAAA,KAAPlB,UAA6CnvE,WACjCwvE,KAAAA,UAGRr1E,IAAKg2E,EAAAjvE,UAAasuE,mBAAyB,SACzC33E,GAAK23E,KAAAA,WAAqBzvE,GAAOC,EAAAA,UAH9BqvE,MAAAA,WAAgBD,GAAAA,KAAQI,QAAOrD,OAAAA,IAAAA,IAAc7+D,EAAMvN,KAAOC,OAQ5Di3D,OAAAlI,KAAAA,OAAPugB,aACE,EAAAz3E,KAD8B23E,QAAA70E,OACzB9C,EAAK23E,GAAAA,IAAQ70E,EAAAA,KAEX60E,QAC2Cr1E,GAC5Cge,QAASq3D,GAAAA,KAAQ70E,OACjB40E,QAOJ,EANI13E,KAAKq4E,QAAOjZ,EAAAA,KACd9+C,OAAS+3D,GAAAA,EAAAA,UAAOZ,KAAe,SAEjBz3E,EAAAA,GAAKq4E,GAAAA,KAAOX,QAAAA,KAC1B13E,OAAKq4E,EAAOjZ,KAAAA,QAETsY,KAAiCJ,UAC7Bh3D,IAAKrR,EAEYjP,KADtBy4E,QAAqBd,OAAQr3D,IAAG42C,IAAAA,EAAOwhB,KAD1Bp4D,QAIFm4D,OAAAA,EAAAA,GAAyB1Z,EAAAA,IAAAA,KAIlC4Y,QAHKU,GAAAA,KAAOjZ,QAASp/D,KACrBA,WAAYy3E,KAAAA,OACZz3E,OAAKq4E,IAAAA,EAAOX,UAAAA,IACLe,SAMbn2E,EAAOge,EAAAA,GAAQA,GAAAA,KACbm4D,QAAqBd,OAAQr3D,IAAG42C,IAAAA,EAAAA,KAAOygB,QAAA70E,OACVi8D,EAAAA,GAI3B,EAAA9tD,IAHAjR,KAAKq4E,QAAOjZ,GAAAA,IAAS98D,EACrBtC,EAAAA,QAAKq4E,KAAOZ,WACZz3E,KAAKq4E,OAAOX,OAAAA,EAAAA,EAAAA,eA/BhB13E,EAAKw3E,EAAAA,KAAAA,EAAAA,UAAgBD,OAAQ,SAoC/Bv3E,EAAAA,GAAK23E,QAAAA,IACL33E,IAAKu3E,GAAAA,GAASv3E,KApHlB23E,QAAagB,OAAAA,CAyHb,IAAMC,GAAAA,EAAexzE,EAAIpF,KAAA64E,QACZC,OAAS,EAMtB7nE,GAAA,EAAA,GAAAjR,KAAAq4E,OAKEjZ,SAAoB2Z,EAAA/4E,KAAA+4E,OAAAA,aAJZjiB,EAAQvnD,EAAAzE,EACRmG,EAAAjR,KAAAg5E,OACAtB,YAAAuB,KAAqBZ,OA+C/BjZ,QA3CS,IAAAnuD,IAAA+lD,IAAPznD,EAAA,CAAA,KAAY0nD,GAKVj3D,IAAAA,KAAKg5E,EAAAA,KAAkBl2E,QAAcm0D,GAAOA,OAAO30D,IAAamuD,IAAAA,GAAAA,aAC3DqG,QACL92D,OAAKi5E,KAAYZ,OAGZjZ,QAAA,EAAAoZ,KAAPH,OAAW5iE,aACAwjE,EAAAA,KAAAA,OAGTj5E,aAAc,EAAAs0E,EAAAA,IAAAA,KAAAA,GAAc7+D,EAAMvN,IAC9BlI,IAAAA,EAAK82D,KAAMh0D,QAASsC,GAAAgyE,QAAAA,cACjBtgB,QACL92D,OAAKi5E,KAAAA,OAIF7Z,QAAA,EAAAp/D,KAAAk3D,OAAPugB,aAAAryE,EAAApF,KACMk5E,OACJxB,aAASuB,EAAAA,OACDj5E,KACDw3E,WACCx3E,KAAK+4E,OAAS/4E,SAAK82D,GAAO92D,KAAKg5E,QAAAA,EAAAA,KAAAA,OAClBja,GAAAA,EAhIkBuY,GAmInCU,EAAAW,UAAgBxzE,EAAA,IAAA3B,EAAA1B,IAIdq3E,EAAAN,OAHKG,EAAAA,SACAliB,GAAAA,IAAQpxD,EACb,oBAQN0zE,EAAA92E,GAAAtC,KAHAA,SAAKg5E,EAAUJ,KACf54E,MAAK82D,GAAQ92D,KACbA,QAAKi5E,EAAAA,KACEC,WAhDEpY,EAAAA,OAAAA,EAAAA,kiBAwCH,kFC9KVuY,EAAAC,GAAA,OAEAC,EAAA1lE,OACA2lE,gBACA,CACAC,UAgBA,cAGE/pB,OAAA,SACE1vD,EAAKo1E,GAAAA,EAAAA,UAAY7mB,IAAAA,SAmCrBjsD,EAAAwI,GA3BS,IAAA,IAAAyE,KAAAmqE,EAAAA,OAAPrwE,UAAwCyP,eACjC9Y,KAAKo1E,EAAAA,KAAOvjD,EAAUtiB,GAAsCuJ,EAU5DvJ,MAAA8pE,EAAAC,IAAA3yE,SAAPrE,EAAAwI,GAAyBmW,GAAoB4Q,mBACvB/mB,GAAgCu2B,OAAwDvoB,EAUvG,MAAA,IAAA4hC,UAAP,uBACO13C,OAAWoC,GAAIu0E,0CAIxBpqE,IAvCAvP,KAAa45E,YAAAA,EAAAA,EA2Cbt3E,EAAAwI,GAAM+uE,EAAsBxwE,UAOfywE,OAAAA,EAAAA,OAAAA,OAAyBhvE,IAAAyE,EACpClG,UAAmCuwE,EAAgBvwE,UAIjCqmD,IAAM3pC,KAAAA,OAAY2pC,eAAoB55C,EAAI,aAA4B,CAAA5R,OAAA,IAClFqL,EAAIioD,qBAA0CuiB,EAAU5oE,uBAGnC6oE,EACrBC,qBACW,EACL3vE,IAAKyb,EAAAA,EAAAA,KAAmBxW,EAAE2qE,EAAM,MAE5CC,EAAAD,EACIj5D,MADuBm5D,EAAoBF,EAAA,MAQ1Cj5D,EAAAA,EAJLm0D,MAAMsE,EAAAA,oBAEQW,EAAY/3E,GAAFtC,KAEVs6E,MACNC,IAAAA,WAAqBj4E,GAAM,OAAYk4E,EAAAnxE,UACvCkxE,WAAgB,SACtBnF,EAAMmF,MAAAA,EAAQhrE,MAAQvP,KAAOihB,MAC7Bm0D,GAAMzuE,EAAAA,IAAI6zE,EAAMv5D,UACVta,IAAI,SACVyuE,EAAMzuE,EAAAA,EAAIvB,GAAApF,KAAWo1E,MACfmF,GAAAA,EAAAA,GAAShrE,GAAA,EAAMnK,GAAMo1E,EAAAnxE,UAC3B+rE,QAAU,SAAW9yE,EACrB8yE,EAAMzuE,EAAAA,GAAI,IAAa,IAAFsK,EAuFvB,EAAAA,EAAA3O,EAAAQ,OApFMy3E,IAAQN,KAAW7E,MACnBmF,GAAAA,EAAAA,EAAAA,IAAqBhrE,GAAF,EAAAnK,GACnBuB,EAlBA+yE,GAkBIM,EAAAJ,gBACJW,EAAQN,IAAWr0E,EAAA,IACzBwvE,EAAMmF,uBACI,WACVnF,IAAMmF,EAAAA,IAAQN,EAAa,MAC3B7E,EAAMzuE,MAAIof,MAAI,KACRw0D,MAAAA,MAAmBzkE,KACzBs/D,SAAMmF,EAAQN,GAAW,OACnBtzE,KAAI8zE,EAAA,SACVrF,EAAMmF,GAAAA,OAAqBG,EAAFvpE,MACnBxK,EAAAA,IAAIvB,EAAMq1E,EAAF,GAAA,KAER9zE,EAAAA,EAAI,EAAM,IAAFsK,EAAA3G,KACRiwE,IAAAA,EAAQF,KAAUt0D,MAClBpf,EAAAA,EAAI,GAAA,KAAI,IACdyuE,EAAMmF,EAAAA,EAAAA,EAAAA,IAAS,IAAM5kE,KAAYglE,EAAMjB,WACvCtE,EAAMmF,GAAAA,EAAAA,QAAgBn1E,EAAA,EAAO,EAAF,GAAA6J,EAE3BmmE,EAAMmF,QAAS,CAAA,GAAM,GAAM,IAAO,KAAF5kE,EAChCy/D,EAAMmF,GAAAA,EAAAA,QAAkBE,EAAA,IAClBF,KAAAA,EAAQN,EAAa,GAAFU,EAAAJ,QACfE,EAAA,IAAI,KACdrF,EAAMzuE,EAAAA,GAAIg0E,EAAAh0E,IAAI,IAEdyuE,EAAMzuE,EAAAA,GAAIg0E,EAAMh0E,IAAF,GAAAgP,EACdy/D,GAAMmF,GAAAA,EAAAA,IAAU,IAAM5kE,EAAA,EAAO,GAAFglE,EAAAJ,QACrBA,CAAAA,IAAU,IAAM,KAAK5kE,EAAA,EAAA,GACrB4kE,EAAAA,IAAAA,IAAS5kE,EAAM,GAAM,GAAMglE,EAAAh0E,IAAK,IAAAgP,EACtCy/D,GAAMmF,GAAAA,OAAUI,EAAMJ,QAAKtpE,EAC3BmkE,EAAMmF,EAAAA,GAAAA,EAAAA,QAAgBtpE,EAAA,EAAO,EAAF,GAAA0pE,EAC3BvF,IAAMmF,IAAAA,EAAS,EAAA,GAAMI,EAAMJ,QAAWtpE,EAAA,EAAA,EACtCmkE,GAAMmF,EAAAA,QAAUtpE,EAAM,EAAA,EAAO,GAAF0pE,EAAAh0E,IACrBA,IAAI,EAAA,EAAM,GAAFg0E,EAAAJ,QACRA,EAAAA,EAAQhrE,EAAE,GAAMorE,EAAAh0E,IAAK,IAAA,EAC3ByuE,EAAMmF,GAAAA,EAAAA,QAAgBtpE,EAAA,EAAO,EAAF,GAAA0pE,EAC3BvF,QAAMmF,EAAQhrE,EAAE,EAAM,GAAAorE,EAAOh0E,IAAF,IACrB4zE,EAAAA,EAAAA,GAAAA,EAAQhrE,QAAe0B,EAAF,EAAA,EAAA,GACrBspE,EAAAA,IAAAA,IAAU,EAAA,EAAM,GAAAI,EAAOh0E,IAAF,GAC3ByuE,EAAMmF,EAAAA,GAAAA,EAAQhrE,QAAQnK,EAAO,EAAF,EAAA,GAE3BgwE,EAAMmF,IAAAA,IAAQhrE,EAAE,EAAM,GAAAorE,EAAOJ,QACvBA,CAAAA,IAAAA,GAAQhrE,GAAE,GAAM,GAAO,EAAF,EAAA,GAC3B6lE,EAAMmF,QAAQhrE,EAAE,GAAM,IAAA,EAAO,EAAF,GAAAorE,EAC3BvF,QAAMmF,CAAAA,GAAU,GAAM,IAAO,EAAF,EAAA,GAAAI,EAC3BvF,QAAMmF,EAAQhrE,EAAE,EAAM,GAAAorE,EAAOJ,QAC7BnF,EAAMmF,EAAAA,EAAAA,GAAQI,EAACh0E,IAAM,IAAM,EAAO,EAAF,GAAAg0E,EAChCvF,IAAMmF,IAAAA,EAAQhrE,EAAE,GAAMorE,EAAAh0E,IAAO,GAAF,EAAA,GAE3ByuE,GAAMzuE,EAAI4zE,QAAIE,EAAA,GACRF,KAAAA,EAAAA,EAAQN,GAAWU,EAAAJ,QACnB5zE,EAAI,GAAM,IAAF,EAAA,EACdyuE,GAAMmF,EAAAA,QAAU,CAAM,GAAA,GAAK,GAAA,IACrBA,EAAAA,EAAAA,GAAAA,EAAQhrE,QAAekrE,EAAF,GAAA,IAC3BrF,EAAMmF,EAAAA,GAAAA,EAAQhrE,QAAQkrE,EAAO,GAAF,KAC3BrF,EAAMmF,EAAAA,GAAAA,EAAQA,QAAa,CAAA,GAAM,GAAO,GAAF,IACtCnF,EAAMmF,EAAAA,GAAAA,EAAAA,QAAmBE,EAAA,GACzBrF,IAAMmF,EAAAA,EAAAA,GAAUI,EAAAh0E,IAAM,IAAO,EAAF,EAAA,GAC3ByuE,EAAMmF,QAAQhrE,EAAE,GAAM,KAAO,EAAF,EAAA,GAAAorE,EAC3BvF,QAAMmF,EAAQN,GAAa,IAAF,EAAA,EACzB7E,GAAMzuE,EAAI4zE,QAAIE,EAAA,GACdrF,IAAMmF,EAAAA,EAAAA,GAAQhrE,EAAEgrE,QAAaE,EAAF,GAAA,IACrBF,EAAAA,EAAAA,GAAAA,EAAQhrE,QAAekrE,EAAA,GAAF,KAC3BrF,EAAMmF,EAAAA,GAAAA,EAAQA,QAAaE,EAAM,GAAA,IAAK,EAAA,EAAA,GACtCrF,EAAMmF,QAAQhrE,EAAE,GAAM,IAAO,EAAF,EAAA,GAAAorE,EAC3BvF,QAAMmF,EAAQN,GAAa,IAAF,EAAA,EACzB7E,GAAMzuE,EAAI4zE,QAAIE,EAAA,GACdrF,KAAMmF,EAAAA,GAAQhrE,GAAEorE,EAAMJ,QAAKE,EAAA,GAC3BrF,IAAMmF,EAAAA,GAAAA,GAAUI,EAAAJ,QAAWE,EAAA,GAAA,IACrBF,EAAAA,GAAAA,GAAQhrE,EAAEgrE,QAAa,CAAF,GAAA,GAC3BnF,IAAMmF,EAAAA,GAAAA,GAAUI,EAAAJ,QAAaE,EAAF,GAAA,KACrBF,EAAAA,GAAAA,GAAQhrE,EAAE5I,IAAM,GAAA,EAAO,GAAF,GAAAg0E,EAAAJ,QACrBA,EAAAA,EAAQhrE,EAAE,GAAMorE,EAAAh0E,IAAK,IAAA,EAAA,EAC3ByuE,GAAMmF,EAAAA,QAAqBE,EAAF,GAAA,IACzBrF,EAAMmF,EAAAA,GAAAA,EAAQF,QAAUI,EAAA,GACxBrF,IAAMzuE,EAAI,EAAA,IAAIg0E,EAAAJ,QACRA,EAAAA,GAAAA,IAAS,EAAM,EAAA,IAAYI,EAAAJ,QAAK,CAAA,GAEtCnF,GAAMzuE,GAAIkzE,IAAmB,EAAA,EAC7BzE,IAAMzuE,EAAIkzE,QAAmB5oE,EAC7BmkE,GAAMzuE,EAAIkzE,IAAmBc,EAAAJ,QACvB5zE,EAAIkzE,GAAqB,KAAF,GAC7BzE,EAAMzuE,IAAIkzE,EAAqBU,QAAFE,EACtBrF,GAtH6B,IAwJtC,GAAA,EAAA,IAAAuF,EAAAJ,QAkCEtpE,EAAA,GAAA,EACqB2pE,IAAAA,EAAAA,IAAA,IAAAA,GAAAA,EAAgC,IAAAd,EAAAA,QAAAA,EAAAA,GAAAA,IAAAA,GADrD,EAAA,IAGEa,EAAAJ,QAAAE,EAAA,GAAO,aAFYG,EAAAA,QAAAA,CAAAA,GATX,GAAA5hB,GAAAA,IAAAA,GAAAA,EACR/3C,IAAAA,EAAOs5D,QACPM,EAAAA,GAAU,IACVC,GAAAA,EAAAA,IAAYH,EACZI,QAAAA,EAAY,GACZC,EAAAA,IAAAA,EAAUr0E,IAQV,IAAKs0E,GAAAA,EAAAA,IAAAA,EAAeV,QACfW,EAAAA,GAAAA,IAAe,GAAKD,EAAAA,IAAAA,EAAAA,QACpBjC,EAAAA,GAAU,IAAI,GAAAH,EAAAA,IACnB8B,EAAK3B,QAAQF,EAAAA,GAAAA,IAAS,GACtB,EAAKqC,IAAAA,EAAAA,QACAva,EAAAA,GAAAA,KAAAA,GAAAA,GAAAA,IAGL+Z,EAAKS,QAAAA,EAAAA,GAAAA,KAAkB,GAAA,GAAA,IAAOlzE,EAAOC,QAChCkzE,EAAAA,GAAAA,KAAAA,EAAAA,GAAAA,IAAoBV,EAAAJ,QAACl5C,EAC1B,GAAKi6C,GAAAA,IAAAA,EAAAA,QAAgBl2E,EAAA,GAACuuD,GAAesD,IACrC0jB,EAAKY,IAAAA,IAAAA,GAAAA,EAAgB,IAAAZ,EAAAJ,QACrB,CAAA,GAAKiB,IAAAA,GAAAA,IAAAA,GAAkB,GAAA,GAAAb,EAAAh0E,IAAyCf,EAAA,EAAA,EAAA,GAAAqb,EAChEta,IAAK80E,EAAAA,EAAAA,EAAAA,GAAAA,EAAgB90E,IAAKy0E,EAAAA,EAAAA,EAAAA,GAAAA,EAAAA,IAC1Bx1E,EAAK81E,GAAAA,EAAAA,IAAAA,EAAAA,IAAAA,EAAmB7nE,GAAAA,GAAOinC,IAAAA,EAtKvB,GAsK8B,IACtC6gC,EAAKC,SAAAA,YAAsB9gC,EAAAA,QAAAA,IACtB+gC,IAAAA,EAAAA,EAAAA,wBAA6B,IAC7BC,EAAAA,EAAAA,KAAAA,OAAiBC,KAAAA,OACjBC,EAAAA,aAAiBzsE,EAAAopE,EAAAA,YACjBsD,CAAAA,MAAAA,EAAAA,SAAqBT,GAAAA,WAGrBjoB,EAAAA,WAAAA,EAAAA,SAAqBQ,GAAO3uD,EAAA61E,aAAQ,EAAM71E,EAAA81E,aAwfnD91E,EAAA61E,aArfY71E,EAAA4zE,QAAAkD,IAAAA,EAAAA,OAAV92E,EAAA4zE,QAA+CmD,SAAA,GAAAA,EAAAA,SAA8B,EAAA/2E,EAAAw7D,mBAEpEjG,EAAQv1D,EACbg2E,gBAAct4E,SACZR,EAAMwI,EAAAyE,KAAI3H,EAAMyzE,kBAAA,SAAA/4E,KAAA8C,EAAAk2E,cAET3gB,SAAOlM,EAAAA,KAAWrpD,EAAAm2E,cAEzB,SAAU3zE,KAAAA,EAAM4zE,gBAAA,SAAAl5E,GAAA,OAAAA,GAAA8C,EAGpBq2E,cAAO1hB,EAAAA,gBACEA,EAAAA,iBACLlmD,OAAUjM,OAAM,MAAAxC,EAAAw2E,aAAA/nE,OAAAinC,OAAA,MAAA11C,EAAAy2E,aAETz2E,OAAc20D,OAAAA,MAAAA,EAAcj3D,WACnC,IAAMs5E,EAAe7iE,UAAGwgD,EAAAA,WAActL,IAAWrpD,EAAAA,UACtBg3E,EAAeH,cAC9Br0E,EAAAA,gBAAMxC,EAAAmuD,mBAAA,CAAAQ,MAAA,OAElBjyD,WAIJ,OAAIyX,KAAGw6C,EAAMjxD,OACXu5E,EAAAC,EAAAC,GAAMD,EAAAjzE,UAAU6yE,YAAA,SAAA55E,EAAAwI,QAAA,IAEAyO,IAAGw6C,EAAAA,CAAMtF,GAAAA,MAAAA,IAAWl/C,EACtC,EAAI4sE,GAAW75E,EAAKk6E,OAAoC,CAAA,GACtDl6E,EAAAq4D,OAAU/yD,OAAM,EAAA,MAAA,IAAAA,MAAA,qCAEV,IACD40E,EAKFl6E,EAAAq4D,OAAAlM,WAAA4K,KAAP,GAAA9pD,GAAAA,EAAA,GAAqBokD,MACnB,IAAM7xD,MACC6xD,wCAEK,GAEZrxD,EAAAy3D,cAAW0iB,CAAAA,GAAUp5E,EAAAA,cAGhBP,OAAAwG,EAAAA,MAAP,IAAA1B,MACE5H,iDACK07E,IAAAA,IAAAA,EAAmB7nE,EAAAA,EAAAA,EAAOinC,cAC/B96C,SAAK67E,EAAAA,CAAAA,IAAAA,EAAehoE,EAAAA,cAAc46C,WAC7BqtB,GAAAA,GAAAA,GAAWxyE,GAAAA,EAAAA,GAAAA,MACX0yE,IAAAA,MAAAA,8CAGPzsE,IAAuBmH,EACrB1W,GAAAA,GAAKy7E,GAAAA,IAAAA,EAAAA,MAAgB/kE,OAEhB,MAAAgmE,IAAAA,MAAAA,+BACAjB,IAAAA,EAAAA,EAAgBz7E,MAAKo7E,WAAAA,GAAAA,GAGrBtwE,EAAA,GAAA6K,GAAAA,EAAA49C,EAAAA,GAAAA,MAAAA,IAAAA,MAAP,0BACqB2oB,EAAAA,GAAAA,OAAiBpxE,EAAA,IAAM,OAAAyE,IACTwR,GAA7B/gB,GAAK67E,EAAAA,UAAAA,cACFA,SAAAA,GAAaloB,IAAS,IAE7B7oD,EAAMgtE,GAAc93E,GAAK67E,EAAAA,KAAAA,OAAaloB,aAC1BrpD,IAAKoM,IAEfpN,IAAAA,EAAAA,OAASwB,EAAA2xE,UACc3E,KAAYl9D,KAAQlE,EAAAA,UAE3BuD,QAAOi+D,WAKpBl4E,KAAA47E,aAAAe,OAAP7hC,OAAA,MACM96C,KAAK67E,iBAAkBK,OAAAA,OAAiB,MAAMl8E,KAAA67E,aAAqBA,OAAAA,OAAa77E,MAAKk8E,KAAAA,WAAuB5yE,UAE3GtJ,KAAAg8E,WAAAziB,WAAAA,EAAAA,UAAPM,gBACO0hB,SAAgB7kE,GAGhB1W,KAAAy7E,cAAA9e,GAAAA,EAAAA,UAAP+f,kBACOhB,WAAAA,KAAsBjtB,cAAiB/3C,KAEvC0kE,iBAAAwB,EAAAA,UAAPrpB,mBACWmoB,SAAAA,EAAAA,GAAAA,IAAsBjtB,EAAAA,KAAAA,YAAWouB,EAAA,CAAY78E,GAAAA,WAAK07E,IAAAA,KAAiBnd,aAAgBhvD,KAEvFvP,KAAA67E,aAAApiB,GAAAA,IAAAA,IAAAA,EAAAA,KAAAA,aACLz5D,GAAAA,OAAKq7E,EAAAA,KAAAA,GAAAA,CAAAA,QAGA,WAAA5nB,IAAAA,EAAAA,EAAAA,QAAAA,IAAP,IAAAnxD,GAA0BiX,EAAyB7C,OAC3Ci9C,EAAQ3zD,MAAKk8E,EAAAA,UAAY3iE,gBACtBqiE,SAAAA,GAAajoB,KACpB3zD,aAAK47E,KAAajoB,YAEdmkB,EAAc93E,CAAAA,GAAK47E,eAAajoB,KAEtCkoB,aAAO77E,KACLsJ,YAAShH,EAAA,CACP,GAAA,QAAiCsY,EAAAA,UACX2+C,sBAMrB,SAAAj3D,GAAAw6E,KAAAA,cAAPx6E,GAAAg6E,EAAuB/iE,UACZqiE,kBAAkBM,SAAAA,EAAY3iE,GAAAA,KAAAA,iBAAkBqiE,EAAAA,WAAkBM,IAAAA,GAAAA,EAAY3iE,UAElFqjE,oBAAAzjB,SAAP72D,GAAAtC,KAA6Bq4C,iBACtBijC,EAAAA,WAGA,YAAA9nB,KAAAA,iBAAPlxD,EAA0BiX,WACjBvZ,KAAKg8E,EAAAA,UAAWpE,0BAAqBsE,SAAiBxlE,GAAAA,KAExD2kE,kBAAA0B,GAAAA,EAAAA,UAAgBxjE,mBACL4+D,SAAAA,EAAAA,GAAan4E,IAAKk8E,EAAAA,KAAAA,YAE7Bc,QAAA,IAAArjB,KAAAA,aAAAA,KAAP35D,KAAA47E,aACOI,GAAAA,IAAW5D,IAAAA,EAAAA,KAAAA,aAGX7oE,GAAA,OAAAnK,EAAAsuD,KAAAA,GAAAA,CAAAA,QAAAA,WAAmBC,IACxBrxD,EAAA8C,EAAAwV,QAAYkhE,IAAAA,IAAAA,GAAWlE,EAAAA,OAAAA,EAAAA,MAAgBjkB,EAAOj9C,UAEzComE,gBAAAG,SAAP36E,GAAAtC,KACEA,aAAK87E,KAAW3D,YAAaxkB,YAExB3zD,KAAA05D,aAAAA,KAAAA,YAAsBhjD,KAC3B1W,EAAK87E,UAAAA,sBAA8BplE,SAG9BpU,GAAAtC,KAAA2+D,cAAPr8D,GAAAg6E,EAAAjzE,UACErJ,mBAEK,SAAAsC,EAAA46E,GAAAA,OAAAA,KAAAA,WAAPtF,gBACOqE,KAAAA,YAAqBT,GAAAA,IAAAA,EAAAA,UAYrBuB,gBAAP,SACE/8E,GAAKk7E,KAAAA,WAAoBD,aACzBj7E,KAAK87E,YAAWhyD,KAAAA,EAChB9pB,UAAKg8E,sBACAhD,SAAQlvD,GAAAA,KACb9pB,WAAa84E,mBACRqC,IAAAA,EAAW9xE,UACXu3D,mBAI0B,SAAtB5H,EAAAA,GAAAA,OAAY/3C,KAAAA,WACd+3C,gBACLh5D,EAAAA,IAAKg5D,EAAAA,UAAY6hB,gBAOX,SAAAhc,GAAAA,KAAAA,WAAVsZ,aAKE6C,IAEAh7E,EAAAA,UAAKg5D,sBACAA,SAAY6hB,GAAAA,KACjB76E,WAAKg5D,mBACLh5D,IAAAA,EAAKg5D,UAAAA,gBACLh5D,SAAKg5D,GAAAA,KAAYgiB,cA4CZ14E,GAAAg6E,EAAAjzE,UAAP6zE,kBACE,WAEIh1E,KAIJ+zE,cAASjjB,KAAY/3C,iBAGfjhB,EAAKg5D,UAAAA,MAAY/3C,WACd+3C,KAAAA,aACGh5D,KAAKg5D,aAAYgiB,KAAAA,WAEzBlxD,QAAsB/I,KAAwCi7D,WAAtBhjB,QAAAA,KAAY/3C,QAiBlD6I,QADKkvC,KAAAA,QAAY/3C,SACPrZ,GAAAA,KAAMuzE,SAAA,EAAAn7E,KAAA4gE,mBAAA,EAAA,IAAA5gE,KAAAg5D,YAAA/3C,QAAAjhB,KAAAg5D,YAMIA,MAAAA,EAAAA,KAAY6hB,YACjB76E,SAAKg5D,KAAAA,EAAY8hB,UAAajc,eAClC7F,SAAAA,EAAY/3C,EAAAA,EAAAA,EAAAA,GACvBjhB,KACEg5D,YAA+B8hB,MAC7Bx4E,EAAAtC,KAAqBg5D,YAC4B8hB,SAAiB9B,EAAAA,KAAAA,YAGrDP,WAAyB1Z,EAAAA,KAElC/F,YADKA,WAAAA,EAAY8hB,KAAAA,YAKvB96E,SAAKg5D,GAAAA,EAAY6hB,UAAW1b,MAC5B,SAEA78D,EAAAwI,EAAsByE,GAAA,IAASurE,EAAAA,EAAc,EAC3CnlE,EAAA,EAAOmlE,EAAAA,EAAc,GAEG96E,KADtBy4E,YADsBqC,MAIXrC,GAAAA,IAAAA,KAAyB1Z,YAElC99C,MADAjhB,KAAKg5D,YAAY8hB,MAAAA,EAAaA,EACvBrC,KAIbz4E,YAAKg5D,SAAY6hB,MACjB,CAAA,QAAA,IAIAtrE,GAFA8xB,IAAYrhC,KAAKg5D,YAAYgiB,MAAAA,MACbh7E,KAAKg8E,YAAW9kB,MAAgB,EAAA,IAAT71B,MAAiBA,0EAK3CvX,IACb9pB,EAAAA,KAAKg5E,YAAQF,SACRqC,EAAAA,KAAAA,YAEPL,WACSrlE,EAAKzV,OAAKg5D,KAAAA,YAAYgiB,OACbh7E,KAAK87E,EAAAA,IAAAA,IAAW3zE,GAAa3E,GAAA,EAAT69B,KAA0B79B,GAAT69B,IAAegxB,KAElEjtD,EAAOqzE,EAEIj1E,GAAAxD,KAATqhC,UAAoB23B,IAAAA,GAAAA,aAA0B+F,QAC7Cia,OAAAA,KAAQlvD,YACRkvD,WAAQF,EAAAA,EAAS94E,KACtBA,YAAgB66E,SAIf7hB,GAAAA,MAAY/3C,KAAAA,EAAQ,IACzB/Y,IAAa8wD,GAAAA,GAAAA,EAAAA,KAAYgiB,GAAAA,IAAAA,KACzBh7E,EAAAA,EAAK4gE,MAAAA,IAAAA,GAAAA,aACAsa,QAAAA,OAAel7E,KAAKg5D,YAAY+hB,WAOzCv3E,EAAA4B,EAAKpF,KAAIoF,YAKPy1E,SAJOplE,GAAKrQ,MAGCpF,KAAK46E,EAAAA,GAAAA,EAAAA,EAAAA,KAAaxF,YAAW8F,UAAAA,EAAgBl7E,KAAwCg8E,WAC5E9kB,OACpB,KAGEjmD,GAAK,KAAQ7L,EAAImK,GAAA,OACfnK,EAAI,KAAKtC,IAAkB2S,KAAWujD,YAAwB33B,YACvDo6C,GAAAA,KAAAA,QAAuB3xD,QAE5B9pB,KAAAg5E,QAEIF,SAA4B,GAAA94E,KAAeqhC,SAAsBw4C,EAAsB,MACtF4B,KAAAA,EAAAA,GAAAA,EAAAA,EAAchmE,KAASujD,YAE5BgiB,UAESl4E,EAAAA,KAAkB2S,WAA2BtN,IAAA,KAAqC8I,GAC3FjR,KAAKy7E,EAAAA,GAAAA,OAAchmE,EAAMrQ,KACzBA,IAAQpF,KACRg5D,YAESl2D,YAA6B,GAASu+B,KAAO23C,QACtDh5E,QAAKy7E,KAAAA,QAAoBr2E,SACjB,GACRpF,KAGJm7E,SACF,EAAKn7E,KACCA,YAAK07E,MAAAA,EAAiBr6C,EAAOrhC,KAAK07E,YAAAA,SAAiBr6C,EAClDrhC,KAAKq7E,mBAAkBh6C,EAC5BrhC,KAAK4gE,aAAAA,GAAAA,KACL5H,YAEA+hB,WACG,IAUH,IAT8B/6E,EAAKi8E,EAAAA,EAAAA,IAAAA,EAAAA,CAAAA,OAE/BzyE,EAAAA,EAAAA,IACA63B,EAAAA,KACA65C,aAAcl7E,MAAKk7E,KAAAA,cACnBiC,GAASn9E,EAAAA,IAAKm7E,EAAAA,MACdlkB,GAAAA,KAAQj3D,EAAKg5E,IAAAA,IACboE,EAAAA,EAAAA,KAAOz3E,EAEAy3E,CAAAA,GAAAA,GAAOtyE,IAAAmG,EAElB3O,EAAAqD,IACF,IAAAsL,EAAK,KAEHA,EAAArL,EACI0a,CAAAA,KADatgB,cAAK47E,EAAAA,EAAa57E,GAAAA,EAAKm7E,EAAAA,EAAAA,MAAY,KACjCN,GAAS/3E,IAAAA,EAASR,EAAAqD,IAC9B2a,IAAKrP,EAIY,KADtBwnE,EAAgBoC,EAASv6D,CAAAA,KAAGtgB,cAHfsgB,EAMN5a,EAAAC,GAAI8yE,EAAAA,EAAAA,EAAAA,MAAyB1Z,KAAAA,GAElCj0D,IAAAmG,EADAjR,EAAAA,IAAK6+D,IAAAA,EAAAA,KAAAA,EAAAA,EAAe,CAAqBgc,KAAaE,cAKxD/6E,EAAKs7E,EAAAA,GAAAA,EAAAA,EAAAA,EAAAA,MAAct7E,KAAKm7E,GAAAA,IAAYlqE,EAAIowB,EAAMrhC,IAAAA,IAAKg5E,EAAAA,KAErDh5E,EAAAA,EAAK4gE,CAAAA,KAAAA,cAAqBt+D,EAC1BoD,EAAAC,GACFD,EAAAC,EAAA,EAAK,OAGD,MAAQ07B,KACN,EAAKrhC,KACHA,iBAAa84E,GAAS94E,KACtB07E,iBAEK1C,KAAAA,KAAQqE,kBACbpsE,GACFjR,KAAA4gE,mBACe0c,EAAAA,MAAgB,KAAA,EAAA,MAEpBx6E,KAAWu+B,EAAO5rB,GAAKrQ,KAAM62E,cAE5C,CAAAzyE,SAEAxJ,EAAAA,KAAKm7E,EAAAA,aACLn7E,KAAKm7E,aACLgC,QACGn9E,KACHm7E,SAAoBn7E,OAAK67E,KAAAA,QAAkBV,OAAAA,IAAYiC,MAC9CG,OAA0Bz6E,MAAS,KACrC06E,EAAM,IAIW,IADtB/E,GAAgB8E,EAAYC,KAHdA,aAMH/E,KAAAA,UAET,EAAAxnE,IAAA9L,EADAnF,OAAK6+D,GAAAA,EAAAA,GAAAA,IAAAA,KAAiD2e,EAAIzC,EAAY31E,GAC/DqzE,KAGFO,UACFuC,IAAAA,GAAAA,aAAmBJ,QAAgB95C,OAErCu/B,KAAAA,eAAqB,EAC1Bz7D,EAAAU,EAAA8P,EACFjQ,GAAAN,EAAKS,EACH7F,GAAAA,KAAKg5E,cACLh5E,KAAKg5E,UAAQF,EAAAA,EAAAA,KACb94E,SAAKm7E,KAAWva,mBAGhB5gE,EAAKg8E,MAAAA,KAAWhlB,YAAUmkB,GAAAA,KAAY,GAAI95C,KAAMrhC,QAAKg5E,SAEvD,GAAA,MAGE,KAAK,GAAQ5zE,KAAI4zE,QACXqE,aAAgBh8C,GAAY,cAA0CrhC,KAATqhC,QAAiCA,SAChGrhC,EAAKg8E,aAAWxD,EAAI/iE,IAASxE,EAC7B7L,EAAIM,IACJ,IAAAuL,EAGJ,IAAAvL,IACF,MAEE,KADgB1F,EAAAA,KAAKg8E,WAAW9kB,EAAAA,KAAgBikB,UAAiBlqE,EAATowB,MAGtD,KADArhC,GAAK6+D,IAAAA,IAAAA,EAAAA,KAAegd,aACbpD,KAEI0C,UAAoB,EACjCn7E,GAAAA,EAAKg5E,EAAAA,EAAAA,OAAQlvD,GAAAA,EACb9pB,GAAAA,IAAKg5E,KAAQF,EAAAA,EAAAA,MAAS3xD,IACtBnnB,GAAKm7E,aACLn7E,QAAK4gE,OAAAA,KAAAA,eAEF,EACH5gE,EAAAA,EAAAA,EAAK87E,GAAAA,EAAAA,EAAAA,GAAW5zE,KAAAA,cAEblI,KAEHm7E,UAAiB,EAAKlqE,GAAAjR,KAChB4gE,mBAA2Cv/B,EAAO,MAAew4C,KACnE75E,GAAK87E,KAAAA,QAAWtD,QAAax4E,KACrBg5E,QAIZF,SACF,GAAK94E,KACHy4E,SAAqBqD,EAAAA,MAAW3zE,KAAa,GAAAnI,KAAiBg8E,WAG5DhlB,KADAh3D,KAAK6+D,UAAAA,EAAAA,EAAe7+D,KAAyBg5E,SAGlC,MAAT33C,KAA6B,GACjCrhC,IAAAA,IAAKg5E,EAAAA,EAAAA,KAAQlvD,EAAAA,GACb9pB,GAAAA,GAAKg5E,MAAQF,EAAAA,EAAAA,KAAS,KACtB94E,GAAKm7E,KAAAA,GAAAA,EAAW,KAChBn7E,EAAK4gE,EAAAA,CAAAA,KAAAA,WAAqB4X,IAG9Bx4E,EAAKk7E,EAAAA,GAAAA,EAAAA,EAAAA,EAAAA,MAAeH,MAljBgB,KAAA3uE,GAAAA,GAAAA,EAAAA,KAA7BorD,WAAAA,OAAAA,0GChObshB,SACA,GAAA94E,KAGMq3E,SAEN,EAAAr3E,KAAA4gE,mBACU,EAAA94B,MAAS,KACT,EAAA6vC,KAAAA,WACAviC,QACA,MAAAkiC,KAAAA,EAA6CzjE,IAAAA,IAAOinC,EAAAA,EAAAA,GAAO9mC,IAAA,GAC3DA,GAAAwjE,IAAAA,EAAAA,EAAAA,IAAqC,IAAAvmE,EAAA,KAAAA,EACrCrL,EAAA,CAAA5F,KAAAq4E,WACNjZ,IACAqY,EAAAA,EAAAA,GAAAA,EAAAA,EAAAA,EAAc,MACdC,MAAAA,KAwKJ,EAAA,GAAAtyE,EArKSpF,KAAA87E,WAAAlE,IAAAA,KAAAA,GAAP,KAAA3mE,GAAA,OAAsCyF,KACNqK,eAArBu2D,EAAAA,GAAU3jB,EAAAA,EACjB3zD,GAAAA,EAAKs3E,KAAAA,IAAU3jB,GAAS,GAAA3zD,KAEpB83E,QAAmBR,QAAAA,KAEzB0B,QADY1uE,SAEVhB,GAAAA,KAAS6xE,SAAA,EACPn7E,KAAMk4E,mBACFA,EAAAA,KACUj+D,aAKb,GAAAtE,IAAA2mE,EDqPAV,CCrPA6B,EAAAtF,YAAAA,EAAP3gB,qBACW8f,GAAAA,KAAU3jB,CAAAA,EAAAA,EAAAA,KAAe3zD,OAAKs3E,eAElCoG,EAAA,aAAAtF,CAAAA,OAAAA,IAAPsF,EAAA9f,WACE59D,EAAAA,eAAKw3E,EAGA,IAAAmG,EAAAC,EAAA,MAAAt0E,EAAAA,EAAP,KAAAqM,EAAA,GAAA1G,EACEjP,oBAAiB6T,IAAOinC,KAAOhT,OAC/B9nC,EAAAA,KAAKw3E,QAAa7hE,EAAA3V,KAAAo1C,KAAA,EAClBp1C,KAAK23E,UAGA9jE,OAAAinC,OAAAhxB,MAAP9pB,KAAAw3E,WAEMx3E,aACFA,KAAKq4E,OAAQr4E,CAAKq4E,QAAAA,EAAOjZ,aAAciZ,EAAAA,aAAOZ,GAAmBz3E,OAAK23E,EAAAA,UAAQ70E,gBAC5E9C,SAAasgB,EAAAA,QAAGnY,IAGpBnI,KAAKq4E,UAAOjZ,KACZp/D,KAAK23E,UACL33E,GAAAA,IAAKo1C,IACLp1C,EAAAA,KAAK8nC,UAGC+1C,GAAA,OAAAC,EAAAA,KAARhzE,GAAA,CAAAxB,QAEE,WADKquE,IAAU33E,EAAAA,EAAAA,QAAKs3E,IAAUt3E,IAAKo1C,GAAAA,EAAAA,OAC9Bp1C,EAAK23E,MAAAA,EAAQ70E,UAGXq1E,aAAaR,SAAQ70E,GAAAA,KAAYwd,UACpCtgB,WAAasgB,KAAGpY,UAHlBlI,IAAAA,EAAKw3E,UAAWx3E,mBAQZ,SAAAsC,GAAAy7E,KAARvG,WAAgCtvE,GAAeC,EAC7CkB,UAAUsuE,QAAQ70E,WAGX9C,KAAQA,UAAK23E,OAAQ70E,OAAiB,MACzC9C,KAAK23E,WAAWa,aAAiBrwE,KAHnCnI,QAAKw3E,GAAAA,EAAAA,UAAqB1tD,MAAA,WAAOwqD,GAAAA,IAAAA,KAAoBpsE,OAQlD,IAAA,IAAA5F,EAAAtC,KAAAkI,OAAPk3D,OAEEp/D,KAAK8pB,OACL9pB,aAAc,EAUTA,KAAA23E,QAAAa,OAAP,EAAAl2E,GAAWmT,IAAkCtN,EAAAA,KACvBwvE,QAAX7vC,GAAAA,KAAAA,GAGW9nC,KAAhBA,OAAK8nC,QACP,EAAO5/B,KACLyvE,QAAkBzvE,EAAAA,KAClBktC,KAAa,EAAT/T,KACFrhC,OAAK8nC,GAASk2C,EACdh+E,UAAK89E,OACL,WAEiB,GAAOz8C,KAExBs2C,QAAA33E,KADAA,UAAcA,KAGEo1C,MAATA,EAAAA,KACPp1C,QAAW8C,OAEb9C,IAAKo1C,IAAMp1C,EAAAA,KAAKo1C,QAGAtyC,OAAhB9C,EAAK8nC,GAAAA,EAAAA,IAAqC5/B,KAC5ClI,QAAK+9E,GAAKtoE,aASPzV,KAAAw3E,WAAPx3E,KAAW04E,IACT,UAD2BsF,EAAA3rB,UACP0rB,KAAhB/9E,SAAK8nC,EAATh9B,EAIAyE,GAAoB,GAAhBvP,KAAK8nC,QAQPhlC,OAJI9C,IAAK8nC,IAAAA,EAAAA,KACP9nC,QAAK89E,OAGF99E,EAAK23E,GAAAA,EAAAA,IAAQ70E,KAEX60E,QAC2CvyE,GAC5Ckb,IAAItgB,EAAK23E,EAAAA,QAAQ70E,KAAS00E,WAE1Bx3E,KAAKq4E,IAAAA,OAAOjZ,EAAAA,EACd9+C,eAAgBm3D,EAAAA,EAAAA,KAAAA,EAAAA,UAEFz3E,MAAKq4E,WAAOX,KAAAA,QACrBW,KAAOjZ,OAAAA,GAAS4e,EAElBtG,UAAwCc,IAC3C,SAEwBl2E,EAAAwI,EAAAyE,GADNvP,GAAAA,IAAK23E,KAAAA,OAAWxvE,CAAIuwE,GAAAA,IADvBp4D,KAIFm4D,OAAAA,KAAyB1Z,EAAAA,GAAAA,CAAAA,IAIlC35D,EAAA9C,EAAAwI,KAHA9K,GAAKq4E,KAAOjZ,EAAAA,CAAAA,KAASt3B,OAChBuwC,EAAAA,KAAOZ,SAAAA,MACZz3E,GAAAA,EAAKq4E,IAAAA,GAAOX,EAAAA,YAAc13E,KAI9BsgB,OAKKA,IAAK,IAAGA,KACbm4D,MAAgBz4E,KAAK23E,IAAQr3D,GAAGnY,KAAIitC,IAAA,GAAAp1C,KAAAo1C,IACP2pB,EAAAA,GAAAA,IAI3B/+D,KAHAA,QAAKq4E,EAAAA,EAAOjZ,GAAAA,KAAS2e,KACrB/9E,EAAKq4E,EAAAA,KAAOZ,EAAAA,UAAen3D,IAC3BtgB,SAAKq4E,EAAOX,GAAAA,QAAAA,IACLe,IAAAA,GAAAA,GAlCXz4E,IAAKw3E,KAAAA,OAAWx3E,CAAKo1C,GAAAA,IAAKp1C,KAAO04E,OAwChCf,GAAAA,IAAUN,KACfr3E,QAAYA,KACZA,SAAcA,KA/KlB23E,QAAaoE,OAAAA,CAAAA,IAuLbxsE,GAAA,EAAAnK,EAAApF,KAAA23E,QAIE70E,OAAoBi2E,EAAA9nE,GAAA,EAAA8nE,GAAAA,KAAAA,OAHZjiB,SACA1xD,EAAApF,KAAAi5E,OAAAA,aAID,EAAA1pE,EAAAzE,EAAAmG,EAAAjR,KAAAkI,OAAPwvE,YACO5gB,KAAAA,OACL92D,QAAKi5E,IAAAA,IAAY,IAGZ1pE,EAAA,CAAA,KAAAipE,GAAAA,IAAP,KAAAjpE,EAAWkG,KAAkCtN,QAClC8wE,GAAAA,IAAAA,IAGTj5E,IAAK82D,GAAAA,aAASwd,QAAAA,OAA2BnsE,KACrCnI,OAAK82D,QAAMh0D,EAAS9C,KAAAo3E,OAAAA,aACjBtgB,EAAAA,KACL92D,OAAKi5E,aAAY,EAId1pE,EAAAnK,IAAA,KAAA+C,GAAP,EAAA/C,IAAA,IAAWszE,EAAX14E,KAAA23E,QACMuB,GACJ/wE,KAAInI,cACFk5E,QAAM,OACGR,KACH14E,OAAK+4E,QAAS/4E,EAAK82D,KAAAA,OAAAA,aACNiI,EAGjB/+D,KAAAq4E,OAAW72E,aAAKM,EAGdyN,OAFAvP,KAAK82D,WACAmiB,KAAAA,IACEn3E,MAMbQ,GAAAtC,KAFAA,QAAK82D,EAAQ92D,KACbA,KAAKi5E,EAAAA,KAAAA,OAGT,IA1Ca+E,EApJTh+E,GAoJS49D,EAAAA,yFC5Lb,EAAMqgB,OAAYC,EAAA70E,UAuBlBnB,MAAA,WAyCElI,KAAkDm+E,MAChD,GADiBn+E,KAAA4nE,WAAA,GAA+BsW,EAAA70E,UAAAmvE,IAA/B,SAAA5Q,EAAAA,EAAAA,GAA+B5nE,KAAAm+E,YAAAA,KAAAA,QA9D9B,EAgEhBC,EAAA9J,eAAgBhyE,EAAAwI,EAAAyE,GAAAvP,KAAA82D,MAAAh0D,OAAA66E,EAAAvG,gBAAAp3E,KAAA82D,MAEbG,GAAAA,KAASgiB,WAAIoF,KAAWzW,EAC7B5nE,UAAK8C,IACL9C,SAAKs+E,GAAAA,IAAaxzE,EAAA9K,KAAIq+E,GAAAA,EAAAA,GAAWF,KACjCn+E,UAAKu+E,GAAAA,OAAmB,GACxBv+E,IAAKw+E,EAAAA,KAAAA,SAAgBx+E,KAAIy+E,kBACpBC,QAAAA,OACL1+E,EAAAA,MAAK2+E,SAAAA,GAAAA,OACL3+E,EAAAA,MAAK4+E,GAAAA,EAAAA,WAkJT,EApLgBt8E,KAAAu8E,OAAd7+E,KAAA82D,MACE,GAAA92D,KAAei5E,WACV6F,EAAOh8E,GAAAA,KACV46E,EAAA9f,WAGOx4D,GAAK05E,KAAO,CAAAC,EAAAC,KAAAnrE,OAAuB+D,eAAkB9U,EAAUsC,aACjDA,CACrBlB,OAAIA,IAAAA,EAAAA,YAAiBwrD,EACd,IAAI7nC,EAAI,WAAa/kB,EAAAA,oBACC+kB,EAAAA,EAAAA,GAAAA,QAGpBixD,IAAS50E,IAGpB5B,EAAA,SAAO20D,IAwBFnsD,IAAAA,EAAA2lD,IAAAA,KAAPmX,UACEtlE,EAAM28E,KAAYd,mBAA2Bn+E,EAAAA,EAAKm+E,IAAAA,MAAAA,IAAAA,MASlD,mDAPwBr7E,KACdw7E,OAAAA,IAAW5+D,WAAS4+D,GAAAA,KAAAA,OACpBC,EAAAA,KAAAA,WAAmBv+E,IAAKu+E,WAAAA,GAClCU,KAAUT,iBAAkBx+E,EAAAA,KAAKw+E,cACvBE,IAAAA,YAAgB1+E,GAAK0+E,KAAAA,eACrBC,EAAAA,KAAAA,kBAAwBA,EAAAA,KAAAA,aACxBC,EAAAA,OAAmBA,EAAAA,UACtBK,SASFn0E,GAAA,IAAAwuD,EAAAA,IAAP4lB,EAAA,IAAAp0E,EAAAhI,OACE,OAAyByM,EAChBnK,IAAOA,IAAIpF,EAAAA,EAAK8C,aACnBwH,MAAKtK,EAAAA,EAAKi3D,EAAAA,EAAAA,SACd7xD,EAAM8C,CAAAA,IAAQlI,EAAKw+E,EAAAA,GAAAA,GAAAA,aACbr2E,MAAMnI,IAAKw+E,IAAAA,EAAAA,EAAAA,EAAAA,EAAAA,SACC7oE,EAAApG,EAChBzN,YAAeuH,EAAAA,SAAU8H,EAAAA,SAAWnR,GAAAA,OAAKs+E,GAAAA,EAAYp2E,UAGzDuoD,MAMK,WAAA,IAAA3mC,EAAAA,IAAPo1D,EAAAl/E,KAAA4nE,UACO9kE,KACL9C,oBAAKu+E,OACLv+E,EAAK0+E,OAAAA,IAAAA,KAAgBznB,QAChB0nB,EAAAA,OAAAA,KAAAA,OACL3+E,EAAK4+E,WAAAA,IAAc5+E,KAUds+E,YAAAxF,EAAAA,iBAEL94E,KADAA,iBACIA,EAAAA,cAAeA,IAAK4nE,KAAAA,eACjB8W,EAAAA,cAGP1+E,KAAa0+E,cACD92E,EAAAA,iBAAM5H,KAAA2+E,iBAAA7zE,EAAA8zE,YAEbJ,KAAAA,YAAmB17E,GAAAA,EAAU9C,UAAKu+E,QAAAA,WAA6BA,IAAAA,IAAAA,EAAAA,GAAAA,EAAAA,EACpEv+E,EAAAA,KAAKi3D,SAAOj3D,EAAK8C,CAAAA,EAAAA,KAAAA,KAAgCm7E,OAU5CnzE,IAAA,IAAAyE,EAAAvP,KAAAq9E,cAAPvyE,IAAmB5G,EAEjBkB,EAAA,IADApF,KAAK4+E,cACA5+E,GAAK8C,EAAAA,EAAAA,GAGVR,EAAAgI,KAAItK,MAAK0+E,UAAiB1+E,MAAKu+E,KAAAA,KAAAA,WAAoBv+E,EAAKm+E,IAAAA,OAAAA,GAAAA,EAAAA,UACjDQ,MAAAA,WAAmB3+E,KAG1B8C,OAAa,EACX9C,KAAMu+E,iBAAU,EAAAv+E,KAAA0+E,eAAA,EAAA1+E,KAAA2+E,kBAEbL,EAAAA,KAAWt+E,aAAKu+E,GAAAA,EAAAA,UAAsDr6E,SACtEs6E,SAAAA,GAAcx+E,GAAAA,KAAK8C,aAMnB,EAAA9C,KAAA8C,QAAA0gE,KAAAA,UAAPxjE,KACE0+E,eAAS1+E,MAAKw+E,CAAAA,GAAAA,GAAAA,EAAcxhC,MAAgBh9C,IAAKw+E,MAAAA,yCAQ5Ctb,KAAPsb,cACgBx+E,KAAKw+E,QAAAA,KAAAA,kBACFA,EAAAA,KAAAA,iBACbr2E,KAAc8uD,OACJqnB,KAAAA,UAAWlnB,EAAAA,EAASlvD,EAAOC,IAElC+2E,EAAA71E,UAOFg0E,YAAA8B,SAAP78E,GAAA,GAAAtC,KAEE4+E,aAD4C,EAC/B5+E,KAAOA,OAAK8C,GAAAA,KAAa47E,eACjBF,KAAAA,kBACPx+E,KAAKw+E,mBACPt2E,KAAQy2E,kBACCL,MAAWntE,CAAAA,GAAMjJ,GAAOC,EAAAA,MAG7C,IAAOwI,MAOF,yCAED3Q,KAAK0+E,WAAAA,KACF57E,oBAA4B9C,EAAAA,EAAKu+E,EAAAA,EAAAA,KAAAA,cAAwBz7E,KAAAA,OACrD87E,OAAAA,EAAAA,UAAoBD,aAAAA,SAKzBS,GAAQp/E,OAAK4+E,IAAAA,KAAc5+E,cAAKs+E,KAAat+E,KAAKi3D,cAExDmoB,IAAe,GAAMC,GAAM/uE,EAAAA,UAAS+uE,aApMxC,SAAaxG,GAAAA,wFCjBbzhB,SAAAtsD,EAAAyE,GAAA,MAGE2vE,EAAA71E,UAFU81E,gBAyCZ,WApCS,IAAA71E,IAAAA,EAAAA,GAAPwB,EAAA,EAAAA,EAAA9K,KACE8C,SAAa9C,EAAAA,CAAAA,IAAKs/E,EAAAA,KAAQx8E,cAAoBsC,IAC5CpF,EAAAA,EAAKs/E,IAAAA,KAAQl6E,cAAYkE,GAAAA,EAAAA,EAAAA,IAItBhH,EAAAwI,GAAA9K,KAAAe,WAAPoQ,MAAA5B,EAAiBpP,IAAjB,OAAAmC,GAAA48E,EACQK,UACJC,SACAl2E,SAAkBA,GAClB4mE,IAAAA,EAAAA,KAAAA,KAEFlwE,iBAAkBu/E,EAAAA,KACTj2E,YAAUtJ,KAAMu+E,iBAAKkB,KAAAA,SAAqBF,KAC1C5+D,aAGH3gB,KAAA2+E,kBAAAc,CAAAA,IAAAA,EAAAA,KAARb,YACE5+E,KAAgBkwE,WAKhBlwE,KADAi3D,OAAahmD,EACJ7L,EAAI0F,EAAG1F,GAAIpF,EAAAA,EAAKs/E,IAAAA,EAAAA,KAAQx8E,IAAQsC,GACvC6L,EAAA3O,EAAItC,GAAAA,IAAKs/E,EDcmBx8E,GCdXsC,EAAAA,OACfgb,GACA,KAAA,CAGJs/D,EAAAC,KAAe9rE,OACb+D,eAAgB+nE,EAAA,aAAA,CAAAz7E,OAAA,IAAAy7E,EAAAC,kBAAA,EAAA,IAElBL,EAAYrP,oBACA5mE,IAAQyc,KAAMw5D,QAAYC,GAAAA,OACjCF,EAAAA,UAAQrlE,QAAc,WAxClB2lE,IAAAA,IAAAA,EAAAA,kGCNbt9E,EAAAwI,GAAA,IACAyE,EAAAvP,KAEAoF,EAAA,CAAAo6E,SACE10E,EAAAxB,QAAAwB,EACUshE,QAAA8D,YAAA9D,GACQpsE,KAAAiE,QAqBpBqG,KAlBSlF,GAAA0F,EAAAxB,QAAAu2E,WAAKl9E,OAEV4M,EADAvP,qBAIFoF,IAAA0F,EAAA6V,SAAAre,IAAAw9E,EAAAz2E,UAAWo2E,qBAAX,SAA+Bn9E,GAAA,IAAOtC,EAAAA,WAAaub,CAAAA,uCACnDhM,IAAA,GAAAvP,KAAAs/E,QAAW/vE,KAAAjN,EAAA,CAAAwI,EAAAyE,EAAA,MAAO,QAAlBzE,EAAA,MAA+B,IAAAlD,MAAO5H,uDACtCsC,EAAA4tE,YAAW,EAAA5tE,EAAAgH,QAAAyc,MAAAzjB,EAAAk9E,UAAXx/E,KAAAs/E,QAAiCrlE,OAAYmyD,EAAAA,KAAAA,ED4B/B8D,GC5BuCtkE,EAAAA,sCACrDgM,eAAAmoE,EAAW,aAAA,CAAA77E,OAAA,IAAX67E,EAAAC,mBAA6B,EAAY5T,IAAAA,EAAAA,EAAQz/C,MAAAA,iCACjDrqB,EAAAwI,GAAA9K,KAAAosE,QAAA9pE,EAAAtC,KAAWiE,KAAA6G,EAAA,OAAAm1E,EAAA52E,UAAXw2E,KAAA,SAA8Bv9E,GAAOtC,OAAKosE,KAAQviE,QAAM/G,EAAAA,wCACjD,UAAAo9E,CAAAA,IAAP,WAAe3kE,OACAvb,KAAKosE,QAAQviE,GAAAA,YAC1B,EAAKmR,cAGM,IAAAmlE,OAAAA,eAENF,EAAA52E,UAAAo3D,UAAP,CAAAxlD,IAAA,WAA8C,OAAI4sB,KAAAA,QAvBpDjlC,GAAao9E,YAAAA,EAAAA,oGCLbp0E,OAIAs1C,YAAA,EACEC,cAAoBi/B,IAAAA,OAAAA,eAEpBH,EAAA52E,UAAA,QAAW,CAAA4R,IAAA,WAAA,YAAXmxD,QAAkCz/C,OAAO3sB,YAAW8+B,EAAAA,wCACpDmhD,EAAA52E,UAAA,SAAW,CAAA4R,IAAA,WAAA,YAAXmxD,QAAAviE,MAA8B/G,QAAYs9E,YAAMt9E,wCACzC,SAAAu9E,GAAAA,IAAPv1E,EAAA9K,KAAe4C,QACbiH,MAAajH,IAAK5C,GAAAA,GAAKogF,EAAAA,OAAMt9E,IAI7BsC,EAAA+6E,kBACaj3C,IAAAA,EAAAA,UACJ3F,YAES2F,WAAY,OAAIrB,IAAAA,EAAAA,UAE7Bo4C,KAAAF,EAAA9nC,cAAAA,GAAP,KAAA,CAAAqoC,EAAAC,EAAyBrV,KAA2C/1C,OAClEvd,eAAkBqgC,EAAAA,aAAkBizB,CAAAA,OAAwB/1C,IAjBhEorD,EAAaJ,uBAAAA,gGCHb,YACA,CAAAllE,IAAA,WAGA,OAMEjb,KAAAogF,MAAAthD,WAAoBoiB,YAAAx+C,EAHZy+C,cAAAq/B,IAAAA,OAAsB5oE,eAI5B5X,EAAAA,UAAe,SAAIggF,CAAAA,IAAAA,WAAmBt9E,OAAMuoB,KAAAA,MAAQ4J,QAAQqsB,YACvDu/B,EAAAA,cAAiB,IAAAT,EAAAA,UAAchgF,QAAWirB,SAAQsH,EAAAA,GAAK,KAAAjwB,EAAA,GAAAA,GAC5DtC,KAAK0C,MAAMuoB,QAAQgP,OAAAA,GAAAA,KAAAA,MAAiBiP,SAAM5mC,EAAAwI,GAAAA,GAAK01E,KAAAA,MAAAA,SAAqBl+E,EAAK4oB,IAAAA,EAAAA,WAL3Ew1D,EAAAr3E,UAAA4uC,kBAAW,SAAA31C,EAAAwI,EAAAyE,GAAA,YAAX6wE,MAAAnoC,kBAA8DuoC,EAAAA,EAAAA,IAAAA,KAAgBp9E,EAAAA,2CAO9EwU,eAAA+oE,EAAW,aAAA,CAAAz8E,OAAA,IAAXy8E,EAAAC,wBACWl+E,EAAMuoB,IAAAA,EAAQC,EAAAA,MAAWlrB,EAAAA,EAAAA,MAAK0C,EAAMuoB,oBAAkB41D,EAAO7gF,GAAAA,IAAK60B,EAAAA,KACvE70B,KAAK0C,MAAMuoB,EAAAA,KAAAA,gBAAwBvoB,IAAAA,EAAMuoB,aAAejrB,KAAOA,QAAK8gF,IAAAA,EAAAA,cAC9Dl5E,KAAMlF,MAAAuoB,QAAA4J,OAAA,UAAA70B,KAAAygF,WAAA,uCAElBluD,IAAA,aAAWvyB,KAAA0C,MAAAuoB,QAAAgP,kBACT,WAAYo1C,OAAAA,EAAQwQ,gBAAgB50D,KAAAA,EAAQ4J,0CAE9CxrB,UAAA,iBAAW,CAAA4R,IAAA,WAAA,OAAXjb,KAAAwgF,gBACSxgF,OAAKygF,YAAWZ,EAAK7/E,cAAWirB,IAAQsH,2CApBtCquD,CAAAA,IAAAA,WAAAA,GAAAA,uFCDb31D,QAAAC,SACElrB,KAAA0C,MAAoBuoB,QAAAvoB,IAAAA,OA0BtB1C,KAxBS8gF,UAAArtB,MAAAA,IAAAA,MAAAA,kDACaA,YAAuB,EAACwD,cAA6BA,IAAOqC,OAAAA,eAEzEunB,EAAAE,UAAAA,SAAP,CAAA9lE,IAA8Co9B,WACrCr4C,OAAKyzD,KAAAA,QAAAA,KAAuBpb,KAE9B31C,MAAAuoB,QAAAuoC,SAAAA,YAAP,EAAArS,cACE,IAAOnhD,OAAWwzD,eAAAA,EAAAA,UAAuB,YAAmC,CAAAv4C,IAAAo9B,WAAsBihB,OAAAA,KAE7FmnB,WAAAO,KAAAA,KAAAA,MAAP/1D,QAA8CotB,MAC5C6I,YAAYsS,EAAAA,cAAAA,IAAuBnb,EDAUptB,GCExC01D,EAAAC,mBAAArtB,GAAAA,KAAP,CAAA0tB,EAAAC,KAA0B3nE,OACxB3B,eAAkB27C,EAAAA,aAAAA,CAAAA,OAAuB78C,IAEpCwqE,EAAAC,eAAAC,EAAAA,IAAAA,EAAP,oBACSphF,EAAAA,GAAKuzD,KAAAA,MAAAA,EAAAA,OAAmBh6C,EAAI7C,UAE9B+8C,mBAAAC,SAAP2tB,EAAAv2E,GAA0B6oD,OACxB3zD,KAAOA,MAAK0C,mBAAMgxD,GAAAA,SAEbpxD,GAAA,OAAAwI,EAAAw2E,EAAAA,eAAPC,EAAAl4E,UACE03E,cAAYrtB,SAAAA,EAAAA,GAAAA,OAEhB1zD,KA3BayzD,2GCDb+tB,GAAA,SACEl/E,EAAAiN,GAAA,OAAoBzE,EAAApI,EAAAA,EAAAA,eAEb6+E,EAAAl4E,UAAAvB,cAAS25E,SACT/+E,EAAAA,GAAMivD,OAAAA,KAAAA,mBAGbrvD,EAAAwI,IAAAy2E,EAAAl4E,UAAAkqD,mBAAW,WAAXzoD,GAAA,OACE9K,KAAA0C,MAAO1C,mBAAW2xD,EAAAA,IAAe+vB,EAAAA,sCAGnC,OAAA1hF,KAAAuzD,mBAAWjxD,EAAAwI,IAAAy2E,EAAAl4E,UAAaqqD,mBACtB,SAAYhxD,EAAAA,GAAAA,OAAMivD,KAAAA,MAAegwB,mBAGnCr/E,EAAAwI,IAAAy2E,EAAyB3L,UAClBlzE,cAAMivD,SAAegwB,EAAAA,GAAAA,uCDG5B,GCnBFT,EAAaC,UAAAS,GAAAA,6/BCHb9mC,OAAAhwC,IAAAyE,EACAlG,UAEAyB,EAAAzB,UACA,IAAAkG,KAGawjD,EAAAA,MAAAA,KAAe8uB,YACf7uB,SAEb1wD,EAAAwI,EAAAyE,EAAAnK,GAAA,IAAA6L,EAAA0E,EAmBEU,UAC2B2M,OAD3B/T,EAGE0G,EAAA,EAAA7K,EAAA,OAAA1F,EAAOA,EAAAyO,gCAfFiuE,EAAAA,GAAAA,EAAAA,GAAAA,iBAEC95E,SAAgBwP,mBAEhBwZ,QAAYqjB,SAAI78B,EAAAA,QAYjBmB,SAAOrI,EAAK0B,EAAAA,EAAIgR,QAAgBrM,IAAQgC,IAAQxT,EAAG7C,EAAAywD,OAAAA,EAAAA,GAAAA,EACxD5tD,KAAK2B,EAAOwJ,EAAAA,MAAS0S,GAAgBrM,EAAAA,EAAAA,EAAAA,GAAQ7P,EAAAA,EAAQmK,EAAGnG,EAAAkoD,EAAAA,GAAAA,EAAAA,EAAAA,KACxD/jD,GAAKgc,OAAUtV,EAAA,GAAI1G,GAAAmgE,OAAAA,eAzBYtkE,EAAAyE,EAAAN,GAUjCA,GAAA8yE,EAAA/hF,MAAAA,KAAAy0C,SAAW,SAAAnyC,EAAAwI,GAAA,gBAAXyE,EAAAnK,GAAA0F,EAAgEyE,EAAAnK,EAAA9C,KAAOtC,OAAKgI,4CAE5EopD,cAAA4wB,EAAAhvB,aAAWgvB,EAAAjvB,kBAAA,EAAX,IAAAkvB,EAAAC,EAAA,MAAwC1+E,EAAA0+E,EAAOliF,MAAKgxB,EAAAA,EAAAA,MAAU5tB,EAAAA,EAAAA,qCAE9D,EAAA,IAAAwC,EAAA,SAAAu8E,YAAWC,EAAA7yE,GAAA,IAAAnK,SAAXpF,OAAAA,KAA+B,OAAOA,EAAKirB,mDAcpC,IAAAvlB,EAAA8R,aAAPpS,EAAA4rB,UACE,IAAAtrB,EAAA8R,aAAapS,EAAAuT,KAAArI,KACbtQ,IAAKirB,EAAAA,QAAQ3hB,MAGR,EAAA04E,EAAAjvB,cAAAljC,EAAP/oB,KAAAwJ,KAA4BxJ,IAC1B9G,EAAAA,QAAY2Y,MACP7R,EAAAA,EAAAA,cACAmkB,EAAQ4E,QAAOlX,IACpB3Y,EAAAA,UAAKirB,EAAQW,GAAAA,EAAAA,OAAAA,EAAc5rB,EAAAA,GAAK2Y,OAChC3Y,eAAemc,EAAAA,UAAarV,WAGvB,CAAAmU,IAAA,WAAP,OAAAjb,KACEA,UAAKirB,OAAQnB,YACRg4D,EAAAA,cAAkB,IAOlBjuE,OAAA+D,eAAPwqE,EAAcnvB,UAA2B,WAAA,CAAAh4C,IACvC,WAAoBtY,OAAAA,KAGV3C,UAAKqiF,OAAAA,YACSv/E,EAAAA,cAAgB6V,IAAgBwC,OAAMvD,eAAqCwqE,EAAA/4E,UACjGogE,SAAiB7yC,CAAAA,IAAAA,WACjB52B,OAAKqiF,KAAAA,QAAmB5Y,QAElB3qC,YAER,EAAen8B,cAAsB+3B,IAAAA,EAC/B4nD,UAA2B3/E,QAAOuvD,WAEfiwB,EAAA94E,UAAdqxB,QAEH6nD,KAA6B14E,MAAM24E,KAAAA,QAGhB34E,WAAM/G,EAASuG,UAE7BQ,OAAMkmD,SAAUwd,EAAAA,GAAS9D,KAEzB5/D,KAAMS,EAAAA,KAAammD,KAAAA,EAAAA,KAGrB5mD,QAAMoQ,OAAmB3X,EAAGwI,GAAW2lD,KAAAA,QAa1CzwD,cAAK8hF,KAAAA,MACAl2E,KAAQ0E,UAAgB1E,KAAAA,CAAQ+M,KAAGrW,EAT5CK,KAAOgqB,KAEF3sB,EAAAA,UAAK8hF,MAAAA,WACDl2E,KAAAA,QAYL62E,QACN9/E,KAAOkH,iBAAMumD,GAAuBgyB,EAAGK,UAChC54E,OAAM6V,SAAuB+wC,EAAAA,QAAAA,IAK5BqxB,IAAAA,GAAAA,GAAAA,IAAAA,EACRn/E,EAAOiJ,KAAQjJ,QAAOgqB,EAGxB3sB,KAAKgxB,mBAAsBplB,EAAAA,SAUtB5L,KAAA2Y,MAAApO,EAAAA,MAAP,KAAAjI,EAAAyN,IAAiC2gB,EAA+BlW,MACxD7X,KAAS3C,EAAK2C,KAAAA,EACpByC,EAAAwxB,aACMj0B,EAAOiJ,GAAAA,KACTy2E,iBAEGP,GAAAA,EAAAA,UAAkBh3E,EACdqpB,IAAcvoB,EAAAA,EAAAA,MAAgB+gB,EAAAA,UAClCm1D,EAAAA,EAAAA,MAAAA,EAAAA,aAGDY,GAAkB92E,IAAAA,EACxBjJ,UAAe2N,CAAAA,IAAK0B,EAAI1B,EAAAA,MAAK6B,OAAWvG,IAAcjJ,EAAOgqB,MAAAA,OAGzD+1D,EAAa//E,EAAOiJ,EAAAA,MAInB8kB,UACEM,SAAU7U,GAAKxZ,EAAOiJ,MAAAA,KAQxB2D,EAAAkhD,SAAA2C,EAAAA,MAAAA,OAAPz9C,EAAA,EAAA,EAAmBw9C,EACjBnzD,SAAKuK,EAAAA,KAAAA,kBAAqCnF,EAMrCwG,MAAA0E,KAAA+iD,IAAAA,EAAAA,MAAP,EAAA,KAAAjuD,EAAAunB,QACOpiB,KAAAA,iBAAkB5H,EAAOiJ,aAMzB,CAAA,IAAAzG,EAAAswB,EAAAA,EAAAA,EAAAA,EAAAA,MAAAA,cACLz1B,EAAAA,EAAKuK,EAAAA,GAAAA,GAAAA,EAAAA,MAAiB5H,IAAAA,EAAAA,EAAOgqB,SAAQ3sB,KAAK2C,kBAGrCyC,EAAAwG,MAAA0nD,EAAAA,OAAAA,KAAPtiC,UACE7U,KAAqBnB,EAAOhb,QAAK2C,EAAAA,UACZ4H,YACdA,SAAYo4E,EAAAA,EAtKGpzE,GAoBrB,IAAAnK,EAAAuf,KAAAA,OAAAA,GAAAA,EAAAA,EApBQysC,CAAAA,GAAsB,IAAAhlD,EAAAA,MAAAA,OAAtBglD,KAAAA,iGCPbp/C,IAAA1B,KAAA6B,IAAA/M,EAAAwG,MAAAtJ,EAAA8C,EAAAunB,OAISi2D,GAAAA,IAAiBx9E,EAEhBwG,QAAAi3E,GAAAA,KAAsC7xD,UAEvC7U,KAAA/W,EAAAwG,SAAAke,EAAPzgB,UACErJ,YAAKmgE,SACLngE,GAAAA,KAAK6iF,YACL7iF,GAAK4iF,KAAAA,KAGA,KAAAR,EAAA/4E,UAAAg1D,YAAP,WACOukB,KAASpzE,aACT2wD,KAAUngE,OAAK6iF,QAAUrzE,EAGzBnG,UAAAosB,eAAP,WAA8B0qC,KAC5BngE,YAAewP,KACXxP,OAAK4iF,MAAWpzE,KAClBxP,OAAKmgE,QAAUA,EAGrB92D,UAzBayoD,aAAAA,gGDqBX,uaEzBFxvD,IAAAtC,KAAAmgE,QACAr1D,IAAAg4E,KAYEC,EAAAA,eAEEC,GAAAA,KAAU,SAAAC,EAAMC,EAAAC,GAAA,IAAAC,EAOlBC,MACEnwD,KAAQ2uD,YACE,SAACv/E,EAETwI,EAAAyE,EAAAnK,GAAiB,IAAb9C,EAAEmrB,EAAAA,UAAoCnrB,OAAEuvB,EAAAA,EAI5CvvB,EAAE+vB,EAAAA,OACF/vB,EAAEiwB,EAAAA,OACA5uB,yBAUJuvB,EAAAA,GAAQ9tB,EACR49E,GAAAA,iBAEE5uC,SAAiB,mBAWfA,QACIC,SACR2uC,EAAAA,QAAU3uC,SAER/xC,EAAAwI,EAAiByE,EAAAnK,QAAXysB,IAAgD,IAAbvvB,EAAEmrB,EAAAA,OAW/C61D,EAAAA,GACEpwD,EAAAA,KACEjiB,EAAA3O,EAEF0gF,MAAAA,GAAUrtE,EAAA,EAAA1E,EAAAhC,GAAC3M,EAAuB,EAAA2O,EAAAnG,EAAAyE,EAAAN,GAAAgC,EAWtCnG,EAAAyE,KAAAN,GAAmB3M,OACjBqT,EAAI0rB,GAAQ/+B,GAAE+vB,OAAwBza,eAAkC9M,EAAAyE,EAAMjN,GAAEiwB,GAAMgxD,EAAgBvjF,MAoBtGA,KAnBiBy0C,SAAXhnB,SAEJ4T,EAAAA,GAAUxP,OAAAA,SAEApE,EAAAA,GAAAA,EACKle,EAAXjN,EAAEmrB,KAAAA,OACI7V,eAEJ6V,EACJ4T,aAEE/+B,CAAAA,OAAEuvB,IACIqxD,EAAA5xB,sBACqCkyB,EAGrC,IAMdC,EAAAN,EAAM77D,MAAItkB,EAAAA,EAAOC,MAAAA,EAAAA,CAAAA,KAK6C,CAM5DygF,OAAAA,EAASV,SAAC1gF,WACkBA,OAAY,IAAM6vB,IAAM,CAAAe,OAAMd,EAAM4wD,SAK9D,SAAgB1gF,GAAO20D,OAAY,IAAc30D,EAAAmrB,QAG1C,IAAAnrB,EAASglB,SAAeA,EAAE2vC,MAAO,EAAQA,EAAO1kC,KAAA,EAOzDoxD,EAAKhgF,OAAA,GAACrB,KACEyxD,MAASzxD,CAAAA,OAAEuvB,GAA8CmxD,SAAXv1D,SAA0CnrB,GAC9F,OAAO,KAASshF,EAAUthF,SAAYA,KAAE6vB,CAAGe,OAAMd,GAAM2hC,SAoB3D,SAQEzxD,GAAA,OACmC4U,KAAA5U,EAAAuvB,QAAA3a,IAAAA,EAAAA,SACFosE,IAAA3mD,CAAAA,OAAAA,GAAAA,SATzBknD,SAAmDvhF,GACnD,OAAAwhF,cACAC,EAAAzhF,EAAA0hF,GAAAA,IAAAA,GAAAA,EAAAA,KAA0B,GAC1B,IAAAC,EAAAA,MAAAA,EAAAA,IAAAA,EAA0B1xD,IAC1B,EAAA,GAAA2xD,OAAAA,IAAAA,EAAAA,QAAwB30E,GAAAiI,GAAAA,GAAAA,EAAAA,SACxB2sE,GAAAA,EAAAA,EAAAA,OAAqC,EAO3C7hF,EAAAmrB,SAAmBle,GAAAsE,IAAAA,EAAOy5D,EAAAA,SAAP/9D,GAAA,KAAA,KAAdjN,EAAAuvB,OAAUtiB,GAAoCvP,GAAAA,IAAKokF,EAAAA,QAAYt5E,IAAwByE,GAC5F,IAAmBA,EAAA,IAAA80E,EAAArhF,OAAA6Q,aAAAlO,EAAA,CAAA+9E,QAAA,SAAJphF,GAAA,IAAoCtC,EAAKskF,CAAAA,EAAAA,GAAAA,GAAAA,GAAYhiF,EAAMiiF,IAAkB,GAE5FvkF,EAAAA,IAAK8pB,IAAAA,OAiIThf,EA9HS,GAAA,KAAAA,EAAA,GAAAs5E,KAAAA,EAAAA,GAAAA,IAAP,GAAA,MAAiCI,EAC/BxkF,EAAAA,IAAK6jF,EAAAA,EAAAA,IAAAA,EAAWY,EAAAA,KAGXd,IAAA,SAAAW,GAAAA,IAAAA,EAAAA,IAAPhiF,EAAAuvB,QAAiC6yD,IAC/B1kF,EAAK8jF,OAAAA,IAAWW,IAAQC,MAG1B,MAAAX,EAAAzhF,GAAA,GAAA,IAAWA,EAAA6vB,IAAA,IAAA7vB,EAAA8vB,IAAAtnB,IAAAlF,EAAA,oBAAX++E,EAAAriF,EACEwI,GAAA9K,KAAOA,eAAKgkF,EAAAA,kBAOYS,EACxBzkF,KAAKA,WAAK6jF,GAAWY,KACnBX,WAAUl8E,GAAM5H,KAAAgkF,gBAAqBS,GAAIzkF,KAE3CA,gBAAKgkF,GAAAA,KACLhkF,kBAAKkkF,IAAkB/nE,EAAAA,aAAU0nE,KAAWY,WAAMvxD,kCATpD3jB,EAAAnK,EAAAtC,OAAAyM,IAAA,CAAA,IAAA0B,EAAW7L,EAAAmK,GAAAvP,KAAAokF,YAAAnzE,EAAA2zE,EAAA3zE,IAAA,IAAoB,MAA/B,EAAAzN,EAAAqQ,OACEy5D,KAAA3nE,GAAwDgQ,EAAjD3V,EAAAA,OAAK6jF,IAAAA,CAAAA,IAAW7jF,EAAAA,EAAKgkF,GAAAA,KAAAA,YAAiB9wD,EAAAA,sCAW/CkxD,YAAA,SAAW9hF,EAAAwI,GAAA9K,KAAA6jF,WAAAvhF,GAAAwI,eAAXw5E,YACStkF,SAAKikF,EAAAA,GAAAA,KAAAA,WAGd3hF,GAA0BmiF,GACxB5wE,OAAK7T,eAAgBykF,EACnBp7E,UAAUzB,iBAAM,CAAAqT,IAAA,WAElBjb,OAAKikF,KAAAA,qDAGA3hF,GAAAwnB,MAAP,IAAAliB,MAAA,qBACwBtF,EAAA,KACtBtC,KAAK0iE,gBAAiBpgE,EAAAtC,KAAAkkF,kBACJ/nE,KAAAnc,KAMpB6jF,WAAAvhF,GAAA4wB,SAAWguB,YAAA,EAAAC,cAAgB,IAA3BttC,OAAA+D,eACcssE,EAAAA,UAAAA,8CAaP,IAAAlkF,KAAA6jF,WAAA3xD,KAAAA,iBAELgB,QAAYguB,YAAclhD,EAAAA,cAAKkX,IAAeyB,OACrCyZ,eAAoBpyB,EAAAA,UAAKkX,iBAChC,CAAO+D,IAIT,WAAMwS,OAAiDztB,KAAX6xB,iBAG5CnS,IAAiB,SAAX+N,GAAgD,IAAbnrB,KAAEuvB,WAClCvvB,GAET,MAAIA,IAAEmrB,MAAAA,qBAA4EoE,EAAAA,KAAAA,KAChFoyD,gBAKF3hF,GAAE8vB,YAGE9vB,EAAEuvB,cAAwCsyD,IAAAA,EAAAA,UAAmBU,MAAAA,WAAe7kF,KAAKmkF,eACnF,OAIFnkF,KAAKA,eAAgBA,UAAKgkF,KAAAA,WAAiBhB,MACzCnvE,OAAO+D,eAIWksE,EAAAA,UAAW9jF,mBAAsBsC,CAAAA,IAYrD,WAT+B,OAAAtC,KAAzBA,kBACFA,OAAK28B,YAAAA,EAAamoD,cAAAA,IAAmBC,EAErC/kF,UAAK28B,kBAAa5vB,SAAyBzK,GAAA,GAI/CtC,EAAAA,IAAKmkF,GAAAA,EAAAA,KAAa7hF,KAKb4U,eAAAkc,MAAAA,EAAAA,IAAP,GAAA9wB,EAAA8vB,KACEpyB,KAAAkX,eAEE8tE,KAAAA,OACAC,EAAAA,GAAAA,IAAS/xD,EAAAA,QACTgyD,KAAShyD,EACTN,OAAAA,OAAUM,EAIN,GAAA,IAAA5wB,EAAAmrB,QAAAo3D,KAAAA,EAAAA,OAAR,OAAuBM,EAAqBC,GAC1C,IAAA9iF,EAAI6iF,SAAchzD,IAAAA,EACdgzD,QAAWC,IAAGhzD,EACd+yD,QAAG13D,OAAcA,EAAAA,GAAAA,EACjB03D,MAAGtzD,EAAAA,MAAcA,KAAAA,EACjBszD,QAAYC,KAAG/yD,YACJ+yD,KAAG7yD,eACE5uB,KA9IKwgF,WASxB3nE,GAAAA,OAAAA,EAAAA,IACAxc,KAAAy9B,WAAAA,KAVQ6zB,iBAAAA,oiBA2BA,+bCzLbhvD,EAAAwI,GAAAxI,EAAA+G,UACA,OAEAyB,EAAA+I,OAAAinC,OACAhwC,IAEMu6E,EAAwBxxE,UAAOC,EAAAA,UACnC+rD,IAAYtwD,KAGR+1E,EAA8CzxE,MAAOC,KAAAA,YACzD6f,SAAAA,EAAAA,EAAAA,EAAuBvuB,GACvBq9D,IAAAA,EAAAA,EAAAA,UAAmB3/D,OACnB4J,EAAAA,EAAAA,EAAAA,EAAAA,OAAoBtH,EACpBi8D,EAAAA,OACAJ,yBACAl1C,EAAAA,GAAAA,EAAW,GACX4zC,iBAGFvrB,SAAA,mBAsBkCj9B,QAJhCk9B,SAOEplC,EAAAmlC,QAAOC,SAJ0B/xC,EAAA4U,EAAAA,EAAAA,QAAAA,IAAAA,IACHC,EAAAA,EAAAA,OAAAA,EACIhS,GAAA6d,EAAAA,KAAAA,EAAAA,EAAAA,MApB7B/T,GAAAilB,EAAAA,EAAAA,EAAAA,GAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,GACAjjB,EAAA+3B,EAAAA,KAAAA,GAAAA,OAA0BrzB,EAOzB,GAAAm7C,GAAAA,OAAehpD,eAAa0P,EAAAA,EAAAA,GAAAA,GAAAA,EAE5BxX,MAAAulF,KAAAA,SAAoBz9E,SAASxF,EAAIwI,GAAA0M,OAAAA,SAEjCq5C,EAAAA,GAAAA,EAAAA,EAAYzrD,EAAK0C,KAAAA,OAAa8P,eAAAJ,EAWpC,aAAKguE,CAAAA,OACL,IAAK19E,EAAAA,iBAAoB,EAAA,IAAM29E,EAAAC,EAAA,MAAKF,EAAAA,EAAAA,MAAAA,EAAAA,EAAAA,MAAkBzkE,EAAAA,EAAAA,KACjD6+C,EAAAA,OAAQnP,OAAM40B,CAAAA,YACdv4E,IAAAA,EAAAA,OAAkB2jD,OAAM60B,CAAAA,uBAjB/B,EAAA7iB,mBAAW,EAAA/1D,sBAAX20D,QAAA,EAAsCJ,mBAAYnQ,EAAQ1tD,wCAE1DuiF,YAAAC,EAAA96E,EAAAyE,EAAAnK,EAAW6L,GAAA,IAAA0E,EAAAgwE,EAAAz/E,KAAAlG,OAAAA,YAAX2V,EAAAuB,eAAgDlX,EAAKulF,EAAAA,YAAaniF,EAAAA,EAAAA,yCAElE,EAAAuS,EAAAqzB,gBAAW,EAAArzB,EAAAm7C,QAAAn7C,EAAA7N,SAAX,IAAAtE,EAAAgU,cAA+CxX,EAAK6wD,aAAUztD,EAAAA,yCAgBvDuS,EAAA7N,SAAP,IAAAtE,EAAAgU,cACOooD,EAAAA,gBACL5/D,EAAAA,EAAK8M,SAAAA,CAAAA,QAAkB,WAAMw4E,OAGxB3vE,EAAA6vE,qBAAAz4E,KAAP4I,EAAAiqD,OAAwBnqD,EAEtB/P,EAAA+qD,OAFoC7qD,GAAAigF,EAAAA,iBAE3B7iE,EAAAA,EAAAA,OAAAA,GAAgBrM,EAAAA,OAAQmvE,EAAAA,EAAAA,GAAAA,OAKjCluE,eAAoBV,EAAAA,UAAevU,SACxBgqB,CAAAA,IAAUhqB,WACnB3C,OAAKwlF,KAAAA,QAAAA,OAKLxlF,YAAKulF,EAAAA,cAIPvlF,IAAKmX,OAAYgC,eAAMysE,EAAAv8E,UAAqB,cAAW,CAAA4R,IAAA,WAAW,OAAInF,KAAIyvE,aAAKniF,OAAEqrD,YAAW,EAAAtN,cACvF2P,IAAQ30C,OAAK1G,eAGbqvE,EAAAA,UAAAA,WAAP,CAAA7pE,IAA0BxF,WACfuN,OAAAA,KAAgBrM,UAAQmvE,OAAAA,YAG5B3uE,EAAAA,cAAYgC,IAAMysE,EAAAv8E,UAAAygB,MAAuB,WAAK9pB,KAAM4/D,OAAA,EAAK/pD,EAAAA,OAAUC,GAAAA,KAAIhJ,iBAAK,EAAE2hD,EAAAA,OAAAA,IAAWm3B,EAAAv8E,UACzFwnD,iBAAep7C,SA3CnBswE,EAAAvpE,GAAAA,QAAAA,IAAAA,IACA1R,GAAA,IAAA2R,KAAAA,gBACAkI,QAAAA,aAvB4BvY,CAAAA,IAAAA,EAAAA,KAApB45E,+hBCpBbJ,IAEAjgF,EAAAyG,YASE65E,EAAAD,YACmC9+D,GAAAhQ,KAAAA,SAAAA,EAEjClX,EAAAA,GAAKq/D,IAAAA,EAAAA,MAiCTr/D,KAAA6hF,YAvCE,SAAAv/E,EAAAwI,EAAWyE,EAAAnK,GAAA,IAAA6L,EAAA0E,EAAAU,iBAAXpH,EAAA0G,EAAA,EAA6B7K,EAAA,OAAO9K,EAAK89E,EAAAA,uCACzC,GAAA,iBAAA1pC,SAAW,mBAAXA,QAA2BC,SAAOr0C,EAAKkmF,uCAQhC/gF,EAAA7C,EAAAQ,OAAAu8D,EAAAA,GAAAA,EAAAA,KAAPpuD,EAAA3O,EAAA6C,MACEnF,GAAAA,EAAK89E,EAAAA,EAAAA,GAAS99E,EAAAA,EAAAA,EAAKkX,EAAAA,EAAAA,GAAAA,EAAAA,EAAAA,KAAevU,GAAAA,OAClC3C,EAAKkmF,GAAAA,GAAOlmF,OAAKkX,eAAevU,EAAAA,EAAO4Y,GAGlCtM,GAAAk3E,EAAAnmF,MAAAA,KAAA8/D,SAAP,SACMvkD,EAAIvb,GAAAA,OAAK89E,SACNA,EAAAA,GAASviE,EACLA,EAAIvb,EAAAA,KAAKkmF,OAClBlmF,eAIGomF,EAAA,aAAAn0B,CAAAA,OAAAA,IAAPm0B,EAAA30B,qBACe,EACE/1C,IACRG,EACLA,EAAK6qB,MAEE1mC,EAAAA,oBACF89E,EAASpiE,GAEZG,KAAK7b,eACFkmF,EAAAA,KAAOrqE,aAITyoD,OAAAA,OAAP1sD,eACOq6C,EAAAA,UAAAA,QAAkBjyD,CAAAA,IAAKkX,WAAAA,OAAsBlX,KA3C1B89E,QAUvBthE,YAAAA,EAAAA,cAVQi1C,IAAAA,OAAAA,4VCIbnvD,EAAAwI,EAAA,CAAA,IAAAyE,EAAAjN,EAAAA,EACAwI,EAAAA,EAAAyE,EAAAjN,EAAAtC,KAEA89E,SAIE99E,KAAA89E,OAAAx7E,KAAYtC,KAAAkmF,OAAAlmF,KAAAkmF,KAAAp7E,IAAAu7E,EAAAh9E,UAAAi7D,aAAA,WAFJgiB,KAAAA,eAGsB,EAAAtmF,KAAAkX,eAAApQ,KAAjB,IAAAy/E,EAAA,CAAAJ,EAAA,EAAC5sE,EAAEiD,iBACPkD,GDqBE1f,GCrBMwmF,EAAAA,gBAIVC,GAAA,KAAP,SAAcltE,EAA2BimE,EAAAA,GACvC,IAAex/E,EAAAA,MAAKsmF,KAAAA,eACpBtmF,SAAKsmF,EAAAA,EAAAA,GAAS5mE,GAAInG,GAAIimE,IAIjBnpE,UAAAvT,OAAAkc,IAAP,IAAA5Z,EAAA6L,EAAeonC,EAAAA,EACbr4C,EAAAA,OAAKsmF,EAAAA,EAAStnE,KAAAA,GAAAA,KAAQlU,IAAA1F,IAAQjC,EAAQusD,MAAArmD,UAAcnF,MAG/CgC,KAAA4E,EAAA,EAAAqV,IAAP/a,EAAA6L,GAAAnG,EAAAmG,IACE,OAAOjR,EAAAA,OAAKsmF,GAAAA,MAAa/sE,UAGpBpI,MAAA8J,KAAPnQ,KAAA+I,OACE+D,eAAY0uE,EAAAA,aAzBhB,CAAApiF,OAAawiF,IAAAA,EAAAA,qBA6BbC,EAAAD,uBAGmB,EAAAE,IAAAA,EAAAA,EAA+B,MAG9C5mF,EAAAA,EAAAA,MAAK4mF,EAAAA,oBAAc3wC,IAAAA,IAAAA,IAAuBj2C,EAAAA,GAiC9C8K,EAAA,EAAAA,EAAAuL,UA9BSvT,OAAAmsB,IAAAA,EAAAA,GAAP5Y,UAAgDmpE,GAC9Cx/E,KAAK4mF,SAAUlnE,IAAInG,IAAIimE,IAGlB,IAAAjwE,EAAA,EAAAnK,EAAAyhF,EAAAA,EAAAA,EAAAA,OAAPt3E,IAAA,CAAA,IAAqBgK,EACnBnU,EAAAmK,GAAAoG,EAAO3V,EAAAA,GAAK4mF,EAAAA,EAAAA,GAAAA,KAAU3rE,IAAI1B,EAGrBtK,IAAA,OAAAoa,EAAAA,UAAAA,IAAP,SAAyBy9D,SAAWv3E,EAAAvP,KAAAsmF,SAAArrE,IAAA3Y,GAAA,OAAAtC,KAAAsmF,SAAA5mE,IAAApd,EAAAwI,GAIlCyE,GAAAw3E,EAHA19E,UAA4B29E,QAAAA,SAAAA,GAAAA,KAAuBF,SAAW9nE,SAAC7Z,SAAS2F,EAAA3F,GAAEib,OAAUA,EAAAA,EAAAA,OAEzD2mE,EAAA19E,UACF8W,IAAA,SAAA7d,GAApB,OAAgBtC,KACHA,SAAK4mF,IAAAA,IAAU3rE,EAAIgsE,UAC9BT,IACH,SAAU5+E,GAAAA,OAAM5H,KAAAsmF,SAAArrE,IAAyBwpE,IAAIsC,EAlB5CH,GAkB4CD,EAAAD,kBAAAQ,EAAA,IAA+BD,EAAW1tE,oBAK3F4tE,IAA2BC,KAAoBtkF,UAAiC,IAAGsd,EAAAA,KAAatd,UAGvFA,IAAAA,EAAAA,sBACS9C,MAAA,OAAAmnF,EAAA99E,UAAA4lB,WAAA,SAAA3sB,EAAgDwkF,GAAKrC,KAAImC,UAAAlnE,IAAApd,EAAgB+kF,IAAqBF,EAAC99E,UAAAw9E,WAAwB/jF,SAAMR,GAAA,OAAAtC,KAAA4mF,UAIxI3rE,IAAI6rE,IAAIK,EAAA99E,UAAAggB,eAAA,SAAiBi+D,GAAW,IAAA,IAAAC,EAE/C,GAvCAh4E,EAAa,EAAA0hD,EAAAA,UAAAA,OAAAA,2hBAwBkF13C,wMC9D/F66B,SAAA,mBAiBSue,QAAa60B,SACdv4E,EAAA0jD,QAAAA,SAAa80B,EACnBlyE,EAAAA,EAAMnQ,QAAAutD,IAAAA,IAAaC,EAAAA,EACnBnuD,OAAO,EAAAkuD,GAAAA,EAAAA,KAAAA,EAAa+0B,EAAAA,MACpBC,GAAKhyE,EAAAg9C,EAAAA,EAAAA,GAAAA,EAAAA,EAAAA,EAAai1B,EAAAA,EAKpB34E,GAAAgC,EAAAnG,EAAAyE,KAAAN,GAKE,OAAA0G,EACoCqN,GADpC/T,GAAA4E,OAAA+D,eACoCoL,EAAAA,EAAAA,GAAAA,GAH7B6kE,EAAA7nF,MAAAmzB,KAAyBshB,SAAAke,SAAai1B,EAK3C5nF,GAAAA,OAAK8nF,SAAAA,EAAAA,GACL9nF,EAAAA,EAAKgjB,EAAAA,KAAAA,EAAAA,MAAgBsM,KAAAA,eAAe,SACtBhtB,EAAAwI,EAAAyE,GAAA,GAAAA,GAARpM,IACG2kF,UAAAA,OAAAA,IA6Cb,IAAA1iF,EAAA6L,EAxCU,EAAA0E,EAAA7K,EAAAhI,OAAAglF,EAAAA,EAAAA,KAAAA,GAAAA,KAARh9E,IAAA1F,IACEpF,EAAAA,MAAKmzB,UAAgCnzB,MAAKgjB,KAAAA,EAAAA,EAAAA,IAAgBrM,EAAAA,GAAAA,EAAAA,IAAQwc,OAAAA,EAG5DgkC,OAAA/xD,GAAAsqD,MAAAq4B,UAAAA,MAAAA,KAARj9E,KAAA+I,OACE+D,eAAmC9U,EAAAA,aACA,CAAAoB,OAAA,IAAA8jF,EAAtBC,gBACM7iF,EAAoBA,IAKjC8iF,EAAAC,EAAA,MAAAC,EAAAC,CAAAA,MAARH,EAAAv1B,aACE3yD,MAAK+nF,KAAAA,EAAAA,aAAAA,KACL9jF,KAAKiC,EAAIysD,aAACpwD,KAhCKkC,MAAAyjF,EAAAv1B,aAgC2C+0B,MAGrDC,IAAAO,EAAAv1B,aAAPi1B,KAAa7jF,EAAAA,oBAAiBukF,EAAAC,GAAA,IAAAz9E,EAAA9K,KAAAA,KAAAgjB,gBAAAulE,EAAAvoF,KACxBA,SAAKmzB,EAAAA,aAAYw/B,IAAa60B,KAAAA,kBACtBjlF,KAAawB,gBAIpBurB,gBAAKvrB,SAAiBzB,GAAA,aAAAA,GAAAwI,EAAAg9E,qBAAA,OAAAQ,EAAAj/E,UAClB8pB,gBAAYw/B,WAAa80B,KAChCznF,SAAUuC,EAAAA,KAAQimF,gBAIf7xE,QAAApB,WAAP+yE,EAAYvkF,UAAiBgkF,wBAAA,SAAAzlF,GAAA,IAAA,IAAAwI,EAAA,EAAAA,EAAAxI,EACvBtC,OAAKmzB,IAAAA,mBAAyBy/B,EAAAA,KAChC5yD,EAAAA,GAAKqoF,EAAAA,OAAK9lF,EAAAA,UAAuB0lF,KAI9B,SAAAxjF,EAAAA,EAAAA,GAAPzE,KAAA+nF,wBAA8Bx4E,GAAAjN,EAAA4D,KAAA6f,MAAAzjB,EAAAmmF,EAAA,CAAAlmF,QAAA,aACxBvC,GAAAA,GAAAA,KAAKmzB,EAAAA,UAAYw/B,MAAAA,SACnB3yD,GAAAA,IAAKqoF,IAAK9lF,EAAAA,GAAAA,EAAQkC,EAAAA,EAAAA,UA/CnB3B,OAAA6hB,IAAAA,EAAAA,EAAAA,GAAAA,UANLpV,GAAavP,KAAAqxD,4XCzBb5sD,MAAA,SACAnC,GAAA,IAMaomF,IAAAA,EAAAA,GAAAA,EAAAA,EAAAA,EAAAA,UAAqB5lF,OAAAyM,IAAAzE,EAAAyE,EAAA,GAAA8G,UAAA9G,GAAAvP,KAAAmzB,UAAA+0D,EAAAv1B,aAAA+0B,OAAA1nF,KAAAqoF,KAAA9lF,QAAAkC,MAAAnC,EAAAwI,IAAA69E,EAAA,CAAAd,EAAA,EAAAK,EAAAvjE,kBAAA2jE,GDmDnBvkF,GCnDmBikF,EAAA32B,WAAA7tD,GAAA,KAAA,SAAAolF,EAAAC,EAAAC,GAAA,IAAAC,EAAA/oF,MAAAA,KAAAgpF,UAAA,WAAA,OAAAD,EAAAl1E,OAAAo1E,QAAA,SAAA3mF,GAAA,IAAA,IAAAwI,EAAAyE,EAAA,EAAAnK,EAAAiR,UAAAvT,OAAAyM,EAAAnK,EAAAmK,IAAA,IAAA,IAAA0B,KAAAnG,EAAAuL,UAAA9G,GAAAsE,OAAAxK,UAAA0vC,eAAA7yC,KAAA4E,EAAAmG,KAAA3O,EAAA2O,GAAAnG,EAAAmG,IAAA,OAAA3O,GAAAymF,EAAAhjE,MAAA/lB,KAAAqW,YAAAxC,OAAA+D,eAAAixE,EAAA,aAAA,CAAA3kF,OAAA,IAAA2kF,EAAA33B,eAAA23B,EAAAK,gBAAAL,EAAAH,wBAAA,EAAA,IAAAS,EAAAL,EAAA,MAAAM,EAAAN,EAAA,MAAAD,EAAAH,mBAAA,ioBA6BdG,EAClB10E,gBAAAA,CAAAA,KACAm3D,GAAAA,KAAAA,GAAAA,aACO,EACP59C,YAAAA,QAAuB4b,YACvB3oC,EAAAA,cAAc,EACd47D,UAAAA,EAAAA,mBAEArP,UAAAA,OAAenoB,4BACfskD,EAAAA,mBAEAhnB,MAAAA,sBACA3qC,EAAAA,WAG0D,kCAAuCn3B,SAAO,GAAO0lC,WAAO,SAAcD,eAK5F,OAAAxlC,WAE1C,EAAA4jB,yBAaejhB,IANL6yC,cAAAszC,EAAAA,SAAsB,OAAA9xE,WAK5BxX,IAAKupF,kBAAgBL,EAAAA,kBAEf/lF,EAAOnD,iBACT,EACE+qD,+BACqB/qD,EAAKwpF,qBAAAA,EAAAA,cAC1B,EAAOlnF,kBACOA,EAMpBtC,mBAAoBypF,EAAAA,aAAczpF,EAAKupF,MAAAA,GAAU77D,sBAC5B1tB,EAAAA,MAAKypF,aAAczpF,SAAKupF,cAlB/C,GAAA31B,aAAA,EAAA1G,cAAW,eAAAm8B,qBAAX,EAA8CroB,YAAYsoB,EAAAA,SAAAA,QAAgBlmF,iCAqBlE,OAAA,MAAAqmF,MAAAA,MAAAA,MAAR,MAAiDC,MAAjD,MAAA,MACqB,iBACRC,QACT91E,EAAO+D,oBACLqD,EAAAA,GAAK,IAAA,IAAA1L,KACHvP,KAAM2pF,gBAAYT,IAAAA,EAChB1xE,aAAU5P,KAAM2hF,SAAAR,EAAA,GAAAF,EAAAK,iBAElB5mF,EAAO,GAAKinF,KAAAA,KAASI,SAElB,IAAA,IACHh0E,EAAArT,EAAAiN,GAAMo6E,KAAYT,SAAAA,GAAAA,KAChBM,2BAAgBj6E,EAAAoG,GAAA,MAAAi0E,GAA+BrnF,QAM7CmnF,MAAqC1lF,GAAAA,KAAS2lF,QAChD3pF,KAAU4H,cAAM5H,KAAmBupF,UAAA,GAAAvpF,KAAAwyD,cAAAxyD,KAAAypF,cAGxBD,KAAAA,UAAAA,GAAAA,OAET31E,OAAK01E,eACFA,EAAAA,UAAqBrlF,iBACrBolF,CAAAA,IAAgBntE,WAxB7B,OAAKnc,KAAM2pF,gBA6BJE,OAGF3oC,YAAA4oC,EAAAA,cAAU3mF,IACfnD,EAAAA,UAAKwyD,cAGC,SAAAu3B,EAAAP,GAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAAA,GAAAA,GAAAA,EAAR,SAAmCrmF,GAAae,OAC9C0T,eACOjC,EAAArT,EAAA,CAAA2Y,IACL,WAAK,KACL3Y,KAAKumF,EAAAK,iBACA,MAAA,IAAAthF,MACE1D,uBACqBf,EAAAA,KAE1B,OACG8N,EAAAs4E,SAAAjnF,IACLod,IAAK,SAAAta,GAAA,KACkB9C,KAAAumF,EAAAK,iBAAiBhlF,MAAkB,IAEtD0D,MAEF1D,uBAAsDglF,EAAAA,KAAAA,GAAAA,GAAgB/lF,EACtEa,SACF1B,GAAK,MAAA,IAAAsF,MACK0I,WAAWpM,EAErB,wCAEckB,EACV6L,EAAAu4E,2BAAsBlnF,EAAA8C,GAAA6L,EAAAs4E,SAAAjnF,KAAA8C,IAAkClB,EAE1DqlF,SACGjnF,GAAA8C,EAAA6L,EAAAq4E,gBACHplF,KAAQoM,QAAYA,IAAAA,IAAK6B,KAAQ7B,EAAAA,EAAKC,GAAAA,OAAMrM,GAAc8lF,EAAA3gF,UAE5DygF,UAAK,SACH5lF,EAAQoM,GAAAA,KAAK6B,cAAW7P,GACZwI,GACVk/E,EAAA3gF,UAAUzB,2BAAY,SAAAtF,EAAkC4B,GAE1D,OACF5B,GAAK,IAAA,YAAA,IAAA,cACA,IAAA,eACC4B,IACF,gBAAmBf,IAAGoM,EAAAs5E,EAAAK,gBAAA5mF,IAAA,MAAA,IAAA,aAE1B,IAAK,iBAEH,GAAA,iBACQiN,GAAI3H,GAAAA,GAASzE,GAAG,IAAA,MAAAoM,EAAA06E,EAAAjmF,SAAAuL,GAAAA,EAA4BrL,EAIxDglF,gBAGK5mF,GAAA,MAAAupD,IAAAA,cAAU1oD,EACfmN,KAAAqL,MAAY62C,GAAAA,IAAAA,aAvHhB,IAAa,eAAAtB,GAAAA,cCvBbtpD,MAAAtF,EAAA,kCAEmCiN,GAAA,MAAA,IAAEjF,uBAEFiF,EAAAe,KAAA0B,IAAA,EAAA1B,KAAOiJ,IAAI6G,GAAAA,KAAK7P,MACtB,GAAAhB,GAAA,yHA9BhB,IAAA26E,wBAEb,IAAA,oBAAA,GAAA36E,GAAA,EAAuCu3E,MACrC,IAAOA,MAAoBxkF,EAAA,8CAI3BiN,GAAI,IAAA26E,OAAAA,IAAAA,OAAoB3wE,IACtBhK,GAAA,IAAO26E,EAAAA,MAAAA,IAAAA,MAAgBjvE,EAAI1B,4BAIFhK,GAAA,OAArB8G,GAAAA,EAAUvT,UACZ+oD,UAAUjkD,SAAMtF,GAAA,OAAAtC,KAAAwyD,cAAAlwD,IAAA0nF,EDmETpyE,GCnESixE,EAAA33B,eAAAi5B,GAAA,KAGlBC,CAAuBC,EAAW3gF,cAG1B+B,EAAAA,EAAAA,EAAAA,GAAWX,EAAAw/E,YAAMx/E,EAAAA,EAAAyO,gBAE3B2wE,KAAgBxqE,CAAAA,GAAInG,EAAI8wE,MACjBA,qQC9BT,IAAAE,EAEan9B,gBAAA5wC,SAAiB4wC,GAAAA,GAAAA,EAAAA,gBAAgCjtC,IAAAqqE,GAqBjD,OAAAj5B,EAAAA,gBAAoBnE,IAAAA,GAAAA,IAAAA,EAAAA,SAAmC9qD,EAAAwI,EAAAmG,GAAA,GAAA,IAgCvDoF,UAAAonB,OAAe,MAAA2vB,IAAAA,MAAAA,oEAqCoCq9B,EAAArlF,EAAA9C,EAAA2O,IAuBnD,OAAAygD,EAAAA,SAAAA,WAAmBtE,OAAAA,GAAAA,EAAkC88B,gBAAAxqE,IAkCrDu2B,EAAAA,GAAAA,IAAAA,KAAAA,CAAAA,EAAAA,EAAAA,KAAwBpiC,OAAAu5C,eAAuCtiD,EAAA,aAAA,CAAA5G,OAAA,IAS/DuY,EAAAA,gBAAc2wC,EAAAA,aAA6BtiD,EAAA6Z,gBAY3CA,EAAAA,YAAkB7Z,EAAAmrC,sBAAiCnrC,EAAA4mD,iBAepDiB,EAAAA,gBAAAA,EAAAA,aAAY7nD,EACtBymD,kBAAAzmD,EACA0R,oBAAA,EACA,IAAApX,EAAA6L,EAAA1B,EAAA,MACAzE,EAAA0R,gBAAA,EACAvL,EAAAm8C,iBAwEW1wC,iBAAkB5R,EAAAymD,mBAAAnE,EAAiCn8C,EAAAm8C,4GCzQhE,EAAAn8C,EAAAm8C,iBAIA,kBASEtiD,EAAA4mD,kBANQg5B,EAAuD72E,EAAAA,iBACvD,mBAEA/I,EAAA6/E,uBAAgBnzE,EAAAA,EAAAA,iBAIMi+D,wBAE5Bz1E,EAAAA,aAAe4qF,EAAgBhV,EAAAA,iBAC1BiV,cA2DT//E,EAAA6Z,iBAjEE,EAAA1T,EAAAm8C,iBAAW,mBAAXhoD,EAAA0F,EAAA6nD,eAAoDg4B,EAAAA,8CASpD,GAAA,OAAAvlF,EAAAA,EAAAwtD,KAAA,GAAW,OAAAxtD,EAAAA,EAAAsiF,MAAA,GAAA,QAAXtiF,EAAAA,EAAAwiF,IAAA,GACE,MAAO/zE,EAAAA,iBAAiB62E,EAAAA,EAAAA,yCAG1B,CAAAI,EAAAC,EAAAC,KAAAn3E,OAAA+D,eAAWmzE,EAAA,aAAA,CAAa7mF,OAAxB,IAAA6mF,EAAAn5B,oBACc+lB,EAAAA,MAGdqT,EAAA,MAAAC,EAAyBrV,EACvB,KAAK51E,EAAAA,oBACHkrF,IAAMlrF,KAAI4H,WAAMiM,OAAAinC,OAAA,MAA4B86B,KAAO+B,QAEhDA,GAAAA,KAAU/B,UACViV,IAAAA,EAAAA,aAAuBH,IAAAA,EAAAA,IAAW9U,EACvC51E,UAAK2qF,KAAUxuE,wDAGVrU,EAAAA,OAAP+L,OAAgB4tE,eACTiJ,EAAAA,UAAoB9U,WAMpB,CAAA36D,IAAA,WAAP,OAAe86D,KACb4U,UAAYE,OAAAA,YAAgB3qB,EAAAA,cAGvB,IAAArsD,OAAA2H,eAAP0vE,EAAA7hF,UAGE,WADMvG,CAASmM,IAAEnM,WACGA,OAClB+Q,OAAW5E,KAAEw/C,KAAAA,aAETvN,YAA0B,EAAQC,cAOlC,IAAOxwC,OAAcuvD,eAEjB8D,EAAS/0D,UAAEw/C,gBAGOuV,CAAAA,IAAU,WACP,OAAVhkE,KAA2B23E,SAASj4D,IAEnD/O,SAAeuvD,GAAAA,IAAQ8D,KAGjBhkE,WAAKkgE,GAAQ7+B,MAEzB,IAAO1wB,MAtEX,4BCLArO,EAAA,KAAAtC,KAA6BmrF,QAETC,EAAyBD,KAC5CN,gBACC7qF,KAAoB+E,WAGjBC,GAASomF,KAGZrmF,UAASoX,KAOV7Z,IAHA+oF,YAAmCrmF,EAAOD,cAAwBA,IAASumF,EAAAA,UAG7DvmF,+GCbfm7D,QAAA59D,IAEA4oF,EAAA7hF,UACAmS,mBAEA,SAEAlZ,GAAA,IAAA,IAMEwI,EAAA,EAAAyE,EAAAjN,EAAAQ,OACE9C,EAAAA,EAAK0C,EAAAA,IAAQ0C,EAAA,CAAA,IAAI/E,EAAAA,EAAAA,WACjBL,GAAKurF,GAAAA,OAAAA,GAAgBt6E,GAAI,MAAA2uE,CAAAA,KAAAA,GA6N7BrwE,EAAA,OA1NUzE,EAAA9K,KAAAkgE,QAAAsrB,GAAAA,IAAAA,EAAAA,EAAAA,WAARpmF,GACE,OAAKpF,GAAK0C,GAAAA,MAAM8nB,EAAAA,MAAAA,EAAe7T,OAAAA,EAAQ80E,MAAAA,MAAAA,GAAAA,KACrCvrB,QAAUt4D,GAAAA,GAAM5H,KAAAkgE,QAAAjvD,GAAA,OAAAnG,GAAAogF,EFMblrF,GENa+qF,EAAAn5B,eAAA85B,IAAAC,EAAA,YAAAC,EAAAxmF,GAIpB,IAAA6L,EAAA06E,EAAAvmF,GAAA,QAAA,IAAW6L,EAAA,OAAAA,EAAAlM,QAAA,MAAX4mF,EAAAvmF,GAAA,CAAAL,QAAoC,IAAO/E,OAAK0C,EAAAA,GAAMmpF,KAAAA,mCACtD,IAAAC,EAAA,GAAA,MAAA,MAAW,IAAAC,EAAAD,EAAAj4E,OAAA+D,eAAXm0E,EAAA,aAAwC,CAAO/rF,OAAK0C,IAAMsvD,EAAAA,wCAC1Dr8C,EAAAi2E,EAAA,MAAA38E,EAAA28E,EAAA,MAAAzmF,EAAWymF,EAAA,MAAApoF,EAAAooF,EAAA,MAAAlmF,EAAA,oBAAXsmF,EAAA1pF,GAA0CtC,KAAOA,MAAK0C,IAAAA,EAAM0nB,SAAAA,GAAAA,sCAC5D,OAAA4hE,EAAA3iF,UAAWmiF,kBAAA,WAAX,IAAAxrF,KAAsC0C,MAAO1C,eAAWqC,mCACxDuF,MAAA,yEAAyF1E,2CACzF,CAAA+X,IAAA,WAAW,OAAAjb,KAAA0C,MAAAmpF,oBAAX,EAAwC1qC,cAAYz+C,IAAM8F,OAAAA,sCAC1D,CAAAyS,IAAA,WAAA,OAAWjb,KAAA0C,MAAAsvD,sBAAX,EAAA7Q,cAAuEnhD,IAAK0C,OAAMuF,0CAClF,CAAAgT,IAAA,WAAW,OAAAjb,KAAA0C,MAAA0nB,cAAX82B,YAAgE,EAAOlhD,cAAW+H,IAAAA,2CAClF,CAAAkT,IAAA,WAAW,OAAAjb,KAAA0C,MAAAL,QAAX6+C,YAAA,EAAwCC,cAAYz+C,IAAM0F,0CAC1D,CAAA6S,IAAA,WAAA,OAAWjb,KAAA0C,MAAAQ,OAAAg+C,YAAiB,gBAAmB,IAAArtC,OAAYnR,eAAMiuB,EAAAA,uCACjE,OAAA3wB,KAAA0C,MAAA8F,YAAW04C,YAAA,EAAAC,cAAX,IAAAttC,OAA6C+D,eAAkByS,EAAAA,UAAAA,uCAE/D3nB,MAAAuF,UAAAi5C,YAAW,EAAAC,kBAAXttC,OAAA+D,eAA4DlV,EAAAA,UAAMiF,kCAClE3H,KAAA0C,MAAAqF,UAAWm5C,YAAA,EAAAC,cAAX,IAAAttC,OAKE+D,eAJK4zE,EAAAA,UAAAA,WACKj0B,CAAAA,IAAAA,WACHA,OAAUv3D,KAAImhF,MAAAA,UAAez+E,YAExB60D,EAAAA,wCAEdy0B,EAAA3iF,UAAA,oBAAW,CAAA4R,IAAA,WAAX,OAAAjb,KAEE0C,MADA1C,mBAAKwrF,YACM5J,EAAAA,cAAgBl/E,IAAAA,kCAE7B,gBAAA,CAAAuY,IAAA,WAAW,OAAAjb,KAAA0C,MAAX2nB,eAAyD62B,YAAYx+C,EAAMkK,0CAC3EvD,UAAA,UAAA,CAAA4R,IAAW,WAAA,YAAXvY,MAAAiF,SAA4Bu5C,YAAYx+C,EAAMoE,wCAC9CklF,EAAA3iF,UAAA,SAAW,CAAA4R,IAAA,WAAI,OAAfjb,KAAAwrF,oBAAwC9oF,KAAMiW,uCAC9C3Y,KAAA0C,QAAA1C,KAAWu3D,SAAArW,YAAA,gBAAX,IAKErtC,OAJA7T,eAAKwrF,EAAAA,UACKpf,UACRpsE,CAAAA,IAAKosE,WAAc,OAAAwU,KAAAA,oBAAwBl+E,IAEtC1C,EAAAA,oDAET,IAAA6T,OAAA+D,eAAWo0E,EAAA3iF,qBAAX,CAEE4R,IAAA,WADKuwE,OAAAA,KAAAA,MACExrF,UAAW00B,sDAEpBs3D,EAAA3iF,UAAW,OAAA,CAAA4R,IAAA,WAAX,OAAAjb,KACE0C,MAAU1C,MAAK0C,YAAMmK,EAAAA,cAAYC,IAC7Bm/E,OAA+Dr0E,eACtDlV,EAAAA,UAAMwuB,OAAAA,CAAAA,IAAiBoC,WAAAA,OAC7BtzB,KAAOisF,MAAoBtzE,MAAOuoC,YAClC,EAAS+qC,cAA6B,IAC3Cp4E,OAAK+D,eAAoCo0E,EACzC3iF,UAAY4iF,SAEd,CAAAhxE,IAAO,WACLixE,OAAAA,KAAAA,oBAA6Bv4D,KAAAA,UAC7Bw4D,KAAAA,QAAAA,IAAyB1pB,EAAAA,mBACzB/1D,KAAAA,QAAAA,KAAsBA,SAAAA,YACtBmzD,EAAAA,cAAiBn9D,IAAMmK,OAAAA,eAAkBgzD,EAAAA,UACzCosB,UAAAA,CAAAA,IACAG,WAAY/kE,OAAEg6C,KACdgrB,oBAAuBhlE,KAAE45C,MAAAA,SACzBqrB,YAAAA,EAAejlE,cACfq4C,IAAAA,OAAAA,eAAkBC,oCAGtB,IAAAr9D,EAAAtC,KAAA0C,MAAAmK,YAAWC,kBAAX,OAAA,OACE9M,KAAOA,MAAK0C,6CAEP,MAAA,MAAA0pB,IAAP,QAAAthB,EAAA,QACOpI,MAAM0pB,IAAAA,OAENthB,EAAA,OAAAN,MAAP,IAAA,MACExK,EAAAA,MAAK0C,MAAM8H,CAAAA,0BAEblI,EAAAqxB,sBACO44D,sBACA7pF,EAAMmtB,kBAENnjB,mBAAPpK,EAAY+rB,mBACMA,WAEXruB,KAAAo0B,MAAAA,YAAAA,MAAAA,WAAP63D,kBACa73D,EAAAA,WAAAA,EAAAA,OAAAA,sBAENhb,EAAAA,kBAAPkzE,cAEEhqF,EAAAypB,UADKy/D,eAAAA,EAAAA,aACO9oF,YAAM0W,EAAAA,cAAoCzC,IAEjD9C,OAAA+D,eAAAsC,EAAAA,UAAP,UACEla,CAAAA,IAAKwrF,WAAAA,OAAAA,KACLxrF,MAAK0C,SAAMwX,YAAAA,EAAsBC,cAE5B,IAAAwD,EAAAA,UAAAA,KAAAA,WAAqBC,KAE1Blb,MADA1C,QAAKwrF,EAAAA,UAAAA,MACExrF,WAAW2d,KAAAA,MAAAA,SAAqBC,EAAAA,UAElCiS,OAAAyE,SAAAA,EAAAA,GAAAA,KAAAA,gBAELhyB,EAAAwI,GADA9K,KAAKwrF,MAAAA,OAAAA,EAAAA,IACExrF,EAAAA,UAAWs0B,KAAAA,SAAAA,GAAAA,KAAAA,MAEbnzB,KAAAmB,IAAA0pF,EAAAx3D,UAAAA,4BACLx0B,SAAKwrF,GAAAA,KAAAA,MAAAA,4BACMh3D,IAAAA,EAAAA,UAENpb,oBAAAozE,SAAPlqF,EAAAwI,EAAAyE,GAAsBqlB,OAGpB50B,KAFAA,oBAAKwrF,KACLxrF,MAAKusF,oBACO7pF,EAAAA,EAAAA,IAAMiyB,EAAAA,UAEbza,sBAAP,SAAiB0a,GACf50B,KAAAwrF,oBAAYgB,KAAe53D,MAEtB1a,sBAAP5X,IAAA0pF,EAAA3iF,UACSrJ,qBAAWstB,SAEbhrB,GAAA,OAAAqM,KAAAA,oBACL3O,KAAKusF,MAAAA,qBACA7pF,IAAMiM,EAAAA,UAAoB7L,wBAE1BL,SAAPH,GAAA,OACEtC,KAAOA,oBAAWyC,KAEbC,MAAA4xB,wBAAAU,IAAPg3D,EAAA3iF,UACEmrB,0BAAkBQ,SAAAA,GAAAA,KAEbw2D,oBAAAn2D,KAAP3yB,MAAA8xB,0BACaa,IAAAA,EAAAA,UAENm3D,eAAP,SACExsF,GAAAA,OAAK0C,KAAM4yB,oBAENt1B,KAAAu1B,gBAAPjzB,GAAkC6F,KAChCnI,MAAKusF,UAAAA,IAAgBrkF,EAAOC,UACvBzF,UAAM6yB,SAAmBptB,GAEzB,OAAAnI,KAAAsJ,eAAPhH,IACEtC,EAAAA,UAAKurF,aAAcjiF,WACd5G,OAAM4G,KAAAA,MAENgkB,gBAAA/iB,EAAAA,UAAPoE,OACE3O,SAAKusF,EAAAA,EAAAA,GAAAA,KACLvsF,gBAAWuK,EAAAA,EAAAA,GAAY8lB,KAElB3tB,MAAAiM,OAAAykD,EAAAA,EAAAA,IAAAA,EAAP/pD,UAAmB8pD,aACZo5B,WAAgBp5B,OAChBzwD,KAAAA,MAAM0wD,gBAEN44B,EAAA3iF,UAAAgqD,qBACLrzD,WAAWqzD,OAAAA,KAEN3wD,MAAAsyB,wBAAPg3D,EAAA3iF,UACErJ,eAAWy1B,WAENz1B,KAAA0C,MAAA4wD,kBAAP04B,EAAA3iF,UACOkjF,UAAAA,WACLvsF,KAAK0C,MAAM4wD,aAAat4C,EAEnB3R,UAAAksB,YAAP,SACEv1B,EAAAA,GAAK0C,KAAMoQ,gBAENxQ,EAAAwI,GAAAjI,KAAPH,MAAA6yB,YACEv1B,EAAK0C,IAAAA,EAAMG,UAAYw1C,QAElB,WAAAo0C,KAAPlB,cACEvrF,UAAW6C,KAAAA,MAAYw1C,WAElB2zC,EAAAtqF,UAAP6I,YACEvK,SAAK0C,GAAMG,KAAM4S,gBACN5S,GAAAA,KAAMH,MAAQ21C,YAEpB/1C,IAAAqK,EAAAA,UAAM8I,YACN/S,SAAY+S,GAOZzV,KAAAusF,gBAAA1gC,GAAP7rD,KAAA0C,MACE0wD,YAAY1wD,IAAAA,EAAM8nB,UAAAA,YAAeqhC,WAY5B7rD,KAAA0C,MAAAonF,eAAU3mF,EAAUe,UACpBxB,eAAM8nB,WAAes/D,KAAe5lF,MAEpCuxB,kBAAPu2D,EAAA3iF,UAA8BlB,aACvBokF,SAAAA,GAAuBpkF,KAC5BnI,gBAAWuL,GAAepD,KAErBzF,MAAA4wD,aAAPhxD,IAAA0pF,EAAA3iF,UACO3G,MAAMonB,WAEN9pB,KAAA0C,MAAAo0B,SAAAA,EAAAA,UAAPj0B,MACE7C,SAAK0C,EAAMo0B,GAAAA,KAAAA,MAAAA,MAENx0B,EAAAwI,IAAAkhF,EAAA3iF,UAAAtI,UAAP,SACEuB,EAAAwI,GAAO9K,KAAKurF,MAAAA,MAAAA,EAAcxqF,IAAAA,EAAAA,UAAgB2rF,QAE5C,SAAApqF,EAAAwI,GAAA9K,KAAkB0C,MAAAG,SAAlB7C,KAAA0C,MACEG,MAAOoI,sCAGD3I,GAAAtC,KAAA0C,MAAA6pF,MAAAA,IAAAA,EAARljF,oBAAwB,SAAA/G,GAAA,OAAAtC,KAAA0C,MAAA8nB,eAAAqhC,UACFvpD,IAAA0pF,EAAA3iF,UAAAygF,UAAf,SAAWxnF,EACdwI,GAAI5G,KAAUyoF,MAAY75B,eACxBg3B,UAAUliF,EAAAA,IAAMokF,EAAA3iF,UAAAkC,QAAA,SAAAjJ,EAAAwI,GAAA9K,KAjOxBusF,gB7FfAjqF,EAAAwI,GAAA9K,KAAA0C,MAAA6I,QAAAjJ,EAAAwI,IAAAkhF,EAAA3iF,UAAAygB,MAAA,WAAA9pB,KAAA0C,MAAAonB,SAAAkiE,EAAA3iF,UAAAytB,kBAAA,WAAA92B,KAAA0C,MAAAo0B,qBAAAk1D,EAAA3iF,UAAAtI,UAAA,SAAAuB,GAAA,OAAAtC,KAAAurF,cAAAxqF,UAAAf,KAAAsC,IAAAuR,OAAA+D,eAAAo0E,EAAA,UAAA,CAAA/wE,IAAA,WAAA,OAAA2xE,GAAA1rC,YAAA,EAAAC,cAAA,IAAA6qC,EAAA3iF,UAAAkjF,gBAAA,WAAA,IAAA,IAAAjqF,EAAA,GAAAwI,EAAA,EAAAA,EAAAuL,UAAAvT,OAAAgI,IAAAxI,EAAAwI,GAAAuL,UAAAvL,GAAA,IAAA,IAAAyE,EAAA,EAAAnK,EAAA9C,EAAAiN,EAAAnK,EAAAtC,OAAAyM,IAAA,CAAA,IAAA0B,EAAA7L,EAAAmK,GAAA,GAAA0B,IAAA,EAAA,GAAA6hD,MAAA7hD,IAAAA,EAAA,GAAA,EAAA,MAAA,IAAArJ,MAAA,oCAAAokF,E6FkCa,G7FlCbD,EAAA1rF,SAAAqF,G6FiCE,G7FjCFomF,8C8FAA,IAA2CjnF,EAAMC,EAAND,EASxCQ,KAT8CP,EASxC,WACT,yFCSA,IAGA8mF,EAAA,oBAGEiB,KA4DF,OA1DSA,EAAAxjF,UAAAsX,SAAP,SAAgBxgB,GACdH,KAAKgG,UAAY7F,GAGZ0sF,EAAAxjF,UAAAC,QAAP,aAEOujF,EAAAxjF,UAAAnI,IAAP,WACE,IAAM4rF,EAAO9sF,KAAK+sF,oBAClB,GAAKD,GAAS9sF,KAAKgG,UAAnB,CAKA,IAAMgnF,EAAQhtF,KAAKgG,UAAkBtD,MAGjC1C,KAAKgG,UAAUc,OAASgmF,EAAKhmF,MAAQ9G,KAAKgG,UAAU2S,OAASm0E,EAAKn0E,OACpEq0E,EAAK/mF,eAAe6M,QACpB9S,KAAKgG,UAAU6pB,OAAOi9D,EAAKn0E,KAAMm0E,EAAKhmF,SAInC+lF,EAAAxjF,UAAA0jF,kBAAP,WACE,GAAK/sF,KAAKgG,WAILhG,KAAKgG,UAAU2B,SAAY3H,KAAKgG,UAAU2B,QAAQ4O,cAAvD,CAKA,IAAMy2E,EAAQhtF,KAAKgG,UAAkBtD,MAErC,GAAuD,IAAnDsqF,EAAK/mF,eAAe+F,WAAWihB,iBAA6E,IAApD+/D,EAAK/mF,eAAe+F,WAAWC,iBAA3F,CAIA,IAAMghF,EAAqBjsF,OAAO65B,iBAAiB76B,KAAKgG,UAAU2B,QAAQ4O,eACpE22E,EAAsBh8E,SAAS+7E,EAAmBE,iBAAiB,WACnEC,EAAqB98E,KAAK0B,IAAI,EAAGd,SAAS+7E,EAAmBE,iBAAiB,WAC9EvyD,EAAe55B,OAAO65B,iBAAiB76B,KAAKgG,UAAU2B,SAStD0lF,EAAkBH,GAPjBh8E,SAAS0pB,EAAauyD,iBAAiB,gBACpCj8E,SAAS0pB,EAAauyD,iBAAiB,oBAO3CG,EAAiBF,GANdl8E,SAAS0pB,EAAauyD,iBAAiB,kBACxCj8E,SAAS0pB,EAAauyD,iBAAiB,kBAKiBH,EAAKniE,SAASsO,eAK9E,MAJiB,CACfxgB,KAAMrI,KAAK0B,IA7DI,EA6Dc1B,KAAKqL,MAAM2xE,EAAiBN,EAAK/mF,eAAe+F,WAAWihB,kBACxFnmB,KAAMwJ,KAAK0B,IA7DI,EA6Dc1B,KAAKqL,MAAM0xE,EAAkBL,EAAK/mF,eAAe+F,WAAWC,uBAI/F4gF,EA/DA,GAAaxgF,EAAAvL,SAAAA,ICrBTsqF,EAA2B,GCE/B,SDCSE,EAAoBH,GAE5B,GAAGC,EAAyBD,GAC3B,OAAOC,EAAyBD,GAAUpmF,QAG3C,IAAIC,EAASomF,EAAyBD,GAAY,CAGjDpmF,QAAS,IAOV,OAHAsmF,EAAoBF,GAAUnmF,EAAQA,EAAOD,QAASumF,GAG/CtmF,EAAOD,QCjBf,CAA2B,WDFvBqmF,GFAmB,iBAAZrmF,EAAAA,QACTC,EAAAA,QAAiBF,IACQ,mBAAXG,QAAyBA,OAAOC,IAC9CD,OAAO,GAAIH,GACe,iBAAZC,EAAAA,QACdA,EAAAA,QAAkBjE,SAAIgE,IAEtBD,EAAe/D,SAAIgE","sources":["views/view-shell.js","node_modules/xterm/lib/webpack:/xterm/webpack/universalModuleDefinition","node_modules/xterm/lib/webpack:/xterm/src/browser/AccessibilityManager.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/Clipboard.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/Color.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/ColorContrastCache.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/ColorManager.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/Dom.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/Lifecycle.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/Linkifier.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/Linkifier2.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/LocalizableStrings.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/MouseZoneManager.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/RenderDebouncer.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/ScreenDprMonitor.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/Terminal.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/TimeBasedDebouncer.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/Viewport.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/input/CompositionHelper.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/input/Mouse.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/input/MoveToCell.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/renderer/BaseRenderLayer.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/renderer/CursorRenderLayer.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/renderer/CustomGlyphs.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/renderer/GridCache.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/renderer/LinkRenderLayer.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/renderer/Renderer.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/renderer/RendererUtils.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/renderer/SelectionRenderLayer.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/renderer/TextRenderLayer.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/renderer/atlas/BaseCharAtlas.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/renderer/atlas/CharAtlasCache.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/renderer/atlas/CharAtlasUtils.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/renderer/atlas/Constants.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/renderer/atlas/DynamicCharAtlas.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/renderer/atlas/LRUMap.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/renderer/dom/DomRenderer.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/renderer/dom/DomRendererRowFactory.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/selection/SelectionModel.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/services/CharSizeService.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/services/CharacterJoinerService.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/services/CoreBrowserService.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/services/MouseService.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/services/RenderService.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/services/SelectionService.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/services/Services.ts","node_modules/xterm/lib/webpack:/xterm/src/browser/services/SoundService.ts","node_modules/xterm/lib/webpack:/xterm/src/common/CircularList.ts","node_modules/xterm/lib/webpack:/xterm/src/common/Clone.ts","node_modules/xterm/lib/webpack:/xterm/src/common/CoreTerminal.ts","node_modules/xterm/lib/webpack:/xterm/src/common/EventEmitter.ts","node_modules/xterm/lib/webpack:/xterm/src/common/InputHandler.ts","node_modules/xterm/lib/webpack:/xterm/src/common/Lifecycle.ts","node_modules/xterm/lib/webpack:/xterm/src/common/Platform.ts","node_modules/xterm/lib/webpack:/xterm/src/common/TypedArrayUtils.ts","node_modules/xterm/lib/webpack:/xterm/src/common/WindowsMode.ts","node_modules/xterm/lib/webpack:/xterm/src/common/buffer/AttributeData.ts","node_modules/xterm/lib/webpack:/xterm/src/common/buffer/Buffer.ts","node_modules/xterm/lib/webpack:/xterm/src/common/buffer/BufferLine.ts","node_modules/xterm/lib/webpack:/xterm/src/common/buffer/BufferRange.ts","node_modules/xterm/lib/webpack:/xterm/src/common/buffer/BufferReflow.ts","node_modules/xterm/lib/webpack:/xterm/src/common/buffer/BufferSet.ts","node_modules/xterm/lib/webpack:/xterm/src/common/buffer/CellData.ts","node_modules/xterm/lib/webpack:/xterm/src/common/buffer/Constants.ts","node_modules/xterm/lib/webpack:/xterm/src/common/buffer/Marker.ts","node_modules/xterm/lib/webpack:/xterm/src/common/data/Charsets.ts","node_modules/xterm/lib/webpack:/xterm/src/common/data/EscapeSequences.ts","node_modules/xterm/lib/webpack:/xterm/src/common/input/Keyboard.ts","node_modules/xterm/lib/webpack:/xterm/src/common/input/TextDecoder.ts","node_modules/xterm/lib/webpack:/xterm/src/common/input/UnicodeV6.ts","node_modules/xterm/lib/webpack:/xterm/src/common/input/WriteBuffer.ts","node_modules/xterm/lib/webpack:/xterm/src/common/parser/Constants.ts","node_modules/xterm/lib/webpack:/xterm/src/common/parser/DcsParser.ts","node_modules/xterm/lib/webpack:/xterm/src/common/parser/EscapeSequenceParser.ts","node_modules/xterm/lib/webpack:/xterm/src/common/parser/OscParser.ts","node_modules/xterm/lib/webpack:/xterm/src/common/parser/Params.ts","node_modules/xterm/lib/webpack:/xterm/src/common/public/AddonManager.ts","node_modules/xterm/lib/webpack:/xterm/src/common/public/BufferApiView.ts","node_modules/xterm/lib/webpack:/xterm/src/common/public/BufferLineApiView.ts","node_modules/xterm/lib/webpack:/xterm/src/common/public/BufferNamespaceApi.ts","node_modules/xterm/lib/webpack:/xterm/src/common/public/ParserApi.ts","node_modules/xterm/lib/webpack:/xterm/src/common/public/UnicodeApi.ts","node_modules/xterm/lib/webpack:/xterm/src/common/services/BufferService.ts","node_modules/xterm/lib/webpack:/xterm/src/common/services/CharsetService.ts","node_modules/xterm/lib/webpack:/xterm/src/common/services/CoreMouseService.ts","node_modules/xterm/lib/webpack:/xterm/src/common/services/CoreService.ts","node_modules/xterm/lib/webpack:/xterm/src/common/services/DirtyRowService.ts","node_modules/xterm/lib/webpack:/xterm/src/common/services/InstantiationService.ts","node_modules/xterm/lib/webpack:/xterm/src/common/services/LogService.ts","node_modules/xterm/lib/webpack:/xterm/src/common/services/OptionsService.ts","node_modules/xterm/lib/webpack:/xterm/src/common/services/ServiceRegistry.ts","node_modules/xterm/lib/webpack:/xterm/src/common/services/Services.ts","node_modules/xterm/lib/webpack:/xterm/src/common/services/UnicodeService.ts","node_modules/xterm/lib/webpack:/xterm/webpack/bootstrap","node_modules/xterm/lib/webpack:/xterm/src/browser/public/Terminal.ts","node_modules/xterm-addon-fit/lib/webpack:/FitAddon/webpack/universalModuleDefinition","node_modules/xterm-addon-fit/lib/webpack:/FitAddon/src/FitAddon.ts","node_modules/xterm-addon-fit/lib/webpack:/FitAddon/webpack/bootstrap","node_modules/xterm-addon-fit/lib/webpack:/FitAddon/webpack/startup"],"sourcesContent":["/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\n\nimport { Terminal } from 'xterm'\nimport { FitAddon } from 'xterm-addon-fit'\nimport { html, css, LitElement } from 'lit'\nimport { Client } from '../inspector/client'\nimport { CommandObserver } from '../inspector/CommandObserver'\n\nconst RED_ESCAPE = '\\x1B[0;31m'\nconst NO_COLOR_ESCAPE = '\\x1B[0m'\nconst NEWLINE = '\\r\\n'\n\nconst baseTheme = {\n  foreground: '#F8F8F8',\n  background: '#2D2E2C',\n  selection: '#5DA5D533',\n  black: '#1E1E1D',\n  brightBlack: '#262625',\n  red: '#CE5C5C',\n  brightRed: '#FF7272',\n  green: '#5BCC5B',\n  brightGreen: '#72FF72',\n  yellow: '#CCCC5B',\n  brightYellow: '#FFFF72',\n  blue: '#5D5DD3',\n  brightBlue: '#7279FF',\n  magenta: '#BC5ED1',\n  brightMagenta: '#E572FF',\n  cyan: '#5DA5D5',\n  brightCyan: '#72F0FF',\n  white: '#F8F8F8',\n  brightWhite: '#FFFFFF'\n}\n\nexport class ViewShell extends LitElement {\n  createRenderRoot () {\n    return this\n  }\n\n  connectedCallback () {\n    super.connectedCallback()\n    const terminal = new Terminal({\n      fontFamily: '\"Cascadia Code\", Menlo, monospace',\n      fontSize: '14',\n      lineHeight: 1,\n      theme: baseTheme,\n      cursorBlink: true,\n      rendererType: 'dom'\n    })\n    const fitAddon = new FitAddon()\n    this.terminal = terminal\n    this.fitAddon = fitAddon\n\n    terminal.loadAddon(fitAddon)\n    // Let Term Match Size\n    window.addEventListener('resize', () => {\n      this.fitAddon.fit()\n    })\n    terminal.open(this.term)\n    fitAddon.fit()\n\n    Client.connect().then((url) => {\n      this.terminal.writeln(`\\n\\rConnected to mozillaVPN@${url}`)\n      this.runCommand('help')\n      this.prompt()\n    })\n    Client.onAny((res) => this.processEvents(res))\n\n    CommandObserver.onAny(() => {\n      this.commandList = CommandObserver.commands\n    })\n\n    let command = ''\n    terminal.onData(e => {\n      switch (e) {\n        case '\\u0003': // Ctrl+C\n          console.log(terminal.getSelection())\n\n          break\n        case '\\r': // Enter\n          this.runCommand(command)\n          command = ''\n          break\n        case '\\u007F': // Backspace (DEL)\n          // Do not delete the prompt\n          if (terminal._core.buffer.x > 2) {\n            terminal.write('\\b \\b')\n            if (command.length > 0) {\n              command = command.substr(0, command.length - 1)\n            }\n          }\n          break\n        default: // Print all other characters for demo\n          if (e >= String.fromCharCode(0x20) && e <= String.fromCharCode(0x7B)) {\n            command += e\n            terminal.write(e)\n          }\n      }\n    })\n    terminal.onKey((key, event) => {\n      if (key.key === '\\u001b[A') {\n        // UP key ->\n        if (this.lastCommand != '') {\n          command = this.lastCommand\n          this.clearLine()\n          terminal.write(this.lastCommand)\n        }\n        return\n      }\n      if (key.key === '\\t') {\n        // Tab Pressed!\n        if (command === '') {\n          // No Command here!\n          terminal.writeln('')\n          terminal.write(this.commandList.join('  '))\n          this.prompt()\n          return\n        }\n        const closestCommands = this.commandList.filter(c => c.startsWith(command))\n        if (closestCommands.length > 1) {\n          terminal.writeln('')\n          terminal.write(closestCommands.join('  '))\n          this.prompt()\n          terminal.write(command)\n        } else if (closestCommands.length == 1) {\n          const newCommand = closestCommands.shift()\n          this.clearLine()\n          terminal.write(newCommand)\n          command = newCommand\n        }\n      }\n    })\n  }\n\n  runCommand (command) {\n    if (command === '') {\n      this.prompt()\n      return\n    }\n    if (command === 'clear') {\n      this.terminal.write('\\u001Bc')\n      this.prompt()\n      return\n    }\n    this.lastCommand = command\n    Client.sendCommand(command)\n    this.prompt()\n  }\n\n  prompt () {\n    this.terminal.write('\\n\\r$ ')\n  }\n\n  clearLine () {\n    this.terminal.write('\\x1b[2K\\r')\n    this.terminal.write('$ ')\n  }\n\n  processEvents (message) {\n    if (['screen_capture', 'log', 'network'].includes(message.type)) {\n      return\n    }\n    if (message.type == 'help') {\n      message.value = message.value.replaceAll('\\t', '\\n\\t')\n    }\n    this.writeResponse(message)\n  }\n\n  writeResponse (message) {\n    const type = message.type\n    let text = message.value\n    if (typeof text === 'object') {\n      text = JSON.stringify(text)\n    }\n\n    const error = message.error\n    if (!text && !error) {\n      return\n    }\n    this.terminal.write(NEWLINE + `client:(${type})` + NEWLINE)\n\n    if (error) {\n      this.terminal.write(`${NEWLINE}${RED_ESCAPE}${error}${NO_COLOR_ESCAPE}`)\n    } else {\n      this.terminal.write(text.replaceAll('\\n', '\\r\\n'))\n    }\n    this.terminal.write(NEWLINE)\n    this.prompt()\n  }\n\n  render () {\n    return html``\n  }\n\n  static styles = css`\n  :host{\n    display: none;\n  }\n\n  .terminal{\n    overflow:hidden;\n  }\n  `\n\n  get term () {\n    return this.parentElement\n  }\n}\ncustomElements.define('view-shell', ViewShell)\n","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(self, function() {\nreturn ","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport * as Strings from 'browser/LocalizableStrings';\nimport { ITerminal, IRenderDebouncer } from 'browser/Types';\nimport { IBuffer } from 'common/buffer/Types';\nimport { isMac } from 'common/Platform';\nimport { TimeBasedDebouncer } from 'browser/TimeBasedDebouncer';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { Disposable } from 'common/Lifecycle';\nimport { ScreenDprMonitor } from 'browser/ScreenDprMonitor';\nimport { IRenderService } from 'browser/services/Services';\nimport { removeElementFromParent } from 'browser/Dom';\n\nconst MAX_ROWS_TO_READ = 20;\n\nconst enum BoundaryPosition {\n  TOP,\n  BOTTOM\n}\n\nexport class AccessibilityManager extends Disposable {\n  private _accessibilityTreeRoot: HTMLElement;\n  private _rowContainer: HTMLElement;\n  private _rowElements: HTMLElement[];\n  private _liveRegion: HTMLElement;\n  private _liveRegionLineCount: number = 0;\n\n  private _renderRowsDebouncer: IRenderDebouncer;\n  private _screenDprMonitor: ScreenDprMonitor;\n\n  private _topBoundaryFocusListener: (e: FocusEvent) => void;\n  private _bottomBoundaryFocusListener: (e: FocusEvent) => void;\n\n  /**\n   * This queue has a character pushed to it for keys that are pressed, if the\n   * next character added to the terminal is equal to the key char then it is\n   * not announced (added to live region) because it has already been announced\n   * by the textarea event (which cannot be canceled). There are some race\n   * condition cases if there is typing while data is streaming, but this covers\n   * the main case of typing into the prompt and inputting the answer to a\n   * question (Y/N, etc.).\n   */\n  private _charsToConsume: string[] = [];\n\n  private _charsToAnnounce: string = '';\n\n  constructor(\n    private readonly _terminal: ITerminal,\n    private readonly _renderService: IRenderService\n  ) {\n    super();\n    this._accessibilityTreeRoot = document.createElement('div');\n    this._accessibilityTreeRoot.setAttribute('role', 'document');\n    this._accessibilityTreeRoot.classList.add('xterm-accessibility');\n\n    this._rowContainer = document.createElement('div');\n    this._rowContainer.setAttribute('role', 'list');\n    this._rowContainer.classList.add('xterm-accessibility-tree');\n    this._rowElements = [];\n    for (let i = 0; i < this._terminal.rows; i++) {\n      this._rowElements[i] = this._createAccessibilityTreeNode();\n      this._rowContainer.appendChild(this._rowElements[i]);\n    }\n\n    this._topBoundaryFocusListener = e => this._onBoundaryFocus(e, BoundaryPosition.TOP);\n    this._bottomBoundaryFocusListener = e => this._onBoundaryFocus(e, BoundaryPosition.BOTTOM);\n    this._rowElements[0].addEventListener('focus', this._topBoundaryFocusListener);\n    this._rowElements[this._rowElements.length - 1].addEventListener('focus', this._bottomBoundaryFocusListener);\n\n    this._refreshRowsDimensions();\n    this._accessibilityTreeRoot.appendChild(this._rowContainer);\n\n    this._renderRowsDebouncer = new TimeBasedDebouncer(this._renderRows.bind(this));\n    this._refreshRows();\n\n    this._liveRegion = document.createElement('div');\n    this._liveRegion.classList.add('live-region');\n    this._liveRegion.setAttribute('aria-live', 'assertive');\n    this._accessibilityTreeRoot.appendChild(this._liveRegion);\n\n    if (!this._terminal.element) {\n      throw new Error('Cannot enable accessibility before Terminal.open');\n    }\n    this._terminal.element.insertAdjacentElement('afterbegin', this._accessibilityTreeRoot);\n\n    this.register(this._renderRowsDebouncer);\n    this.register(this._terminal.onResize(e => this._onResize(e.rows)));\n    this.register(this._terminal.onRender(e => this._refreshRows(e.start, e.end)));\n    this.register(this._terminal.onScroll(() => this._refreshRows()));\n    // Line feed is an issue as the prompt won't be read out after a command is run\n    this.register(this._terminal.onA11yChar(char => this._onChar(char)));\n    this.register(this._terminal.onLineFeed(() => this._onChar('\\n')));\n    this.register(this._terminal.onA11yTab(spaceCount => this._onTab(spaceCount)));\n    this.register(this._terminal.onKey(e => this._onKey(e.key)));\n    this.register(this._terminal.onBlur(() => this._clearLiveRegion()));\n    this.register(this._renderService.onDimensionsChange(() => this._refreshRowsDimensions()));\n\n    this._screenDprMonitor = new ScreenDprMonitor();\n    this.register(this._screenDprMonitor);\n    this._screenDprMonitor.setListener(() => this._refreshRowsDimensions());\n    // This shouldn't be needed on modern browsers but is present in case the\n    // media query that drives the ScreenDprMonitor isn't supported\n    this.register(addDisposableDomListener(window, 'resize', () => this._refreshRowsDimensions()));\n  }\n\n  public dispose(): void {\n    super.dispose();\n    removeElementFromParent(this._accessibilityTreeRoot);\n    this._rowElements.length = 0;\n  }\n\n  private _onBoundaryFocus(e: FocusEvent, position: BoundaryPosition): void {\n    const boundaryElement = e.target as HTMLElement;\n    const beforeBoundaryElement = this._rowElements[position === BoundaryPosition.TOP ? 1 : this._rowElements.length - 2];\n\n    // Don't scroll if the buffer top has reached the end in that direction\n    const posInSet = boundaryElement.getAttribute('aria-posinset');\n    const lastRowPos = position === BoundaryPosition.TOP ? '1' : `${this._terminal.buffer.lines.length}`;\n    if (posInSet === lastRowPos) {\n      return;\n    }\n\n    // Don't scroll when the last focused item was not the second row (focus is going the other\n    // direction)\n    if (e.relatedTarget !== beforeBoundaryElement) {\n      return;\n    }\n\n    // Remove old boundary element from array\n    let topBoundaryElement: HTMLElement;\n    let bottomBoundaryElement: HTMLElement;\n    if (position === BoundaryPosition.TOP) {\n      topBoundaryElement = boundaryElement;\n      bottomBoundaryElement = this._rowElements.pop()!;\n      this._rowContainer.removeChild(bottomBoundaryElement);\n    } else {\n      topBoundaryElement = this._rowElements.shift()!;\n      bottomBoundaryElement = boundaryElement;\n      this._rowContainer.removeChild(topBoundaryElement);\n    }\n\n    // Remove listeners from old boundary elements\n    topBoundaryElement.removeEventListener('focus', this._topBoundaryFocusListener);\n    bottomBoundaryElement.removeEventListener('focus', this._bottomBoundaryFocusListener);\n\n    // Add new element to array/DOM\n    if (position === BoundaryPosition.TOP) {\n      const newElement = this._createAccessibilityTreeNode();\n      this._rowElements.unshift(newElement);\n      this._rowContainer.insertAdjacentElement('afterbegin', newElement);\n    } else {\n      const newElement = this._createAccessibilityTreeNode();\n      this._rowElements.push(newElement);\n      this._rowContainer.appendChild(newElement);\n    }\n\n    // Add listeners to new boundary elements\n    this._rowElements[0].addEventListener('focus', this._topBoundaryFocusListener);\n    this._rowElements[this._rowElements.length - 1].addEventListener('focus', this._bottomBoundaryFocusListener);\n\n    // Scroll up\n    this._terminal.scrollLines(position === BoundaryPosition.TOP ? -1 : 1);\n\n    // Focus new boundary before element\n    this._rowElements[position === BoundaryPosition.TOP ? 1 : this._rowElements.length - 2].focus();\n\n    // Prevent the standard behavior\n    e.preventDefault();\n    e.stopImmediatePropagation();\n  }\n\n  private _onResize(rows: number): void {\n    // Remove bottom boundary listener\n    this._rowElements[this._rowElements.length - 1].removeEventListener('focus', this._bottomBoundaryFocusListener);\n\n    // Grow rows as required\n    for (let i = this._rowContainer.children.length; i < this._terminal.rows; i++) {\n      this._rowElements[i] = this._createAccessibilityTreeNode();\n      this._rowContainer.appendChild(this._rowElements[i]);\n    }\n    // Shrink rows as required\n    while (this._rowElements.length > rows) {\n      this._rowContainer.removeChild(this._rowElements.pop()!);\n    }\n\n    // Add bottom boundary listener\n    this._rowElements[this._rowElements.length - 1].addEventListener('focus', this._bottomBoundaryFocusListener);\n\n    this._refreshRowsDimensions();\n  }\n\n  private _createAccessibilityTreeNode(): HTMLElement {\n    const element = document.createElement('div');\n    element.setAttribute('role', 'listitem');\n    element.tabIndex = -1;\n    this._refreshRowDimensions(element);\n    return element;\n  }\n\n  private _onTab(spaceCount: number): void {\n    for (let i = 0; i < spaceCount; i++) {\n      this._onChar(' ');\n    }\n  }\n\n  private _onChar(char: string): void {\n    if (this._liveRegionLineCount < MAX_ROWS_TO_READ + 1) {\n      if (this._charsToConsume.length > 0) {\n        // Have the screen reader ignore the char if it was just input\n        const shiftedChar = this._charsToConsume.shift();\n        if (shiftedChar !== char) {\n          this._charsToAnnounce += char;\n        }\n      } else {\n        this._charsToAnnounce += char;\n      }\n\n      if (char === '\\n') {\n        this._liveRegionLineCount++;\n        if (this._liveRegionLineCount === MAX_ROWS_TO_READ + 1) {\n          this._liveRegion.textContent += Strings.tooMuchOutput;\n        }\n      }\n\n      // Only detach/attach on mac as otherwise messages can go unaccounced\n      if (isMac) {\n        if (this._liveRegion.textContent && this._liveRegion.textContent.length > 0 && !this._liveRegion.parentNode) {\n          setTimeout(() => {\n            this._accessibilityTreeRoot.appendChild(this._liveRegion);\n          }, 0);\n        }\n      }\n    }\n  }\n\n  private _clearLiveRegion(): void {\n    this._liveRegion.textContent = '';\n    this._liveRegionLineCount = 0;\n\n    // Only detach/attach on mac as otherwise messages can go unaccounced\n    if (isMac) {\n      removeElementFromParent(this._liveRegion);\n    }\n  }\n\n  private _onKey(keyChar: string): void {\n    this._clearLiveRegion();\n    this._charsToConsume.push(keyChar);\n  }\n\n  private _refreshRows(start?: number, end?: number): void {\n    this._renderRowsDebouncer.refresh(start, end, this._terminal.rows);\n  }\n\n  private _renderRows(start: number, end: number): void {\n    const buffer: IBuffer = this._terminal.buffer;\n    const setSize = buffer.lines.length.toString();\n    for (let i = start; i <= end; i++) {\n      const lineData = buffer.translateBufferLineToString(buffer.ydisp + i, true);\n      const posInSet = (buffer.ydisp + i + 1).toString();\n      const element = this._rowElements[i];\n      if (element) {\n        if (lineData.length === 0) {\n          element.innerText = '\\u00a0';\n        } else {\n          element.textContent = lineData;\n        }\n        element.setAttribute('aria-posinset', posInSet);\n        element.setAttribute('aria-setsize', setSize);\n      }\n    }\n    this._announceCharacters();\n  }\n\n  private _refreshRowsDimensions(): void {\n    if (!this._renderService.dimensions.actualCellHeight) {\n      return;\n    }\n    if (this._rowElements.length !== this._terminal.rows) {\n      this._onResize(this._terminal.rows);\n    }\n    for (let i = 0; i < this._terminal.rows; i++) {\n      this._refreshRowDimensions(this._rowElements[i]);\n    }\n  }\n\n  private _refreshRowDimensions(element: HTMLElement): void {\n    element.style.height = `${this._renderService.dimensions.actualCellHeight}px`;\n  }\n\n  private _announceCharacters(): void {\n    if (this._charsToAnnounce.length === 0) {\n      return;\n    }\n    this._liveRegion.textContent += this._charsToAnnounce;\n    this._charsToAnnounce = '';\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ISelectionService } from 'browser/services/Services';\nimport { ICoreService } from 'common/services/Services';\n\n/**\n * Prepares text to be pasted into the terminal by normalizing the line endings\n * @param text The pasted text that needs processing before inserting into the terminal\n */\nexport function prepareTextForTerminal(text: string): string {\n  return text.replace(/\\r?\\n/g, '\\r');\n}\n\n/**\n * Bracket text for paste, if necessary, as per https://cirw.in/blog/bracketed-paste\n * @param text The pasted text to bracket\n */\nexport function bracketTextForPaste(text: string, bracketedPasteMode: boolean): string {\n  if (bracketedPasteMode) {\n    return '\\x1b[200~' + text + '\\x1b[201~';\n  }\n  return text;\n}\n\n/**\n * Binds copy functionality to the given terminal.\n * @param ev The original copy event to be handled\n */\nexport function copyHandler(ev: ClipboardEvent, selectionService: ISelectionService): void {\n  if (ev.clipboardData) {\n    ev.clipboardData.setData('text/plain', selectionService.selectionText);\n  }\n  // Prevent or the original text will be copied.\n  ev.preventDefault();\n}\n\n/**\n * Redirect the clipboard's data to the terminal's input handler.\n * @param ev The original paste event to be handled\n * @param term The terminal on which to apply the handled paste event\n */\nexport function handlePasteEvent(ev: ClipboardEvent, textarea: HTMLTextAreaElement, coreService: ICoreService): void {\n  ev.stopPropagation();\n  if (ev.clipboardData) {\n    const text = ev.clipboardData.getData('text/plain');\n    paste(text, textarea, coreService);\n  }\n}\n\nexport function paste(text: string, textarea: HTMLTextAreaElement, coreService: ICoreService): void {\n  text = prepareTextForTerminal(text);\n  text = bracketTextForPaste(text, coreService.decPrivateModes.bracketedPasteMode);\n  coreService.triggerDataEvent(text, true);\n  textarea.value = '';\n}\n\n/**\n * Moves the textarea under the mouse cursor and focuses it.\n * @param ev The original right click event to be handled.\n * @param textarea The terminal's textarea.\n */\nexport function moveTextAreaUnderMouseCursor(ev: MouseEvent, textarea: HTMLTextAreaElement, screenElement: HTMLElement): void {\n\n  // Calculate textarea position relative to the screen element\n  const pos = screenElement.getBoundingClientRect();\n  const left = ev.clientX - pos.left - 10;\n  const top = ev.clientY - pos.top - 10;\n\n  // Bring textarea at the cursor position\n  textarea.style.width = '20px';\n  textarea.style.height = '20px';\n  textarea.style.left = `${left}px`;\n  textarea.style.top = `${top}px`;\n  textarea.style.zIndex = '1000';\n\n  textarea.focus();\n}\n\n/**\n * Bind to right-click event and allow right-click copy and paste.\n * @param ev The original right click event to be handled.\n * @param textarea The terminal's textarea.\n * @param selectionService The terminal's selection manager.\n * @param shouldSelectWord If true and there is no selection the current word will be selected\n */\nexport function rightClickHandler(ev: MouseEvent, textarea: HTMLTextAreaElement, screenElement: HTMLElement, selectionService: ISelectionService, shouldSelectWord: boolean): void {\n  moveTextAreaUnderMouseCursor(ev, textarea, screenElement);\n\n  if (shouldSelectWord) {\n    selectionService.rightClickSelect(ev);\n  }\n\n  // Get textarea ready to copy from the context menu\n  textarea.value = selectionService.selectionText;\n  textarea.select();\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IColor } from 'browser/Types';\n\n/**\n * Helper functions where the source type is \"channels\" (individual color channels as numbers).\n */\nexport namespace channels {\n  export function toCss(r: number, g: number, b: number, a?: number): string {\n    if (a !== undefined) {\n      return `#${toPaddedHex(r)}${toPaddedHex(g)}${toPaddedHex(b)}${toPaddedHex(a)}`;\n    }\n    return `#${toPaddedHex(r)}${toPaddedHex(g)}${toPaddedHex(b)}`;\n  }\n\n  export function toRgba(r: number, g: number, b: number, a: number = 0xFF): number {\n    // >>> 0 forces an unsigned int\n    return (r << 24 | g << 16 | b << 8 | a) >>> 0;\n  }\n}\n\n/**\n * Helper functions where the source type is `IColor`.\n */\nexport namespace color {\n  export function blend(bg: IColor, fg: IColor): IColor {\n    const a = (fg.rgba & 0xFF) / 255;\n    if (a === 1) {\n      return {\n        css: fg.css,\n        rgba: fg.rgba\n      };\n    }\n    const fgR = (fg.rgba >> 24) & 0xFF;\n    const fgG = (fg.rgba >> 16) & 0xFF;\n    const fgB = (fg.rgba >> 8) & 0xFF;\n    const bgR = (bg.rgba >> 24) & 0xFF;\n    const bgG = (bg.rgba >> 16) & 0xFF;\n    const bgB = (bg.rgba >> 8) & 0xFF;\n    const r = bgR + Math.round((fgR - bgR) * a);\n    const g = bgG + Math.round((fgG - bgG) * a);\n    const b = bgB + Math.round((fgB - bgB) * a);\n    const css = channels.toCss(r, g, b);\n    const rgba = channels.toRgba(r, g, b);\n    return { css, rgba };\n  }\n\n  export function isOpaque(color: IColor): boolean {\n    return (color.rgba & 0xFF) === 0xFF;\n  }\n\n  export function ensureContrastRatio(bg: IColor, fg: IColor, ratio: number): IColor | undefined {\n    const result = rgba.ensureContrastRatio(bg.rgba, fg.rgba, ratio);\n    if (!result) {\n      return undefined;\n    }\n    return rgba.toColor(\n      (result >> 24 & 0xFF),\n      (result >> 16 & 0xFF),\n      (result >> 8  & 0xFF)\n    );\n  }\n\n  export function opaque(color: IColor): IColor {\n    const rgbaColor = (color.rgba | 0xFF) >>> 0;\n    const [r, g, b] = rgba.toChannels(rgbaColor);\n    return {\n      css: channels.toCss(r, g, b),\n      rgba: rgbaColor\n    };\n  }\n\n  export function opacity(color: IColor, opacity: number): IColor {\n    const a = Math.round(opacity * 0xFF);\n    const [r, g, b] = rgba.toChannels(color.rgba);\n    return {\n      css: channels.toCss(r, g, b, a),\n      rgba: channels.toRgba(r, g, b, a)\n    };\n  }\n}\n\n/**\n * Helper functions where the source type is \"css\" (string: '#rgb', '#rgba', '#rrggbb', '#rrggbbaa').\n */\nexport namespace css {\n  export function toColor(css: string): IColor {\n    switch (css.length) {\n      case 7: // #rrggbb\n        return {\n          css,\n          rgba: (parseInt(css.slice(1), 16) << 8 | 0xFF) >>> 0\n        };\n      case 9: // #rrggbbaa\n        return {\n          css,\n          rgba: parseInt(css.slice(1), 16) >>> 0\n        };\n    }\n    throw new Error('css.toColor: Unsupported css format');\n  }\n}\n\n/**\n * Helper functions where the source type is \"rgb\" (number: 0xrrggbb).\n */\nexport namespace rgb {\n  /**\n   * Gets the relative luminance of an RGB color, this is useful in determining the contrast ratio\n   * between two colors.\n   * @param rgb The color to use.\n   * @see https://www.w3.org/TR/WCAG20/#relativeluminancedef\n   */\n  export function relativeLuminance(rgb: number): number {\n    return relativeLuminance2(\n      (rgb >> 16) & 0xFF,\n      (rgb >> 8 ) & 0xFF,\n      (rgb      ) & 0xFF);\n  }\n\n  /**\n   * Gets the relative luminance of an RGB color, this is useful in determining the contrast ratio\n   * between two colors.\n   * @param r The red channel (0x00 to 0xFF).\n   * @param g The green channel (0x00 to 0xFF).\n   * @param b The blue channel (0x00 to 0xFF).\n   * @see https://www.w3.org/TR/WCAG20/#relativeluminancedef\n   */\n  export function relativeLuminance2(r: number, g: number, b: number): number {\n    const rs = r / 255;\n    const gs = g / 255;\n    const bs = b / 255;\n    const rr = rs <= 0.03928 ? rs / 12.92 : Math.pow((rs + 0.055) / 1.055, 2.4);\n    const rg = gs <= 0.03928 ? gs / 12.92 : Math.pow((gs + 0.055) / 1.055, 2.4);\n    const rb = bs <= 0.03928 ? bs / 12.92 : Math.pow((bs + 0.055) / 1.055, 2.4);\n    return rr * 0.2126 + rg * 0.7152 + rb * 0.0722;\n  }\n}\n\n/**\n * Helper functions where the source type is \"rgba\" (number: 0xrrggbbaa).\n */\nexport namespace rgba {\n  export function ensureContrastRatio(bgRgba: number, fgRgba: number, ratio: number): number | undefined {\n    const bgL = rgb.relativeLuminance(bgRgba >> 8);\n    const fgL = rgb.relativeLuminance(fgRgba >> 8);\n    const cr = contrastRatio(bgL, fgL);\n    if (cr < ratio) {\n      if (fgL < bgL) {\n        return reduceLuminance(bgRgba, fgRgba, ratio);\n      }\n      return increaseLuminance(bgRgba, fgRgba, ratio);\n    }\n    return undefined;\n  }\n\n  export function reduceLuminance(bgRgba: number, fgRgba: number, ratio: number): number {\n    // This is a naive but fast approach to reducing luminance as converting to\n    // HSL and back is expensive\n    const bgR = (bgRgba >> 24) & 0xFF;\n    const bgG = (bgRgba >> 16) & 0xFF;\n    const bgB = (bgRgba >>  8) & 0xFF;\n    let fgR = (fgRgba >> 24) & 0xFF;\n    let fgG = (fgRgba >> 16) & 0xFF;\n    let fgB = (fgRgba >>  8) & 0xFF;\n    let cr = contrastRatio(rgb.relativeLuminance2(fgR, fgB, fgG), rgb.relativeLuminance2(bgR, bgG, bgB));\n    while (cr < ratio && (fgR > 0 || fgG > 0 || fgB > 0)) {\n      // Reduce by 10% until the ratio is hit\n      fgR -= Math.max(0, Math.ceil(fgR * 0.1));\n      fgG -= Math.max(0, Math.ceil(fgG * 0.1));\n      fgB -= Math.max(0, Math.ceil(fgB * 0.1));\n      cr = contrastRatio(rgb.relativeLuminance2(fgR, fgB, fgG), rgb.relativeLuminance2(bgR, bgG, bgB));\n    }\n    return (fgR << 24 | fgG << 16 | fgB << 8 | 0xFF) >>> 0;\n  }\n\n  export function increaseLuminance(bgRgba: number, fgRgba: number, ratio: number): number {\n    // This is a naive but fast approach to increasing luminance as converting to\n    // HSL and back is expensive\n    const bgR = (bgRgba >> 24) & 0xFF;\n    const bgG = (bgRgba >> 16) & 0xFF;\n    const bgB = (bgRgba >>  8) & 0xFF;\n    let fgR = (fgRgba >> 24) & 0xFF;\n    let fgG = (fgRgba >> 16) & 0xFF;\n    let fgB = (fgRgba >>  8) & 0xFF;\n    let cr = contrastRatio(rgb.relativeLuminance2(fgR, fgB, fgG), rgb.relativeLuminance2(bgR, bgG, bgB));\n    while (cr < ratio && (fgR < 0xFF || fgG < 0xFF || fgB < 0xFF)) {\n      // Increase by 10% until the ratio is hit\n      fgR = Math.min(0xFF, fgR + Math.ceil((255 - fgR) * 0.1));\n      fgG = Math.min(0xFF, fgG + Math.ceil((255 - fgG) * 0.1));\n      fgB = Math.min(0xFF, fgB + Math.ceil((255 - fgB) * 0.1));\n      cr = contrastRatio(rgb.relativeLuminance2(fgR, fgB, fgG), rgb.relativeLuminance2(bgR, bgG, bgB));\n    }\n    return (fgR << 24 | fgG << 16 | fgB << 8 | 0xFF) >>> 0;\n  }\n\n  export function toChannels(value: number): [number, number, number, number] {\n    return [(value >> 24) & 0xFF, (value >> 16) & 0xFF, (value >> 8) & 0xFF, value & 0xFF];\n  }\n\n  export function toColor(r: number, g: number, b: number): IColor {\n    return {\n      css: channels.toCss(r, g, b),\n      rgba: channels.toRgba(r, g, b)\n    };\n  }\n}\n\nexport function toPaddedHex(c: number): string {\n  const s = c.toString(16);\n  return s.length < 2 ? '0' + s : s;\n}\n\n/**\n * Gets the contrast ratio between two relative luminance values.\n * @param l1 The first relative luminance.\n * @param l2 The first relative luminance.\n * @see https://www.w3.org/TR/WCAG20/#contrast-ratiodef\n */\nexport function contrastRatio(l1: number, l2: number): number {\n  if (l1 < l2) {\n    return (l2 + 0.05) / (l1 + 0.05);\n  }\n  return (l1 + 0.05) / (l2 + 0.05);\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IColor, IColorContrastCache } from 'browser/Types';\n\nexport class ColorContrastCache implements IColorContrastCache {\n  private _color: { [bg: number]: { [fg: number]: IColor | null | undefined } | undefined } = {};\n  private _rgba: { [bg: number]: { [fg: number]: string | null | undefined } | undefined } = {};\n\n  public clear(): void {\n    this._color = {};\n    this._rgba = {};\n  }\n\n  public setCss(bg: number, fg: number, value: string | null): void {\n    if (!this._rgba[bg]) {\n      this._rgba[bg] = {};\n    }\n    this._rgba[bg]![fg] = value;\n  }\n\n  public getCss(bg: number, fg: number): string | null | undefined {\n    return this._rgba[bg] ? this._rgba[bg]![fg] : undefined;\n  }\n\n  public setColor(bg: number, fg: number, value: IColor | null): void {\n    if (!this._color[bg]) {\n      this._color[bg] = {};\n    }\n    this._color[bg]![fg] = value;\n  }\n\n  public getColor(bg: number, fg: number): IColor | null | undefined {\n    return this._color[bg] ? this._color[bg]![fg] : undefined;\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IColorManager, IColor, IColorSet, IColorContrastCache } from 'browser/Types';\nimport { ITheme } from 'common/services/Services';\nimport { channels, color, css } from 'browser/Color';\nimport { ColorContrastCache } from 'browser/ColorContrastCache';\n\nconst DEFAULT_FOREGROUND = css.toColor('#ffffff');\nconst DEFAULT_BACKGROUND = css.toColor('#000000');\nconst DEFAULT_CURSOR = css.toColor('#ffffff');\nconst DEFAULT_CURSOR_ACCENT = css.toColor('#000000');\nconst DEFAULT_SELECTION = {\n  css: 'rgba(255, 255, 255, 0.3)',\n  rgba: 0xFFFFFF4D\n};\n\n// An IIFE to generate DEFAULT_ANSI_COLORS.\nexport const DEFAULT_ANSI_COLORS = Object.freeze((() => {\n  const colors = [\n    // dark:\n    css.toColor('#2e3436'),\n    css.toColor('#cc0000'),\n    css.toColor('#4e9a06'),\n    css.toColor('#c4a000'),\n    css.toColor('#3465a4'),\n    css.toColor('#75507b'),\n    css.toColor('#06989a'),\n    css.toColor('#d3d7cf'),\n    // bright:\n    css.toColor('#555753'),\n    css.toColor('#ef2929'),\n    css.toColor('#8ae234'),\n    css.toColor('#fce94f'),\n    css.toColor('#729fcf'),\n    css.toColor('#ad7fa8'),\n    css.toColor('#34e2e2'),\n    css.toColor('#eeeeec')\n  ];\n\n  // Fill in the remaining 240 ANSI colors.\n  // Generate colors (16-231)\n  const v = [0x00, 0x5f, 0x87, 0xaf, 0xd7, 0xff];\n  for (let i = 0; i < 216; i++) {\n    const r = v[(i / 36) % 6 | 0];\n    const g = v[(i / 6) % 6 | 0];\n    const b = v[i % 6];\n    colors.push({\n      css: channels.toCss(r, g, b),\n      rgba: channels.toRgba(r, g, b)\n    });\n  }\n\n  // Generate greys (232-255)\n  for (let i = 0; i < 24; i++) {\n    const c = 8 + i * 10;\n    colors.push({\n      css: channels.toCss(c, c, c),\n      rgba: channels.toRgba(c, c, c)\n    });\n  }\n\n  return colors;\n})());\n\n/**\n * Manages the source of truth for a terminal's colors.\n */\nexport class ColorManager implements IColorManager {\n  public colors: IColorSet;\n  private _ctx: CanvasRenderingContext2D;\n  private _litmusColor: CanvasGradient;\n  private _contrastCache: IColorContrastCache;\n\n  constructor(document: Document, public allowTransparency: boolean) {\n    const canvas = document.createElement('canvas');\n    canvas.width = 1;\n    canvas.height = 1;\n    const ctx = canvas.getContext('2d');\n    if (!ctx) {\n      throw new Error('Could not get rendering context');\n    }\n    this._ctx = ctx;\n    this._ctx.globalCompositeOperation = 'copy';\n    this._litmusColor = this._ctx.createLinearGradient(0, 0, 1, 1);\n    this._contrastCache = new ColorContrastCache();\n    this.colors = {\n      foreground: DEFAULT_FOREGROUND,\n      background: DEFAULT_BACKGROUND,\n      cursor: DEFAULT_CURSOR,\n      cursorAccent: DEFAULT_CURSOR_ACCENT,\n      selectionTransparent: DEFAULT_SELECTION,\n      selectionOpaque: color.blend(DEFAULT_BACKGROUND, DEFAULT_SELECTION),\n      ansi: DEFAULT_ANSI_COLORS.slice(),\n      contrastCache: this._contrastCache\n    };\n  }\n\n  public onOptionsChange(key: string): void {\n    if (key === 'minimumContrastRatio') {\n      this._contrastCache.clear();\n    }\n  }\n\n  /**\n   * Sets the terminal's theme.\n   * @param theme The  theme to use. If a partial theme is provided then default\n   * colors will be used where colors are not defined.\n   */\n  public setTheme(theme: ITheme = {}): void {\n    this.colors.foreground = this._parseColor(theme.foreground, DEFAULT_FOREGROUND);\n    this.colors.background = this._parseColor(theme.background, DEFAULT_BACKGROUND);\n    this.colors.cursor = this._parseColor(theme.cursor, DEFAULT_CURSOR, true);\n    this.colors.cursorAccent = this._parseColor(theme.cursorAccent, DEFAULT_CURSOR_ACCENT, true);\n    this.colors.selectionTransparent = this._parseColor(theme.selection, DEFAULT_SELECTION, true);\n    this.colors.selectionOpaque = color.blend(this.colors.background, this.colors.selectionTransparent);\n    /**\n     * If selection color is opaque, blend it with background with 0.3 opacity\n     * Issue #2737\n     */\n    if (color.isOpaque(this.colors.selectionTransparent)) {\n      const opacity = 0.3;\n      this.colors.selectionTransparent = color.opacity(this.colors.selectionTransparent, opacity);\n    }\n    this.colors.ansi[0] = this._parseColor(theme.black, DEFAULT_ANSI_COLORS[0]);\n    this.colors.ansi[1] = this._parseColor(theme.red, DEFAULT_ANSI_COLORS[1]);\n    this.colors.ansi[2] = this._parseColor(theme.green, DEFAULT_ANSI_COLORS[2]);\n    this.colors.ansi[3] = this._parseColor(theme.yellow, DEFAULT_ANSI_COLORS[3]);\n    this.colors.ansi[4] = this._parseColor(theme.blue, DEFAULT_ANSI_COLORS[4]);\n    this.colors.ansi[5] = this._parseColor(theme.magenta, DEFAULT_ANSI_COLORS[5]);\n    this.colors.ansi[6] = this._parseColor(theme.cyan, DEFAULT_ANSI_COLORS[6]);\n    this.colors.ansi[7] = this._parseColor(theme.white, DEFAULT_ANSI_COLORS[7]);\n    this.colors.ansi[8] = this._parseColor(theme.brightBlack, DEFAULT_ANSI_COLORS[8]);\n    this.colors.ansi[9] = this._parseColor(theme.brightRed, DEFAULT_ANSI_COLORS[9]);\n    this.colors.ansi[10] = this._parseColor(theme.brightGreen, DEFAULT_ANSI_COLORS[10]);\n    this.colors.ansi[11] = this._parseColor(theme.brightYellow, DEFAULT_ANSI_COLORS[11]);\n    this.colors.ansi[12] = this._parseColor(theme.brightBlue, DEFAULT_ANSI_COLORS[12]);\n    this.colors.ansi[13] = this._parseColor(theme.brightMagenta, DEFAULT_ANSI_COLORS[13]);\n    this.colors.ansi[14] = this._parseColor(theme.brightCyan, DEFAULT_ANSI_COLORS[14]);\n    this.colors.ansi[15] = this._parseColor(theme.brightWhite, DEFAULT_ANSI_COLORS[15]);\n    // Clear our the cache\n    this._contrastCache.clear();\n  }\n\n  private _parseColor(\n    css: string | undefined,\n    fallback: IColor,\n    allowTransparency: boolean = this.allowTransparency\n  ): IColor {\n    if (css === undefined) {\n      return fallback;\n    }\n\n    // If parsing the value results in failure, then it must be ignored, and the attribute must\n    // retain its previous value.\n    // -- https://html.spec.whatwg.org/multipage/canvas.html#fill-and-stroke-styles\n    this._ctx.fillStyle = this._litmusColor;\n    this._ctx.fillStyle = css;\n    if (typeof this._ctx.fillStyle !== 'string') {\n      console.warn(`Color: ${css} is invalid using fallback ${fallback.css}`);\n      return fallback;\n    }\n\n    this._ctx.fillRect(0, 0, 1, 1);\n    const data = this._ctx.getImageData(0, 0, 1, 1).data;\n\n    // Check if the printed color was transparent\n    if (data[3] !== 0xFF) {\n      if (!allowTransparency) {\n        // Ideally we'd just ignore the alpha channel, but...\n        //\n        // Browsers may not give back exactly the same RGB values we put in, because most/all\n        // convert the color to a pre-multiplied representation. getImageData converts that back to\n        // a un-premultipled representation, but the precision loss may make the RGB channels unuable\n        // on their own.\n        //\n        // E.g. In Chrome #12345610 turns into #10305010, and in the extreme case, 0xFFFFFF00 turns\n        // into 0x00000000.\n        //\n        // \"Note: Due to the lossy nature of converting to and from premultiplied alpha color values,\n        // pixels that have just been set using putImageData() might be returned to an equivalent\n        // getImageData() as different values.\"\n        // -- https://html.spec.whatwg.org/multipage/canvas.html#pixel-manipulation\n        //\n        // So let's just use the fallback color in this case instead.\n        console.warn(\n          `Color: ${css} is using transparency, but allowTransparency is false. ` +\n          `Using fallback ${fallback.css}.`\n        );\n        return fallback;\n      }\n\n      // https://html.spec.whatwg.org/multipage/canvas.html#serialisation-of-a-color\n      // the color value has alpha less than 1.0, and the string is the color value in the CSS rgba()\n      const [r, g, b, a] = this._ctx.fillStyle.substring(5, this._ctx.fillStyle.length - 1).split(',').map(component => Number(component));\n      const alpha = Math.round(a * 255);\n      const rgba: number = channels.toRgba(r, g, b, alpha);\n      return {\n        rgba,\n        css\n      };\n    }\n\n    return {\n      // https://html.spec.whatwg.org/multipage/canvas.html#serialisation-of-a-color\n      // if it has alpha equal to 1.0, then the string is a lowercase six-digit hex value, prefixed with a \"#\" character\n      css: this._ctx.fillStyle,\n      rgba: channels.toRgba(data[0], data[1], data[2], data[3])\n    };\n  }\n}\n","/**\n * Copyright (c) 2020 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport function removeElementFromParent(...elements: (HTMLElement | undefined)[]): void {\n  for (const e of elements) {\n    e?.parentElement?.removeChild(e);\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\n/**\n * Adds a disposable listener to a node in the DOM, returning the disposable.\n * @param type The event type.\n * @param handler The handler for the listener.\n */\nexport function addDisposableDomListener(\n  node: Element | Window | Document,\n  type: string,\n  handler: (e: any) => void,\n  options?: boolean | AddEventListenerOptions\n): IDisposable {\n  node.addEventListener(type, handler, options);\n  let disposed = false;\n  return {\n    dispose: () => {\n      if (disposed) {\n        return;\n      }\n      disposed = true;\n      node.removeEventListener(type, handler, options);\n    }\n  };\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ILinkifierEvent, ILinkMatcher, LinkMatcherHandler, ILinkMatcherOptions, ILinkifier, IMouseZoneManager, IMouseZone, IRegisteredLinkMatcher } from 'browser/Types';\nimport { IBufferStringIteratorResult } from 'common/buffer/Types';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { ILogService, IBufferService, IOptionsService, IUnicodeService } from 'common/services/Services';\n\n/**\n * Limit of the unwrapping line expansion (overscan) at the top and bottom\n * of the actual viewport in ASCII characters.\n * A limit of 2000 should match most sane urls.\n */\nconst OVERSCAN_CHAR_LIMIT = 2000;\n\n/**\n * The Linkifier applies links to rows shortly after they have been refreshed.\n */\nexport class Linkifier implements ILinkifier {\n  /**\n   * The time to wait after a row is changed before it is linkified. This prevents\n   * the costly operation of searching every row multiple times, potentially a\n   * huge amount of times.\n   */\n  protected static _timeBeforeLatency = 200;\n\n  protected _linkMatchers: IRegisteredLinkMatcher[] = [];\n\n  private _mouseZoneManager: IMouseZoneManager | undefined;\n  private _element: HTMLElement | undefined;\n\n  private _rowsTimeoutId: number | undefined;\n  private _nextLinkMatcherId = 0;\n  private _rowsToLinkify: { start: number | undefined, end: number | undefined };\n\n  private _onShowLinkUnderline = new EventEmitter<ILinkifierEvent>();\n  public get onShowLinkUnderline(): IEvent<ILinkifierEvent> { return this._onShowLinkUnderline.event; }\n  private _onHideLinkUnderline = new EventEmitter<ILinkifierEvent>();\n  public get onHideLinkUnderline(): IEvent<ILinkifierEvent> { return this._onHideLinkUnderline.event; }\n  private _onLinkTooltip = new EventEmitter<ILinkifierEvent>();\n  public get onLinkTooltip(): IEvent<ILinkifierEvent> { return this._onLinkTooltip.event; }\n\n  constructor(\n    @IBufferService protected readonly _bufferService: IBufferService,\n    @ILogService private readonly _logService: ILogService,\n    @IUnicodeService private readonly _unicodeService: IUnicodeService\n  ) {\n    this._rowsToLinkify = {\n      start: undefined,\n      end: undefined\n    };\n  }\n\n  /**\n   * Attaches the linkifier to the DOM, enabling linkification.\n   * @param mouseZoneManager The mouse zone manager to register link zones with.\n   */\n  public attachToDom(element: HTMLElement, mouseZoneManager: IMouseZoneManager): void {\n    this._element = element;\n    this._mouseZoneManager = mouseZoneManager;\n  }\n\n  /**\n   * Queue linkification on a set of rows.\n   * @param start The row to linkify from (inclusive).\n   * @param end The row to linkify to (inclusive).\n   */\n  public linkifyRows(start: number, end: number): void {\n    // Don't attempt linkify if not yet attached to DOM\n    if (!this._mouseZoneManager) {\n      return;\n    }\n\n    // Increase range to linkify\n    if (this._rowsToLinkify.start === undefined || this._rowsToLinkify.end === undefined) {\n      this._rowsToLinkify.start = start;\n      this._rowsToLinkify.end = end;\n    } else {\n      this._rowsToLinkify.start = Math.min(this._rowsToLinkify.start, start);\n      this._rowsToLinkify.end = Math.max(this._rowsToLinkify.end, end);\n    }\n\n    // Clear out any existing links on this row range\n    this._mouseZoneManager.clearAll(start, end);\n\n    // Restart timer\n    if (this._rowsTimeoutId) {\n      clearTimeout(this._rowsTimeoutId);\n    }\n\n    // Cannot use window.setTimeout since tests need to run in node\n    this._rowsTimeoutId = setTimeout(() => this._linkifyRows(), Linkifier._timeBeforeLatency) as any as number;\n  }\n\n  /**\n   * Linkifies the rows requested.\n   */\n  private _linkifyRows(): void {\n    this._rowsTimeoutId = undefined;\n    const buffer = this._bufferService.buffer;\n\n    if (this._rowsToLinkify.start === undefined || this._rowsToLinkify.end === undefined) {\n      this._logService.debug('_rowToLinkify was unset before _linkifyRows was called');\n      return;\n    }\n\n    // Ensure the start row exists\n    const absoluteRowIndexStart = buffer.ydisp + this._rowsToLinkify.start;\n    if (absoluteRowIndexStart >= buffer.lines.length) {\n      return;\n    }\n\n    // Invalidate bad end row values (if a resize happened)\n    const absoluteRowIndexEnd = buffer.ydisp + Math.min(this._rowsToLinkify.end, this._bufferService.rows) + 1;\n\n    // Iterate over the range of unwrapped content strings within start..end\n    // (excluding).\n    // _doLinkifyRow gets full unwrapped lines with the start row as buffer offset\n    // for every matcher.\n    // The unwrapping is needed to also match content that got wrapped across\n    // several buffer lines. To avoid a worst case scenario where the whole buffer\n    // contains just a single unwrapped string we limit this line expansion beyond\n    // the viewport to +OVERSCAN_CHAR_LIMIT chars (overscan) at top and bottom.\n    // This comes with the tradeoff that matches longer than OVERSCAN_CHAR_LIMIT\n    // chars will not match anymore at the viewport borders.\n    const overscanLineLimit = Math.ceil(OVERSCAN_CHAR_LIMIT / this._bufferService.cols);\n    const iterator = this._bufferService.buffer.iterator(\n      false, absoluteRowIndexStart, absoluteRowIndexEnd, overscanLineLimit, overscanLineLimit);\n    while (iterator.hasNext()) {\n      const lineData: IBufferStringIteratorResult = iterator.next();\n      for (let i = 0; i < this._linkMatchers.length; i++) {\n        this._doLinkifyRow(lineData.range.first, lineData.content, this._linkMatchers[i]);\n      }\n    }\n\n    this._rowsToLinkify.start = undefined;\n    this._rowsToLinkify.end = undefined;\n  }\n\n  /**\n   * Registers a link matcher, allowing custom link patterns to be matched and\n   * handled.\n   * @param regex The regular expression to search for. Specifically, this\n   * searches the textContent of the rows. You will want to use \\s to match a\n   * space ' ' character for example.\n   * @param handler The callback when the link is called.\n   * @param options Options for the link matcher.\n   * @return The ID of the new matcher, this can be used to deregister.\n   */\n  public registerLinkMatcher(regex: RegExp, handler: LinkMatcherHandler, options: ILinkMatcherOptions = {}): number {\n    if (!handler) {\n      throw new Error('handler must be defined');\n    }\n    const matcher: IRegisteredLinkMatcher = {\n      id: this._nextLinkMatcherId++,\n      regex,\n      handler,\n      matchIndex: options.matchIndex,\n      validationCallback: options.validationCallback,\n      hoverTooltipCallback: options.tooltipCallback,\n      hoverLeaveCallback: options.leaveCallback,\n      willLinkActivate: options.willLinkActivate,\n      priority: options.priority || 0\n    };\n    this._addLinkMatcherToList(matcher);\n    return matcher.id;\n  }\n\n  /**\n   * Inserts a link matcher to the list in the correct position based on the\n   * priority of each link matcher. New link matchers of equal priority are\n   * considered after older link matchers.\n   * @param matcher The link matcher to be added.\n   */\n  private _addLinkMatcherToList(matcher: IRegisteredLinkMatcher): void {\n    if (this._linkMatchers.length === 0) {\n      this._linkMatchers.push(matcher);\n      return;\n    }\n\n    for (let i = this._linkMatchers.length - 1; i >= 0; i--) {\n      if (matcher.priority <= this._linkMatchers[i].priority) {\n        this._linkMatchers.splice(i + 1, 0, matcher);\n        return;\n      }\n    }\n\n    this._linkMatchers.splice(0, 0, matcher);\n  }\n\n  /**\n   * Deregisters a link matcher if it has been registered.\n   * @param matcherId The link matcher's ID (returned after register)\n   * @return Whether a link matcher was found and deregistered.\n   */\n  public deregisterLinkMatcher(matcherId: number): boolean {\n    for (let i = 0; i < this._linkMatchers.length; i++) {\n      if (this._linkMatchers[i].id === matcherId) {\n        this._linkMatchers.splice(i, 1);\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Linkifies a row given a specific handler.\n   * @param rowIndex The row index to linkify (absolute index).\n   * @param text string content of the unwrapped row.\n   * @param matcher The link matcher for this line.\n   */\n  private _doLinkifyRow(rowIndex: number, text: string, matcher: ILinkMatcher): void {\n    // clone regex to do a global search on text\n    const rex = new RegExp(matcher.regex.source, (matcher.regex.flags || '') + 'g');\n    let match;\n    let stringIndex = -1;\n    while ((match = rex.exec(text)) !== null) {\n      const uri = match[typeof matcher.matchIndex !== 'number' ? 0 : matcher.matchIndex];\n      if (!uri) {\n        // something matched but does not comply with the given matchIndex\n        // since this is most likely a bug the regex itself we simply do nothing here\n        this._logService.debug('match found without corresponding matchIndex', match, matcher);\n        break;\n      }\n\n      // Get index, match.index is for the outer match which includes negated chars\n      // therefore we cannot use match.index directly, instead we search the position\n      // of the match group in text again\n      // also correct regex and string search offsets for the next loop run\n      stringIndex = text.indexOf(uri, stringIndex + 1);\n      rex.lastIndex = stringIndex + uri.length;\n      if (stringIndex < 0) {\n        // invalid stringIndex (should not have happened)\n        break;\n      }\n\n      // get the buffer index as [absolute row, col] for the match\n      const bufferIndex = this._bufferService.buffer.stringIndexToBufferIndex(rowIndex, stringIndex);\n      if (bufferIndex[0] < 0) {\n        // invalid bufferIndex (should not have happened)\n        break;\n      }\n\n      const line = this._bufferService.buffer.lines.get(bufferIndex[0]);\n      if (!line) {\n        break;\n      }\n\n      const attr = line.getFg(bufferIndex[1]);\n      const fg = attr ? (attr >> 9) & 0x1ff : undefined;\n\n      if (matcher.validationCallback) {\n        matcher.validationCallback(uri, isValid => {\n          // Discard link if the line has already changed\n          if (this._rowsTimeoutId) {\n            return;\n          }\n          if (isValid) {\n            this._addLink(bufferIndex[1], bufferIndex[0] - this._bufferService.buffer.ydisp, uri, matcher, fg);\n          }\n        });\n      } else {\n        this._addLink(bufferIndex[1], bufferIndex[0] - this._bufferService.buffer.ydisp, uri, matcher, fg);\n      }\n    }\n  }\n\n  /**\n   * Registers a link to the mouse zone manager.\n   * @param x The column the link starts.\n   * @param y The row the link is on.\n   * @param uri The URI of the link.\n   * @param matcher The link matcher for the link.\n   * @param fg The link color for hover event.\n   */\n  private _addLink(x: number, y: number, uri: string, matcher: ILinkMatcher, fg: number | undefined): void {\n    if (!this._mouseZoneManager || !this._element) {\n      return;\n    }\n    // FIXME: get cell length from buffer to avoid mismatch after Unicode version change\n    const width = this._unicodeService.getStringCellWidth(uri);\n    const x1 = x % this._bufferService.cols;\n    const y1 = y + Math.floor(x / this._bufferService.cols);\n    let x2 = (x1 + width) % this._bufferService.cols;\n    let y2 = y1 + Math.floor((x1 + width) / this._bufferService.cols);\n    if (x2 === 0) {\n      x2 = this._bufferService.cols;\n      y2--;\n    }\n\n    this._mouseZoneManager.add(new MouseZone(\n      x1 + 1,\n      y1 + 1,\n      x2 + 1,\n      y2 + 1,\n      e => {\n        if (matcher.handler) {\n          return matcher.handler(e, uri);\n        }\n        const newWindow = window.open();\n        if (newWindow) {\n          newWindow.opener = null;\n          newWindow.location.href = uri;\n        } else {\n          console.warn('Opening link blocked as opener could not be cleared');\n        }\n      },\n      () => {\n        this._onShowLinkUnderline.fire(this._createLinkHoverEvent(x1, y1, x2, y2, fg));\n        this._element!.classList.add('xterm-cursor-pointer');\n      },\n      e => {\n        this._onLinkTooltip.fire(this._createLinkHoverEvent(x1, y1, x2, y2, fg));\n        if (matcher.hoverTooltipCallback) {\n          // Note that IViewportRange use 1-based coordinates to align with escape sequences such\n          // as CUP which use 1,1 as the default for row/col\n          matcher.hoverTooltipCallback(e, uri, { start: { x: x1, y: y1 }, end: { x: x2, y: y2 } });\n        }\n      },\n      () => {\n        this._onHideLinkUnderline.fire(this._createLinkHoverEvent(x1, y1, x2, y2, fg));\n        this._element!.classList.remove('xterm-cursor-pointer');\n        if (matcher.hoverLeaveCallback) {\n          matcher.hoverLeaveCallback();\n        }\n      },\n      e => {\n        if (matcher.willLinkActivate) {\n          return matcher.willLinkActivate(e, uri);\n        }\n        return true;\n      }\n    ));\n  }\n\n  private _createLinkHoverEvent(x1: number, y1: number, x2: number, y2: number, fg: number | undefined): ILinkifierEvent {\n    return { x1, y1, x2, y2, cols: this._bufferService.cols, fg };\n  }\n}\n\nexport class MouseZone implements IMouseZone {\n  constructor(\n    public x1: number,\n    public y1: number,\n    public x2: number,\n    public y2: number,\n    public clickCallback: (e: MouseEvent) => any,\n    public hoverCallback: (e: MouseEvent) => any,\n    public tooltipCallback: (e: MouseEvent) => any,\n    public leaveCallback: () => void,\n    public willLinkActivate: (e: MouseEvent) => boolean\n  ) {\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ILinkifier2, ILinkProvider, IBufferCellPosition, ILink, ILinkifierEvent, ILinkDecorations, ILinkWithState } from 'browser/Types';\nimport { IDisposable } from 'common/Types';\nimport { IMouseService, IRenderService } from './services/Services';\nimport { IBufferService } from 'common/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { Disposable, getDisposeArrayDisposable, disposeArray } from 'common/Lifecycle';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\n\nexport class Linkifier2 extends Disposable implements ILinkifier2 {\n  private _element: HTMLElement | undefined;\n  private _mouseService: IMouseService | undefined;\n  private _renderService: IRenderService | undefined;\n  private _linkProviders: ILinkProvider[] = [];\n  public get currentLink(): ILinkWithState | undefined { return this._currentLink; }\n  protected _currentLink: ILinkWithState | undefined;\n  private _lastMouseEvent: MouseEvent | undefined;\n  private _linkCacheDisposables: IDisposable[] = [];\n  private _lastBufferCell: IBufferCellPosition | undefined;\n  private _isMouseOut: boolean = true;\n  private _activeProviderReplies: Map<Number, ILinkWithState[] | undefined> | undefined;\n  private _activeLine: number = -1;\n\n  private _onShowLinkUnderline = this.register(new EventEmitter<ILinkifierEvent>());\n  public get onShowLinkUnderline(): IEvent<ILinkifierEvent> { return this._onShowLinkUnderline.event; }\n  private _onHideLinkUnderline = this.register(new EventEmitter<ILinkifierEvent>());\n  public get onHideLinkUnderline(): IEvent<ILinkifierEvent> { return this._onHideLinkUnderline.event; }\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService\n  ) {\n    super();\n    this.register(getDisposeArrayDisposable(this._linkCacheDisposables));\n  }\n\n  public registerLinkProvider(linkProvider: ILinkProvider): IDisposable {\n    this._linkProviders.push(linkProvider);\n    return {\n      dispose: () => {\n        // Remove the link provider from the list\n        const providerIndex = this._linkProviders.indexOf(linkProvider);\n\n        if (providerIndex !== -1) {\n          this._linkProviders.splice(providerIndex, 1);\n        }\n      }\n    };\n  }\n\n  public attachToDom(element: HTMLElement, mouseService: IMouseService, renderService: IRenderService): void {\n    this._element = element;\n    this._mouseService = mouseService;\n    this._renderService = renderService;\n\n    this.register(addDisposableDomListener(this._element, 'mouseleave', () => {\n      this._isMouseOut = true;\n      this._clearCurrentLink();\n    }));\n    this.register(addDisposableDomListener(this._element, 'mousemove', this._onMouseMove.bind(this)));\n    this.register(addDisposableDomListener(this._element, 'click', this._onClick.bind(this)));\n  }\n\n  private _onMouseMove(event: MouseEvent): void {\n    this._lastMouseEvent = event;\n\n    if (!this._element || !this._mouseService) {\n      return;\n    }\n\n    const position = this._positionFromMouseEvent(event, this._element, this._mouseService);\n    if (!position) {\n      return;\n    }\n    this._isMouseOut = false;\n\n    // Ignore the event if it's an embedder created hover widget\n    const composedPath = event.composedPath() as HTMLElement[];\n    for (let i = 0; i < composedPath.length; i++) {\n      const target = composedPath[i];\n      // Hit Terminal.element, break and continue\n      if (target.classList.contains('xterm')) {\n        break;\n      }\n      // It's a hover, don't respect hover event\n      if (target.classList.contains('xterm-hover')) {\n        return;\n      }\n    }\n\n    if (!this._lastBufferCell || (position.x !== this._lastBufferCell.x || position.y !== this._lastBufferCell.y)) {\n      this._onHover(position);\n      this._lastBufferCell = position;\n    }\n  }\n\n  private _onHover(position: IBufferCellPosition): void {\n    // TODO: This currently does not cache link provider results across wrapped lines, activeLine should be something like `activeRange: {startY, endY}`\n    // Check if we need to clear the link\n    if (this._activeLine !== position.y) {\n      this._clearCurrentLink();\n      this._askForLink(position, false);\n      return;\n    }\n\n    // Check the if the link is in the mouse position\n    const isCurrentLinkInPosition = this._currentLink && this._linkAtPosition(this._currentLink.link, position);\n    if (!isCurrentLinkInPosition) {\n      this._clearCurrentLink();\n      this._askForLink(position, true);\n    }\n  }\n\n  private _askForLink(position: IBufferCellPosition, useLineCache: boolean): void {\n    if (!this._activeProviderReplies || !useLineCache) {\n      this._activeProviderReplies?.forEach(reply => {\n        reply?.forEach(linkWithState => {\n          if (linkWithState.link.dispose) {\n            linkWithState.link.dispose();\n          }\n        });\n      });\n      this._activeProviderReplies = new Map();\n      this._activeLine = position.y;\n    }\n    let linkProvided = false;\n\n    // There is no link cached, so ask for one\n    this._linkProviders.forEach((linkProvider, i) => {\n      if (useLineCache) {\n        const existingReply = this._activeProviderReplies?.get(i);\n        // If there isn't a reply, the provider hasn't responded yet.\n\n        // TODO: If there isn't a reply yet it means that the provider is still resolving. Ensuring\n        // provideLinks isn't triggered again saves ILink.hover firing twice though. This probably\n        // needs promises to get fixed\n        if (existingReply) {\n          linkProvided = this._checkLinkProviderResult(i, position, linkProvided);\n        }\n      } else {\n        linkProvider.provideLinks(position.y, (links: ILink[] | undefined) => {\n          if (this._isMouseOut) {\n            return;\n          }\n          const linksWithState: ILinkWithState[] | undefined = links?.map(link  => ({ link }));\n          this._activeProviderReplies?.set(i, linksWithState);\n          linkProvided = this._checkLinkProviderResult(i, position, linkProvided);\n\n          // If all providers have responded, remove lower priority links that intersect ranges of\n          // higher priority links\n          if (this._activeProviderReplies?.size === this._linkProviders.length) {\n            this._removeIntersectingLinks(position.y, this._activeProviderReplies);\n          }\n        });\n      }\n    });\n  }\n\n  private _removeIntersectingLinks(y: number, replies: Map<Number, ILinkWithState[] | undefined>): void {\n    const occupiedCells = new Set<number>();\n    for (let i = 0; i < replies.size; i++) {\n      const providerReply = replies.get(i);\n      if (!providerReply) {\n        continue;\n      }\n      for (let i = 0; i < providerReply.length; i++) {\n        const linkWithState = providerReply[i];\n        const startX = linkWithState.link.range.start.y < y ? 0 : linkWithState.link.range.start.x;\n        const endX = linkWithState.link.range.end.y > y ? this._bufferService.cols : linkWithState.link.range.end.x;\n        for (let x = startX; x <= endX; x++) {\n          if (occupiedCells.has(x)) {\n            providerReply.splice(i--, 1);\n            break;\n          }\n          occupiedCells.add(x);\n        }\n      }\n    }\n  }\n\n  private _checkLinkProviderResult(index: number, position: IBufferCellPosition, linkProvided: boolean): boolean {\n    if (!this._activeProviderReplies) {\n      return linkProvided;\n    }\n\n    const links = this._activeProviderReplies.get(index);\n\n    // Check if every provider before this one has come back undefined\n    let hasLinkBefore = false;\n    for (let j = 0; j < index; j++) {\n      if (!this._activeProviderReplies.has(j) || this._activeProviderReplies.get(j)) {\n        hasLinkBefore = true;\n      }\n    }\n\n    // If all providers with higher priority came back undefined, then this provider's link for\n    // the position should be used\n    if (!hasLinkBefore && links) {\n      const linkAtPosition = links.find(link => this._linkAtPosition(link.link, position));\n      if (linkAtPosition) {\n        linkProvided = true;\n        this._handleNewLink(linkAtPosition);\n      }\n    }\n\n    // Check if all the providers have responded\n    if (this._activeProviderReplies.size === this._linkProviders.length && !linkProvided) {\n      // Respect the order of the link providers\n      for (let j = 0; j < this._activeProviderReplies.size; j++) {\n        const currentLink = this._activeProviderReplies.get(j)?.find(link => this._linkAtPosition(link.link, position));\n        if (currentLink) {\n          linkProvided = true;\n          this._handleNewLink(currentLink);\n          break;\n        }\n      }\n    }\n\n    return linkProvided;\n  }\n\n  private _onClick(event: MouseEvent): void {\n    if (!this._element || !this._mouseService || !this._currentLink) {\n      return;\n    }\n\n    const position = this._positionFromMouseEvent(event, this._element, this._mouseService);\n\n    if (!position) {\n      return;\n    }\n\n    if (this._linkAtPosition(this._currentLink.link, position)) {\n      this._currentLink.link.activate(event, this._currentLink.link.text);\n    }\n  }\n\n  private _clearCurrentLink(startRow?: number, endRow?: number): void {\n    if (!this._element || !this._currentLink || !this._lastMouseEvent) {\n      return;\n    }\n\n    // If we have a start and end row, check that the link is within it\n    if (!startRow || !endRow || (this._currentLink.link.range.start.y >= startRow && this._currentLink.link.range.end.y <= endRow)) {\n      this._linkLeave(this._element, this._currentLink.link, this._lastMouseEvent);\n      this._currentLink = undefined;\n      disposeArray(this._linkCacheDisposables);\n    }\n  }\n\n  private _handleNewLink(linkWithState: ILinkWithState): void {\n    if (!this._element || !this._lastMouseEvent || !this._mouseService) {\n      return;\n    }\n\n    const position = this._positionFromMouseEvent(this._lastMouseEvent, this._element, this._mouseService);\n\n    if (!position) {\n      return;\n    }\n\n    // Trigger hover if the we have a link at the position\n    if (this._linkAtPosition(linkWithState.link, position)) {\n      this._currentLink = linkWithState;\n      this._currentLink.state = {\n        decorations: {\n          underline: linkWithState.link.decorations === undefined ? true : linkWithState.link.decorations.underline,\n          pointerCursor: linkWithState.link.decorations === undefined ? true : linkWithState.link.decorations.pointerCursor\n        },\n        isHovered: true\n      };\n      this._linkHover(this._element, linkWithState.link, this._lastMouseEvent);\n\n      // Add listener for tracking decorations changes\n      linkWithState.link.decorations = {} as ILinkDecorations;\n      Object.defineProperties(linkWithState.link.decorations, {\n        pointerCursor: {\n          get: () => this._currentLink?.state?.decorations.pointerCursor,\n          set: v => {\n            if (this._currentLink?.state && this._currentLink.state.decorations.pointerCursor !== v) {\n              this._currentLink.state.decorations.pointerCursor = v;\n              if (this._currentLink.state.isHovered) {\n                this._element?.classList.toggle('xterm-cursor-pointer', v);\n              }\n            }\n          }\n        },\n        underline: {\n          get: () => this._currentLink?.state?.decorations.underline,\n          set: v => {\n            if (this._currentLink?.state && this._currentLink?.state?.decorations.underline !== v) {\n              this._currentLink.state.decorations.underline = v;\n              if (this._currentLink.state.isHovered) {\n                this._fireUnderlineEvent(linkWithState.link, v);\n              }\n            }\n          }\n        }\n      });\n\n      // Add listener for rerendering\n      if (this._renderService) {\n        this._linkCacheDisposables.push(this._renderService.onRenderedBufferChange(e => {\n          // When start is 0 a scroll most likely occurred, make sure links above the fold also get\n          // cleared.\n          const start = e.start === 0 ? 0 : e.start + 1 + this._bufferService.buffer.ydisp;\n          this._clearCurrentLink(start, e.end + 1 + this._bufferService.buffer.ydisp);\n        }));\n      }\n    }\n  }\n\n  protected _linkHover(element: HTMLElement, link: ILink, event: MouseEvent): void {\n    if (this._currentLink?.state) {\n      this._currentLink.state.isHovered = true;\n      if (this._currentLink.state.decorations.underline) {\n        this._fireUnderlineEvent(link, true);\n      }\n      if (this._currentLink.state.decorations.pointerCursor) {\n        element.classList.add('xterm-cursor-pointer');\n      }\n    }\n\n    if (link.hover) {\n      link.hover(event, link.text);\n    }\n  }\n\n  private _fireUnderlineEvent(link: ILink, showEvent: boolean): void {\n    const range = link.range;\n    const scrollOffset = this._bufferService.buffer.ydisp;\n    const event = this._createLinkUnderlineEvent(range.start.x - 1, range.start.y - scrollOffset - 1, range.end.x, range.end.y - scrollOffset - 1, undefined);\n    const emitter = showEvent ? this._onShowLinkUnderline : this._onHideLinkUnderline;\n    emitter.fire(event);\n  }\n\n  protected _linkLeave(element: HTMLElement, link: ILink, event: MouseEvent): void {\n    if (this._currentLink?.state) {\n      this._currentLink.state.isHovered = false;\n      if (this._currentLink.state.decorations.underline) {\n        this._fireUnderlineEvent(link, false);\n      }\n      if (this._currentLink.state.decorations.pointerCursor) {\n        element.classList.remove('xterm-cursor-pointer');\n      }\n    }\n\n    if (link.leave) {\n      link.leave(event, link.text);\n    }\n  }\n\n  /**\n   * Check if the buffer position is within the link\n   * @param link\n   * @param position\n   */\n  private _linkAtPosition(link: ILink, position: IBufferCellPosition): boolean {\n    const sameLine = link.range.start.y === link.range.end.y;\n    const wrappedFromLeft = link.range.start.y < position.y;\n    const wrappedToRight = link.range.end.y > position.y;\n\n    // If the start and end have the same y, then the position must be between start and end x\n    // If not, then handle each case seperately, depending on which way it wraps\n    return ((sameLine && link.range.start.x <= position.x && link.range.end.x >= position.x) ||\n      (wrappedFromLeft && link.range.end.x >= position.x) ||\n      (wrappedToRight && link.range.start.x <= position.x) ||\n      (wrappedFromLeft && wrappedToRight)) &&\n      link.range.start.y <= position.y &&\n      link.range.end.y >= position.y;\n  }\n\n  /**\n   * Get the buffer position from a mouse event\n   * @param event\n   */\n  private _positionFromMouseEvent(event: MouseEvent, element: HTMLElement, mouseService: IMouseService): IBufferCellPosition | undefined {\n    const coords = mouseService.getCoords(event, element, this._bufferService.cols, this._bufferService.rows);\n    if (!coords) {\n      return;\n    }\n\n    return { x: coords[0], y: coords[1] + this._bufferService.buffer.ydisp };\n  }\n\n  private _createLinkUnderlineEvent(x1: number, y1: number, x2: number, y2: number, fg: number | undefined): ILinkifierEvent {\n    return { x1, y1, x2, y2, cols: this._bufferService.cols, fg };\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n// eslint-disable-next-line prefer-const\nexport let promptLabel = 'Terminal input';\n\n// eslint-disable-next-line prefer-const\nexport let tooMuchOutput = 'Too much output to announce, navigate to rows manually to read';\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Disposable } from 'common/Lifecycle';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { IMouseService, ISelectionService } from 'browser/services/Services';\nimport { IMouseZoneManager, IMouseZone } from 'browser/Types';\nimport { IBufferService, IOptionsService } from 'common/services/Services';\n\n/**\n * The MouseZoneManager allows components to register zones within the terminal\n * that trigger hover and click callbacks.\n *\n * This class was intentionally made not so robust initially as the only case it\n * needed to support was single-line links which never overlap. Improvements can\n * be made in the future.\n */\nexport class MouseZoneManager extends Disposable implements IMouseZoneManager {\n  private _zones: IMouseZone[] = [];\n\n  private _areZonesActive: boolean = false;\n  private _mouseMoveListener: (e: MouseEvent) => any;\n  private _mouseLeaveListener: (e: MouseEvent) => any;\n  private _clickListener: (e: MouseEvent) => any;\n\n  private _tooltipTimeout: number | undefined;\n  private _currentZone: IMouseZone | undefined;\n  private _lastHoverCoords: [number | undefined, number | undefined] = [undefined, undefined];\n  private _initialSelectionLength: number = 0;\n\n  constructor(\n    private readonly _element: HTMLElement,\n    private readonly _screenElement: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IMouseService private readonly _mouseService: IMouseService,\n    @ISelectionService private readonly _selectionService: ISelectionService,\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    super();\n\n    this.register(addDisposableDomListener(this._element, 'mousedown', e => this._onMouseDown(e)));\n\n    // These events are expensive, only listen to it when mouse zones are active\n    this._mouseMoveListener = e => this._onMouseMove(e);\n    this._mouseLeaveListener = e => this._onMouseLeave(e);\n    this._clickListener = e => this._onClick(e);\n  }\n\n  public dispose(): void {\n    super.dispose();\n    this._deactivate();\n  }\n\n  public add(zone: IMouseZone): void {\n    this._zones.push(zone);\n    if (this._zones.length === 1) {\n      this._activate();\n    }\n  }\n\n  public clearAll(start?: number, end?: number): void {\n    // Exit if there's nothing to clear\n    if (this._zones.length === 0) {\n      return;\n    }\n\n    // Clear all if start/end weren't set\n    if (!start || !end) {\n      start = 0;\n      end = this._bufferService.rows - 1;\n    }\n\n    // Iterate through zones and clear them out if they're within the range\n    for (let i = 0; i < this._zones.length; i++) {\n      const zone = this._zones[i];\n      if ((zone.y1 > start && zone.y1 <= end + 1) ||\n          (zone.y2 > start && zone.y2 <= end + 1) ||\n          (zone.y1 < start && zone.y2 > end + 1)) {\n        if (this._currentZone && this._currentZone === zone) {\n          this._currentZone.leaveCallback();\n          this._currentZone = undefined;\n        }\n        this._zones.splice(i--, 1);\n      }\n    }\n\n    // Deactivate the mouse zone manager if all the zones have been removed\n    if (this._zones.length === 0) {\n      this._deactivate();\n    }\n  }\n\n  private _activate(): void {\n    if (!this._areZonesActive) {\n      this._areZonesActive = true;\n      this._element.addEventListener('mousemove', this._mouseMoveListener);\n      this._element.addEventListener('mouseleave', this._mouseLeaveListener);\n      this._element.addEventListener('click', this._clickListener);\n    }\n  }\n\n  private _deactivate(): void {\n    if (this._areZonesActive) {\n      this._areZonesActive = false;\n      this._element.removeEventListener('mousemove', this._mouseMoveListener);\n      this._element.removeEventListener('mouseleave', this._mouseLeaveListener);\n      this._element.removeEventListener('click', this._clickListener);\n    }\n  }\n\n  private _onMouseMove(e: MouseEvent): void {\n    // TODO: Ideally this would only clear the hover state when the mouse moves\n    // outside of the mouse zone\n    if (this._lastHoverCoords[0] !== e.pageX || this._lastHoverCoords[1] !== e.pageY) {\n      this._onHover(e);\n      // Record the current coordinates\n      this._lastHoverCoords = [e.pageX, e.pageY];\n    }\n  }\n\n  private _onHover(e: MouseEvent): void {\n    const zone = this._findZoneEventAt(e);\n\n    // Do nothing if the zone is the same\n    if (zone === this._currentZone) {\n      return;\n    }\n\n    // Fire the hover end callback and cancel any existing timer if a new zone\n    // is being hovered\n    if (this._currentZone) {\n      this._currentZone.leaveCallback();\n      this._currentZone = undefined;\n      if (this._tooltipTimeout) {\n        clearTimeout(this._tooltipTimeout);\n      }\n    }\n\n    // Exit if there is not zone\n    if (!zone) {\n      return;\n    }\n    this._currentZone = zone;\n\n    // Trigger the hover callback\n    if (zone.hoverCallback) {\n      zone.hoverCallback(e);\n    }\n\n    // Restart the tooltip timeout\n    this._tooltipTimeout = window.setTimeout(() => this._onTooltip(e), this._optionsService.options.linkTooltipHoverDuration);\n  }\n\n  private _onTooltip(e: MouseEvent): void {\n    this._tooltipTimeout = undefined;\n    const zone = this._findZoneEventAt(e);\n    zone?.tooltipCallback(e);\n  }\n\n  private _onMouseDown(e: MouseEvent): void {\n    // Store current terminal selection length, to check if we're performing\n    // a selection operation\n    this._initialSelectionLength = this._getSelectionLength();\n\n    // Ignore the event if there are no zones active\n    if (!this._areZonesActive) {\n      return;\n    }\n\n    // Find the active zone, prevent event propagation if found to prevent other\n    // components from handling the mouse event.\n    const zone = this._findZoneEventAt(e);\n    if (zone?.willLinkActivate(e)) {\n      e.preventDefault();\n      e.stopImmediatePropagation();\n    }\n  }\n\n  private _onMouseLeave(e: MouseEvent): void {\n    // Fire the hover end callback and cancel any existing timer if the mouse\n    // leaves the terminal element\n    if (this._currentZone) {\n      this._currentZone.leaveCallback();\n      this._currentZone = undefined;\n      if (this._tooltipTimeout) {\n        clearTimeout(this._tooltipTimeout);\n      }\n    }\n  }\n\n  private _onClick(e: MouseEvent): void {\n    // Find the active zone and click it if found and no selection was\n    // being performed\n    const zone = this._findZoneEventAt(e);\n    const currentSelectionLength = this._getSelectionLength();\n\n    if (zone && currentSelectionLength === this._initialSelectionLength) {\n      zone.clickCallback(e);\n      e.preventDefault();\n      e.stopImmediatePropagation();\n    }\n  }\n\n  private _getSelectionLength(): number {\n    const selectionText = this._selectionService.selectionText;\n    return selectionText ? selectionText.length : 0;\n  }\n\n  private _findZoneEventAt(e: MouseEvent): IMouseZone | undefined {\n    const coords = this._mouseService.getCoords(e, this._screenElement, this._bufferService.cols, this._bufferService.rows);\n    if (!coords) {\n      return undefined;\n    }\n    const x = coords[0];\n    const y = coords[1];\n    for (let i = 0; i < this._zones.length; i++) {\n      const zone = this._zones[i];\n      if (zone.y1 === zone.y2) {\n        // Single line link\n        if (y === zone.y1 && x >= zone.x1 && x < zone.x2) {\n          return zone;\n        }\n      } else {\n        // Multi-line link\n        if ((y === zone.y1 && x >= zone.x1) ||\n            (y === zone.y2 && x < zone.x2) ||\n            (y > zone.y1 && y < zone.y2)) {\n          return zone;\n        }\n      }\n    }\n    return undefined;\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderDebouncer } from 'browser/Types';\n\n/**\n * Debounces calls to render terminal rows using animation frames.\n */\nexport class RenderDebouncer implements IRenderDebouncer {\n  private _rowStart: number | undefined;\n  private _rowEnd: number | undefined;\n  private _rowCount: number | undefined;\n  private _animationFrame: number | undefined;\n\n  constructor(\n    private _renderCallback: (start: number, end: number) => void\n  ) {\n  }\n\n  public dispose(): void {\n    if (this._animationFrame) {\n      window.cancelAnimationFrame(this._animationFrame);\n      this._animationFrame = undefined;\n    }\n  }\n\n  public refresh(rowStart: number | undefined, rowEnd: number | undefined, rowCount: number): void {\n    this._rowCount = rowCount;\n    // Get the min/max row start/end for the arg values\n    rowStart = rowStart !== undefined ? rowStart : 0;\n    rowEnd = rowEnd !== undefined ? rowEnd : this._rowCount - 1;\n    // Set the properties to the updated values\n    this._rowStart = this._rowStart !== undefined ? Math.min(this._rowStart, rowStart) : rowStart;\n    this._rowEnd = this._rowEnd !== undefined ? Math.max(this._rowEnd, rowEnd) : rowEnd;\n\n    if (this._animationFrame) {\n      return;\n    }\n\n    this._animationFrame = window.requestAnimationFrame(() => this._innerRefresh());\n  }\n\n  private _innerRefresh(): void {\n    // Make sure values are set\n    if (this._rowStart === undefined || this._rowEnd === undefined || this._rowCount === undefined) {\n      return;\n    }\n\n    // Clamp values\n    const start = Math.max(this._rowStart, 0);\n    const end = Math.min(this._rowEnd, this._rowCount - 1);\n\n    // Reset debouncer (this happens before render callback as the render could trigger it again)\n    this._rowStart = undefined;\n    this._rowEnd = undefined;\n    this._animationFrame = undefined;\n\n    // Run render callback\n    this._renderCallback(start, end);\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Disposable } from 'common/Lifecycle';\n\nexport type ScreenDprListener = (newDevicePixelRatio?: number, oldDevicePixelRatio?: number) => void;\n\n/**\n * The screen device pixel ratio monitor allows listening for when the\n * window.devicePixelRatio value changes. This is done not with polling but with\n * the use of window.matchMedia to watch media queries. When the event fires,\n * the listener will be reattached using a different media query to ensure that\n * any further changes will register.\n *\n * The listener should fire on both window zoom changes and switching to a\n * monitor with a different DPI.\n */\nexport class ScreenDprMonitor extends Disposable {\n  private _currentDevicePixelRatio: number = window.devicePixelRatio;\n  private _outerListener: ((this: MediaQueryList, ev: MediaQueryListEvent) => any) | undefined;\n  private _listener: ScreenDprListener | undefined;\n  private _resolutionMediaMatchList: MediaQueryList | undefined;\n\n  public setListener(listener: ScreenDprListener): void {\n    if (this._listener) {\n      this.clearListener();\n    }\n    this._listener = listener;\n    this._outerListener = () => {\n      if (!this._listener) {\n        return;\n      }\n      this._listener(window.devicePixelRatio, this._currentDevicePixelRatio);\n      this._updateDpr();\n    };\n    this._updateDpr();\n  }\n\n  public dispose(): void {\n    super.dispose();\n    this.clearListener();\n  }\n\n  private _updateDpr(): void {\n    if (!this._outerListener) {\n      return;\n    }\n\n    // Clear listeners for old DPR\n    this._resolutionMediaMatchList?.removeListener(this._outerListener);\n\n    // Add listeners for new DPR\n    this._currentDevicePixelRatio = window.devicePixelRatio;\n    this._resolutionMediaMatchList = window.matchMedia(`screen and (resolution: ${window.devicePixelRatio}dppx)`);\n    this._resolutionMediaMatchList.addListener(this._outerListener);\n  }\n\n  public clearListener(): void {\n    if (!this._resolutionMediaMatchList || !this._listener || !this._outerListener) {\n      return;\n    }\n    this._resolutionMediaMatchList.removeListener(this._outerListener);\n    this._resolutionMediaMatchList = undefined;\n    this._listener = undefined;\n    this._outerListener = undefined;\n  }\n}\n","/**\n * Copyright (c) 2014 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n *\n * Originally forked from (with the author's permission):\n *   Fabrice Bellard's javascript vt100 for jslinux:\n *   http://bellard.org/jslinux/\n *   Copyright (c) 2011 Fabrice Bellard\n *   The original design remains. The terminal itself\n *   has been extended to include xterm CSI codes, among\n *   other features.\n *\n * Terminal Emulation References:\n *   http://vt100.net/\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.txt\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.html\n *   http://invisible-island.net/vttest/\n *   http://www.inwap.com/pdp10/ansicode.txt\n *   http://linux.die.net/man/4/console_codes\n *   http://linux.die.net/man/7/urxvt\n */\n\nimport { ICompositionHelper, ITerminal, IBrowser, CustomKeyEventHandler, ILinkifier, IMouseZoneManager, LinkMatcherHandler, ILinkMatcherOptions, IViewport, ILinkifier2, CharacterJoinerHandler } from 'browser/Types';\nimport { IRenderer } from 'browser/renderer/Types';\nimport { CompositionHelper } from 'browser/input/CompositionHelper';\nimport { Viewport } from 'browser/Viewport';\nimport { rightClickHandler, moveTextAreaUnderMouseCursor, handlePasteEvent, copyHandler, paste } from 'browser/Clipboard';\nimport { C0 } from 'common/data/EscapeSequences';\nimport { WindowsOptionsReportType } from '../common/InputHandler';\nimport { Renderer } from 'browser/renderer/Renderer';\nimport { Linkifier } from 'browser/Linkifier';\nimport { SelectionService } from 'browser/services/SelectionService';\nimport * as Browser from 'common/Platform';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport * as Strings from 'browser/LocalizableStrings';\nimport { SoundService } from 'browser/services/SoundService';\nimport { MouseZoneManager } from 'browser/MouseZoneManager';\nimport { AccessibilityManager } from './AccessibilityManager';\nimport { ITheme, IMarker, IDisposable, ISelectionPosition, ILinkProvider } from 'xterm';\nimport { DomRenderer } from 'browser/renderer/dom/DomRenderer';\nimport { IKeyboardEvent, KeyboardResultType, CoreMouseEventType, CoreMouseButton, CoreMouseAction, ITerminalOptions, ScrollSource, IAnsiColorChangeEvent } from 'common/Types';\nimport { evaluateKeyboardEvent } from 'common/input/Keyboard';\nimport { EventEmitter, IEvent, forwardEvent } from 'common/EventEmitter';\nimport { DEFAULT_ATTR_DATA } from 'common/buffer/BufferLine';\nimport { ColorManager } from 'browser/ColorManager';\nimport { RenderService } from 'browser/services/RenderService';\nimport { ICharSizeService, IRenderService, IMouseService, ISelectionService, ISoundService, ICoreBrowserService, ICharacterJoinerService } from 'browser/services/Services';\nimport { CharSizeService } from 'browser/services/CharSizeService';\nimport { IBuffer } from 'common/buffer/Types';\nimport { MouseService } from 'browser/services/MouseService';\nimport { Linkifier2 } from 'browser/Linkifier2';\nimport { CoreBrowserService } from 'browser/services/CoreBrowserService';\nimport { CoreTerminal } from 'common/CoreTerminal';\nimport { ITerminalOptions as IInitializedTerminalOptions } from 'common/services/Services';\nimport { rgba } from 'browser/Color';\nimport { CharacterJoinerService } from 'browser/services/CharacterJoinerService';\n\n// Let it work inside Node.js for automated testing purposes.\nconst document: Document = (typeof window !== 'undefined') ? window.document : null as any;\n\nexport class Terminal extends CoreTerminal implements ITerminal {\n  public textarea: HTMLTextAreaElement | undefined;\n  public element: HTMLElement | undefined;\n  public screenElement: HTMLElement | undefined;\n\n  private _document: Document | undefined;\n  private _viewportScrollArea: HTMLElement | undefined;\n  private _viewportElement: HTMLElement | undefined;\n  private _helperContainer: HTMLElement | undefined;\n  private _compositionView: HTMLElement | undefined;\n\n  // private _visualBellTimer: number;\n\n  public browser: IBrowser = Browser as any;\n\n  // TODO: We should remove options once components adopt optionsService\n  public get options(): IInitializedTerminalOptions { return this.optionsService.options; }\n\n  private _customKeyEventHandler: CustomKeyEventHandler | undefined;\n\n  // browser services\n  private _charSizeService: ICharSizeService | undefined;\n  private _mouseService: IMouseService | undefined;\n  private _renderService: IRenderService | undefined;\n  private _characterJoinerService: ICharacterJoinerService | undefined;\n  private _selectionService: ISelectionService | undefined;\n  private _soundService: ISoundService | undefined;\n\n  /**\n   * Records whether the keydown event has already been handled and triggered a data event, if so\n   * the keypress event should not trigger a data event but should still print to the textarea so\n   * screen readers will announce it.\n   */\n  private _keyDownHandled: boolean = false;\n\n  /**\n   * Records whether the keypress event has already been handled and triggered a data event, if so\n   * the input event should not trigger a data event but should still print to the textarea so\n   * screen readers will announce it.\n   */\n  private _keyPressHandled: boolean = false;\n\n  /**\n   * Records whether there has been a keydown event for a dead key without a corresponding keydown\n   * event for the composed/alternative character. If we cancel the keydown event for the dead key,\n   * no events will be emitted for the final character.\n   */\n  private _unprocessedDeadKey: boolean = false;\n\n  public linkifier: ILinkifier;\n  public linkifier2: ILinkifier2;\n  public viewport: IViewport | undefined;\n  private _compositionHelper: ICompositionHelper | undefined;\n  private _mouseZoneManager: IMouseZoneManager | undefined;\n  private _accessibilityManager: AccessibilityManager | undefined;\n  private _colorManager: ColorManager | undefined;\n  private _theme: ITheme | undefined;\n\n  private _onCursorMove = new EventEmitter<void>();\n  public get onCursorMove(): IEvent<void> { return this._onCursorMove.event; }\n  private _onKey = new EventEmitter<{ key: string, domEvent: KeyboardEvent }>();\n  public get onKey(): IEvent<{ key: string, domEvent: KeyboardEvent }> { return this._onKey.event; }\n  private _onRender = new EventEmitter<{ start: number, end: number }>();\n  public get onRender(): IEvent<{ start: number, end: number }> { return this._onRender.event; }\n  private _onSelectionChange = new EventEmitter<void>();\n  public get onSelectionChange(): IEvent<void> { return this._onSelectionChange.event; }\n  private _onTitleChange = new EventEmitter<string>();\n  public get onTitleChange(): IEvent<string> { return this._onTitleChange.event; }\n  private _onBell = new EventEmitter<void>();\n  public get onBell(): IEvent<void> { return this._onBell.event; }\n\n  private _onFocus = new EventEmitter<void>();\n  public get onFocus(): IEvent<void> { return this._onFocus.event; }\n  private _onBlur = new EventEmitter<void>();\n  public get onBlur(): IEvent<void> { return this._onBlur.event; }\n  private _onA11yCharEmitter = new EventEmitter<string>();\n  public get onA11yChar(): IEvent<string> { return this._onA11yCharEmitter.event; }\n  private _onA11yTabEmitter = new EventEmitter<number>();\n  public get onA11yTab(): IEvent<number> { return this._onA11yTabEmitter.event; }\n\n  /**\n   * Creates a new `Terminal` object.\n   *\n   * @param options An object containing a set of options, the available options are:\n   *   - `cursorBlink` (boolean): Whether the terminal cursor blinks\n   *   - `cols` (number): The number of columns of the terminal (horizontal size)\n   *   - `rows` (number): The number of rows of the terminal (vertical size)\n   *\n   * @public\n   * @class Xterm Xterm\n   * @alias module:xterm/src/xterm\n   */\n  constructor(\n    options: Partial<ITerminalOptions> = {}\n  ) {\n    super(options);\n\n    this._setup();\n\n    this.linkifier = this._instantiationService.createInstance(Linkifier);\n    this.linkifier2 = this.register(this._instantiationService.createInstance(Linkifier2));\n\n    // Setup InputHandler listeners\n    this.register(this._inputHandler.onRequestBell(() => this.bell()));\n    this.register(this._inputHandler.onRequestRefreshRows((start, end) => this.refresh(start, end)));\n    this.register(this._inputHandler.onRequestSendFocus(() => this._reportFocus()));\n    this.register(this._inputHandler.onRequestReset(() => this.reset()));\n    this.register(this._inputHandler.onRequestWindowsOptionsReport(type => this._reportWindowsOptions(type)));\n    this.register(this._inputHandler.onAnsiColorChange((event) => this._changeAnsiColor(event)));\n    this.register(forwardEvent(this._inputHandler.onCursorMove, this._onCursorMove));\n    this.register(forwardEvent(this._inputHandler.onTitleChange, this._onTitleChange));\n    this.register(forwardEvent(this._inputHandler.onA11yChar, this._onA11yCharEmitter));\n    this.register(forwardEvent(this._inputHandler.onA11yTab, this._onA11yTabEmitter));\n\n    // Setup listeners\n    this.register(this._bufferService.onResize(e => this._afterResize(e.cols, e.rows)));\n  }\n\n  private _changeAnsiColor(event: IAnsiColorChangeEvent): void {\n    if (!this._colorManager) { return; }\n\n    for (const ansiColor of event.colors) {\n      const color = rgba.toColor(ansiColor.red, ansiColor.green, ansiColor.blue);\n\n      this._colorManager!.colors.ansi[ansiColor.colorIndex] = color;\n    }\n\n    this._renderService?.setColors(this._colorManager!.colors);\n    this.viewport?.onThemeChange(this._colorManager!.colors);\n  }\n\n  public dispose(): void {\n    if (this._isDisposed) {\n      return;\n    }\n    super.dispose();\n    this._renderService?.dispose();\n    this._customKeyEventHandler = undefined;\n    this.write = () => { };\n    this.element?.parentNode?.removeChild(this.element);\n  }\n\n  protected _setup(): void {\n    super._setup();\n\n    this._customKeyEventHandler = undefined;\n  }\n\n  /**\n   * Convenience property to active buffer.\n   */\n  public get buffer(): IBuffer {\n    return this.buffers.active;\n  }\n\n  /**\n   * Focus the terminal. Delegates focus handling to the terminal's DOM element.\n   */\n  public focus(): void {\n    if (this.textarea) {\n      this.textarea.focus({ preventScroll: true });\n    }\n  }\n\n  protected _updateOptions(key: string): void {\n    super._updateOptions(key);\n\n    // TODO: These listeners should be owned by individual components\n    switch (key) {\n      case 'fontFamily':\n      case 'fontSize':\n        // When the font changes the size of the cells may change which requires a renderer clear\n        this._renderService?.clear();\n        this._charSizeService?.measure();\n        break;\n      case 'cursorBlink':\n      case 'cursorStyle':\n        // The DOM renderer needs a row refresh to update the cursor styles\n        this.refresh(this.buffer.y, this.buffer.y);\n        break;\n      case 'customGlyphs':\n      case 'drawBoldTextInBrightColors':\n      case 'letterSpacing':\n      case 'lineHeight':\n      case 'fontWeight':\n      case 'fontWeightBold':\n      case 'minimumContrastRatio':\n        // When the font changes the size of the cells may change which requires a renderer clear\n        if (this._renderService) {\n          this._renderService.clear();\n          this._renderService.onResize(this.cols, this.rows);\n          this.refresh(0, this.rows - 1);\n        }\n        break;\n      case 'rendererType':\n        if (this._renderService) {\n          this._renderService.setRenderer(this._createRenderer());\n          this._renderService.onResize(this.cols, this.rows);\n        }\n        break;\n      case 'scrollback':\n        this.viewport?.syncScrollArea();\n        break;\n      case 'screenReaderMode':\n        if (this.optionsService.options.screenReaderMode) {\n          if (!this._accessibilityManager && this._renderService) {\n            this._accessibilityManager = new AccessibilityManager(this, this._renderService);\n          }\n        } else {\n          this._accessibilityManager?.dispose();\n          this._accessibilityManager = undefined;\n        }\n        break;\n      case 'tabStopWidth': this.buffers.setupTabStops(); break;\n      case 'theme':\n        this._setTheme(this.optionsService.options.theme);\n        break;\n    }\n  }\n\n  /**\n   * Binds the desired focus behavior on a given terminal object.\n   */\n  private _onTextAreaFocus(ev: KeyboardEvent): void {\n    if (this.coreService.decPrivateModes.sendFocus) {\n      this.coreService.triggerDataEvent(C0.ESC + '[I');\n    }\n    this.updateCursorStyle(ev);\n    this.element!.classList.add('focus');\n    this._showCursor();\n    this._onFocus.fire();\n  }\n\n  /**\n   * Blur the terminal, calling the blur function on the terminal's underlying\n   * textarea.\n   */\n  public blur(): void {\n    return this.textarea?.blur();\n  }\n\n  /**\n   * Binds the desired blur behavior on a given terminal object.\n   */\n  private _onTextAreaBlur(): void {\n    // Text can safely be removed on blur. Doing it earlier could interfere with\n    // screen readers reading it out.\n    this.textarea!.value = '';\n    this.refresh(this.buffer.y, this.buffer.y);\n    if (this.coreService.decPrivateModes.sendFocus) {\n      this.coreService.triggerDataEvent(C0.ESC + '[O');\n    }\n    this.element!.classList.remove('focus');\n    this._onBlur.fire();\n  }\n\n  private _syncTextArea(): void {\n    if (!this.textarea || !this.buffer.isCursorInViewport || this._compositionHelper!.isComposing || !this._renderService) {\n      return;\n    }\n    const cursorY = this.buffer.ybase + this.buffer.y;\n    const bufferLine = this.buffer.lines.get(cursorY);\n    if (!bufferLine) {\n      return;\n    }\n    const cursorX = Math.min(this.buffer.x, this.cols - 1);\n    const cellHeight = this._renderService.dimensions.actualCellHeight;\n    const width = bufferLine.getWidth(cursorX);\n    const cellWidth = this._renderService.dimensions.actualCellWidth * width;\n    const cursorTop = this.buffer.y * this._renderService.dimensions.actualCellHeight;\n    const cursorLeft = cursorX * this._renderService.dimensions.actualCellWidth;\n\n    // Sync the textarea to the exact position of the composition view so the IME knows where the\n    // text is.\n    this.textarea.style.left = cursorLeft + 'px';\n    this.textarea.style.top = cursorTop + 'px';\n    this.textarea.style.width = cellWidth + 'px';\n    this.textarea.style.height = cellHeight + 'px';\n    this.textarea.style.lineHeight = cellHeight + 'px';\n    this.textarea.style.zIndex = '-5';\n  }\n\n  /**\n   * Initialize default behavior\n   */\n  private _initGlobal(): void {\n    this._bindKeys();\n\n    // Bind clipboard functionality\n    this.register(addDisposableDomListener(this.element!, 'copy', (event: ClipboardEvent) => {\n      // If mouse events are active it means the selection manager is disabled and\n      // copy should be handled by the host program.\n      if (!this.hasSelection()) {\n        return;\n      }\n      copyHandler(event, this._selectionService!);\n    }));\n    const pasteHandlerWrapper = (event: ClipboardEvent): void => handlePasteEvent(event, this.textarea!, this.coreService);\n    this.register(addDisposableDomListener(this.textarea!, 'paste', pasteHandlerWrapper));\n    this.register(addDisposableDomListener(this.element!, 'paste', pasteHandlerWrapper));\n\n    // Handle right click context menus\n    if (Browser.isFirefox) {\n      // Firefox doesn't appear to fire the contextmenu event on right click\n      this.register(addDisposableDomListener(this.element!, 'mousedown', (event: MouseEvent) => {\n        if (event.button === 2) {\n          rightClickHandler(event, this.textarea!, this.screenElement!, this._selectionService!, this.options.rightClickSelectsWord);\n        }\n      }));\n    } else {\n      this.register(addDisposableDomListener(this.element!, 'contextmenu', (event: MouseEvent) => {\n        rightClickHandler(event, this.textarea!, this.screenElement!, this._selectionService!, this.options.rightClickSelectsWord);\n      }));\n    }\n\n    // Move the textarea under the cursor when middle clicking on Linux to ensure\n    // middle click to paste selection works. This only appears to work in Chrome\n    // at the time is writing.\n    if (Browser.isLinux) {\n      // Use auxclick event over mousedown the latter doesn't seem to work. Note\n      // that the regular click event doesn't fire for the middle mouse button.\n      this.register(addDisposableDomListener(this.element!, 'auxclick', (event: MouseEvent) => {\n        if (event.button === 1) {\n          moveTextAreaUnderMouseCursor(event, this.textarea!, this.screenElement!);\n        }\n      }));\n    }\n  }\n\n  /**\n   * Apply key handling to the terminal\n   */\n  private _bindKeys(): void {\n    this.register(addDisposableDomListener(this.textarea!, 'keyup', (ev: KeyboardEvent) => this._keyUp(ev), true));\n    this.register(addDisposableDomListener(this.textarea!, 'keydown', (ev: KeyboardEvent) => this._keyDown(ev), true));\n    this.register(addDisposableDomListener(this.textarea!, 'keypress', (ev: KeyboardEvent) => this._keyPress(ev), true));\n    this.register(addDisposableDomListener(this.textarea!, 'compositionstart', () => this._compositionHelper!.compositionstart()));\n    this.register(addDisposableDomListener(this.textarea!, 'compositionupdate', (e: CompositionEvent) => this._compositionHelper!.compositionupdate(e)));\n    this.register(addDisposableDomListener(this.textarea!, 'compositionend', () => this._compositionHelper!.compositionend()));\n    this.register(addDisposableDomListener(this.textarea!, 'input', (ev: InputEvent) => this._inputEvent(ev), true));\n    this.register(this.onRender(() => this._compositionHelper!.updateCompositionElements()));\n    this.register(this.onRender(e => this._queueLinkification(e.start, e.end)));\n  }\n\n  /**\n   * Opens the terminal within an element.\n   *\n   * @param parent The element to create the terminal within.\n   */\n  public open(parent: HTMLElement): void {\n    if (!parent) {\n      throw new Error('Terminal requires a parent element.');\n    }\n\n    if (!parent.isConnected) {\n      this._logService.debug('Terminal.open was called on an element that was not attached to the DOM');\n    }\n\n    this._document = parent.ownerDocument!;\n\n    // Create main element container\n    this.element = this._document.createElement('div');\n    this.element.dir = 'ltr';   // xterm.css assumes LTR\n    this.element.classList.add('terminal');\n    this.element.classList.add('xterm');\n    this.element.setAttribute('tabindex', '0');\n    parent.appendChild(this.element);\n\n    // Performance: Use a document fragment to build the terminal\n    // viewport and helper elements detached from the DOM\n    const fragment = document.createDocumentFragment();\n    this._viewportElement = document.createElement('div');\n    this._viewportElement.classList.add('xterm-viewport');\n    fragment.appendChild(this._viewportElement);\n    this._viewportScrollArea = document.createElement('div');\n    this._viewportScrollArea.classList.add('xterm-scroll-area');\n    this._viewportElement.appendChild(this._viewportScrollArea);\n\n    this.screenElement = document.createElement('div');\n    this.screenElement.classList.add('xterm-screen');\n    // Create the container that will hold helpers like the textarea for\n    // capturing DOM Events. Then produce the helpers.\n    this._helperContainer = document.createElement('div');\n    this._helperContainer.classList.add('xterm-helpers');\n    this.screenElement.appendChild(this._helperContainer);\n    fragment.appendChild(this.screenElement);\n\n    this.textarea = document.createElement('textarea');\n    this.textarea.classList.add('xterm-helper-textarea');\n    this.textarea.setAttribute('aria-label', Strings.promptLabel);\n    this.textarea.setAttribute('aria-multiline', 'false');\n    this.textarea.setAttribute('autocorrect', 'off');\n    this.textarea.setAttribute('autocapitalize', 'off');\n    this.textarea.setAttribute('spellcheck', 'false');\n    this.textarea.tabIndex = 0;\n    this.register(addDisposableDomListener(this.textarea, 'focus', (ev: KeyboardEvent) => this._onTextAreaFocus(ev)));\n    this.register(addDisposableDomListener(this.textarea, 'blur', () => this._onTextAreaBlur()));\n    this._helperContainer.appendChild(this.textarea);\n\n    const coreBrowserService = this._instantiationService.createInstance(CoreBrowserService, this.textarea);\n    this._instantiationService.setService(ICoreBrowserService, coreBrowserService);\n\n    this._charSizeService = this._instantiationService.createInstance(CharSizeService, this._document, this._helperContainer);\n    this._instantiationService.setService(ICharSizeService, this._charSizeService);\n\n    this._theme = this.options.theme || this._theme;\n    this._colorManager = new ColorManager(document, this.options.allowTransparency);\n    this.register(this.optionsService.onOptionChange(e => this._colorManager!.onOptionsChange(e)));\n    this._colorManager.setTheme(this._theme);\n\n    this._characterJoinerService = this._instantiationService.createInstance(CharacterJoinerService);\n    this._instantiationService.setService(ICharacterJoinerService, this._characterJoinerService);\n\n    const renderer = this._createRenderer();\n    this._renderService = this.register(this._instantiationService.createInstance(RenderService, renderer, this.rows, this.screenElement));\n    this._instantiationService.setService(IRenderService, this._renderService);\n    this.register(this._renderService.onRenderedBufferChange(e => this._onRender.fire(e)));\n    this.onResize(e => this._renderService!.resize(e.cols, e.rows));\n\n    this._compositionView = document.createElement('div');\n    this._compositionView.classList.add('composition-view');\n    this._compositionHelper = this._instantiationService.createInstance(CompositionHelper, this.textarea, this._compositionView);\n    this._helperContainer.appendChild(this._compositionView);\n\n    // Performance: Add viewport and helper elements from the fragment\n    this.element.appendChild(fragment);\n\n    this._soundService = this._instantiationService.createInstance(SoundService);\n    this._instantiationService.setService(ISoundService, this._soundService);\n    this._mouseService = this._instantiationService.createInstance(MouseService);\n    this._instantiationService.setService(IMouseService, this._mouseService);\n\n    this.viewport = this._instantiationService.createInstance(Viewport,\n      (amount: number) => this.scrollLines(amount, true, ScrollSource.VIEWPORT),\n      this._viewportElement,\n      this._viewportScrollArea,\n      this.element\n    );\n    this.viewport.onThemeChange(this._colorManager.colors);\n    this.register(this._inputHandler.onRequestSyncScrollBar(() => this.viewport!.syncScrollArea()));\n    this.register(this.viewport);\n\n    this.register(this.onCursorMove(() => {\n      this._renderService!.onCursorMove();\n      this._syncTextArea();\n    }));\n    this.register(this.onResize(() => this._renderService!.onResize(this.cols, this.rows)));\n    this.register(this.onBlur(() => this._renderService!.onBlur()));\n    this.register(this.onFocus(() => this._renderService!.onFocus()));\n    this.register(this._renderService.onDimensionsChange(() => this.viewport!.syncScrollArea()));\n\n    this._selectionService = this.register(this._instantiationService.createInstance(SelectionService,\n      this.element,\n      this.screenElement,\n      this.linkifier2\n    ));\n    this._instantiationService.setService(ISelectionService, this._selectionService);\n    this.register(this._selectionService.onRequestScrollLines(e => this.scrollLines(e.amount, e.suppressScrollEvent)));\n    this.register(this._selectionService.onSelectionChange(() => this._onSelectionChange.fire()));\n    this.register(this._selectionService.onRequestRedraw(e => this._renderService!.onSelectionChanged(e.start, e.end, e.columnSelectMode)));\n    this.register(this._selectionService.onLinuxMouseSelection(text => {\n      // If there's a new selection, put it into the textarea, focus and select it\n      // in order to register it as a selection on the OS. This event is fired\n      // only on Linux to enable middle click to paste selection.\n      this.textarea!.value = text;\n      this.textarea!.focus();\n      this.textarea!.select();\n    }));\n    this.register(this._onScroll.event(ev => {\n      this.viewport!.syncScrollArea();\n      this._selectionService!.refresh();\n    }));\n    this.register(addDisposableDomListener(this._viewportElement, 'scroll', () => this._selectionService!.refresh()));\n\n    this._mouseZoneManager = this._instantiationService.createInstance(MouseZoneManager, this.element, this.screenElement);\n    this.register(this._mouseZoneManager);\n    this.register(this.onScroll(() => this._mouseZoneManager!.clearAll()));\n    this.linkifier.attachToDom(this.element, this._mouseZoneManager);\n    this.linkifier2.attachToDom(this.element, this._mouseService, this._renderService);\n\n    // This event listener must be registered aftre MouseZoneManager is created\n    this.register(addDisposableDomListener(this.element, 'mousedown', (e: MouseEvent) => this._selectionService!.onMouseDown(e)));\n\n    // apply mouse event classes set by escape codes before terminal was attached\n    if (this.coreMouseService.areMouseEventsActive) {\n      this._selectionService.disable();\n      this.element.classList.add('enable-mouse-events');\n    } else {\n      this._selectionService.enable();\n    }\n\n    if (this.options.screenReaderMode) {\n      // Note that this must be done *after* the renderer is created in order to\n      // ensure the correct order of the dprchange event\n      this._accessibilityManager = new AccessibilityManager(this, this._renderService);\n    }\n\n    // Measure the character size\n    this._charSizeService.measure();\n\n    // Setup loop that draws to screen\n    this.refresh(0, this.rows - 1);\n\n    // Initialize global actions that need to be taken on the document.\n    this._initGlobal();\n\n    // Listen for mouse events and translate\n    // them into terminal mouse protocols.\n    this.bindMouse();\n  }\n\n  private _createRenderer(): IRenderer {\n    switch (this.options.rendererType) {\n      case 'canvas': return this._instantiationService.createInstance(Renderer, this._colorManager!.colors, this.screenElement!, this.linkifier, this.linkifier2);\n      case 'dom': return this._instantiationService.createInstance(DomRenderer, this._colorManager!.colors, this.element!, this.screenElement!, this._viewportElement!, this.linkifier, this.linkifier2);\n      default: throw new Error(`Unrecognized rendererType \"${this.options.rendererType}\"`);\n    }\n  }\n\n  /**\n   * Sets the theme on the renderer. The renderer must have been initialized.\n   * @param theme The theme to set.\n   */\n  private _setTheme(theme: ITheme): void {\n    this._theme = theme;\n    this._colorManager?.setTheme(theme);\n    this._renderService?.setColors(this._colorManager!.colors);\n    this.viewport?.onThemeChange(this._colorManager!.colors);\n  }\n\n  /**\n   * Bind certain mouse events to the terminal.\n   * By default only 3 button + wheel up/down is ativated. For higher buttons\n   * no mouse report will be created. Typically the standard actions will be active.\n   *\n   * There are several reasons not to enable support for higher buttons/wheel:\n   * - Button 4 and 5 are typically used for history back and forward navigation,\n   *   there is no straight forward way to supress/intercept those standard actions.\n   * - Support for higher buttons does not work in some platform/browser combinations.\n   * - Left/right wheel was not tested.\n   * - Emulators vary in mouse button support, typically only 3 buttons and\n   *   wheel up/down work reliable.\n   *\n   * TODO: Move mouse event code into its own file.\n   */\n  public bindMouse(): void {\n    const self = this;\n    const el = this.element!;\n\n    // send event to CoreMouseService\n    function sendEvent(ev: MouseEvent | WheelEvent): boolean {\n      // get mouse coordinates\n      const pos = self._mouseService!.getRawByteCoords(ev, self.screenElement!, self.cols, self.rows);\n      if (!pos) {\n        return false;\n      }\n\n      let but: CoreMouseButton;\n      let action: CoreMouseAction | undefined;\n      switch ((ev as any).overrideType || ev.type) {\n        case 'mousemove':\n          action = CoreMouseAction.MOVE;\n          if (ev.buttons === undefined) {\n            // buttons is not supported on macOS, try to get a value from button instead\n            but = CoreMouseButton.NONE;\n            if (ev.button !== undefined) {\n              but = ev.button < 3 ? ev.button : CoreMouseButton.NONE;\n            }\n          } else {\n            // according to MDN buttons only reports up to button 5 (AUX2)\n            but = ev.buttons & 1 ? CoreMouseButton.LEFT :\n              ev.buttons & 4 ? CoreMouseButton.MIDDLE :\n                ev.buttons & 2 ? CoreMouseButton.RIGHT :\n                  CoreMouseButton.NONE; // fallback to NONE\n          }\n          break;\n        case 'mouseup':\n          action = CoreMouseAction.UP;\n          but = ev.button < 3 ? ev.button : CoreMouseButton.NONE;\n          break;\n        case 'mousedown':\n          action = CoreMouseAction.DOWN;\n          but = ev.button < 3 ? ev.button : CoreMouseButton.NONE;\n          break;\n        case 'wheel':\n          // only UP/DOWN wheel events are respected\n          if ((ev as WheelEvent).deltaY !== 0) {\n            action = (ev as WheelEvent).deltaY < 0 ? CoreMouseAction.UP : CoreMouseAction.DOWN;\n          }\n          but = CoreMouseButton.WHEEL;\n          break;\n        default:\n          // dont handle other event types by accident\n          return false;\n      }\n\n      // exit if we cannot determine valid button/action values\n      // do nothing for higher buttons than wheel\n      if (action === undefined || but === undefined || but > CoreMouseButton.WHEEL) {\n        return false;\n      }\n\n      return self.coreMouseService.triggerMouseEvent({\n        col: pos.x - 33, // FIXME: why -33 here?\n        row: pos.y - 33,\n        button: but,\n        action,\n        ctrl: ev.ctrlKey,\n        alt: ev.altKey,\n        shift: ev.shiftKey\n      });\n    }\n\n    /**\n     * Event listener state handling.\n     * We listen to the onProtocolChange event of CoreMouseService and put\n     * requested listeners in `requestedEvents`. With this the listeners\n     * have all bits to do the event listener juggling.\n     * Note: 'mousedown' currently is \"always on\" and not managed\n     * by onProtocolChange.\n     */\n    const requestedEvents: { [key: string]: ((ev: Event) => void) | null } = {\n      mouseup: null,\n      wheel: null,\n      mousedrag: null,\n      mousemove: null\n    };\n    const eventListeners: { [key: string]: (ev: any) => void | boolean } = {\n      mouseup: (ev: MouseEvent) => {\n        sendEvent(ev);\n        if (!ev.buttons) {\n          // if no other button is held remove global handlers\n          this._document!.removeEventListener('mouseup', requestedEvents.mouseup!);\n          if (requestedEvents.mousedrag) {\n            this._document!.removeEventListener('mousemove', requestedEvents.mousedrag);\n          }\n        }\n        return this.cancel(ev);\n      },\n      wheel: (ev: WheelEvent) => {\n        sendEvent(ev);\n        return this.cancel(ev, true);\n      },\n      mousedrag: (ev: MouseEvent) => {\n        // deal only with move while a button is held\n        if (ev.buttons) {\n          sendEvent(ev);\n        }\n      },\n      mousemove: (ev: MouseEvent) => {\n        // deal only with move without any button\n        if (!ev.buttons) {\n          sendEvent(ev);\n        }\n      }\n    };\n    this.register(this.coreMouseService.onProtocolChange(events => {\n      // apply global changes on events\n      if (events) {\n        if (this.optionsService.options.logLevel === 'debug') {\n          this._logService.debug('Binding to mouse events:', this.coreMouseService.explainEvents(events));\n        }\n        this.element!.classList.add('enable-mouse-events');\n        this._selectionService!.disable();\n      } else {\n        this._logService.debug('Unbinding from mouse events.');\n        this.element!.classList.remove('enable-mouse-events');\n        this._selectionService!.enable();\n      }\n\n      // add/remove handlers from requestedEvents\n\n      if (!(events & CoreMouseEventType.MOVE)) {\n        el.removeEventListener('mousemove', requestedEvents.mousemove!);\n        requestedEvents.mousemove = null;\n      } else if (!requestedEvents.mousemove) {\n        el.addEventListener('mousemove', eventListeners.mousemove);\n        requestedEvents.mousemove = eventListeners.mousemove;\n      }\n\n      if (!(events & CoreMouseEventType.WHEEL)) {\n        el.removeEventListener('wheel', requestedEvents.wheel!);\n        requestedEvents.wheel = null;\n      } else if (!requestedEvents.wheel) {\n        el.addEventListener('wheel', eventListeners.wheel, { passive: false });\n        requestedEvents.wheel = eventListeners.wheel;\n      }\n\n      if (!(events & CoreMouseEventType.UP)) {\n        this._document!.removeEventListener('mouseup', requestedEvents.mouseup!);\n        requestedEvents.mouseup = null;\n      } else if (!requestedEvents.mouseup) {\n        requestedEvents.mouseup = eventListeners.mouseup;\n      }\n\n      if (!(events & CoreMouseEventType.DRAG)) {\n        this._document!.removeEventListener('mousemove', requestedEvents.mousedrag!);\n        requestedEvents.mousedrag = null;\n      } else if (!requestedEvents.mousedrag) {\n        requestedEvents.mousedrag = eventListeners.mousedrag;\n      }\n    }));\n    // force initial onProtocolChange so we dont miss early mouse requests\n    this.coreMouseService.activeProtocol = this.coreMouseService.activeProtocol;\n\n    /**\n     * \"Always on\" event listeners.\n     */\n    this.register(addDisposableDomListener(el, 'mousedown', (ev: MouseEvent) => {\n      ev.preventDefault();\n      this.focus();\n\n      // Don't send the mouse button to the pty if mouse events are disabled or\n      // if the selection manager is having selection forced (ie. a modifier is\n      // held).\n      if (!this.coreMouseService.areMouseEventsActive || this._selectionService!.shouldForceSelection(ev)) {\n        return;\n      }\n\n      sendEvent(ev);\n\n      // Register additional global handlers which should keep reporting outside\n      // of the terminal element.\n      // Note: Other emulators also do this for 'mousedown' while a button\n      // is held, we currently limit 'mousedown' to the terminal only.\n      if (requestedEvents.mouseup) {\n        this._document!.addEventListener('mouseup', requestedEvents.mouseup);\n      }\n      if (requestedEvents.mousedrag) {\n        this._document!.addEventListener('mousemove', requestedEvents.mousedrag);\n      }\n\n      return this.cancel(ev);\n    }));\n\n    this.register(addDisposableDomListener(el, 'wheel', (ev: WheelEvent) => {\n      // do nothing, if app side handles wheel itself\n      if (requestedEvents.wheel) return;\n\n      if (!this.buffer.hasScrollback) {\n        // Convert wheel events into up/down events when the buffer does not have scrollback, this\n        // enables scrolling in apps hosted in the alt buffer such as vim or tmux.\n        const amount = this.viewport!.getLinesScrolled(ev);\n\n        // Do nothing if there's no vertical scroll\n        if (amount === 0) {\n          return;\n        }\n\n        // Construct and send sequences\n        const sequence = C0.ESC + (this.coreService.decPrivateModes.applicationCursorKeys ? 'O' : '[') + (ev.deltaY < 0 ? 'A' : 'B');\n        let data = '';\n        for (let i = 0; i < Math.abs(amount); i++) {\n          data += sequence;\n        }\n        this.coreService.triggerDataEvent(data, true);\n        return this.cancel(ev, true);\n      }\n\n      // normal viewport scrolling\n      // conditionally stop event, if the viewport still had rows to scroll within\n      if (!this.viewport!.onWheel(ev)) {\n        return this.cancel(ev);\n      }\n    }, { passive: false }));\n\n    this.register(addDisposableDomListener(el, 'touchstart', (ev: TouchEvent) => {\n      if (this.coreMouseService.areMouseEventsActive) return;\n      this.viewport!.onTouchStart(ev);\n      return this.cancel(ev);\n    }, { passive: true }));\n\n    this.register(addDisposableDomListener(el, 'touchmove', (ev: TouchEvent) => {\n      if (this.coreMouseService.areMouseEventsActive) return;\n      if (!this.viewport!.onTouchMove(ev)) {\n        return this.cancel(ev);\n      }\n    }, { passive: false }));\n  }\n\n\n  /**\n   * Tells the renderer to refresh terminal content between two rows (inclusive) at the next\n   * opportunity.\n   * @param start The row to start from (between 0 and this.rows - 1).\n   * @param end The row to end at (between start and this.rows - 1).\n   */\n  public refresh(start: number, end: number): void {\n    this._renderService?.refreshRows(start, end);\n  }\n\n  /**\n   * Queues linkification for the specified rows.\n   * @param start The row to start from (between 0 and this.rows - 1).\n   * @param end The row to end at (between start and this.rows - 1).\n   */\n  private _queueLinkification(start: number, end: number): void {\n    this.linkifier?.linkifyRows(start, end);\n  }\n\n  /**\n   * Change the cursor style for different selection modes\n   */\n  public updateCursorStyle(ev: KeyboardEvent): void {\n    if (this._selectionService?.shouldColumnSelect(ev)) {\n      this.element!.classList.add('column-select');\n    } else {\n      this.element!.classList.remove('column-select');\n    }\n  }\n\n  /**\n   * Display the cursor element\n   */\n  private _showCursor(): void {\n    if (!this.coreService.isCursorInitialized) {\n      this.coreService.isCursorInitialized = true;\n      this.refresh(this.buffer.y, this.buffer.y);\n    }\n  }\n\n  public scrollLines(disp: number, suppressScrollEvent?: boolean, source = ScrollSource.TERMINAL): void {\n    super.scrollLines(disp, suppressScrollEvent, source);\n    this.refresh(0, this.rows - 1);\n  }\n\n  public paste(data: string): void {\n    paste(data, this.textarea!, this.coreService);\n  }\n\n  /**\n   * Attaches a custom key event handler which is run before keys are processed,\n   * giving consumers of xterm.js ultimate control as to what keys should be\n   * processed by the terminal and what keys should not.\n   * @param customKeyEventHandler The custom KeyboardEvent handler to attach.\n   * This is a function that takes a KeyboardEvent, allowing consumers to stop\n   * propagation and/or prevent the default action. The function returns whether\n   * the event should be processed by xterm.js.\n   */\n  public attachCustomKeyEventHandler(customKeyEventHandler: CustomKeyEventHandler): void {\n    this._customKeyEventHandler = customKeyEventHandler;\n  }\n\n  /**\n   * Registers a link matcher, allowing custom link patterns to be matched and\n   * handled.\n   * @param regex The regular expression to search for, specifically\n   * this searches the textContent of the rows. You will want to use \\s to match\n   * a space ' ' character for example.\n   * @param handler The callback when the link is called.\n   * @param options Options for the link matcher.\n   * @return The ID of the new matcher, this can be used to deregister.\n   */\n  public registerLinkMatcher(regex: RegExp, handler: LinkMatcherHandler, options?: ILinkMatcherOptions): number {\n    const matcherId = this.linkifier.registerLinkMatcher(regex, handler, options);\n    this.refresh(0, this.rows - 1);\n    return matcherId;\n  }\n\n  /**\n   * Deregisters a link matcher if it has been registered.\n   * @param matcherId The link matcher's ID (returned after register)\n   */\n  public deregisterLinkMatcher(matcherId: number): void {\n    if (this.linkifier.deregisterLinkMatcher(matcherId)) {\n      this.refresh(0, this.rows - 1);\n    }\n  }\n\n  public registerLinkProvider(linkProvider: ILinkProvider): IDisposable {\n    return this.linkifier2.registerLinkProvider(linkProvider);\n  }\n\n  public registerCharacterJoiner(handler: CharacterJoinerHandler): number {\n    if (!this._characterJoinerService) {\n      throw new Error('Terminal must be opened first');\n    }\n    const joinerId = this._characterJoinerService.register(handler);\n    this.refresh(0, this.rows - 1);\n    return joinerId;\n  }\n\n  public deregisterCharacterJoiner(joinerId: number): void {\n    if (!this._characterJoinerService) {\n      throw new Error('Terminal must be opened first');\n    }\n    if (this._characterJoinerService.deregister(joinerId)) {\n      this.refresh(0, this.rows - 1);\n    }\n  }\n\n  public get markers(): IMarker[] {\n    return this.buffer.markers;\n  }\n\n  public addMarker(cursorYOffset: number): IMarker | undefined {\n    // Disallow markers on the alt buffer\n    if (this.buffer !== this.buffers.normal) {\n      return;\n    }\n\n    return this.buffer.addMarker(this.buffer.ybase + this.buffer.y + cursorYOffset);\n  }\n\n  /**\n   * Gets whether the terminal has an active selection.\n   */\n  public hasSelection(): boolean {\n    return this._selectionService ? this._selectionService.hasSelection : false;\n  }\n\n  /**\n   * Selects text within the terminal.\n   * @param column The column the selection starts at..\n   * @param row The row the selection starts at.\n   * @param length The length of the selection.\n   */\n  public select(column: number, row: number, length: number): void {\n    this._selectionService!.setSelection(column, row, length);\n  }\n\n  /**\n   * Gets the terminal's current selection, this is useful for implementing copy\n   * behavior outside of xterm.js.\n   */\n  public getSelection(): string {\n    return this._selectionService ? this._selectionService.selectionText : '';\n  }\n\n  public getSelectionPosition(): ISelectionPosition | undefined {\n    if (!this._selectionService || !this._selectionService.hasSelection) {\n      return undefined;\n    }\n\n    return {\n      startColumn: this._selectionService.selectionStart![0],\n      startRow: this._selectionService.selectionStart![1],\n      endColumn: this._selectionService.selectionEnd![0],\n      endRow: this._selectionService.selectionEnd![1]\n    };\n  }\n\n  /**\n   * Clears the current terminal selection.\n   */\n  public clearSelection(): void {\n    this._selectionService?.clearSelection();\n  }\n\n  /**\n   * Selects all text within the terminal.\n   */\n  public selectAll(): void {\n    this._selectionService?.selectAll();\n  }\n\n  public selectLines(start: number, end: number): void {\n    this._selectionService?.selectLines(start, end);\n  }\n\n  /**\n   * Handle a keydown event\n   * Key Resources:\n   *   - https://developer.mozilla.org/en-US/docs/DOM/KeyboardEvent\n   * @param ev The keydown event to be handled.\n   */\n  protected _keyDown(event: KeyboardEvent): boolean | undefined {\n    this._keyDownHandled = false;\n\n    if (this._customKeyEventHandler && this._customKeyEventHandler(event) === false) {\n      return false;\n    }\n\n    if (!this._compositionHelper!.keydown(event)) {\n      if (this.buffer.ybase !== this.buffer.ydisp) {\n        this._bufferService.scrollToBottom();\n      }\n      return false;\n    }\n\n    if (event.key === 'Dead' || event.key === 'AltGraph') {\n      this._unprocessedDeadKey = true;\n    }\n\n    const result = evaluateKeyboardEvent(event, this.coreService.decPrivateModes.applicationCursorKeys, this.browser.isMac, this.options.macOptionIsMeta);\n\n    this.updateCursorStyle(event);\n\n    if (result.type === KeyboardResultType.PAGE_DOWN || result.type === KeyboardResultType.PAGE_UP) {\n      const scrollCount = this.rows - 1;\n      this.scrollLines(result.type === KeyboardResultType.PAGE_UP ? -scrollCount : scrollCount);\n      return this.cancel(event, true);\n    }\n\n    if (result.type === KeyboardResultType.SELECT_ALL) {\n      this.selectAll();\n    }\n\n    if (this._isThirdLevelShift(this.browser, event)) {\n      return true;\n    }\n\n    if (result.cancel) {\n      // The event is canceled at the end already, is this necessary?\n      this.cancel(event, true);\n    }\n\n    if (!result.key) {\n      return true;\n    }\n\n    if (this._unprocessedDeadKey) {\n      this._unprocessedDeadKey = false;\n      return true;\n    }\n\n    // If ctrl+c or enter is being sent, clear out the textarea. This is done so that screen readers\n    // will announce deleted characters. This will not work 100% of the time but it should cover\n    // most scenarios.\n    if (result.key === C0.ETX || result.key === C0.CR) {\n      this.textarea!.value = '';\n    }\n\n    this._onKey.fire({ key: result.key, domEvent: event });\n    this._showCursor();\n    this.coreService.triggerDataEvent(result.key, true);\n\n    // Cancel events when not in screen reader mode so events don't get bubbled up and handled by\n    // other listeners. When screen reader mode is enabled, this could cause issues if the event\n    // is handled at a higher level, this is a compromise in order to echo keys to the screen\n    // reader.\n    if (!this.optionsService.options.screenReaderMode) {\n      return this.cancel(event, true);\n    }\n\n    this._keyDownHandled = true;\n  }\n\n  private _isThirdLevelShift(browser: IBrowser, ev: KeyboardEvent): boolean {\n    const thirdLevelKey =\n      (browser.isMac && !this.options.macOptionIsMeta && ev.altKey && !ev.ctrlKey && !ev.metaKey) ||\n      (browser.isWindows && ev.altKey && ev.ctrlKey && !ev.metaKey) ||\n      (browser.isWindows && ev.getModifierState('AltGraph'));\n\n    if (ev.type === 'keypress') {\n      return thirdLevelKey;\n    }\n\n    // Don't invoke for arrows, pageDown, home, backspace, etc. (on non-keypress events)\n    return thirdLevelKey && (!ev.keyCode || ev.keyCode > 47);\n  }\n\n  protected _keyUp(ev: KeyboardEvent): void {\n    if (this._customKeyEventHandler && this._customKeyEventHandler(ev) === false) {\n      return;\n    }\n\n    if (!wasModifierKeyOnlyEvent(ev)) {\n      this.focus();\n    }\n\n    this.updateCursorStyle(ev);\n    this._keyPressHandled = false;\n  }\n\n  /**\n   * Handle a keypress event.\n   * Key Resources:\n   *   - https://developer.mozilla.org/en-US/docs/DOM/KeyboardEvent\n   * @param ev The keypress event to be handled.\n   */\n  protected _keyPress(ev: KeyboardEvent): boolean {\n    let key;\n\n    this._keyPressHandled = false;\n\n    if (this._keyDownHandled) {\n      return false;\n    }\n\n    if (this._customKeyEventHandler && this._customKeyEventHandler(ev) === false) {\n      return false;\n    }\n\n    this.cancel(ev);\n\n    if (ev.charCode) {\n      key = ev.charCode;\n    } else if (ev.which === null || ev.which === undefined) {\n      key = ev.keyCode;\n    } else if (ev.which !== 0 && ev.charCode !== 0) {\n      key = ev.which;\n    } else {\n      return false;\n    }\n\n    if (!key || (\n      (ev.altKey || ev.ctrlKey || ev.metaKey) && !this._isThirdLevelShift(this.browser, ev)\n    )) {\n      return false;\n    }\n\n    key = String.fromCharCode(key);\n\n    this._onKey.fire({ key, domEvent: ev });\n    this._showCursor();\n    this.coreService.triggerDataEvent(key, true);\n\n    this._keyPressHandled = true;\n\n    return true;\n  }\n\n  /**\n   * Handle an input event.\n   * Key Resources:\n   *   - https://developer.mozilla.org/en-US/docs/Web/API/InputEvent\n   * @param ev The input event to be handled.\n   */\n  protected _inputEvent(ev: InputEvent): boolean {\n    // Only support emoji IMEs when screen reader mode is disabled as the event must bubble up to\n    // support reading out character input which can doubling up input characters\n    if (ev.data && ev.inputType === 'insertText' && !this.optionsService.options.screenReaderMode) {\n      if (this._keyPressHandled) {\n        return false;\n      }\n\n      const text = ev.data;\n      this.coreService.triggerDataEvent(text, true);\n\n      this.cancel(ev);\n      return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * Ring the bell.\n   * Note: We could do sweet things with webaudio here\n   */\n  public bell(): void {\n    if (this._soundBell()) {\n      this._soundService?.playBellSound();\n    }\n\n    this._onBell.fire();\n\n    // if (this._visualBell()) {\n    //   this.element.classList.add('visual-bell-active');\n    //   clearTimeout(this._visualBellTimer);\n    //   this._visualBellTimer = window.setTimeout(() => {\n    //     this.element.classList.remove('visual-bell-active');\n    //   }, 200);\n    // }\n  }\n\n  /**\n   * Resizes the terminal.\n   *\n   * @param x The number of columns to resize to.\n   * @param y The number of rows to resize to.\n   */\n  public resize(x: number, y: number): void {\n    if (x === this.cols && y === this.rows) {\n      // Check if we still need to measure the char size (fixes #785).\n      if (this._charSizeService && !this._charSizeService.hasValidSize) {\n        this._charSizeService.measure();\n      }\n      return;\n    }\n\n    super.resize(x, y);\n  }\n\n  private _afterResize(x: number, y: number): void {\n    this._charSizeService?.measure();\n\n    // Sync the scroll area to make sure scroll events don't fire and scroll the viewport to an\n    // invalid location\n    this.viewport?.syncScrollArea(true);\n  }\n\n  /**\n   * Clear the entire buffer, making the prompt line the new first line.\n   */\n  public clear(): void {\n    if (this.buffer.ybase === 0 && this.buffer.y === 0) {\n      // Don't clear if it's already clear\n      return;\n    }\n    this.buffer.lines.set(0, this.buffer.lines.get(this.buffer.ybase + this.buffer.y)!);\n    this.buffer.lines.length = 1;\n    this.buffer.ydisp = 0;\n    this.buffer.ybase = 0;\n    this.buffer.y = 0;\n    for (let i = 1; i < this.rows; i++) {\n      this.buffer.lines.push(this.buffer.getBlankLine(DEFAULT_ATTR_DATA));\n    }\n    this.refresh(0, this.rows - 1);\n    this._onScroll.fire({ position: this.buffer.ydisp, source: ScrollSource.TERMINAL });\n  }\n\n  /**\n   * Reset terminal.\n   * Note: Calling this directly from JS is synchronous but does not clear\n   * input buffers and does not reset the parser, thus the terminal will\n   * continue to apply pending input data.\n   * If you need in band reset (synchronous with input data) consider\n   * using DECSTR (soft reset, CSI ! p) or RIS instead (hard reset, ESC c).\n   */\n  public reset(): void {\n    /**\n     * Since _setup handles a full terminal creation, we have to carry forward\n     * a few things that should not reset.\n     */\n    this.options.rows = this.rows;\n    this.options.cols = this.cols;\n    const customKeyEventHandler = this._customKeyEventHandler;\n\n    this._setup();\n    super.reset();\n    this._selectionService?.reset();\n\n    // reattach\n    this._customKeyEventHandler = customKeyEventHandler;\n\n    // do a full screen refresh\n    this.refresh(0, this.rows - 1);\n    this.viewport?.syncScrollArea();\n  }\n\n  public clearTextureAtlas(): void {\n    this._renderService?.clearTextureAtlas();\n  }\n\n  private _reportFocus(): void {\n    if (this.element?.classList.contains('focus')) {\n      this.coreService.triggerDataEvent(C0.ESC + '[I');\n    } else {\n      this.coreService.triggerDataEvent(C0.ESC + '[O');\n    }\n  }\n\n  private _reportWindowsOptions(type: WindowsOptionsReportType): void {\n    if (!this._renderService) {\n      return;\n    }\n\n    switch (type) {\n      case WindowsOptionsReportType.GET_WIN_SIZE_PIXELS:\n        const canvasWidth = this._renderService.dimensions.scaledCanvasWidth.toFixed(0);\n        const canvasHeight = this._renderService.dimensions.scaledCanvasHeight.toFixed(0);\n        this.coreService.triggerDataEvent(`${C0.ESC}[4;${canvasHeight};${canvasWidth}t`);\n        break;\n      case WindowsOptionsReportType.GET_CELL_SIZE_PIXELS:\n        const cellWidth = this._renderService.dimensions.scaledCellWidth.toFixed(0);\n        const cellHeight = this._renderService.dimensions.scaledCellHeight.toFixed(0);\n        this.coreService.triggerDataEvent(`${C0.ESC}[6;${cellHeight};${cellWidth}t`);\n        break;\n    }\n  }\n\n  // TODO: Remove cancel function and cancelEvents option\n  public cancel(ev: Event, force?: boolean): boolean | undefined {\n    if (!this.options.cancelEvents && !force) {\n      return;\n    }\n    ev.preventDefault();\n    ev.stopPropagation();\n    return false;\n  }\n\n  private _visualBell(): boolean {\n    return false;\n    // return this.options.bellStyle === 'visual' ||\n    //     this.options.bellStyle === 'both';\n  }\n\n  private _soundBell(): boolean {\n    return this.options.bellStyle === 'sound';\n    // return this.options.bellStyle === 'sound' ||\n    //     this.options.bellStyle === 'both';\n  }\n}\n\n/**\n * Helpers\n */\n\nfunction wasModifierKeyOnlyEvent(ev: KeyboardEvent): boolean {\n  return ev.keyCode === 16 || // Shift\n    ev.keyCode === 17 || // Ctrl\n    ev.keyCode === 18; // Alt\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nconst RENDER_DEBOUNCE_THRESHOLD_MS = 1000; // 1 Second\n\nimport { IRenderDebouncer } from 'browser/Types';\n\n/**\n * Debounces calls to update screen readers to update at most once configurable interval of time.\n */\nexport class TimeBasedDebouncer implements IRenderDebouncer {\n  private _rowStart: number | undefined;\n  private _rowEnd: number | undefined;\n  private _rowCount: number | undefined;\n\n  // The last moment that the Terminal was refreshed at\n  private _lastRefreshMs = 0;\n  // Whether a trailing refresh should be triggered due to a refresh request that was throttled\n  private _additionalRefreshRequested = false;\n\n  private _refreshTimeoutID: number | undefined;\n\n  constructor(\n    private _renderCallback: (start: number, end: number) => void,\n    private readonly _debounceThresholdMS = RENDER_DEBOUNCE_THRESHOLD_MS\n  ) {\n  }\n\n  public dispose(): void {\n    if (this._refreshTimeoutID) {\n      clearTimeout(this._refreshTimeoutID);\n    }\n  }\n\n  public refresh(rowStart: number | undefined, rowEnd: number | undefined, rowCount: number): void {\n    this._rowCount = rowCount;\n    // Get the min/max row start/end for the arg values\n    rowStart = rowStart !== undefined ? rowStart : 0;\n    rowEnd = rowEnd !== undefined ? rowEnd : this._rowCount - 1;\n    // Set the properties to the updated values\n    this._rowStart = this._rowStart !== undefined ? Math.min(this._rowStart, rowStart) : rowStart;\n    this._rowEnd = this._rowEnd !== undefined ? Math.max(this._rowEnd, rowEnd) : rowEnd;\n\n    // Only refresh if the time since last refresh is above a threshold, otherwise wait for\n    // enough time to pass before refreshing again.\n    const refreshRequestTime: number = Date.now();\n    if (refreshRequestTime - this._lastRefreshMs >= this._debounceThresholdMS) {\n      // Enough time has lapsed since the last refresh; refresh immediately\n      this._lastRefreshMs = refreshRequestTime;\n      this._innerRefresh();\n    } else if (!this._additionalRefreshRequested) {\n      // This is the first additional request throttled; set up trailing refresh\n      const elapsed = refreshRequestTime - this._lastRefreshMs;\n      const waitPeriodBeforeTrailingRefresh = this._debounceThresholdMS - elapsed;\n      this._additionalRefreshRequested = true;\n\n      this._refreshTimeoutID = window.setTimeout(() => {\n        this._lastRefreshMs = Date.now();\n        this._innerRefresh();\n        this._additionalRefreshRequested = false;\n        this._refreshTimeoutID = undefined; // No longer need to clear the timeout\n      }, waitPeriodBeforeTrailingRefresh);\n    }\n  }\n\n  private _innerRefresh(): void {\n    // Make sure values are set\n    if (this._rowStart === undefined || this._rowEnd === undefined || this._rowCount === undefined) {\n      return;\n    }\n\n    // Clamp values\n    const start = Math.max(this._rowStart, 0);\n    const end = Math.min(this._rowEnd, this._rowCount - 1);\n\n    // Reset debouncer (this happens before render callback as the render could trigger it again)\n    this._rowStart = undefined;\n    this._rowEnd = undefined;\n\n    // Run render callback\n    this._renderCallback(start, end);\n  }\n}\n\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Disposable } from 'common/Lifecycle';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { IColorSet, IViewport } from 'browser/Types';\nimport { ICharSizeService, IRenderService } from 'browser/services/Services';\nimport { IBufferService, IOptionsService } from 'common/services/Services';\nimport { IBuffer } from 'common/buffer/Types';\nimport { IRenderDimensions } from 'browser/renderer/Types';\n\nconst FALLBACK_SCROLL_BAR_WIDTH = 15;\n\n/**\n * Represents the viewport of a terminal, the visible area within the larger buffer of output.\n * Logic for the virtual scroll bar is included in this object.\n */\nexport class Viewport extends Disposable implements IViewport {\n  public scrollBarWidth: number = 0;\n  private _currentRowHeight: number = 0;\n  private _currentScaledCellHeight: number = 0;\n  private _lastRecordedBufferLength: number = 0;\n  private _lastRecordedViewportHeight: number = 0;\n  private _lastRecordedBufferHeight: number = 0;\n  private _lastTouchY: number = 0;\n  private _lastScrollTop: number = 0;\n  private _lastHadScrollBar: boolean = false;\n  private _activeBuffer: IBuffer;\n  private _renderDimensions: IRenderDimensions;\n\n  // Stores a partial line amount when scrolling, this is used to keep track of how much of a line\n  // is scrolled so we can \"scroll\" over partial lines and feel natural on touchpads. This is a\n  // quick fix and could have a more robust solution in place that reset the value when needed.\n  private _wheelPartialScroll: number = 0;\n\n  private _refreshAnimationFrame: number | null = null;\n  private _ignoreNextScrollEvent: boolean = false;\n\n  constructor(\n    private readonly _scrollLines: (amount: number) => void,\n    private readonly _viewportElement: HTMLElement,\n    private readonly _scrollArea: HTMLElement,\n    private readonly _element: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService,\n    @IRenderService private readonly _renderService: IRenderService\n  ) {\n    super();\n\n    // Measure the width of the scrollbar. If it is 0 we can assume it's an OSX overlay scrollbar.\n    // Unfortunately the overlay scrollbar would be hidden underneath the screen element in that case,\n    // therefore we account for a standard amount to make it visible\n    this.scrollBarWidth = (this._viewportElement.offsetWidth - this._scrollArea.offsetWidth) || FALLBACK_SCROLL_BAR_WIDTH;\n    this._lastHadScrollBar = true;\n    this.register(addDisposableDomListener(this._viewportElement, 'scroll', this._onScroll.bind(this)));\n\n    // Track properties used in performance critical code manually to avoid using slow getters\n    this._activeBuffer = this._bufferService.buffer;\n    this.register(this._bufferService.buffers.onBufferActivate(e => this._activeBuffer = e.activeBuffer));\n    this._renderDimensions = this._renderService.dimensions;\n    this.register(this._renderService.onDimensionsChange(e => this._renderDimensions = e));\n\n    // Perform this async to ensure the ICharSizeService is ready.\n    setTimeout(() => this.syncScrollArea(), 0);\n  }\n\n  public onThemeChange(colors: IColorSet): void {\n    this._viewportElement.style.backgroundColor = colors.background.css;\n  }\n\n  /**\n   * Refreshes row height, setting line-height, viewport height and scroll area height if\n   * necessary.\n   */\n  private _refresh(immediate: boolean): void {\n    if (immediate) {\n      this._innerRefresh();\n      if (this._refreshAnimationFrame !== null) {\n        cancelAnimationFrame(this._refreshAnimationFrame);\n      }\n      return;\n    }\n    if (this._refreshAnimationFrame === null) {\n      this._refreshAnimationFrame = requestAnimationFrame(() => this._innerRefresh());\n    }\n  }\n\n  private _innerRefresh(): void {\n    if (this._charSizeService.height > 0) {\n      this._currentRowHeight = this._renderService.dimensions.scaledCellHeight / window.devicePixelRatio;\n      this._currentScaledCellHeight = this._renderService.dimensions.scaledCellHeight;\n      this._lastRecordedViewportHeight = this._viewportElement.offsetHeight;\n      const newBufferHeight = Math.round(this._currentRowHeight * this._lastRecordedBufferLength) + (this._lastRecordedViewportHeight - this._renderService.dimensions.canvasHeight);\n      if (this._lastRecordedBufferHeight !== newBufferHeight) {\n        this._lastRecordedBufferHeight = newBufferHeight;\n        this._scrollArea.style.height = this._lastRecordedBufferHeight + 'px';\n      }\n    }\n\n    // Sync scrollTop\n    const scrollTop = this._bufferService.buffer.ydisp * this._currentRowHeight;\n    if (this._viewportElement.scrollTop !== scrollTop) {\n      // Ignore the next scroll event which will be triggered by setting the scrollTop as we do not\n      // want this event to scroll the terminal\n      this._ignoreNextScrollEvent = true;\n      this._viewportElement.scrollTop = scrollTop;\n    }\n\n    // Update scroll bar width\n    if (this._optionsService.options.scrollback === 0) {\n      this.scrollBarWidth = 0;\n    } else {\n      this.scrollBarWidth = (this._viewportElement.offsetWidth - this._scrollArea.offsetWidth) || FALLBACK_SCROLL_BAR_WIDTH;\n    }\n    this._lastHadScrollBar = this.scrollBarWidth > 0;\n\n    const elementStyle = window.getComputedStyle(this._element);\n    const elementPadding = parseInt(elementStyle.paddingLeft) + parseInt(elementStyle.paddingRight);\n    this._viewportElement.style.width = (this._renderService.dimensions.actualCellWidth * (this._bufferService.cols) + this.scrollBarWidth + (this._lastHadScrollBar ? elementPadding : 0)).toString() + 'px';\n    this._refreshAnimationFrame = null;\n  }\n\n  /**\n   * Updates dimensions and synchronizes the scroll area if necessary.\n   */\n  public syncScrollArea(immediate: boolean = false): void {\n    // If buffer height changed\n    if (this._lastRecordedBufferLength !== this._bufferService.buffer.lines.length) {\n      this._lastRecordedBufferLength = this._bufferService.buffer.lines.length;\n      this._refresh(immediate);\n      return;\n    }\n\n    // If viewport height changed\n    if (this._lastRecordedViewportHeight !== this._renderService.dimensions.canvasHeight) {\n      this._refresh(immediate);\n      return;\n    }\n\n    // If the buffer position doesn't match last scroll top\n    if (this._lastScrollTop !== this._activeBuffer.ydisp * this._currentRowHeight) {\n      this._refresh(immediate);\n      return;\n    }\n\n    // If row height changed\n    if (this._renderDimensions.scaledCellHeight !== this._currentScaledCellHeight) {\n      this._refresh(immediate);\n      return;\n    }\n\n    // If the scroll bar visibility changed\n    if (this._lastHadScrollBar !== (this._optionsService.options.scrollback > 0)) {\n      this._refresh(immediate);\n    }\n  }\n\n  /**\n   * Handles scroll events on the viewport, calculating the new viewport and requesting the\n   * terminal to scroll to it.\n   * @param ev The scroll event.\n   */\n  private _onScroll(ev: Event): void {\n    // Record current scroll top position\n    this._lastScrollTop = this._viewportElement.scrollTop;\n\n    // Don't attempt to scroll if the element is not visible, otherwise scrollTop will be corrupt\n    // which causes the terminal to scroll the buffer to the top\n    if (!this._viewportElement.offsetParent) {\n      return;\n    }\n\n    // Ignore the event if it was flagged to ignore (when the source of the event is from Viewport)\n    if (this._ignoreNextScrollEvent) {\n      this._ignoreNextScrollEvent = false;\n      // Still trigger the scroll so lines get refreshed\n      this._scrollLines(0);\n      return;\n    }\n\n    const newRow = Math.round(this._lastScrollTop / this._currentRowHeight);\n    const diff = newRow - this._bufferService.buffer.ydisp;\n    this._scrollLines(diff);\n  }\n\n  /**\n   * Handles bubbling of scroll event in case the viewport has reached top or bottom\n   * @param ev The scroll event.\n   * @param amount The amount scrolled\n   */\n  private _bubbleScroll(ev: Event, amount: number): boolean {\n    const scrollPosFromTop = this._viewportElement.scrollTop + this._lastRecordedViewportHeight;\n    if ((amount < 0 && this._viewportElement.scrollTop !== 0) ||\n      (amount > 0 && scrollPosFromTop < this._lastRecordedBufferHeight)) {\n      if (ev.cancelable) {\n        ev.preventDefault();\n      }\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handles mouse wheel events by adjusting the viewport's scrollTop and delegating the actual\n   * scrolling to `onScroll`, this event needs to be attached manually by the consumer of\n   * `Viewport`.\n   * @param ev The mouse wheel event.\n   */\n  public onWheel(ev: WheelEvent): boolean {\n    const amount = this._getPixelsScrolled(ev);\n    if (amount === 0) {\n      return false;\n    }\n    this._viewportElement.scrollTop += amount;\n    return this._bubbleScroll(ev, amount);\n  }\n\n  private _getPixelsScrolled(ev: WheelEvent): number {\n    // Do nothing if it's not a vertical scroll event\n    if (ev.deltaY === 0) {\n      return 0;\n    }\n\n    // Fallback to WheelEvent.DOM_DELTA_PIXEL\n    let amount = this._applyScrollModifier(ev.deltaY, ev);\n    if (ev.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n      amount *= this._currentRowHeight;\n    } else if (ev.deltaMode === WheelEvent.DOM_DELTA_PAGE) {\n      amount *= this._currentRowHeight * this._bufferService.rows;\n    }\n    return amount;\n  }\n\n  /**\n   * Gets the number of pixels scrolled by the mouse event taking into account what type of delta\n   * is being used.\n   * @param ev The mouse wheel event.\n   */\n  public getLinesScrolled(ev: WheelEvent): number {\n    // Do nothing if it's not a vertical scroll event\n    if (ev.deltaY === 0) {\n      return 0;\n    }\n\n    // Fallback to WheelEvent.DOM_DELTA_LINE\n    let amount = this._applyScrollModifier(ev.deltaY, ev);\n    if (ev.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n      amount /= this._currentRowHeight + 0.0; // Prevent integer division\n      this._wheelPartialScroll += amount;\n      amount = Math.floor(Math.abs(this._wheelPartialScroll)) * (this._wheelPartialScroll > 0 ? 1 : -1);\n      this._wheelPartialScroll %= 1;\n    } else if (ev.deltaMode === WheelEvent.DOM_DELTA_PAGE) {\n      amount *= this._bufferService.rows;\n    }\n    return amount;\n  }\n\n  private _applyScrollModifier(amount: number, ev: WheelEvent): number {\n    const modifier = this._optionsService.options.fastScrollModifier;\n    // Multiply the scroll speed when the modifier is down\n    if ((modifier === 'alt' && ev.altKey) ||\n      (modifier === 'ctrl' && ev.ctrlKey) ||\n      (modifier === 'shift' && ev.shiftKey)) {\n      return amount * this._optionsService.options.fastScrollSensitivity * this._optionsService.options.scrollSensitivity;\n    }\n\n    return amount * this._optionsService.options.scrollSensitivity;\n  }\n\n  /**\n   * Handles the touchstart event, recording the touch occurred.\n   * @param ev The touch event.\n   */\n  public onTouchStart(ev: TouchEvent): void {\n    this._lastTouchY = ev.touches[0].pageY;\n  }\n\n  /**\n   * Handles the touchmove event, scrolling the viewport if the position shifted.\n   * @param ev The touch event.\n   */\n  public onTouchMove(ev: TouchEvent): boolean {\n    const deltaY = this._lastTouchY - ev.touches[0].pageY;\n    this._lastTouchY = ev.touches[0].pageY;\n    if (deltaY === 0) {\n      return false;\n    }\n    this._viewportElement.scrollTop += deltaY;\n    return this._bubbleScroll(ev, deltaY);\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderService } from 'browser/services/Services';\nimport { IBufferService, ICoreService, IOptionsService } from 'common/services/Services';\n\ninterface IPosition {\n  start: number;\n  end: number;\n}\n\n/**\n * Encapsulates the logic for handling compositionstart, compositionupdate and compositionend\n * events, displaying the in-progress composition to the UI and forwarding the final composition\n * to the handler.\n */\nexport class CompositionHelper {\n  /**\n   * Whether input composition is currently happening, eg. via a mobile keyboard, speech input or\n   * IME. This variable determines whether the compositionText should be displayed on the UI.\n   */\n  private _isComposing: boolean;\n  public get isComposing(): boolean { return this._isComposing; }\n\n  /**\n   * The position within the input textarea's value of the current composition.\n   */\n  private _compositionPosition: IPosition;\n\n  /**\n   * Whether a composition is in the process of being sent, setting this to false will cancel any\n   * in-progress composition.\n   */\n  private _isSendingComposition: boolean;\n\n  /**\n   * Data already sent due to keydown event.\n   */\n  private _dataAlreadySent: string;\n\n  constructor(\n    private readonly _textarea: HTMLTextAreaElement,\n    private readonly _compositionView: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @ICoreService private readonly _coreService: ICoreService,\n    @IRenderService private readonly _renderService: IRenderService\n  ) {\n    this._isComposing = false;\n    this._isSendingComposition = false;\n    this._compositionPosition = { start: 0, end: 0 };\n    this._dataAlreadySent = '';\n  }\n\n  /**\n   * Handles the compositionstart event, activating the composition view.\n   */\n  public compositionstart(): void {\n    this._isComposing = true;\n    this._compositionPosition.start = this._textarea.value.length;\n    this._compositionView.textContent = '';\n    this._dataAlreadySent = '';\n    this._compositionView.classList.add('active');\n  }\n\n  /**\n   * Handles the compositionupdate event, updating the composition view.\n   * @param ev The event.\n   */\n  public compositionupdate(ev: Pick<CompositionEvent, 'data'>): void {\n    this._compositionView.textContent = ev.data;\n    this.updateCompositionElements();\n    setTimeout(() => {\n      this._compositionPosition.end = this._textarea.value.length;\n    }, 0);\n  }\n\n  /**\n   * Handles the compositionend event, hiding the composition view and sending the composition to\n   * the handler.\n   */\n  public compositionend(): void {\n    this._finalizeComposition(true);\n  }\n\n  /**\n   * Handles the keydown event, routing any necessary events to the CompositionHelper functions.\n   * @param ev The keydown event.\n   * @return Whether the Terminal should continue processing the keydown event.\n   */\n  public keydown(ev: KeyboardEvent): boolean {\n    if (this._isComposing || this._isSendingComposition) {\n      if (ev.keyCode === 229) {\n        // Continue composing if the keyCode is the \"composition character\"\n        return false;\n      }\n      if (ev.keyCode === 16 || ev.keyCode === 17 || ev.keyCode === 18) {\n        // Continue composing if the keyCode is a modifier key\n        return false;\n      }\n      // Finish composition immediately. This is mainly here for the case where enter is\n      // pressed and the handler needs to be triggered before the command is executed.\n      this._finalizeComposition(false);\n    }\n\n    if (ev.keyCode === 229) {\n      // If the \"composition character\" is used but gets to this point it means a non-composition\n      // character (eg. numbers and punctuation) was pressed when the IME was active.\n      this._handleAnyTextareaChanges();\n      return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Finalizes the composition, resuming regular input actions. This is called when a composition\n   * is ending.\n   * @param waitForPropagation Whether to wait for events to propagate before sending\n   *   the input. This should be false if a non-composition keystroke is entered before the\n   *   compositionend event is triggered, such as enter, so that the composition is sent before\n   *   the command is executed.\n   */\n  private _finalizeComposition(waitForPropagation: boolean): void {\n    this._compositionView.classList.remove('active');\n    this._isComposing = false;\n\n    if (!waitForPropagation) {\n      // Cancel any delayed composition send requests and send the input immediately.\n      this._isSendingComposition = false;\n      const input = this._textarea.value.substring(this._compositionPosition.start, this._compositionPosition.end);\n      this._coreService.triggerDataEvent(input, true);\n    } else {\n      // Make a deep copy of the composition position here as a new compositionstart event may\n      // fire before the setTimeout executes.\n      const currentCompositionPosition = {\n        start: this._compositionPosition.start,\n        end: this._compositionPosition.end\n      };\n\n      // Since composition* events happen before the changes take place in the textarea on most\n      // browsers, use a setTimeout with 0ms time to allow the native compositionend event to\n      // complete. This ensures the correct character is retrieved.\n      // This solution was used because:\n      // - The compositionend event's data property is unreliable, at least on Chromium\n      // - The last compositionupdate event's data property does not always accurately describe\n      //   the character, a counter example being Korean where an ending consonsant can move to\n      //   the following character if the following input is a vowel.\n      this._isSendingComposition = true;\n      setTimeout(() => {\n        // Ensure that the input has not already been sent\n        if (this._isSendingComposition) {\n          this._isSendingComposition = false;\n          let input;\n          // Add length of data already sent due to keydown event,\n          // otherwise input characters can be duplicated. (Issue #3191)\n          currentCompositionPosition.start += this._dataAlreadySent.length;\n          if (this._isComposing) {\n            // Use the end position to get the string if a new composition has started.\n            input = this._textarea.value.substring(currentCompositionPosition.start, currentCompositionPosition.end);\n          } else {\n            // Don't use the end position here in order to pick up any characters after the\n            // composition has finished, for example when typing a non-composition character\n            // (eg. 2) after a composition character.\n            input = this._textarea.value.substring(currentCompositionPosition.start);\n          }\n          if (input.length > 0) {\n            this._coreService.triggerDataEvent(input, true);\n          }\n        }\n      }, 0);\n    }\n  }\n\n  /**\n   * Apply any changes made to the textarea after the current event chain is allowed to complete.\n   * This should be called when not currently composing but a keydown event with the \"composition\n   * character\" (229) is triggered, in order to allow non-composition text to be entered when an\n   * IME is active.\n   */\n  private _handleAnyTextareaChanges(): void {\n    const oldValue = this._textarea.value;\n    setTimeout(() => {\n      // Ignore if a composition has started since the timeout\n      if (!this._isComposing) {\n        const newValue = this._textarea.value;\n        const diff = newValue.replace(oldValue, '');\n        if (diff.length > 0) {\n          this._dataAlreadySent = diff;\n          this._coreService.triggerDataEvent(diff, true);\n        }\n      }\n    }, 0);\n  }\n\n  /**\n   * Positions the composition view on top of the cursor and the textarea just below it (so the\n   * IME helper dialog is positioned correctly).\n   * @param dontRecurse Whether to use setTimeout to recursively trigger another update, this is\n   *   necessary as the IME events across browsers are not consistently triggered.\n   */\n  public updateCompositionElements(dontRecurse?: boolean): void {\n    if (!this._isComposing) {\n      return;\n    }\n\n    if (this._bufferService.buffer.isCursorInViewport) {\n      const cursorX = Math.min(this._bufferService.buffer.x, this._bufferService.cols - 1);\n\n      const cellHeight = this._renderService.dimensions.actualCellHeight;\n      const cursorTop = this._bufferService.buffer.y * this._renderService.dimensions.actualCellHeight;\n      const cursorLeft = cursorX * this._renderService.dimensions.actualCellWidth;\n\n      this._compositionView.style.left = cursorLeft + 'px';\n      this._compositionView.style.top = cursorTop + 'px';\n      this._compositionView.style.height = cellHeight + 'px';\n      this._compositionView.style.lineHeight = cellHeight + 'px';\n      this._compositionView.style.fontFamily = this._optionsService.options.fontFamily;\n      this._compositionView.style.fontSize = this._optionsService.options.fontSize + 'px';\n      // Sync the textarea to the exact position of the composition view so the IME knows where the\n      // text is.\n      const compositionViewBounds = this._compositionView.getBoundingClientRect();\n      this._textarea.style.left = cursorLeft + 'px';\n      this._textarea.style.top = cursorTop + 'px';\n      // Ensure the text area is at least 1x1, otherwise certain IMEs may break\n      this._textarea.style.width = Math.max(compositionViewBounds.width, 1) + 'px';\n      this._textarea.style.height = Math.max(compositionViewBounds.height, 1) + 'px';\n      this._textarea.style.lineHeight = compositionViewBounds.height + 'px';\n    }\n\n    if (!dontRecurse) {\n      setTimeout(() => this.updateCompositionElements(true), 0);\n    }\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport function getCoordsRelativeToElement(event: {clientX: number, clientY: number}, element: HTMLElement): [number, number] {\n  const rect = element.getBoundingClientRect();\n  return [event.clientX - rect.left, event.clientY - rect.top];\n}\n\n/**\n * Gets coordinates within the terminal for a particular mouse event. The result\n * is returned as an array in the form [x, y] instead of an object as it's a\n * little faster and this function is used in some low level code.\n * @param event The mouse event.\n * @param element The terminal's container element.\n * @param colCount The number of columns in the terminal.\n * @param rowCount The number of rows n the terminal.\n * @param isSelection Whether the request is for the selection or not. This will\n * apply an offset to the x value such that the left half of the cell will\n * select that cell and the right half will select the next cell.\n */\nexport function getCoords(event: {clientX: number, clientY: number}, element: HTMLElement, colCount: number, rowCount: number, hasValidCharSize: boolean, actualCellWidth: number, actualCellHeight: number, isSelection?: boolean): [number, number] | undefined {\n  // Coordinates cannot be measured if there are no valid\n  if (!hasValidCharSize) {\n    return undefined;\n  }\n\n  const coords = getCoordsRelativeToElement(event, element);\n  if (!coords) {\n    return undefined;\n  }\n\n  coords[0] = Math.ceil((coords[0] + (isSelection ? actualCellWidth / 2 : 0)) / actualCellWidth);\n  coords[1] = Math.ceil(coords[1] / actualCellHeight);\n\n  // Ensure coordinates are within the terminal viewport. Note that selections\n  // need an addition point of precision to cover the end point (as characters\n  // cover half of one char and half of the next).\n  coords[0] = Math.min(Math.max(coords[0], 1), colCount + (isSelection ? 1 : 0));\n  coords[1] = Math.min(Math.max(coords[1], 1), rowCount);\n\n  return coords;\n}\n\n/**\n * Gets coordinates within the terminal for a particular mouse event, wrapping\n * them to the bounds of the terminal and adding 32 to both the x and y values\n * as expected by xterm.\n */\nexport function getRawByteCoords(coords: [number, number] | undefined): { x: number, y: number } | undefined {\n  if (!coords) {\n    return undefined;\n  }\n\n  // xterm sends raw bytes and starts at 32 (SP) for each.\n  return { x: coords[0] + 32, y: coords[1] + 32 };\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { C0 } from 'common/data/EscapeSequences';\nimport { IBufferService } from 'common/services/Services';\n\nconst enum Direction {\n  UP = 'A',\n  DOWN = 'B',\n  RIGHT = 'C',\n  LEFT = 'D'\n}\n\n/**\n * Concatenates all the arrow sequences together.\n * Resets the starting row to an unwrapped row, moves to the requested row,\n * then moves to requested col.\n */\nexport function moveToCellSequence(targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  const startX = bufferService.buffer.x;\n  const startY = bufferService.buffer.y;\n\n  // The alt buffer should try to navigate between rows\n  if (!bufferService.buffer.hasScrollback) {\n    return resetStartingRow(startX, startY, targetX, targetY, bufferService, applicationCursor) +\n      moveToRequestedRow(startY, targetY, bufferService, applicationCursor) +\n      moveToRequestedCol(startX, startY, targetX, targetY, bufferService, applicationCursor);\n  }\n\n  // Only move horizontally for the normal buffer\n  let direction;\n  if (startY === targetY) {\n    direction = startX > targetX ? Direction.LEFT : Direction.RIGHT;\n    return repeat(Math.abs(startX - targetX), sequence(direction, applicationCursor));\n  }\n  direction = startY > targetY ? Direction.LEFT : Direction.RIGHT;\n  const rowDifference = Math.abs(startY - targetY);\n  const cellsToMove = colsFromRowEnd(startY > targetY ? targetX : startX, bufferService) +\n    (rowDifference - 1) * bufferService.cols + 1 /* wrap around 1 row */ +\n    colsFromRowBeginning(startY > targetY ? startX : targetX, bufferService);\n  return repeat(cellsToMove, sequence(direction, applicationCursor));\n}\n\n/**\n * Find the number of cols from a row beginning to a col.\n */\nfunction colsFromRowBeginning(currX: number, bufferService: IBufferService): number {\n  return currX - 1;\n}\n\n/**\n * Find the number of cols from a col to row end.\n */\nfunction colsFromRowEnd(currX: number, bufferService: IBufferService): number {\n  return bufferService.cols - currX;\n}\n\n/**\n * If the initial position of the cursor is on a row that is wrapped, move the\n * cursor up to the first row that is not wrapped to have accurate vertical\n * positioning.\n */\nfunction resetStartingRow(startX: number, startY: number, targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  if (moveToRequestedRow(startY, targetY, bufferService, applicationCursor).length === 0) {\n    return '';\n  }\n  return repeat(bufferLine(\n    startX, startY, startX,\n    startY - wrappedRowsForRow(bufferService, startY), false, bufferService\n  ).length, sequence(Direction.LEFT, applicationCursor));\n}\n\n/**\n * Using the reset starting and ending row, move to the requested row,\n * ignoring wrapped rows\n */\nfunction moveToRequestedRow(startY: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  const startRow = startY - wrappedRowsForRow(bufferService, startY);\n  const endRow = targetY - wrappedRowsForRow(bufferService, targetY);\n\n  const rowsToMove = Math.abs(startRow - endRow) - wrappedRowsCount(startY, targetY, bufferService);\n\n  return repeat(rowsToMove, sequence(verticalDirection(startY, targetY), applicationCursor));\n}\n\n/**\n * Move to the requested col on the ending row\n */\nfunction moveToRequestedCol(startX: number, startY: number, targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  let startRow;\n  if (moveToRequestedRow(startY, targetY, bufferService, applicationCursor).length > 0) {\n    startRow = targetY - wrappedRowsForRow(bufferService, targetY);\n  } else {\n    startRow = startY;\n  }\n\n  const endRow = targetY;\n  const direction = horizontalDirection(startX, startY, targetX, targetY, bufferService, applicationCursor);\n\n  return repeat(bufferLine(\n    startX, startRow, targetX, endRow,\n    direction === Direction.RIGHT, bufferService\n  ).length, sequence(direction, applicationCursor));\n}\n\n/**\n * Utility functions\n */\n\n/**\n * Calculates the number of wrapped rows between the unwrapped starting and\n * ending rows. These rows need to ignored since the cursor skips over them.\n */\nfunction wrappedRowsCount(startY: number, targetY: number, bufferService: IBufferService): number {\n  let wrappedRows = 0;\n  const startRow = startY - wrappedRowsForRow(bufferService, startY);\n  const endRow = targetY - wrappedRowsForRow(bufferService, targetY);\n\n  for (let i = 0; i < Math.abs(startRow - endRow); i++) {\n    const direction = verticalDirection(startY, targetY) === Direction.UP ? -1 : 1;\n    const line = bufferService.buffer.lines.get(startRow + (direction * i));\n    if (line && line.isWrapped) {\n      wrappedRows++;\n    }\n  }\n\n  return wrappedRows;\n}\n\n/**\n * Calculates the number of wrapped rows that make up a given row.\n * @param currentRow The row to determine how many wrapped rows make it up\n */\nfunction wrappedRowsForRow(bufferService: IBufferService, currentRow: number): number {\n  let rowCount = 0;\n  let line = bufferService.buffer.lines.get(currentRow);\n  let lineWraps = line && line.isWrapped;\n\n  while (lineWraps && currentRow >= 0 && currentRow < bufferService.rows) {\n    rowCount++;\n    line = bufferService.buffer.lines.get(--currentRow);\n    lineWraps = line && line.isWrapped;\n  }\n\n  return rowCount;\n}\n\n/**\n * Direction determiners\n */\n\n/**\n * Determines if the right or left arrow is needed\n */\nfunction horizontalDirection(startX: number, startY: number, targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): Direction {\n  let startRow;\n  if (moveToRequestedRow(targetX, targetY, bufferService, applicationCursor).length > 0) {\n    startRow = targetY - wrappedRowsForRow(bufferService, targetY);\n  } else {\n    startRow = startY;\n  }\n\n  if ((startX < targetX &&\n    startRow <= targetY) || // down/right or same y/right\n    (startX >= targetX &&\n    startRow < targetY)) {  // down/left or same y/left\n    return Direction.RIGHT;\n  }\n  return Direction.LEFT;\n}\n\n/**\n * Determines if the up or down arrow is needed\n */\nfunction verticalDirection(startY: number, targetY: number): Direction {\n  return startY > targetY ? Direction.UP : Direction.DOWN;\n}\n\n/**\n * Constructs the string of chars in the buffer from a starting row and col\n * to an ending row and col\n * @param startCol The starting column position\n * @param startRow The starting row position\n * @param endCol The ending column position\n * @param endRow The ending row position\n * @param forward Direction to move\n */\nfunction bufferLine(\n  startCol: number,\n  startRow: number,\n  endCol: number,\n  endRow: number,\n  forward: boolean,\n  bufferService: IBufferService\n): string {\n  let currentCol = startCol;\n  let currentRow = startRow;\n  let bufferStr = '';\n\n  while (currentCol !== endCol || currentRow !== endRow) {\n    currentCol += forward ? 1 : -1;\n\n    if (forward && currentCol > bufferService.cols - 1) {\n      bufferStr += bufferService.buffer.translateBufferLineToString(\n        currentRow, false, startCol, currentCol\n      );\n      currentCol = 0;\n      startCol = 0;\n      currentRow++;\n    } else if (!forward && currentCol < 0) {\n      bufferStr += bufferService.buffer.translateBufferLineToString(\n        currentRow, false, 0, startCol + 1\n      );\n      currentCol = bufferService.cols - 1;\n      startCol = currentCol;\n      currentRow--;\n    }\n  }\n\n  return bufferStr + bufferService.buffer.translateBufferLineToString(\n    currentRow, false, startCol, currentCol\n  );\n}\n\n/**\n * Constructs the escape sequence for clicking an arrow\n * @param direction The direction to move\n */\nfunction sequence(direction: Direction, applicationCursor: boolean): string {\n  const mod =  applicationCursor ? 'O' : '[';\n  return C0.ESC + mod + direction;\n}\n\n/**\n * Returns a string repeated a given number of times\n * Polyfill from https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/repeat\n * @param count The number of times to repeat the string\n * @param string The string that is to be repeated\n */\nfunction repeat(count: number, str: string): string {\n  count = Math.floor(count);\n  let rpt = '';\n  for (let i = 0; i < count; i++) {\n    rpt += str;\n  }\n  return rpt;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderDimensions, IRenderLayer } from 'browser/renderer/Types';\nimport { ICellData } from 'common/Types';\nimport { DEFAULT_COLOR, WHITESPACE_CELL_CHAR, WHITESPACE_CELL_CODE, Attributes } from 'common/buffer/Constants';\nimport { IGlyphIdentifier } from 'browser/renderer/atlas/Types';\nimport { DIM_OPACITY, INVERTED_DEFAULT_COLOR, TEXT_BASELINE } from 'browser/renderer/atlas/Constants';\nimport { BaseCharAtlas } from 'browser/renderer/atlas/BaseCharAtlas';\nimport { acquireCharAtlas } from 'browser/renderer/atlas/CharAtlasCache';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { IColorSet, IColor } from 'browser/Types';\nimport { CellData } from 'common/buffer/CellData';\nimport { IBufferService, IOptionsService } from 'common/services/Services';\nimport { throwIfFalsy } from 'browser/renderer/RendererUtils';\nimport { channels, color, rgba } from 'browser/Color';\nimport { removeElementFromParent } from 'browser/Dom';\nimport { tryDrawCustomChar } from 'browser/renderer/CustomGlyphs';\n\nexport abstract class BaseRenderLayer implements IRenderLayer {\n  private _canvas: HTMLCanvasElement;\n  protected _ctx!: CanvasRenderingContext2D;\n  private _scaledCharWidth: number = 0;\n  private _scaledCharHeight: number = 0;\n  private _scaledCellWidth: number = 0;\n  private _scaledCellHeight: number = 0;\n  private _scaledCharLeft: number = 0;\n  private _scaledCharTop: number = 0;\n\n  protected _charAtlas: BaseCharAtlas | undefined;\n\n  /**\n   * An object that's reused when drawing glyphs in order to reduce GC.\n   */\n  private _currentGlyphIdentifier: IGlyphIdentifier = {\n    chars: '',\n    code: 0,\n    bg: 0,\n    fg: 0,\n    bold: false,\n    dim: false,\n    italic: false\n  };\n\n  constructor(\n    private _container: HTMLElement,\n    id: string,\n    zIndex: number,\n    private _alpha: boolean,\n    protected _colors: IColorSet,\n    private _rendererId: number,\n    protected readonly _bufferService: IBufferService,\n    protected readonly _optionsService: IOptionsService\n  ) {\n    this._canvas = document.createElement('canvas');\n    this._canvas.classList.add(`xterm-${id}-layer`);\n    this._canvas.style.zIndex = zIndex.toString();\n    this._initCanvas();\n    this._container.appendChild(this._canvas);\n  }\n\n  public dispose(): void {\n    removeElementFromParent(this._canvas);\n    this._charAtlas?.dispose();\n  }\n\n  private _initCanvas(): void {\n    this._ctx = throwIfFalsy(this._canvas.getContext('2d', { alpha: this._alpha }));\n    // Draw the background if this is an opaque layer\n    if (!this._alpha) {\n      this._clearAll();\n    }\n  }\n\n  public onOptionsChanged(): void {}\n  public onBlur(): void {}\n  public onFocus(): void {}\n  public onCursorMove(): void {}\n  public onGridChanged(startRow: number, endRow: number): void {}\n  public onSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean = false): void {}\n\n  public setColors(colorSet: IColorSet): void {\n    this._refreshCharAtlas(colorSet);\n  }\n\n  protected _setTransparency(alpha: boolean): void {\n    // Do nothing when alpha doesn't change\n    if (alpha === this._alpha) {\n      return;\n    }\n\n    // Create new canvas and replace old one\n    const oldCanvas = this._canvas;\n    this._alpha = alpha;\n    // Cloning preserves properties\n    this._canvas = this._canvas.cloneNode() as HTMLCanvasElement;\n    this._initCanvas();\n    this._container.replaceChild(this._canvas, oldCanvas);\n\n    // Regenerate char atlas and force a full redraw\n    this._refreshCharAtlas(this._colors);\n    this.onGridChanged(0, this._bufferService.rows - 1);\n  }\n\n  /**\n   * Refreshes the char atlas, aquiring a new one if necessary.\n   * @param colorSet The color set to use for the char atlas.\n   */\n  private _refreshCharAtlas(colorSet: IColorSet): void {\n    if (this._scaledCharWidth <= 0 && this._scaledCharHeight <= 0) {\n      return;\n    }\n    this._charAtlas = acquireCharAtlas(this._optionsService.options, this._rendererId, colorSet, this._scaledCharWidth, this._scaledCharHeight);\n    this._charAtlas.warmUp();\n  }\n\n  public resize(dim: IRenderDimensions): void {\n    this._scaledCellWidth = dim.scaledCellWidth;\n    this._scaledCellHeight = dim.scaledCellHeight;\n    this._scaledCharWidth = dim.scaledCharWidth;\n    this._scaledCharHeight = dim.scaledCharHeight;\n    this._scaledCharLeft = dim.scaledCharLeft;\n    this._scaledCharTop = dim.scaledCharTop;\n    this._canvas.width = dim.scaledCanvasWidth;\n    this._canvas.height = dim.scaledCanvasHeight;\n    this._canvas.style.width = `${dim.canvasWidth}px`;\n    this._canvas.style.height = `${dim.canvasHeight}px`;\n\n    // Draw the background if this is an opaque layer\n    if (!this._alpha) {\n      this._clearAll();\n    }\n\n    this._refreshCharAtlas(this._colors);\n  }\n\n  public abstract reset(): void;\n\n  public clearTextureAtlas(): void {\n    this._charAtlas?.clear();\n  }\n\n  /**\n   * Fills 1+ cells completely. This uses the existing fillStyle on the context.\n   * @param x The column to start at.\n   * @param y The row to start at\n   * @param width The number of columns to fill.\n   * @param height The number of rows to fill.\n   */\n  protected _fillCells(x: number, y: number, width: number, height: number): void {\n    this._ctx.fillRect(\n      x * this._scaledCellWidth,\n      y * this._scaledCellHeight,\n      width * this._scaledCellWidth,\n      height * this._scaledCellHeight);\n  }\n\n  /**\n     * Fills a 1px line (2px on HDPI) at the middle of the cell. This uses the\n     * existing fillStyle on the context.\n     * @param x The column to fill.\n     * @param y The row to fill.\n     */\n  protected _fillMiddleLineAtCells(x: number, y: number, width: number = 1): void {\n    const cellOffset = Math.ceil(this._scaledCellHeight * 0.5);\n    this._ctx.fillRect(\n      x * this._scaledCellWidth,\n      (y + 1) * this._scaledCellHeight - cellOffset - window.devicePixelRatio,\n      width * this._scaledCellWidth,\n      window.devicePixelRatio);\n  }\n\n  /**\n   * Fills a 1px line (2px on HDPI) at the bottom of the cell. This uses the\n   * existing fillStyle on the context.\n   * @param x The column to fill.\n   * @param y The row to fill.\n   */\n  protected _fillBottomLineAtCells(x: number, y: number, width: number = 1): void {\n    this._ctx.fillRect(\n      x * this._scaledCellWidth,\n      (y + 1) * this._scaledCellHeight - window.devicePixelRatio - 1 /* Ensure it's drawn within the cell */,\n      width * this._scaledCellWidth,\n      window.devicePixelRatio);\n  }\n\n  /**\n   * Fills a 1px line (2px on HDPI) at the left of the cell. This uses the\n   * existing fillStyle on the context.\n   * @param x The column to fill.\n   * @param y The row to fill.\n   */\n  protected _fillLeftLineAtCell(x: number, y: number, width: number): void {\n    this._ctx.fillRect(\n      x * this._scaledCellWidth,\n      y * this._scaledCellHeight,\n      window.devicePixelRatio * width,\n      this._scaledCellHeight);\n  }\n\n  /**\n   * Strokes a 1px rectangle (2px on HDPI) around a cell. This uses the existing\n   * strokeStyle on the context.\n   * @param x The column to fill.\n   * @param y The row to fill.\n   */\n  protected _strokeRectAtCell(x: number, y: number, width: number, height: number): void {\n    this._ctx.lineWidth = window.devicePixelRatio;\n    this._ctx.strokeRect(\n      x * this._scaledCellWidth + window.devicePixelRatio / 2,\n      y * this._scaledCellHeight + (window.devicePixelRatio / 2),\n      width * this._scaledCellWidth - window.devicePixelRatio,\n      (height * this._scaledCellHeight) - window.devicePixelRatio);\n  }\n\n  /**\n   * Clears the entire canvas.\n   */\n  protected _clearAll(): void {\n    if (this._alpha) {\n      this._ctx.clearRect(0, 0, this._canvas.width, this._canvas.height);\n    } else {\n      this._ctx.fillStyle = this._colors.background.css;\n      this._ctx.fillRect(0, 0, this._canvas.width, this._canvas.height);\n    }\n  }\n\n  /**\n   * Clears 1+ cells completely.\n   * @param x The column to start at.\n   * @param y The row to start at.\n   * @param width The number of columns to clear.\n   * @param height The number of rows to clear.\n   */\n  protected _clearCells(x: number, y: number, width: number, height: number): void {\n    if (this._alpha) {\n      this._ctx.clearRect(\n        x * this._scaledCellWidth,\n        y * this._scaledCellHeight,\n        width * this._scaledCellWidth,\n        height * this._scaledCellHeight);\n    } else {\n      this._ctx.fillStyle = this._colors.background.css;\n      this._ctx.fillRect(\n        x * this._scaledCellWidth,\n        y * this._scaledCellHeight,\n        width * this._scaledCellWidth,\n        height * this._scaledCellHeight);\n    }\n  }\n\n  /**\n   * Draws a truecolor character at the cell. The character will be clipped to\n   * ensure that it fits with the cell, including the cell to the right if it's\n   * a wide character. This uses the existing fillStyle on the context.\n   * @param cell The cell data for the character to draw.\n   * @param x The column to draw at.\n   * @param y The row to draw at.\n   * @param color The color of the character.\n   */\n  protected _fillCharTrueColor(cell: CellData, x: number, y: number): void {\n    this._ctx.font = this._getFont(false, false);\n    this._ctx.textBaseline = TEXT_BASELINE;\n    this._clipRow(y);\n\n    // Draw custom characters if applicable\n    let drawSuccess = false;\n    if (this._optionsService.options.customGlyphs !== false) {\n      drawSuccess = tryDrawCustomChar(this._ctx, cell.getChars(), x * this._scaledCellWidth, y * this._scaledCellHeight, this._scaledCellWidth, this._scaledCellHeight);\n    }\n\n    // Draw the character\n    if (!drawSuccess) {\n      this._ctx.fillText(\n        cell.getChars(),\n        x * this._scaledCellWidth + this._scaledCharLeft,\n        y * this._scaledCellHeight + this._scaledCharTop + this._scaledCharHeight);\n    }\n  }\n\n  /**\n   * Draws one or more characters at a cell. If possible this will draw using\n   * the character atlas to reduce draw time.\n   * @param chars The character or characters.\n   * @param code The character code.\n   * @param width The width of the characters.\n   * @param x The column to draw at.\n   * @param y The row to draw at.\n   * @param fg The foreground color, in the format stored within the attributes.\n   * @param bg The background color, in the format stored within the attributes.\n   * This is used to validate whether a cached image can be used.\n   * @param bold Whether the text is bold.\n   */\n  protected _drawChars(cell: ICellData, x: number, y: number): void {\n    const contrastColor = this._getContrastColor(cell);\n\n    // skip cache right away if we draw in RGB\n    // Note: to avoid bad runtime JoinedCellData will be skipped\n    //       in the cache handler itself (atlasDidDraw == false) and\n    //       fall through to uncached later down below\n    if (contrastColor || cell.isFgRGB() || cell.isBgRGB()) {\n      this._drawUncachedChars(cell, x, y, contrastColor);\n      return;\n    }\n\n    let fg;\n    let bg;\n    if (cell.isInverse()) {\n      fg = (cell.isBgDefault()) ? INVERTED_DEFAULT_COLOR : cell.getBgColor();\n      bg = (cell.isFgDefault()) ? INVERTED_DEFAULT_COLOR : cell.getFgColor();\n    } else {\n      bg = (cell.isBgDefault()) ? DEFAULT_COLOR : cell.getBgColor();\n      fg = (cell.isFgDefault()) ? DEFAULT_COLOR : cell.getFgColor();\n    }\n\n    const drawInBrightColor = this._optionsService.options.drawBoldTextInBrightColors && cell.isBold() && fg < 8;\n\n    fg += drawInBrightColor ? 8 : 0;\n    this._currentGlyphIdentifier.chars = cell.getChars() || WHITESPACE_CELL_CHAR;\n    this._currentGlyphIdentifier.code = cell.getCode() || WHITESPACE_CELL_CODE;\n    this._currentGlyphIdentifier.bg = bg;\n    this._currentGlyphIdentifier.fg = fg;\n    this._currentGlyphIdentifier.bold = !!cell.isBold();\n    this._currentGlyphIdentifier.dim = !!cell.isDim();\n    this._currentGlyphIdentifier.italic = !!cell.isItalic();\n    const atlasDidDraw = this._charAtlas && this._charAtlas.draw(\n      this._ctx,\n      this._currentGlyphIdentifier,\n      x * this._scaledCellWidth + this._scaledCharLeft,\n      y * this._scaledCellHeight + this._scaledCharTop\n    );\n\n    if (!atlasDidDraw) {\n      this._drawUncachedChars(cell, x, y);\n    }\n  }\n\n  /**\n   * Draws one or more characters at one or more cells. The character(s) will be\n   * clipped to ensure that they fit with the cell(s), including the cell to the\n   * right if the last character is a wide character.\n   * @param chars The character.\n   * @param width The width of the character.\n   * @param fg The foreground color, in the format stored within the attributes.\n   * @param x The column to draw at.\n   * @param y The row to draw at.\n   */\n  private _drawUncachedChars(cell: ICellData, x: number, y: number, fgOverride?: IColor): void {\n    this._ctx.save();\n    this._ctx.font = this._getFont(!!cell.isBold(), !!cell.isItalic());\n    this._ctx.textBaseline = TEXT_BASELINE;\n\n    if (cell.isInverse()) {\n      if (fgOverride) {\n        this._ctx.fillStyle = fgOverride.css;\n      } else if (cell.isBgDefault()) {\n        this._ctx.fillStyle = color.opaque(this._colors.background).css;\n      } else if (cell.isBgRGB()) {\n        this._ctx.fillStyle = `rgb(${AttributeData.toColorRGB(cell.getBgColor()).join(',')})`;\n      } else {\n        let bg = cell.getBgColor();\n        if (this._optionsService.options.drawBoldTextInBrightColors && cell.isBold() && bg < 8) {\n          bg += 8;\n        }\n        this._ctx.fillStyle = this._colors.ansi[bg].css;\n      }\n    } else {\n      if (fgOverride) {\n        this._ctx.fillStyle = fgOverride.css;\n      } else if (cell.isFgDefault()) {\n        this._ctx.fillStyle = this._colors.foreground.css;\n      } else if (cell.isFgRGB()) {\n        this._ctx.fillStyle = `rgb(${AttributeData.toColorRGB(cell.getFgColor()).join(',')})`;\n      } else {\n        let fg = cell.getFgColor();\n        if (this._optionsService.options.drawBoldTextInBrightColors && cell.isBold() && fg < 8) {\n          fg += 8;\n        }\n        this._ctx.fillStyle = this._colors.ansi[fg].css;\n      }\n    }\n\n    this._clipRow(y);\n\n    // Apply alpha to dim the character\n    if (cell.isDim()) {\n      this._ctx.globalAlpha = DIM_OPACITY;\n    }\n\n    // Draw custom characters if applicable\n    let drawSuccess = false;\n    if (this._optionsService.options.customGlyphs !== false) {\n      drawSuccess = tryDrawCustomChar(this._ctx, cell.getChars(), x * this._scaledCellWidth, y * this._scaledCellHeight, this._scaledCellWidth, this._scaledCellHeight);\n    }\n\n    // Draw the character\n    if (!drawSuccess) {\n      this._ctx.fillText(\n        cell.getChars(),\n        x * this._scaledCellWidth + this._scaledCharLeft,\n        y * this._scaledCellHeight + this._scaledCharTop + this._scaledCharHeight);\n    }\n\n    this._ctx.restore();\n  }\n\n\n  /**\n   * Clips a row to ensure no pixels will be drawn outside the cells in the row.\n   * @param y The row to clip.\n   */\n  private _clipRow(y: number): void {\n    this._ctx.beginPath();\n    this._ctx.rect(\n      0,\n      y * this._scaledCellHeight,\n      this._bufferService.cols * this._scaledCellWidth,\n      this._scaledCellHeight);\n    this._ctx.clip();\n  }\n\n  /**\n   * Gets the current font.\n   * @param isBold If we should use the bold fontWeight.\n   */\n  protected _getFont(isBold: boolean, isItalic: boolean): string {\n    const fontWeight = isBold ? this._optionsService.options.fontWeightBold : this._optionsService.options.fontWeight;\n    const fontStyle = isItalic ? 'italic' : '';\n\n    return `${fontStyle} ${fontWeight} ${this._optionsService.options.fontSize * window.devicePixelRatio}px ${this._optionsService.options.fontFamily}`;\n  }\n\n  private _getContrastColor(cell: CellData): IColor | undefined {\n    if (this._optionsService.options.minimumContrastRatio === 1) {\n      return undefined;\n    }\n\n    // Try get from cache first\n    const adjustedColor = this._colors.contrastCache.getColor(cell.bg, cell.fg);\n    if (adjustedColor !== undefined) {\n      return adjustedColor || undefined;\n    }\n\n    let fgColor = cell.getFgColor();\n    let fgColorMode = cell.getFgColorMode();\n    let bgColor = cell.getBgColor();\n    let bgColorMode = cell.getBgColorMode();\n    const isInverse = !!cell.isInverse();\n    const isBold = !!cell.isInverse();\n    if (isInverse) {\n      const temp = fgColor;\n      fgColor = bgColor;\n      bgColor = temp;\n      const temp2 = fgColorMode;\n      fgColorMode = bgColorMode;\n      bgColorMode = temp2;\n    }\n\n    const bgRgba = this._resolveBackgroundRgba(bgColorMode, bgColor, isInverse);\n    const fgRgba = this._resolveForegroundRgba(fgColorMode, fgColor, isInverse, isBold);\n    const result = rgba.ensureContrastRatio(bgRgba, fgRgba, this._optionsService.options.minimumContrastRatio);\n\n    if (!result) {\n      this._colors.contrastCache.setColor(cell.bg, cell.fg, null);\n      return undefined;\n    }\n\n    const color: IColor = {\n      css: channels.toCss(\n        (result >> 24) & 0xFF,\n        (result >> 16) & 0xFF,\n        (result >> 8) & 0xFF\n      ),\n      rgba: result\n    };\n    this._colors.contrastCache.setColor(cell.bg, cell.fg, color);\n\n    return color;\n  }\n\n  private _resolveBackgroundRgba(bgColorMode: number, bgColor: number, inverse: boolean): number {\n    switch (bgColorMode) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:\n        return this._colors.ansi[bgColor].rgba;\n      case Attributes.CM_RGB:\n        return bgColor << 8;\n      case Attributes.CM_DEFAULT:\n      default:\n        if (inverse) {\n          return this._colors.foreground.rgba;\n        }\n        return this._colors.background.rgba;\n    }\n  }\n\n  private _resolveForegroundRgba(fgColorMode: number, fgColor: number, inverse: boolean, bold: boolean): number {\n    switch (fgColorMode) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:\n        if (this._optionsService.options.drawBoldTextInBrightColors && bold && fgColor < 8) {\n          fgColor += 8;\n        }\n        return this._colors.ansi[fgColor].rgba;\n      case Attributes.CM_RGB:\n        return fgColor << 8;\n      case Attributes.CM_DEFAULT:\n      default:\n        if (inverse) {\n          return this._colors.background.rgba;\n        }\n        return this._colors.foreground.rgba;\n    }\n  }\n}\n\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderDimensions, IRequestRedrawEvent } from 'browser/renderer/Types';\nimport { BaseRenderLayer } from 'browser/renderer/BaseRenderLayer';\nimport { ICellData } from 'common/Types';\nimport { CellData } from 'common/buffer/CellData';\nimport { IColorSet } from 'browser/Types';\nimport { IBufferService, IOptionsService, ICoreService } from 'common/services/Services';\nimport { IEventEmitter } from 'common/EventEmitter';\nimport { ICoreBrowserService } from 'browser/services/Services';\n\ninterface ICursorState {\n  x: number;\n  y: number;\n  isFocused: boolean;\n  style: string;\n  width: number;\n}\n\n/**\n * The time between cursor blinks.\n */\nconst BLINK_INTERVAL = 600;\n\nexport class CursorRenderLayer extends BaseRenderLayer {\n  private _state: ICursorState;\n  private _cursorRenderers: {[key: string]: (x: number, y: number, cell: ICellData) => void};\n  private _cursorBlinkStateManager: CursorBlinkStateManager | undefined;\n  private _cell: ICellData = new CellData();\n\n  constructor(\n    container: HTMLElement,\n    zIndex: number,\n    colors: IColorSet,\n    rendererId: number,\n    private _onRequestRedraw: IEventEmitter<IRequestRedrawEvent>,\n    @IBufferService bufferService: IBufferService,\n    @IOptionsService optionsService: IOptionsService,\n    @ICoreService private readonly _coreService: ICoreService,\n    @ICoreBrowserService private readonly _coreBrowserService: ICoreBrowserService\n  ) {\n    super(container, 'cursor', zIndex, true, colors, rendererId, bufferService, optionsService);\n    this._state = {\n      x: 0,\n      y: 0,\n      isFocused: false,\n      style: '',\n      width: 0\n    };\n    this._cursorRenderers = {\n      'bar': this._renderBarCursor.bind(this),\n      'block': this._renderBlockCursor.bind(this),\n      'underline': this._renderUnderlineCursor.bind(this)\n    };\n  }\n\n  public dispose(): void {\n    if (this._cursorBlinkStateManager) {\n      this._cursorBlinkStateManager.dispose();\n      this._cursorBlinkStateManager = undefined;\n    }\n    super.dispose();\n  }\n\n  public resize(dim: IRenderDimensions): void {\n    super.resize(dim);\n    // Resizing the canvas discards the contents of the canvas so clear state\n    this._state = {\n      x: 0,\n      y: 0,\n      isFocused: false,\n      style: '',\n      width: 0\n    };\n  }\n\n  public reset(): void {\n    this._clearCursor();\n    this._cursorBlinkStateManager?.restartBlinkAnimation();\n    this.onOptionsChanged();\n  }\n\n  public onBlur(): void {\n    this._cursorBlinkStateManager?.pause();\n    this._onRequestRedraw.fire({ start: this._bufferService.buffer.y, end: this._bufferService.buffer.y });\n  }\n\n  public onFocus(): void {\n    this._cursorBlinkStateManager?.resume();\n    this._onRequestRedraw.fire({ start: this._bufferService.buffer.y, end: this._bufferService.buffer.y });\n  }\n\n  public onOptionsChanged(): void {\n    if (this._optionsService.options.cursorBlink) {\n      if (!this._cursorBlinkStateManager) {\n        this._cursorBlinkStateManager = new CursorBlinkStateManager(this._coreBrowserService.isFocused, () => {\n          this._render(true);\n        });\n      }\n    } else {\n      this._cursorBlinkStateManager?.dispose();\n      this._cursorBlinkStateManager = undefined;\n    }\n    // Request a refresh from the terminal as management of rendering is being\n    // moved back to the terminal\n    this._onRequestRedraw.fire({ start: this._bufferService.buffer.y, end: this._bufferService.buffer.y });\n  }\n\n  public onCursorMove(): void {\n    this._cursorBlinkStateManager?.restartBlinkAnimation();\n  }\n\n  public onGridChanged(startRow: number, endRow: number): void {\n    if (!this._cursorBlinkStateManager || this._cursorBlinkStateManager.isPaused) {\n      this._render(false);\n    } else {\n      this._cursorBlinkStateManager.restartBlinkAnimation();\n    }\n  }\n\n  private _render(triggeredByAnimationFrame: boolean): void {\n    // Don't draw the cursor if it's hidden\n    if (!this._coreService.isCursorInitialized || this._coreService.isCursorHidden) {\n      this._clearCursor();\n      return;\n    }\n\n    const cursorY = this._bufferService.buffer.ybase + this._bufferService.buffer.y;\n    const viewportRelativeCursorY = cursorY - this._bufferService.buffer.ydisp;\n\n    // Don't draw the cursor if it's off-screen\n    if (viewportRelativeCursorY < 0 || viewportRelativeCursorY >= this._bufferService.rows) {\n      this._clearCursor();\n      return;\n    }\n\n    // in case cursor.x == cols adjust visual cursor to cols - 1\n    const cursorX = Math.min(this._bufferService.buffer.x, this._bufferService.cols - 1);\n    this._bufferService.buffer.lines.get(cursorY)!.loadCell(cursorX, this._cell);\n    if (this._cell.content === undefined) {\n      return;\n    }\n\n    if (!this._coreBrowserService.isFocused) {\n      this._clearCursor();\n      this._ctx.save();\n      this._ctx.fillStyle = this._colors.cursor.css;\n      const cursorStyle = this._optionsService.options.cursorStyle;\n      if (cursorStyle && cursorStyle !== 'block') {\n        this._cursorRenderers[cursorStyle](cursorX, viewportRelativeCursorY, this._cell);\n      } else {\n        this._renderBlurCursor(cursorX, viewportRelativeCursorY, this._cell);\n      }\n      this._ctx.restore();\n      this._state.x = cursorX;\n      this._state.y = viewportRelativeCursorY;\n      this._state.isFocused = false;\n      this._state.style = cursorStyle;\n      this._state.width = this._cell.getWidth();\n      return;\n    }\n\n    // Don't draw the cursor if it's blinking\n    if (this._cursorBlinkStateManager && !this._cursorBlinkStateManager.isCursorVisible) {\n      this._clearCursor();\n      return;\n    }\n\n    if (this._state) {\n      // The cursor is already in the correct spot, don't redraw\n      if (this._state.x === cursorX &&\n          this._state.y === viewportRelativeCursorY &&\n          this._state.isFocused === this._coreBrowserService.isFocused &&\n          this._state.style === this._optionsService.options.cursorStyle &&\n          this._state.width === this._cell.getWidth()) {\n        return;\n      }\n      this._clearCursor();\n    }\n\n    this._ctx.save();\n    this._cursorRenderers[this._optionsService.options.cursorStyle || 'block'](cursorX, viewportRelativeCursorY, this._cell);\n    this._ctx.restore();\n\n    this._state.x = cursorX;\n    this._state.y = viewportRelativeCursorY;\n    this._state.isFocused = false;\n    this._state.style = this._optionsService.options.cursorStyle;\n    this._state.width = this._cell.getWidth();\n  }\n\n  private _clearCursor(): void {\n    if (this._state) {\n      // Avoid potential rounding errors when device pixel ratio is less than 1\n      if (window.devicePixelRatio < 1) {\n        this._clearAll();\n      } else {\n        this._clearCells(this._state.x, this._state.y, this._state.width, 1);\n      }\n      this._state = {\n        x: 0,\n        y: 0,\n        isFocused: false,\n        style: '',\n        width: 0\n      };\n    }\n  }\n\n  private _renderBarCursor(x: number, y: number, cell: ICellData): void {\n    this._ctx.save();\n    this._ctx.fillStyle = this._colors.cursor.css;\n    this._fillLeftLineAtCell(x, y, this._optionsService.options.cursorWidth);\n    this._ctx.restore();\n  }\n\n  private _renderBlockCursor(x: number, y: number, cell: ICellData): void {\n    this._ctx.save();\n    this._ctx.fillStyle = this._colors.cursor.css;\n    this._fillCells(x, y, cell.getWidth(), 1);\n    this._ctx.fillStyle = this._colors.cursorAccent.css;\n    this._fillCharTrueColor(cell, x, y);\n    this._ctx.restore();\n  }\n\n  private _renderUnderlineCursor(x: number, y: number, cell: ICellData): void {\n    this._ctx.save();\n    this._ctx.fillStyle = this._colors.cursor.css;\n    this._fillBottomLineAtCells(x, y);\n    this._ctx.restore();\n  }\n\n  private _renderBlurCursor(x: number, y: number, cell: ICellData): void {\n    this._ctx.save();\n    this._ctx.strokeStyle = this._colors.cursor.css;\n    this._strokeRectAtCell(x, y, cell.getWidth(), 1);\n    this._ctx.restore();\n  }\n}\n\nclass CursorBlinkStateManager {\n  public isCursorVisible: boolean;\n\n  private _animationFrame: number | undefined;\n  private _blinkStartTimeout: number | undefined;\n  private _blinkInterval: number | undefined;\n\n  /**\n   * The time at which the animation frame was restarted, this is used on the\n   * next render to restart the timers so they don't need to restart the timers\n   * multiple times over a short period.\n   */\n  private _animationTimeRestarted: number | undefined;\n\n  constructor(\n    isFocused: boolean,\n    private _renderCallback: () => void\n  ) {\n    this.isCursorVisible = true;\n    if (isFocused) {\n      this._restartInterval();\n    }\n  }\n\n  public get isPaused(): boolean { return !(this._blinkStartTimeout || this._blinkInterval); }\n\n  public dispose(): void {\n    if (this._blinkInterval) {\n      window.clearInterval(this._blinkInterval);\n      this._blinkInterval = undefined;\n    }\n    if (this._blinkStartTimeout) {\n      window.clearTimeout(this._blinkStartTimeout);\n      this._blinkStartTimeout = undefined;\n    }\n    if (this._animationFrame) {\n      window.cancelAnimationFrame(this._animationFrame);\n      this._animationFrame = undefined;\n    }\n  }\n\n  public restartBlinkAnimation(): void {\n    if (this.isPaused) {\n      return;\n    }\n    // Save a timestamp so that the restart can be done on the next interval\n    this._animationTimeRestarted = Date.now();\n    // Force a cursor render to ensure it's visible and in the correct position\n    this.isCursorVisible = true;\n    if (!this._animationFrame) {\n      this._animationFrame = window.requestAnimationFrame(() => {\n        this._renderCallback();\n        this._animationFrame = undefined;\n      });\n    }\n  }\n\n  private _restartInterval(timeToStart: number = BLINK_INTERVAL): void {\n    // Clear any existing interval\n    if (this._blinkInterval) {\n      window.clearInterval(this._blinkInterval);\n      this._blinkInterval = undefined;\n    }\n\n    // Setup the initial timeout which will hide the cursor, this is done before\n    // the regular interval is setup in order to support restarting the blink\n    // animation in a lightweight way (without thrashing clearInterval and\n    // setInterval).\n    this._blinkStartTimeout = window.setTimeout(() => {\n      // Check if another animation restart was requested while this was being\n      // started\n      if (this._animationTimeRestarted) {\n        const time = BLINK_INTERVAL - (Date.now() - this._animationTimeRestarted);\n        this._animationTimeRestarted = undefined;\n        if (time > 0) {\n          this._restartInterval(time);\n          return;\n        }\n      }\n\n      // Hide the cursor\n      this.isCursorVisible = false;\n      this._animationFrame = window.requestAnimationFrame(() => {\n        this._renderCallback();\n        this._animationFrame = undefined;\n      });\n\n      // Setup the blink interval\n      this._blinkInterval = window.setInterval(() => {\n        // Adjust the animation time if it was restarted\n        if (this._animationTimeRestarted) {\n          // calc time diff\n          // Make restart interval do a setTimeout initially?\n          const time = BLINK_INTERVAL - (Date.now() - this._animationTimeRestarted);\n          this._animationTimeRestarted = undefined;\n          this._restartInterval(time);\n          return;\n        }\n\n        // Invert visibility and render\n        this.isCursorVisible = !this.isCursorVisible;\n        this._animationFrame = window.requestAnimationFrame(() => {\n          this._renderCallback();\n          this._animationFrame = undefined;\n        });\n      }, BLINK_INTERVAL);\n    }, timeToStart);\n  }\n\n  public pause(): void {\n    this.isCursorVisible = true;\n    if (this._blinkInterval) {\n      window.clearInterval(this._blinkInterval);\n      this._blinkInterval = undefined;\n    }\n    if (this._blinkStartTimeout) {\n      window.clearTimeout(this._blinkStartTimeout);\n      this._blinkStartTimeout = undefined;\n    }\n    if (this._animationFrame) {\n      window.cancelAnimationFrame(this._animationFrame);\n      this._animationFrame = undefined;\n    }\n  }\n\n  public resume(): void {\n    // Clear out any existing timers just in case\n    this.pause();\n\n    this._animationTimeRestarted = undefined;\n    this._restartInterval();\n    this.restartBlinkAnimation();\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { throwIfFalsy } from 'browser/renderer/RendererUtils';\n\ninterface IBlockVector {\n  x: number;\n  y: number;\n  w: number;\n  h: number;\n}\n\nexport const blockElementDefinitions: { [index: string]: IBlockVector[] | undefined } = {\n  // Block elements (0x2580-0x2590)\n  '▀': [{ x: 0, y: 0, w: 8, h: 4 }], // UPPER HALF BLOCK\n  '▁': [{ x: 0, y: 7, w: 8, h: 1 }], // LOWER ONE EIGHTH BLOCK\n  '▂': [{ x: 0, y: 6, w: 8, h: 2 }], // LOWER ONE QUARTER BLOCK\n  '▃': [{ x: 0, y: 5, w: 8, h: 3 }], // LOWER THREE EIGHTHS BLOCK\n  '▄': [{ x: 0, y: 4, w: 8, h: 4 }], // LOWER HALF BLOCK\n  '▅': [{ x: 0, y: 3, w: 8, h: 5 }], // LOWER FIVE EIGHTHS BLOCK\n  '▆': [{ x: 0, y: 2, w: 8, h: 6 }], // LOWER THREE QUARTERS BLOCK\n  '▇': [{ x: 0, y: 1, w: 8, h: 7 }], // LOWER SEVEN EIGHTHS BLOCK\n  '█': [{ x: 0, y: 0, w: 8, h: 8 }], // FULL BLOCK\n  '▉': [{ x: 0, y: 0, w: 7, h: 8 }], // LEFT SEVEN EIGHTHS BLOCK\n  '▊': [{ x: 0, y: 0, w: 6, h: 8 }], // LEFT THREE QUARTERS BLOCK\n  '▋': [{ x: 0, y: 0, w: 5, h: 8 }], // LEFT FIVE EIGHTHS BLOCK\n  '▌': [{ x: 0, y: 0, w: 4, h: 8 }], // LEFT HALF BLOCK\n  '▍': [{ x: 0, y: 0, w: 3, h: 8 }], // LEFT THREE EIGHTHS BLOCK\n  '▎': [{ x: 0, y: 0, w: 2, h: 8 }], // LEFT ONE QUARTER BLOCK\n  '▏': [{ x: 0, y: 0, w: 1, h: 8 }], // LEFT ONE EIGHTH BLOCK\n  '▐': [{ x: 4, y: 0, w: 4, h: 8 }], // RIGHT HALF BLOCK\n\n  // Block elements (0x2594-0x2595)\n  '▔': [{ x: 0, y: 0, w: 9, h: 1 }], // UPPER ONE EIGHTH BLOCK\n  '▕': [{ x: 7, y: 0, w: 1, h: 8 }], // RIGHT ONE EIGHTH BLOCK\n\n  // Terminal graphic characters (0x2596-0x259F)\n  '▖': [{ x: 0, y: 4, w: 4, h: 4 }],                             // QUADRANT LOWER LEFT\n  '▗': [{ x: 4, y: 4, w: 4, h: 4 }],                             // QUADRANT LOWER RIGHT\n  '▘': [{ x: 0, y: 0, w: 4, h: 4 }],                             // QUADRANT UPPER LEFT\n  '▙': [{ x: 0, y: 0, w: 4, h: 8 }, { x: 0, y: 4, w: 8, h: 4 }], // QUADRANT UPPER LEFT AND LOWER LEFT AND LOWER RIGHT\n  '▚': [{ x: 0, y: 0, w: 4, h: 4 }, { x: 4, y: 4, w: 4, h: 4 }], // QUADRANT UPPER LEFT AND LOWER RIGHT\n  '▛': [{ x: 0, y: 0, w: 4, h: 8 }, { x: 0, y: 0, w: 4, h: 8 }], // QUADRANT UPPER LEFT AND UPPER RIGHT AND LOWER LEFT\n  '▜': [{ x: 0, y: 0, w: 8, h: 4 }, { x: 4, y: 0, w: 4, h: 8 }], // QUADRANT UPPER LEFT AND UPPER RIGHT AND LOWER RIGHT\n  '▝': [{ x: 4, y: 0, w: 4, h: 4 }],                             // QUADRANT UPPER RIGHT\n  '▞': [{ x: 4, y: 0, w: 4, h: 4 }, { x: 0, y: 4, w: 4, h: 4 }], // QUADRANT UPPER RIGHT AND LOWER LEFT\n  '▟': [{ x: 4, y: 0, w: 4, h: 8 }, { x: 0, y: 4, w: 8, h: 4 }], // QUADRANT UPPER RIGHT AND LOWER LEFT AND LOWER RIGHT\n\n  // VERTICAL ONE EIGHTH BLOCK-2 through VERTICAL ONE EIGHTH BLOCK-7\n  '\\u{1FB70}': [{ x: 1, y: 0, w: 1, h: 8 }],\n  '\\u{1FB71}': [{ x: 2, y: 0, w: 1, h: 8 }],\n  '\\u{1FB72}': [{ x: 3, y: 0, w: 1, h: 8 }],\n  '\\u{1FB73}': [{ x: 4, y: 0, w: 1, h: 8 }],\n  '\\u{1FB74}': [{ x: 5, y: 0, w: 1, h: 8 }],\n  '\\u{1FB75}': [{ x: 6, y: 0, w: 1, h: 8 }],\n\n  // HORIZONTAL ONE EIGHTH BLOCK-2 through HORIZONTAL ONE EIGHTH BLOCK-7\n  '\\u{1FB76}': [{ x: 0, y: 1, w: 8, h: 1 }],\n  '\\u{1FB77}': [{ x: 0, y: 2, w: 8, h: 1 }],\n  '\\u{1FB78}': [{ x: 0, y: 3, w: 8, h: 1 }],\n  '\\u{1FB79}': [{ x: 0, y: 4, w: 8, h: 1 }],\n  '\\u{1FB7A}': [{ x: 0, y: 5, w: 8, h: 1 }],\n  '\\u{1FB7B}': [{ x: 0, y: 6, w: 8, h: 1 }],\n\n  // LEFT AND LOWER ONE EIGHTH BLOCK\n  '\\u{1FB7C}': [{ x: 0, y: 0, w: 1, h: 8 }, { x: 0, y: 7, w: 8, h: 1 }],\n  // LEFT AND UPPER ONE EIGHTH BLOCK\n  '\\u{1FB7D}': [{ x: 0, y: 0, w: 1, h: 8 }, { x: 0, y: 0, w: 8, h: 1 }],\n  // RIGHT AND UPPER ONE EIGHTH BLOCK\n  '\\u{1FB7E}': [{ x: 7, y: 0, w: 1, h: 8 }, { x: 0, y: 0, w: 8, h: 1 }],\n  // RIGHT AND LOWER ONE EIGHTH BLOCK\n  '\\u{1FB7F}': [{ x: 7, y: 0, w: 1, h: 8 }, { x: 0, y: 7, w: 8, h: 1 }],\n  // UPPER AND LOWER ONE EIGHTH BLOCK\n  '\\u{1FB80}': [{ x: 0, y: 0, w: 8, h: 1 }, { x: 0, y: 7, w: 8, h: 1 }],\n  // HORIZONTAL ONE EIGHTH BLOCK-1358\n  '\\u{1FB81}': [{ x: 0, y: 0, w: 8, h: 1 }, { x: 0, y: 2, w: 8, h: 1 }, { x: 0, y: 4, w: 8, h: 1 }, { x: 0, y: 7, w: 8, h: 1 }],\n\n  // UPPER ONE QUARTER BLOCK\n  '\\u{1FB82}': [{ x: 0, y: 0, w: 8, h: 2 }],\n  // UPPER THREE EIGHTHS BLOCK\n  '\\u{1FB83}': [{ x: 0, y: 0, w: 8, h: 3 }],\n  // UPPER FIVE EIGHTHS BLOCK\n  '\\u{1FB84}': [{ x: 0, y: 0, w: 8, h: 5 }],\n  // UPPER THREE QUARTERS BLOCK\n  '\\u{1FB85}': [{ x: 0, y: 0, w: 8, h: 6 }],\n  // UPPER SEVEN EIGHTHS BLOCK\n  '\\u{1FB86}': [{ x: 0, y: 0, w: 8, h: 7 }],\n\n  // RIGHT ONE QUARTER BLOCK\n  '\\u{1FB87}': [{ x: 6, y: 0, w: 2, h: 8 }],\n  // RIGHT THREE EIGHTHS B0OCK\n  '\\u{1FB88}': [{ x: 5, y: 0, w: 3, h: 8 }],\n  // RIGHT FIVE EIGHTHS BL0CK\n  '\\u{1FB89}': [{ x: 3, y: 0, w: 5, h: 8 }],\n  // RIGHT THREE QUARTERS 0LOCK\n  '\\u{1FB8A}': [{ x: 2, y: 0, w: 6, h: 8 }],\n  // RIGHT SEVEN EIGHTHS B0OCK\n  '\\u{1FB8B}': [{ x: 1, y: 0, w: 7, h: 8 }],\n\n  // CHECKER BOARD FILL\n  '\\u{1FB95}': [\n    { x: 0, y: 0, w: 2, h: 2 }, { x: 4, y: 0, w: 2, h: 2 },\n    { x: 2, y: 2, w: 2, h: 2 }, { x: 6, y: 2, w: 2, h: 2 },\n    { x: 0, y: 4, w: 2, h: 2 }, { x: 4, y: 4, w: 2, h: 2 },\n    { x: 2, y: 6, w: 2, h: 2 }, { x: 6, y: 6, w: 2, h: 2 }\n  ],\n  // INVERSE CHECKER BOARD FILL\n  '\\u{1FB96}': [\n    { x: 2, y: 0, w: 2, h: 2 }, { x: 6, y: 0, w: 2, h: 2 },\n    { x: 0, y: 2, w: 2, h: 2 }, { x: 4, y: 2, w: 2, h: 2 },\n    { x: 2, y: 4, w: 2, h: 2 }, { x: 6, y: 4, w: 2, h: 2 },\n    { x: 0, y: 6, w: 2, h: 2 }, { x: 4, y: 6, w: 2, h: 2 }\n  ],\n  // HEAVY HORIZONTAL FILL (upper middle and lower one quarter block)\n  '\\u{1FB97}': [{ x: 0, y: 2, w: 8, h: 2 }, { x: 0, y: 6, w: 8, h: 2 }]\n};\n\ntype PatternDefinition = number[][];\n\n/**\n * Defines the repeating pattern used by special characters, the pattern is made up of a 2d array of\n * pixel values to be filled (1) or not filled (0).\n */\nconst patternCharacterDefinitions: { [key: string]: PatternDefinition | undefined } = {\n  // Shade characters (0x2591-0x2593)\n  '░': [ // LIGHT SHADE (25%)\n    [1, 0, 0, 0],\n    [0, 0, 0, 0],\n    [0, 0, 1, 0],\n    [0, 0, 0, 0]\n  ],\n  '▒': [ // MEDIUM SHADE (50%)\n    [1, 0],\n    [0, 0],\n    [0, 1],\n    [0, 0]\n  ],\n  '▓': [ // DARK SHADE (75%)\n    [0, 1],\n    [1, 1],\n    [1, 0],\n    [1, 1]\n  ]\n};\n\nconst enum Shapes {\n  /** │ */ TOP_TO_BOTTOM = 'M.5,0 L.5,1',\n  /** ─ */ LEFT_TO_RIGHT = 'M0,.5 L1,.5',\n\n  /** └ */ TOP_TO_RIGHT = 'M.5,0 L.5,.5 L1,.5',\n  /** ┘ */ TOP_TO_LEFT = 'M.5,0 L.5,.5 L0,.5',\n  /** ┐ */ LEFT_TO_BOTTOM = 'M0,.5 L.5,.5 L.5,1',\n  /** ┌ */ RIGHT_TO_BOTTOM = 'M0.5,1 L.5,.5 L1,.5',\n\n  /** ╵ */ MIDDLE_TO_TOP = 'M.5,.5 L.5,0',\n  /** ╴ */ MIDDLE_TO_LEFT = 'M.5,.5 L0,.5',\n  /** ╶ */ MIDDLE_TO_RIGHT = 'M.5,.5 L1,.5',\n  /** ╷ */ MIDDLE_TO_BOTTOM = 'M.5,.5 L.5,1',\n\n  /** ┴ */ T_TOP = 'M0,.5 L1,.5 M.5,.5 L.5,0',\n  /** ┤ */ T_LEFT = 'M.5,0 L.5,1 M.5,.5 L0,.5',\n  /** ├ */ T_RIGHT = 'M.5,0 L.5,1 M.5,.5 L1,.5',\n  /** ┬ */ T_BOTTOM = 'M0,.5 L1,.5 M.5,.5 L.5,1',\n\n  /** ┼ */ CROSS = 'M0,.5 L1,.5 M.5,0 L.5,1',\n\n  /** ╌ */ TWO_DASHES_HORIZONTAL = 'M.1,.5 L.4,.5 M.6,.5 L.9,.5', // .2 empty, .3 filled\n  /** ┄ */ THREE_DASHES_HORIZONTAL = 'M.0667,.5 L.2667,.5 M.4,.5 L.6,.5 M.7333,.5 L.9333,.5', // .1333 empty, .2 filled\n  /** ┉ */ FOUR_DASHES_HORIZONTAL = 'M.05,.5 L.2,.5 M.3,.5 L.45,.5 M.55,.5 L.7,.5 M.8,.5 L.95,.5', // .1 empty, .15 filled\n  /** ╎ */ TWO_DASHES_VERTICAL = 'M.5,.1 L.5,.4 M.5,.6 L.5,.9',\n  /** ┆ */ THREE_DASHES_VERTICAL = 'M.5,.0667 L.5,.2667 M.5,.4 L.5,.6 M.5,.7333 L.5,.9333',\n  /** ┊ */ FOUR_DASHES_VERTICAL = 'M.5,.05 L.5,.2 M.5,.3 L.5,.45 L.5,.55 M.5,.7 L.5,.95',\n}\n\nconst enum Style {\n  NORMAL = 1,\n  BOLD = 3\n}\n\n/**\n * This contains the definitions of all box drawing characters in the format of SVG paths (ie. the\n * svg d attribute).\n */\nexport const boxDrawingDefinitions: { [character: string]: { [fontWeight: number]: string | ((xp: number, yp: number) => string) } | undefined } = {\n  // Uniform normal and bold\n  '─': { [Style.NORMAL]: Shapes.LEFT_TO_RIGHT },\n  '━': { [Style.BOLD]:   Shapes.LEFT_TO_RIGHT },\n  '│': { [Style.NORMAL]: Shapes.TOP_TO_BOTTOM },\n  '┃': { [Style.BOLD]:   Shapes.TOP_TO_BOTTOM },\n  '┌': { [Style.NORMAL]: Shapes.RIGHT_TO_BOTTOM },\n  '┏': { [Style.BOLD]:   Shapes.RIGHT_TO_BOTTOM },\n  '┐': { [Style.NORMAL]: Shapes.LEFT_TO_BOTTOM },\n  '┓': { [Style.BOLD]:   Shapes.LEFT_TO_BOTTOM },\n  '└': { [Style.NORMAL]: Shapes.TOP_TO_RIGHT },\n  '┗': { [Style.BOLD]:   Shapes.TOP_TO_RIGHT },\n  '┘': { [Style.NORMAL]: Shapes.TOP_TO_LEFT },\n  '┛': { [Style.BOLD]:   Shapes.TOP_TO_LEFT },\n  '├': { [Style.NORMAL]: Shapes.T_RIGHT },\n  '┣': { [Style.BOLD]:   Shapes.T_RIGHT },\n  '┤': { [Style.NORMAL]: Shapes.T_LEFT },\n  '┫': { [Style.BOLD]:   Shapes.T_LEFT },\n  '┬': { [Style.NORMAL]: Shapes.T_BOTTOM },\n  '┳': { [Style.BOLD]:   Shapes.T_BOTTOM },\n  '┴': { [Style.NORMAL]: Shapes.T_TOP },\n  '┻': { [Style.BOLD]:   Shapes.T_TOP },\n  '┼': { [Style.NORMAL]: Shapes.CROSS },\n  '╋': { [Style.BOLD]:   Shapes.CROSS },\n  '╴': { [Style.NORMAL]: Shapes.MIDDLE_TO_LEFT },\n  '╸': { [Style.BOLD]:   Shapes.MIDDLE_TO_LEFT },\n  '╵': { [Style.NORMAL]: Shapes.MIDDLE_TO_TOP },\n  '╹': { [Style.BOLD]:   Shapes.MIDDLE_TO_TOP },\n  '╶': { [Style.NORMAL]: Shapes.MIDDLE_TO_RIGHT },\n  '╺': { [Style.BOLD]:   Shapes.MIDDLE_TO_RIGHT },\n  '╷': { [Style.NORMAL]: Shapes.MIDDLE_TO_BOTTOM },\n  '╻': { [Style.BOLD]:   Shapes.MIDDLE_TO_BOTTOM },\n\n  // Double border\n  '═': { [Style.NORMAL]: (xp, yp) => `M0,${.5 - yp} L1,${.5 - yp} M0,${.5 + yp} L1,${.5 + yp}` },\n  '║': { [Style.NORMAL]: (xp, yp) => `M${.5 - xp},0 L${.5 - xp},1 M${.5 + xp},0 L${.5 + xp},1` },\n  '╒': { [Style.NORMAL]: (xp, yp) => `M.5,1 L.5,${.5 - yp} L1,${.5 - yp} M.5,${.5 + yp} L1,${.5 + yp}` },\n  '╓': { [Style.NORMAL]: (xp, yp) => `M${.5 - xp},1 L${.5 - xp},.5 L1,.5 M${.5 + xp},.5 L${.5 + xp},1` },\n  '╔': { [Style.NORMAL]: (xp, yp) => `M1,${.5 - yp} L${.5 - xp},${.5 - yp} L${.5 - xp},1 M1,${.5 + yp} L${.5 + xp},${.5 + yp} L${.5 + xp},1` },\n  '╕': { [Style.NORMAL]: (xp, yp) => `M0,${.5 - yp} L.5,${.5 - yp} L.5,1 M0,${.5 + yp} L.5,${.5 + yp}` },\n  '╖': { [Style.NORMAL]: (xp, yp) => `M${.5 + xp},1 L${.5 + xp},.5 L0,.5 M${.5 - xp},.5 L${.5 - xp},1` },\n  '╗': { [Style.NORMAL]: (xp, yp) => `M0,${.5 + yp} L${.5 - xp},${.5 + yp} L${.5 - xp},1 M0,${.5 - yp} L${.5 + xp},${.5 - yp} L${.5 + xp},1` },\n  '╘': { [Style.NORMAL]: (xp, yp) => `M.5,0 L.5,${.5 + yp} L1,${.5 + yp} M.5,${.5 - yp} L1,${.5 - yp}` },\n  '╙': { [Style.NORMAL]: (xp, yp) => `M1,.5 L${.5 - xp},.5 L${.5 - xp},0 M${.5 + xp},.5 L${.5 + xp},0` },\n  '╚': { [Style.NORMAL]: (xp, yp) => `M1,${.5 - yp} L${.5 + xp},${.5 - yp} L${.5 + xp},0 M1,${.5 + yp} L${.5 - xp},${.5 + yp} L${.5 - xp},0` },\n  '╛': { [Style.NORMAL]: (xp, yp) => `M0,${.5 + yp} L.5,${.5 + yp} L.5,0 M0,${.5 - yp} L.5,${.5 - yp}` },\n  '╜': { [Style.NORMAL]: (xp, yp) => `M0,.5 L${.5 + xp},.5 L${.5 + xp},0 M${.5 - xp},.5 L${.5 - xp},0` },\n  '╝': { [Style.NORMAL]: (xp, yp) => `M0,${.5 - yp} L${.5 - xp},${.5 - yp} L${.5 - xp},0 M0,${.5 + yp} L${.5 + xp},${.5 + yp} L${.5 + xp},0` },\n  '╞': { [Style.NORMAL]: (xp, yp) => `${Shapes.TOP_TO_BOTTOM} M.5,${.5 - yp} L1,${.5 - yp} M.5,${.5 + yp} L1,${.5 + yp}` },\n  '╟': { [Style.NORMAL]: (xp, yp) => `M${.5 - xp},0 L${.5 - xp},1 M${.5 + xp},0 L${.5 + xp},1 M${.5 + xp},.5 L1,.5` },\n  '╠': { [Style.NORMAL]: (xp, yp) => `M${.5 - xp},0 L${.5 - xp},1 M1,${.5 + yp} L${.5 + xp},${.5 + yp} L${.5 + xp},1 M1,${.5 - yp} L${.5 + xp},${.5 - yp} L${.5 + xp},0` },\n  '╡': { [Style.NORMAL]: (xp, yp) => `${Shapes.TOP_TO_BOTTOM} M0,${.5 - yp} L.5,${.5 - yp} M0,${.5 + yp} L.5,${.5 + yp}` },\n  '╢': { [Style.NORMAL]: (xp, yp) => `M0,.5 L${.5 - xp},.5 M${.5 - xp},0 L${.5 - xp},1 M${.5 + xp},0 L${.5 + xp},1` },\n  '╣': { [Style.NORMAL]: (xp, yp) => `M${.5 + xp},0 L${.5 + xp},1 M0,${.5 + yp} L${.5 - xp},${.5 + yp} L${.5 - xp},1 M0,${.5 - yp} L${.5 - xp},${.5 - yp} L${.5 - xp},0` },\n  '╤': { [Style.NORMAL]: (xp, yp) => `M0,${.5 - yp} L1,${.5 - yp} M0,${.5 + yp} L1,${.5 + yp} M.5,${.5 + yp} L.5,1` },\n  '╥': { [Style.NORMAL]: (xp, yp) => `${Shapes.LEFT_TO_RIGHT} M${.5 - xp},.5 L${.5 - xp},1 M${.5 + xp},.5 L${.5 + xp},1` },\n  '╦': { [Style.NORMAL]: (xp, yp) => `M0,${.5 - yp} L1,${.5 - yp} M0,${.5 + yp} L${.5 - xp},${.5 + yp} L${.5 - xp},1 M1,${.5 + yp} L${.5 + xp},${.5 + yp} L${.5 + xp},1` },\n  '╧': { [Style.NORMAL]: (xp, yp) => `M.5,0 L.5,${.5 - yp} M0,${.5 - yp} L1,${.5 - yp} M0,${.5 + yp} L1,${.5 + yp}` },\n  '╨': { [Style.NORMAL]: (xp, yp) => `${Shapes.LEFT_TO_RIGHT} M${.5 - xp},.5 L${.5 - xp},0 M${.5 + xp},.5 L${.5 + xp},0` },\n  '╩': { [Style.NORMAL]: (xp, yp) => `M0,${.5 + yp} L1,${.5 + yp} M0,${.5 - yp} L${.5 - xp},${.5 - yp} L${.5 - xp},0 M1,${.5 - yp} L${.5 + xp},${.5 - yp} L${.5 + xp},0` },\n  '╪': { [Style.NORMAL]: (xp, yp) => `${Shapes.TOP_TO_BOTTOM} M0,${.5 - yp} L1,${.5 - yp} M0,${.5 + yp} L1,${.5 + yp}` },\n  '╫': { [Style.NORMAL]: (xp, yp) => `${Shapes.LEFT_TO_RIGHT} M${.5 - xp},0 L${.5 - xp},1 M${.5 + xp},0 L${.5 + xp},1` },\n  '╬': { [Style.NORMAL]: (xp, yp) => `M0,${.5 + yp} L${.5 - xp},${.5 + yp} L${.5 - xp},1 M1,${.5 + yp} L${.5 + xp},${.5 + yp} L${.5 + xp},1 M0,${.5 - yp} L${.5 - xp},${.5 - yp} L${.5 - xp},0 M1,${.5 - yp} L${.5 + xp},${.5 - yp} L${.5 + xp},0` },\n\n  // Diagonal\n  '╱': { [Style.NORMAL]: 'M1,0 L0,1' },\n  '╲': { [Style.NORMAL]: 'M0,0 L1,1' },\n  '╳': { [Style.NORMAL]: 'M1,0 L0,1 M0,0 L1,1' },\n\n  // Mixed weight\n  '╼': { [Style.NORMAL]: Shapes.MIDDLE_TO_LEFT,                                [Style.BOLD]: Shapes.MIDDLE_TO_RIGHT },\n  '╽': { [Style.NORMAL]: Shapes.MIDDLE_TO_TOP,                                 [Style.BOLD]: Shapes.MIDDLE_TO_BOTTOM },\n  '╾': { [Style.NORMAL]: Shapes.MIDDLE_TO_RIGHT,                               [Style.BOLD]: Shapes.MIDDLE_TO_LEFT },\n  '╿': { [Style.NORMAL]: Shapes.MIDDLE_TO_BOTTOM,                              [Style.BOLD]: Shapes.MIDDLE_TO_TOP },\n  '┍': { [Style.NORMAL]: Shapes.MIDDLE_TO_BOTTOM,                              [Style.BOLD]: Shapes.MIDDLE_TO_RIGHT },\n  '┎': { [Style.NORMAL]: Shapes.MIDDLE_TO_RIGHT,                               [Style.BOLD]: Shapes.MIDDLE_TO_BOTTOM },\n  '┑': { [Style.NORMAL]: Shapes.MIDDLE_TO_BOTTOM,                              [Style.BOLD]: Shapes.MIDDLE_TO_LEFT },\n  '┒': { [Style.NORMAL]: Shapes.MIDDLE_TO_LEFT,                                [Style.BOLD]: Shapes.MIDDLE_TO_BOTTOM },\n  '┕': { [Style.NORMAL]: Shapes.MIDDLE_TO_TOP,                                 [Style.BOLD]: Shapes.MIDDLE_TO_RIGHT },\n  '┖': { [Style.NORMAL]: Shapes.MIDDLE_TO_RIGHT,                               [Style.BOLD]: Shapes.MIDDLE_TO_TOP },\n  '┙': { [Style.NORMAL]: Shapes.MIDDLE_TO_TOP,                                 [Style.BOLD]: Shapes.MIDDLE_TO_LEFT },\n  '┚': { [Style.NORMAL]: Shapes.MIDDLE_TO_LEFT,                                [Style.BOLD]: Shapes.MIDDLE_TO_TOP },\n  '┝': { [Style.NORMAL]: Shapes.TOP_TO_BOTTOM,                                 [Style.BOLD]: Shapes.MIDDLE_TO_RIGHT },\n  '┞': { [Style.NORMAL]: Shapes.RIGHT_TO_BOTTOM,                               [Style.BOLD]: Shapes.MIDDLE_TO_TOP },\n  '┟': { [Style.NORMAL]: Shapes.TOP_TO_RIGHT,                                  [Style.BOLD]: Shapes.MIDDLE_TO_BOTTOM },\n  '┠': { [Style.NORMAL]: Shapes.MIDDLE_TO_RIGHT,                               [Style.BOLD]: Shapes.TOP_TO_BOTTOM },\n  '┡': { [Style.NORMAL]: Shapes.MIDDLE_TO_BOTTOM,                              [Style.BOLD]: Shapes.TOP_TO_RIGHT },\n  '┢': { [Style.NORMAL]: Shapes.MIDDLE_TO_TOP,                                 [Style.BOLD]: Shapes.RIGHT_TO_BOTTOM },\n  '┥': { [Style.NORMAL]: Shapes.TOP_TO_BOTTOM,                                 [Style.BOLD]: Shapes.MIDDLE_TO_LEFT },\n  '┦': { [Style.NORMAL]: Shapes.LEFT_TO_BOTTOM,                                [Style.BOLD]: Shapes.MIDDLE_TO_TOP },\n  '┧': { [Style.NORMAL]: Shapes.TOP_TO_LEFT,                                   [Style.BOLD]: Shapes.MIDDLE_TO_BOTTOM },\n  '┨': { [Style.NORMAL]: Shapes.MIDDLE_TO_LEFT,                                [Style.BOLD]: Shapes.TOP_TO_BOTTOM },\n  '┩': { [Style.NORMAL]: Shapes.MIDDLE_TO_BOTTOM,                              [Style.BOLD]: Shapes.TOP_TO_LEFT },\n  '┪': { [Style.NORMAL]: Shapes.MIDDLE_TO_TOP,                                 [Style.BOLD]: Shapes.LEFT_TO_BOTTOM },\n  '┭': { [Style.NORMAL]: Shapes.RIGHT_TO_BOTTOM,                               [Style.BOLD]: Shapes.MIDDLE_TO_LEFT },\n  '┮': { [Style.NORMAL]: Shapes.LEFT_TO_BOTTOM,                                [Style.BOLD]: Shapes.MIDDLE_TO_RIGHT },\n  '┯': { [Style.NORMAL]: Shapes.MIDDLE_TO_BOTTOM,                              [Style.BOLD]: Shapes.LEFT_TO_RIGHT },\n  '┰': { [Style.NORMAL]: Shapes.LEFT_TO_RIGHT,                                 [Style.BOLD]: Shapes.MIDDLE_TO_BOTTOM },\n  '┱': { [Style.NORMAL]: Shapes.MIDDLE_TO_RIGHT,                               [Style.BOLD]: Shapes.LEFT_TO_BOTTOM },\n  '┲': { [Style.NORMAL]: Shapes.MIDDLE_TO_LEFT,                                [Style.BOLD]: Shapes.RIGHT_TO_BOTTOM },\n  '┵': { [Style.NORMAL]: Shapes.TOP_TO_RIGHT,                                  [Style.BOLD]: Shapes.MIDDLE_TO_LEFT },\n  '┶': { [Style.NORMAL]: Shapes.TOP_TO_LEFT,                                   [Style.BOLD]: Shapes.MIDDLE_TO_RIGHT },\n  '┷': { [Style.NORMAL]: Shapes.MIDDLE_TO_TOP,                                 [Style.BOLD]: Shapes.LEFT_TO_RIGHT },\n  '┸': { [Style.NORMAL]: Shapes.LEFT_TO_RIGHT,                                 [Style.BOLD]: Shapes.MIDDLE_TO_TOP },\n  '┹': { [Style.NORMAL]: Shapes.MIDDLE_TO_RIGHT,                               [Style.BOLD]: Shapes.TOP_TO_LEFT },\n  '┺': { [Style.NORMAL]: Shapes.MIDDLE_TO_LEFT,                                [Style.BOLD]: Shapes.TOP_TO_RIGHT },\n  '┽': { [Style.NORMAL]: `${Shapes.TOP_TO_BOTTOM} ${Shapes.MIDDLE_TO_RIGHT}`,  [Style.BOLD]: Shapes.MIDDLE_TO_LEFT },\n  '┾': { [Style.NORMAL]: `${Shapes.TOP_TO_BOTTOM} ${Shapes.MIDDLE_TO_LEFT}`,   [Style.BOLD]: Shapes.MIDDLE_TO_RIGHT },\n  '┿': { [Style.NORMAL]: Shapes.TOP_TO_BOTTOM,                                 [Style.BOLD]: Shapes.LEFT_TO_RIGHT },\n  '╀': { [Style.NORMAL]: `${Shapes.LEFT_TO_RIGHT} ${Shapes.MIDDLE_TO_BOTTOM}`, [Style.BOLD]: Shapes.MIDDLE_TO_TOP },\n  '╁': { [Style.NORMAL]: `${Shapes.MIDDLE_TO_TOP} ${Shapes.LEFT_TO_RIGHT}`,    [Style.BOLD]: Shapes.MIDDLE_TO_BOTTOM },\n  '╂': { [Style.NORMAL]: Shapes.LEFT_TO_RIGHT,                                 [Style.BOLD]: Shapes.TOP_TO_BOTTOM },\n  '╃': { [Style.NORMAL]: Shapes.RIGHT_TO_BOTTOM,                               [Style.BOLD]: Shapes.TOP_TO_LEFT },\n  '╄': { [Style.NORMAL]: Shapes.LEFT_TO_BOTTOM,                                [Style.BOLD]: Shapes.TOP_TO_RIGHT },\n  '╅': { [Style.NORMAL]: Shapes.TOP_TO_RIGHT,                                  [Style.BOLD]: Shapes.LEFT_TO_BOTTOM },\n  '╆': { [Style.NORMAL]: Shapes.TOP_TO_LEFT,                                   [Style.BOLD]: Shapes.RIGHT_TO_BOTTOM },\n  '╇': { [Style.NORMAL]: Shapes.MIDDLE_TO_BOTTOM,                              [Style.BOLD]: `${Shapes.MIDDLE_TO_TOP} ${Shapes.LEFT_TO_RIGHT}` },\n  '╈': { [Style.NORMAL]: Shapes.MIDDLE_TO_TOP,                                 [Style.BOLD]: `${Shapes.LEFT_TO_RIGHT} ${Shapes.MIDDLE_TO_BOTTOM}` },\n  '╉': { [Style.NORMAL]: Shapes.MIDDLE_TO_RIGHT,                               [Style.BOLD]: `${Shapes.TOP_TO_BOTTOM} ${Shapes.MIDDLE_TO_LEFT}` },\n  '╊': { [Style.NORMAL]: Shapes.MIDDLE_TO_LEFT,                                [Style.BOLD]: `${Shapes.TOP_TO_BOTTOM} ${Shapes.MIDDLE_TO_RIGHT}` },\n\n  // Dashed\n  '╌': { [Style.NORMAL]: Shapes.TWO_DASHES_HORIZONTAL },\n  '╍': { [Style.BOLD]:   Shapes.TWO_DASHES_HORIZONTAL },\n  '┄': { [Style.NORMAL]: Shapes.THREE_DASHES_HORIZONTAL },\n  '┅': { [Style.BOLD]:   Shapes.THREE_DASHES_HORIZONTAL },\n  '┈': { [Style.NORMAL]: Shapes.FOUR_DASHES_HORIZONTAL },\n  '┉': { [Style.BOLD]:   Shapes.FOUR_DASHES_HORIZONTAL },\n  '╎': { [Style.NORMAL]: Shapes.TWO_DASHES_VERTICAL },\n  '╏': { [Style.BOLD]:   Shapes.TWO_DASHES_VERTICAL },\n  '┆': { [Style.NORMAL]: Shapes.THREE_DASHES_VERTICAL  },\n  '┇': { [Style.BOLD]:   Shapes.THREE_DASHES_VERTICAL },\n  '┊': { [Style.NORMAL]: Shapes.FOUR_DASHES_VERTICAL },\n  '┋': { [Style.BOLD]:   Shapes.FOUR_DASHES_VERTICAL },\n\n  // Curved\n  '╭': { [Style.NORMAL]: 'C.5,1,.5,.5,1,.5' },\n  '╮': { [Style.NORMAL]: 'C.5,1,.5,.5,0,.5' },\n  '╯': { [Style.NORMAL]: 'C.5,0,.5,.5,0,.5' },\n  '╰': { [Style.NORMAL]: 'C.5,0,.5,.5,1,.5' }\n};\n\n/**\n * Try drawing a custom block element or box drawing character, returning whether it was\n * successfully drawn.\n */\nexport function tryDrawCustomChar(\n  ctx: CanvasRenderingContext2D,\n  c: string,\n  xOffset: number,\n  yOffset: number,\n  scaledCellWidth: number,\n  scaledCellHeight: number\n): boolean {\n  const blockElementDefinition = blockElementDefinitions[c];\n  if (blockElementDefinition) {\n    drawBlockElementChar(ctx, blockElementDefinition, xOffset, yOffset, scaledCellWidth, scaledCellHeight);\n    return true;\n  }\n\n  const patternDefinition = patternCharacterDefinitions[c];\n  if (patternDefinition) {\n    drawPatternChar(ctx, patternDefinition, xOffset, yOffset, scaledCellWidth, scaledCellHeight);\n    return true;\n  }\n\n  const boxDrawingDefinition = boxDrawingDefinitions[c];\n  if (boxDrawingDefinition) {\n    drawBoxDrawingChar(ctx, boxDrawingDefinition, xOffset, yOffset, scaledCellWidth, scaledCellHeight);\n    return true;\n  }\n\n  return false;\n}\n\nfunction drawBlockElementChar(\n  ctx: CanvasRenderingContext2D,\n  charDefinition: IBlockVector[],\n  xOffset: number,\n  yOffset: number,\n  scaledCellWidth: number,\n  scaledCellHeight: number\n): void {\n  for (let i = 0; i < charDefinition.length; i++) {\n    const box = charDefinition[i];\n    const xEighth = scaledCellWidth / 8;\n    const yEighth = scaledCellHeight / 8;\n    ctx.fillRect(\n      xOffset + box.x * xEighth,\n      yOffset + box.y * yEighth,\n      box.w * xEighth,\n      box.h * yEighth\n    );\n  }\n}\n\nconst cachedPatterns: Map<PatternDefinition, Map</* fillStyle */string, CanvasPattern>> = new Map();\n\nfunction drawPatternChar(\n  ctx: CanvasRenderingContext2D,\n  charDefinition: number[][],\n  xOffset: number,\n  yOffset: number,\n  scaledCellWidth: number,\n  scaledCellHeight: number\n): void {\n  let patternSet = cachedPatterns.get(charDefinition);\n  if (!patternSet) {\n    patternSet = new Map();\n    cachedPatterns.set(charDefinition, patternSet);\n  }\n  const fillStyle = ctx.fillStyle;\n  if (typeof fillStyle !== 'string') {\n    throw new Error(`Unexpected fillStyle type \"${fillStyle}\"`);\n  }\n  let pattern = patternSet.get(fillStyle);\n  if (!pattern) {\n    const width = charDefinition[0].length;\n    const height = charDefinition.length;\n    const tmpCanvas = document.createElement('canvas');\n    tmpCanvas.width = width;\n    tmpCanvas.height = height;\n    const tmpCtx = throwIfFalsy(tmpCanvas.getContext('2d'));\n    const imageData = new ImageData(width, height);\n\n    // Extract rgba from fillStyle\n    let r: number;\n    let g: number;\n    let b: number;\n    let a: number;\n    if (fillStyle.startsWith('#')) {\n      r = parseInt(fillStyle.substr(1, 2), 16);\n      g = parseInt(fillStyle.substr(3, 2), 16);\n      b = parseInt(fillStyle.substr(5, 2), 16);\n      a = fillStyle.length > 7 && parseInt(fillStyle.substr(7, 2), 16) || 1;\n    } else if (fillStyle.startsWith('rgba')) {\n      ([r, g, b, a] = fillStyle.substring(5, fillStyle.length - 1).split(',').map(e => parseFloat(e)));\n    } else {\n      throw new Error(`Unexpected fillStyle color format \"${fillStyle}\" when drawing pattern glyph`);\n    }\n\n    for (let y = 0; y < height; y++) {\n      for (let x = 0; x < width; x++) {\n        imageData.data[(y * width + x) * 4    ] = r;\n        imageData.data[(y * width + x) * 4 + 1] = g;\n        imageData.data[(y * width + x) * 4 + 2] = b;\n        imageData.data[(y * width + x) * 4 + 3] = charDefinition[y][x] * (a * 255);\n      }\n    }\n    tmpCtx.putImageData(imageData, 0, 0);\n    pattern = throwIfFalsy(ctx.createPattern(tmpCanvas, null));\n    patternSet.set(fillStyle, pattern);\n  }\n  ctx.fillStyle = pattern;\n  ctx.fillRect(xOffset, yOffset, scaledCellWidth, scaledCellHeight);\n}\n\n/**\n * Draws the following box drawing characters by mapping a subset of SVG d attribute instructions to\n * canvas draw calls.\n *\n * Box styles:       ┎┰┒┍┯┑╓╥╖╒╤╕ ┏┳┓┌┲┓┌┬┐┏┱┐\n * ┌─┬─┐ ┏━┳━┓ ╔═╦═╗ ┠╂┨┝┿┥╟╫╢╞╪╡ ┡╇┩├╊┫┢╈┪┣╉┤\n * │ │ │ ┃ ┃ ┃ ║ ║ ║ ┖┸┚┕┷┙╙╨╜╘╧╛ └┴┘└┺┛┗┻┛┗┹┘\n * ├─┼─┤ ┣━╋━┫ ╠═╬═╣ ┏┱┐┌┲┓┌┬┐┌┬┐ ┏┳┓┌┮┓┌┬┐┏┭┐\n * │ │ │ ┃ ┃ ┃ ║ ║ ║ ┡╃┤├╄┩├╆┪┢╅┤ ┞╀┦├┾┫┟╁┧┣┽┤\n * └─┴─┘ ┗━┻━┛ ╚═╩═╝ └┴┘└┴┘└┺┛┗┹┘ └┴┘└┶┛┗┻┛┗┵┘\n *\n * Other:\n * ╭─╮ ╲ ╱ ╷╻╎╏┆┇┊┋ ╺╾╴ ╌╌╌ ┄┄┄ ┈┈┈\n * │ │  ╳  ╽╿╎╏┆┇┊┋ ╶╼╸ ╍╍╍ ┅┅┅ ┉┉┉\n * ╰─╯ ╱ ╲ ╹╵╎╏┆┇┊┋\n *\n * All box drawing characters:\n * ─ ━ │ ┃ ┄ ┅ ┆ ┇ ┈ ┉ ┊ ┋ ┌ ┍ ┎ ┏\n * ┐ ┑ ┒ ┓ └ ┕ ┖ ┗ ┘ ┙ ┚ ┛ ├ ┝ ┞ ┟\n * ┠ ┡ ┢ ┣ ┤ ┥ ┦ ┧ ┨ ┩ ┪ ┫ ┬ ┭ ┮ ┯\n * ┰ ┱ ┲ ┳ ┴ ┵ ┶ ┷ ┸ ┹ ┺ ┻ ┼ ┽ ┾ ┿\n * ╀ ╁ ╂ ╃ ╄ ╅ ╆ ╇ ╈ ╉ ╊ ╋ ╌ ╍ ╎ ╏\n * ═ ║ ╒ ╓ ╔ ╕ ╖ ╗ ╘ ╙ ╚ ╛ ╜ ╝ ╞ ╟\n * ╠ ╡ ╢ ╣ ╤ ╥ ╦ ╧ ╨ ╩ ╪ ╫ ╬ ╭ ╮ ╯\n * ╰ ╱ ╲ ╳ ╴ ╵ ╶ ╷ ╸ ╹ ╺ ╻ ╼ ╽ ╾ ╿\n *\n * ---\n *\n * Box drawing alignment tests:                                          █\n *                                                                       ▉\n *   ╔══╦══╗  ┌──┬──┐  ╭──┬──╮  ╭──┬──╮  ┏━━┳━━┓  ┎┒┏┑   ╷  ╻ ┏┯┓ ┌┰┐    ▊ ╱╲╱╲╳╳╳\n *   ║┌─╨─┐║  │╔═╧═╗│  │╒═╪═╕│  │╓─╁─╖│  ┃┌─╂─┐┃  ┗╃╄┙  ╶┼╴╺╋╸┠┼┨ ┝╋┥    ▋ ╲╱╲╱╳╳╳\n *   ║│╲ ╱│║  │║   ║│  ││ │ ││  │║ ┃ ║│  ┃│ ╿ │┃  ┍╅╆┓   ╵  ╹ ┗┷┛ └┸┘    ▌ ╱╲╱╲╳╳╳\n *   ╠╡ ╳ ╞╣  ├╢   ╟┤  ├┼─┼─┼┤  ├╫─╂─╫┤  ┣┿╾┼╼┿┫  ┕┛┖┚     ┌┄┄┐ ╎ ┏┅┅┓ ┋ ▍ ╲╱╲╱╳╳╳\n *   ║│╱ ╲│║  │║   ║│  ││ │ ││  │║ ┃ ║│  ┃│ ╽ │┃  ░░▒▒▓▓██ ┊  ┆ ╎ ╏  ┇ ┋ ▎\n *   ║└─╥─┘║  │╚═╤═╝│  │╘═╪═╛│  │╙─╀─╜│  ┃└─╂─┘┃  ░░▒▒▓▓██ ┊  ┆ ╎ ╏  ┇ ┋ ▏\n *   ╚══╩══╝  └──┴──┘  ╰──┴──╯  ╰──┴──╯  ┗━━┻━━┛           └╌╌┘ ╎ ┗╍╍┛ ┋  ▁▂▃▄▅▆▇█\n *\n * Source: https://www.w3.org/2001/06/utf-8-test/UTF-8-demo.html\n */\nfunction drawBoxDrawingChar(\n  ctx: CanvasRenderingContext2D,\n  charDefinition: { [fontWeight: number]: string | ((xp: number, yp: number) => string) },\n  xOffset: number,\n  yOffset: number,\n  scaledCellWidth: number,\n  scaledCellHeight: number\n): void {\n  ctx.strokeStyle = ctx.fillStyle;\n  for (const [fontWeight, instructions] of Object.entries(charDefinition)) {\n    ctx.beginPath();\n    ctx.lineWidth = window.devicePixelRatio * Number.parseInt(fontWeight);\n    let actualInstructions: string;\n    if (typeof instructions === 'function') {\n      const xp = .15;\n      const yp = .15 / scaledCellHeight * scaledCellWidth;\n      actualInstructions = instructions(xp, yp);\n    } else {\n      actualInstructions = instructions;\n    }\n    for (const instruction of actualInstructions.split(' ')) {\n      const type = instruction[0];\n      const f = svgToCanvasInstructionMap[type];\n      if (!f) {\n        console.error(`Could not find drawing instructions for \"${type}\"`);\n        continue;\n      }\n      const args: string[] = instruction.substring(1).split(',');\n      if (!args[0] || !args[1]) {\n        continue;\n      }\n      f(ctx, translateArgs(args, scaledCellWidth, scaledCellHeight, xOffset, yOffset));\n    }\n    ctx.stroke();\n    ctx.closePath();\n  }\n}\n\nfunction clamp(value: number, max: number, min: number = 0): number {\n  return Math.max(Math.min(value, max), min);\n}\n\nconst svgToCanvasInstructionMap: { [index: string]: any } = {\n  'C': (ctx: CanvasRenderingContext2D, args: number[]) => ctx.bezierCurveTo(args[0], args[1], args[2], args[3], args[4], args[5]),\n  'L': (ctx: CanvasRenderingContext2D, args: number[]) => ctx.lineTo(args[0], args[1]),\n  'M': (ctx: CanvasRenderingContext2D, args: number[]) => ctx.moveTo(args[0], args[1])\n};\n\nfunction translateArgs(args: string[], cellWidth: number, cellHeight: number, xOffset: number, yOffset: number): number[] {\n  const result = args.map(e => parseFloat(e) || parseInt(e));\n\n  if (result.length < 2) {\n    throw new Error('Too few arguments for instruction');\n  }\n\n  for (let x = 0; x < result.length; x += 2) {\n    // Translate from 0-1 to 0-cellWidth\n    result[x] *= cellWidth;\n    // Ensure coordinate doesn't escape cell bounds and round to the nearest 0.5 to ensure a crisp\n    // line at 100% devicePixelRatio\n    if (result[x] !== 0) {\n      result[x] = clamp(Math.round(result[x] + 0.5) - 0.5, cellWidth, 0);\n    }\n    // Apply the cell's offset (ie. x*cellWidth)\n    result[x] += xOffset;\n  }\n\n  for (let y = 1; y < result.length; y += 2) {\n    // Translate from 0-1 to 0-cellHeight\n    result[y] *= cellHeight;\n    // Ensure coordinate doesn't escape cell bounds and round to the nearest 0.5 to ensure a crisp\n    // line at 100% devicePixelRatio\n    if (result[y] !== 0) {\n      result[y] = clamp(Math.round(result[y] + 0.5) - 0.5, cellHeight, 0);\n    }\n    // Apply the cell's offset (ie. x*cellHeight)\n    result[y] += yOffset;\n  }\n\n  return result;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport class GridCache<T> {\n  public cache: (T | undefined)[][];\n\n  public constructor() {\n    this.cache = [];\n  }\n\n  public resize(width: number, height: number): void {\n    for (let x = 0; x < width; x++) {\n      if (this.cache.length <= x) {\n        this.cache.push([]);\n      }\n      for (let y = this.cache[x].length; y < height; y++) {\n        this.cache[x].push(undefined);\n      }\n      this.cache[x].length = height;\n    }\n    this.cache.length = width;\n  }\n\n  public clear(): void {\n    for (let x = 0; x < this.cache.length; x++) {\n      for (let y = 0; y < this.cache[x].length; y++) {\n        this.cache[x][y] = undefined;\n      }\n    }\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderDimensions } from 'browser/renderer/Types';\nimport { BaseRenderLayer } from './BaseRenderLayer';\nimport { INVERTED_DEFAULT_COLOR } from 'browser/renderer/atlas/Constants';\nimport { is256Color } from 'browser/renderer/atlas/CharAtlasUtils';\nimport { IColorSet, ILinkifierEvent, ILinkifier, ILinkifier2 } from 'browser/Types';\nimport { IBufferService, IOptionsService } from 'common/services/Services';\n\nexport class LinkRenderLayer extends BaseRenderLayer {\n  private _state: ILinkifierEvent | undefined;\n\n  constructor(\n    container: HTMLElement,\n    zIndex: number,\n    colors: IColorSet,\n    rendererId: number,\n    linkifier: ILinkifier,\n    linkifier2: ILinkifier2,\n    @IBufferService bufferService: IBufferService,\n    @IOptionsService optionsService: IOptionsService\n  ) {\n    super(container, 'link', zIndex, true, colors, rendererId, bufferService, optionsService);\n    linkifier.onShowLinkUnderline(e => this._onShowLinkUnderline(e));\n    linkifier.onHideLinkUnderline(e => this._onHideLinkUnderline(e));\n\n    linkifier2.onShowLinkUnderline(e => this._onShowLinkUnderline(e));\n    linkifier2.onHideLinkUnderline(e => this._onHideLinkUnderline(e));\n  }\n\n  public resize(dim: IRenderDimensions): void {\n    super.resize(dim);\n    // Resizing the canvas discards the contents of the canvas so clear state\n    this._state = undefined;\n  }\n\n  public reset(): void {\n    this._clearCurrentLink();\n  }\n\n  private _clearCurrentLink(): void {\n    if (this._state) {\n      this._clearCells(this._state.x1, this._state.y1, this._state.cols - this._state.x1, 1);\n      const middleRowCount = this._state.y2 - this._state.y1 - 1;\n      if (middleRowCount > 0) {\n        this._clearCells(0, this._state.y1 + 1, this._state.cols, middleRowCount);\n      }\n      this._clearCells(0, this._state.y2, this._state.x2, 1);\n      this._state = undefined;\n    }\n  }\n\n  private _onShowLinkUnderline(e: ILinkifierEvent): void {\n    if (e.fg === INVERTED_DEFAULT_COLOR) {\n      this._ctx.fillStyle = this._colors.background.css;\n    } else if (e.fg && is256Color(e.fg)) {\n      // 256 color support\n      this._ctx.fillStyle = this._colors.ansi[e.fg].css;\n    } else {\n      this._ctx.fillStyle = this._colors.foreground.css;\n    }\n\n    if (e.y1 === e.y2) {\n      // Single line link\n      this._fillBottomLineAtCells(e.x1, e.y1, e.x2 - e.x1);\n    } else {\n      // Multi-line link\n      this._fillBottomLineAtCells(e.x1, e.y1, e.cols - e.x1);\n      for (let y = e.y1 + 1; y < e.y2; y++) {\n        this._fillBottomLineAtCells(0, y, e.cols);\n      }\n      this._fillBottomLineAtCells(0, e.y2, e.x2);\n    }\n    this._state = e;\n  }\n\n  private _onHideLinkUnderline(e: ILinkifierEvent): void {\n    this._clearCurrentLink();\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { TextRenderLayer } from 'browser/renderer/TextRenderLayer';\nimport { SelectionRenderLayer } from 'browser/renderer/SelectionRenderLayer';\nimport { CursorRenderLayer } from 'browser/renderer/CursorRenderLayer';\nimport { IRenderLayer, IRenderer, IRenderDimensions, IRequestRedrawEvent } from 'browser/renderer/Types';\nimport { LinkRenderLayer } from 'browser/renderer/LinkRenderLayer';\nimport { Disposable } from 'common/Lifecycle';\nimport { IColorSet, ILinkifier, ILinkifier2 } from 'browser/Types';\nimport { ICharSizeService, ICoreBrowserService } from 'browser/services/Services';\nimport { IBufferService, IOptionsService, ICoreService, IInstantiationService } from 'common/services/Services';\nimport { removeTerminalFromCache } from 'browser/renderer/atlas/CharAtlasCache';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\n\nlet nextRendererId = 1;\n\nexport class Renderer extends Disposable implements IRenderer {\n  private _id = nextRendererId++;\n\n  private _renderLayers: IRenderLayer[];\n  private _devicePixelRatio: number;\n\n  public dimensions: IRenderDimensions;\n\n  private _onRequestRedraw = new EventEmitter<IRequestRedrawEvent>();\n  public get onRequestRedraw(): IEvent<IRequestRedrawEvent> { return this._onRequestRedraw.event; }\n\n  constructor(\n    private _colors: IColorSet,\n    private readonly _screenElement: HTMLElement,\n    linkifier: ILinkifier,\n    linkifier2: ILinkifier2,\n    @IInstantiationService instantiationService: IInstantiationService,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService,\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    super();\n    const allowTransparency = this._optionsService.options.allowTransparency;\n    this._renderLayers = [\n      instantiationService.createInstance(TextRenderLayer, this._screenElement, 0, this._colors, allowTransparency, this._id),\n      instantiationService.createInstance(SelectionRenderLayer, this._screenElement, 1, this._colors, this._id),\n      instantiationService.createInstance(LinkRenderLayer, this._screenElement, 2, this._colors, this._id, linkifier, linkifier2),\n      instantiationService.createInstance(CursorRenderLayer, this._screenElement, 3, this._colors, this._id, this._onRequestRedraw)\n    ];\n    this.dimensions = {\n      scaledCharWidth: 0,\n      scaledCharHeight: 0,\n      scaledCellWidth: 0,\n      scaledCellHeight: 0,\n      scaledCharLeft: 0,\n      scaledCharTop: 0,\n      scaledCanvasWidth: 0,\n      scaledCanvasHeight: 0,\n      canvasWidth: 0,\n      canvasHeight: 0,\n      actualCellWidth: 0,\n      actualCellHeight: 0\n    };\n    this._devicePixelRatio = window.devicePixelRatio;\n    this._updateDimensions();\n    this.onOptionsChanged();\n  }\n\n  public dispose(): void {\n    for (const l of this._renderLayers) {\n      l.dispose();\n    }\n    super.dispose();\n    removeTerminalFromCache(this._id);\n  }\n\n  public onDevicePixelRatioChange(): void {\n    // If the device pixel ratio changed, the char atlas needs to be regenerated\n    // and the terminal needs to refreshed\n    if (this._devicePixelRatio !== window.devicePixelRatio) {\n      this._devicePixelRatio = window.devicePixelRatio;\n      this.onResize(this._bufferService.cols, this._bufferService.rows);\n    }\n  }\n\n  public setColors(colors: IColorSet): void {\n    this._colors = colors;\n    // Clear layers and force a full render\n    for (const l of this._renderLayers) {\n      l.setColors(this._colors);\n      l.reset();\n    }\n  }\n\n  public onResize(cols: number, rows: number): void {\n    // Update character and canvas dimensions\n    this._updateDimensions();\n\n    // Resize all render layers\n    for (const l of this._renderLayers) {\n      l.resize(this.dimensions);\n    }\n\n    // Resize the screen\n    this._screenElement.style.width = `${this.dimensions.canvasWidth}px`;\n    this._screenElement.style.height = `${this.dimensions.canvasHeight}px`;\n  }\n\n  public onCharSizeChanged(): void {\n    this.onResize(this._bufferService.cols, this._bufferService.rows);\n  }\n\n  public onBlur(): void {\n    this._runOperation(l => l.onBlur());\n  }\n\n  public onFocus(): void {\n    this._runOperation(l => l.onFocus());\n  }\n\n  public onSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean = false): void {\n    this._runOperation(l => l.onSelectionChanged(start, end, columnSelectMode));\n  }\n\n  public onCursorMove(): void {\n    this._runOperation(l => l.onCursorMove());\n  }\n\n  public onOptionsChanged(): void {\n    this._runOperation(l => l.onOptionsChanged());\n  }\n\n  public clear(): void {\n    this._runOperation(l => l.reset());\n  }\n\n  private _runOperation(operation: (layer: IRenderLayer) => void): void {\n    for (const l of this._renderLayers) {\n      operation(l);\n    }\n  }\n\n  /**\n   * Performs the refresh loop callback, calling refresh only if a refresh is\n   * necessary before queueing up the next one.\n   */\n  public renderRows(start: number, end: number): void {\n    for (const l of this._renderLayers) {\n      l.onGridChanged(start, end);\n    }\n  }\n\n  public clearTextureAtlas(): void {\n    for (const layer of this._renderLayers) {\n      layer.clearTextureAtlas();\n    }\n  }\n\n  /**\n   * Recalculates the character and canvas dimensions.\n   */\n  private _updateDimensions(): void {\n    if (!this._charSizeService.hasValidSize) {\n      return;\n    }\n\n    // Calculate the scaled character width. Width is floored as it must be\n    // drawn to an integer grid in order for the CharAtlas \"stamps\" to not be\n    // blurry. When text is drawn to the grid not using the CharAtlas, it is\n    // clipped to ensure there is no overlap with the next cell.\n    this.dimensions.scaledCharWidth = Math.floor(this._charSizeService.width * window.devicePixelRatio);\n\n    // Calculate the scaled character height. Height is ceiled in case\n    // devicePixelRatio is a floating point number in order to ensure there is\n    // enough space to draw the character to the cell.\n    this.dimensions.scaledCharHeight = Math.ceil(this._charSizeService.height * window.devicePixelRatio);\n\n    // Calculate the scaled cell height, if lineHeight is not 1 then the value\n    // will be floored because since lineHeight can never be lower then 1, there\n    // is a guarentee that the scaled line height will always be larger than\n    // scaled char height.\n    this.dimensions.scaledCellHeight = Math.floor(this.dimensions.scaledCharHeight * this._optionsService.options.lineHeight);\n\n    // Calculate the y coordinate within a cell that text should draw from in\n    // order to draw in the center of a cell.\n    this.dimensions.scaledCharTop = this._optionsService.options.lineHeight === 1 ? 0 : Math.round((this.dimensions.scaledCellHeight - this.dimensions.scaledCharHeight) / 2);\n\n    // Calculate the scaled cell width, taking the letterSpacing into account.\n    this.dimensions.scaledCellWidth = this.dimensions.scaledCharWidth + Math.round(this._optionsService.options.letterSpacing);\n\n    // Calculate the x coordinate with a cell that text should draw from in\n    // order to draw in the center of a cell.\n    this.dimensions.scaledCharLeft = Math.floor(this._optionsService.options.letterSpacing / 2);\n\n    // Recalculate the canvas dimensions; scaled* define the actual number of\n    // pixel in the canvas\n    this.dimensions.scaledCanvasHeight = this._bufferService.rows * this.dimensions.scaledCellHeight;\n    this.dimensions.scaledCanvasWidth = this._bufferService.cols * this.dimensions.scaledCellWidth;\n\n    // The the size of the canvas on the page. It's very important that this\n    // rounds to nearest integer and not ceils as browsers often set\n    // window.devicePixelRatio as something like 1.100000023841858, when it's\n    // actually 1.1. Ceiling causes blurriness as the backing canvas image is 1\n    // pixel too large for the canvas element size.\n    this.dimensions.canvasHeight = Math.round(this.dimensions.scaledCanvasHeight / window.devicePixelRatio);\n    this.dimensions.canvasWidth = Math.round(this.dimensions.scaledCanvasWidth / window.devicePixelRatio);\n\n    // Get the _actual_ dimensions of an individual cell. This needs to be\n    // derived from the canvasWidth/Height calculated above which takes into\n    // account window.devicePixelRatio. ICharSizeService.width/height by itself\n    // is insufficient when the page is not at 100% zoom level as it's measured\n    // in CSS pixels, but the actual char size on the canvas can differ.\n    this.dimensions.actualCellHeight = this.dimensions.canvasHeight / this._bufferService.rows;\n    this.dimensions.actualCellWidth = this.dimensions.canvasWidth / this._bufferService.cols;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport function throwIfFalsy<T>(value: T | undefined | null): T {\n  if (!value) {\n    throw new Error('value must not be falsy');\n  }\n  return value;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderDimensions } from 'browser/renderer/Types';\nimport { BaseRenderLayer } from 'browser/renderer/BaseRenderLayer';\nimport { IColorSet } from 'browser/Types';\nimport { IBufferService, IOptionsService } from 'common/services/Services';\n\ninterface ISelectionState {\n  start?: [number, number];\n  end?: [number, number];\n  columnSelectMode?: boolean;\n  ydisp?: number;\n}\n\nexport class SelectionRenderLayer extends BaseRenderLayer {\n  private _state!: ISelectionState;\n\n  constructor(\n    container: HTMLElement,\n    zIndex: number,\n    colors: IColorSet,\n    rendererId: number,\n    @IBufferService bufferService: IBufferService,\n    @IOptionsService optionsService: IOptionsService\n  ) {\n    super(container, 'selection', zIndex, true, colors, rendererId, bufferService, optionsService);\n    this._clearState();\n  }\n\n  private _clearState(): void {\n    this._state = {\n      start: undefined,\n      end: undefined,\n      columnSelectMode: undefined,\n      ydisp: undefined\n    };\n  }\n\n  public resize(dim: IRenderDimensions): void {\n    super.resize(dim);\n    // Resizing the canvas discards the contents of the canvas so clear state\n    this._clearState();\n  }\n\n  public reset(): void {\n    if (this._state.start && this._state.end) {\n      this._clearState();\n      this._clearAll();\n    }\n  }\n\n  public onSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean): void {\n    // Selection has not changed\n    if (!this._didStateChange(start, end, columnSelectMode, this._bufferService.buffer.ydisp)) {\n      return;\n    }\n\n    // Remove all selections\n    this._clearAll();\n\n    // Selection does not exist\n    if (!start || !end) {\n      this._clearState();\n      return;\n    }\n\n    // Translate from buffer position to viewport position\n    const viewportStartRow = start[1] - this._bufferService.buffer.ydisp;\n    const viewportEndRow = end[1] - this._bufferService.buffer.ydisp;\n    const viewportCappedStartRow = Math.max(viewportStartRow, 0);\n    const viewportCappedEndRow = Math.min(viewportEndRow, this._bufferService.rows - 1);\n\n    // No need to draw the selection\n    if (viewportCappedStartRow >= this._bufferService.rows || viewportCappedEndRow < 0) {\n      this._state.ydisp = this._bufferService.buffer.ydisp;\n      return;\n    }\n\n    this._ctx.fillStyle = this._colors.selectionTransparent.css;\n\n    if (columnSelectMode) {\n      const startCol = start[0];\n      const width = end[0] - startCol;\n      const height = viewportCappedEndRow - viewportCappedStartRow + 1;\n      this._fillCells(startCol, viewportCappedStartRow, width, height);\n    } else {\n      // Draw first row\n      const startCol = viewportStartRow === viewportCappedStartRow ? start[0] : 0;\n      const startRowEndCol = viewportCappedStartRow === viewportEndRow ? end[0] : this._bufferService.cols;\n      this._fillCells(startCol, viewportCappedStartRow, startRowEndCol - startCol, 1);\n\n      // Draw middle rows\n      const middleRowsCount = Math.max(viewportCappedEndRow - viewportCappedStartRow - 1, 0);\n      this._fillCells(0, viewportCappedStartRow + 1, this._bufferService.cols, middleRowsCount);\n\n      // Draw final row\n      if (viewportCappedStartRow !== viewportCappedEndRow) {\n        // Only draw viewportEndRow if it's not the same as viewportStartRow\n        const endCol = viewportEndRow === viewportCappedEndRow ? end[0] : this._bufferService.cols;\n        this._fillCells(0, viewportCappedEndRow, endCol, 1);\n      }\n    }\n\n    // Save state for next render\n    this._state.start = [start[0], start[1]];\n    this._state.end = [end[0], end[1]];\n    this._state.columnSelectMode = columnSelectMode;\n    this._state.ydisp = this._bufferService.buffer.ydisp;\n  }\n\n  private _didStateChange(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean, ydisp: number): boolean {\n    return !this._areCoordinatesEqual(start, this._state.start) ||\n      !this._areCoordinatesEqual(end, this._state.end) ||\n      columnSelectMode !== this._state.columnSelectMode ||\n      ydisp !== this._state.ydisp;\n  }\n\n  private _areCoordinatesEqual(coord1: [number, number] | undefined, coord2: [number, number] | undefined): boolean {\n    if (!coord1 || !coord2) {\n      return false;\n    }\n\n    return coord1[0] === coord2[0] && coord1[1] === coord2[1];\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderDimensions } from 'browser/renderer/Types';\nimport { CharData, ICellData } from 'common/Types';\nimport { GridCache } from 'browser/renderer/GridCache';\nimport { BaseRenderLayer } from 'browser/renderer/BaseRenderLayer';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { NULL_CELL_CODE, Content } from 'common/buffer/Constants';\nimport { IColorSet } from 'browser/Types';\nimport { CellData } from 'common/buffer/CellData';\nimport { IOptionsService, IBufferService } from 'common/services/Services';\nimport { ICharacterJoinerService } from 'browser/services/Services';\nimport { JoinedCellData } from 'browser/services/CharacterJoinerService';\n\n/**\n * This CharData looks like a null character, which will forc a clear and render\n * when the character changes (a regular space ' ' character may not as it's\n * drawn state is a cleared cell).\n */\n// const OVERLAP_OWNED_CHAR_DATA: CharData = [null, '', 0, -1];\n\nexport class TextRenderLayer extends BaseRenderLayer {\n  private _state: GridCache<CharData>;\n  private _characterWidth: number = 0;\n  private _characterFont: string = '';\n  private _characterOverlapCache: { [key: string]: boolean } = {};\n  private _workCell = new CellData();\n\n  constructor(\n    container: HTMLElement,\n    zIndex: number,\n    colors: IColorSet,\n    alpha: boolean,\n    rendererId: number,\n    @IBufferService bufferService: IBufferService,\n    @IOptionsService optionsService: IOptionsService,\n    @ICharacterJoinerService private readonly _characterJoinerService: ICharacterJoinerService\n  ) {\n    super(container, 'text', zIndex, alpha, colors, rendererId, bufferService, optionsService);\n    this._state = new GridCache<CharData>();\n  }\n\n  public resize(dim: IRenderDimensions): void {\n    super.resize(dim);\n\n    // Clear the character width cache if the font or width has changed\n    const terminalFont = this._getFont(false, false);\n    if (this._characterWidth !== dim.scaledCharWidth || this._characterFont !== terminalFont) {\n      this._characterWidth = dim.scaledCharWidth;\n      this._characterFont = terminalFont;\n      this._characterOverlapCache = {};\n    }\n    // Resizing the canvas discards the contents of the canvas so clear state\n    this._state.clear();\n    this._state.resize(this._bufferService.cols, this._bufferService.rows);\n  }\n\n  public reset(): void {\n    this._state.clear();\n    this._clearAll();\n  }\n\n  private _forEachCell(\n    firstRow: number,\n    lastRow: number,\n    callback: (\n      cell: ICellData,\n      x: number,\n      y: number\n    ) => void\n  ): void {\n    for (let y = firstRow; y <= lastRow; y++) {\n      const row = y + this._bufferService.buffer.ydisp;\n      const line = this._bufferService.buffer.lines.get(row);\n      const joinedRanges = this._characterJoinerService.getJoinedCharacters(row);\n      for (let x = 0; x < this._bufferService.cols; x++) {\n        line!.loadCell(x, this._workCell);\n        let cell = this._workCell;\n\n        // If true, indicates that the current character(s) to draw were joined.\n        let isJoined = false;\n        let lastCharX = x;\n\n        // The character to the left is a wide character, drawing is owned by\n        // the char at x-1\n        if (cell.getWidth() === 0) {\n          continue;\n        }\n\n        // Process any joined character ranges as needed. Because of how the\n        // ranges are produced, we know that they are valid for the characters\n        // and attributes of our input.\n        if (joinedRanges.length > 0 && x === joinedRanges[0][0]) {\n          isJoined = true;\n          const range = joinedRanges.shift()!;\n\n          // We already know the exact start and end column of the joined range,\n          // so we get the string and width representing it directly\n          cell = new JoinedCellData(\n            this._workCell,\n            line!.translateToString(true, range[0], range[1]),\n            range[1] - range[0]\n          );\n\n          // Skip over the cells occupied by this range in the loop\n          lastCharX = range[1] - 1;\n        }\n\n        // If the character is an overlapping char and the character to the\n        // right is a space, take ownership of the cell to the right. We skip\n        // this check for joined characters because their rendering likely won't\n        // yield the same result as rendering the last character individually.\n        if (!isJoined && this._isOverlapping(cell)) {\n          // If the character is overlapping, we want to force a re-render on every\n          // frame. This is specifically to work around the case where two\n          // overlaping chars `a` and `b` are adjacent, the cursor is moved to b and a\n          // space is added. Without this, the first half of `b` would never\n          // get removed, and `a` would not re-render because it thinks it's\n          // already in the correct state.\n          // this._state.cache[x][y] = OVERLAP_OWNED_CHAR_DATA;\n          if (lastCharX < line!.length - 1 && line!.getCodePoint(lastCharX + 1) === NULL_CELL_CODE) {\n            // patch width to 2\n            cell.content &= ~Content.WIDTH_MASK;\n            cell.content |= 2 << Content.WIDTH_SHIFT;\n            // this._clearChar(x + 1, y);\n            // The overlapping char's char data will force a clear and render when the\n            // overlapping char is no longer to the left of the character and also when\n            // the space changes to another character.\n            // this._state.cache[x + 1][y] = OVERLAP_OWNED_CHAR_DATA;\n          }\n        }\n\n        callback(\n          cell,\n          x,\n          y\n        );\n\n        x = lastCharX;\n      }\n    }\n  }\n\n  /**\n   * Draws the background for a specified range of columns. Tries to batch adjacent cells of the\n   * same color together to reduce draw calls.\n   */\n  private _drawBackground(firstRow: number, lastRow: number): void {\n    const ctx = this._ctx;\n    const cols = this._bufferService.cols;\n    let startX: number = 0;\n    let startY: number = 0;\n    let prevFillStyle: string | null = null;\n\n    ctx.save();\n\n    this._forEachCell(firstRow, lastRow, (cell, x, y) => {\n      // libvte and xterm both draw the background (but not foreground) of invisible characters,\n      // so we should too.\n      let nextFillStyle = null; // null represents default background color\n\n      if (cell.isInverse()) {\n        if (cell.isFgDefault()) {\n          nextFillStyle = this._colors.foreground.css;\n        } else if (cell.isFgRGB()) {\n          nextFillStyle = `rgb(${AttributeData.toColorRGB(cell.getFgColor()).join(',')})`;\n        } else {\n          nextFillStyle = this._colors.ansi[cell.getFgColor()].css;\n        }\n      } else if (cell.isBgRGB()) {\n        nextFillStyle = `rgb(${AttributeData.toColorRGB(cell.getBgColor()).join(',')})`;\n      } else if (cell.isBgPalette()) {\n        nextFillStyle = this._colors.ansi[cell.getBgColor()].css;\n      }\n\n      if (prevFillStyle === null) {\n        // This is either the first iteration, or the default background was set. Either way, we\n        // don't need to draw anything.\n        startX = x;\n        startY = y;\n      }\n\n      if (y !== startY) {\n        // our row changed, draw the previous row\n        ctx.fillStyle = prevFillStyle || '';\n        this._fillCells(startX, startY, cols - startX, 1);\n        startX = x;\n        startY = y;\n      } else if (prevFillStyle !== nextFillStyle) {\n        // our color changed, draw the previous characters in this row\n        ctx.fillStyle = prevFillStyle || '';\n        this._fillCells(startX, startY, x - startX, 1);\n        startX = x;\n        startY = y;\n      }\n\n      prevFillStyle = nextFillStyle;\n    });\n\n    // flush the last color we encountered\n    if (prevFillStyle !== null) {\n      ctx.fillStyle = prevFillStyle;\n      this._fillCells(startX, startY, cols - startX, 1);\n    }\n\n    ctx.restore();\n  }\n\n  private _drawForeground(firstRow: number, lastRow: number): void {\n    this._forEachCell(firstRow, lastRow, (cell, x, y) => {\n      if (cell.isInvisible()) {\n        return;\n      }\n      this._drawChars(cell, x, y);\n      if (cell.isUnderline() || cell.isStrikethrough()) {\n        this._ctx.save();\n\n        if (cell.isInverse()) {\n          if (cell.isBgDefault()) {\n            this._ctx.fillStyle = this._colors.background.css;\n          } else if (cell.isBgRGB()) {\n            this._ctx.fillStyle = `rgb(${AttributeData.toColorRGB(cell.getBgColor()).join(',')})`;\n          } else {\n            let bg = cell.getBgColor();\n            if (this._optionsService.options.drawBoldTextInBrightColors && cell.isBold() && bg < 8) {\n              bg += 8;\n            }\n            this._ctx.fillStyle = this._colors.ansi[bg].css;\n          }\n        } else {\n          if (cell.isFgDefault()) {\n            this._ctx.fillStyle = this._colors.foreground.css;\n          } else if (cell.isFgRGB()) {\n            this._ctx.fillStyle = `rgb(${AttributeData.toColorRGB(cell.getFgColor()).join(',')})`;\n          } else {\n            let fg = cell.getFgColor();\n            if (this._optionsService.options.drawBoldTextInBrightColors && cell.isBold() && fg < 8) {\n              fg += 8;\n            }\n            this._ctx.fillStyle = this._colors.ansi[fg].css;\n          }\n        }\n\n        if (cell.isStrikethrough()) {\n          this._fillMiddleLineAtCells(x, y, cell.getWidth());\n        }\n        if (cell.isUnderline()) {\n          this._fillBottomLineAtCells(x, y, cell.getWidth());\n        }\n        this._ctx.restore();\n      }\n    });\n  }\n\n  public onGridChanged(firstRow: number, lastRow: number): void {\n    // Resize has not been called yet\n    if (this._state.cache.length === 0) {\n      return;\n    }\n\n    if (this._charAtlas) {\n      this._charAtlas.beginFrame();\n    }\n\n    this._clearCells(0, firstRow, this._bufferService.cols, lastRow - firstRow + 1);\n    this._drawBackground(firstRow, lastRow);\n    this._drawForeground(firstRow, lastRow);\n  }\n\n  public onOptionsChanged(): void {\n    this._setTransparency(this._optionsService.options.allowTransparency);\n  }\n\n  /**\n   * Whether a character is overlapping to the next cell.\n   */\n  private _isOverlapping(cell: ICellData): boolean {\n    // Only single cell characters can be overlapping, rendering issues can\n    // occur without this check\n    if (cell.getWidth() !== 1) {\n      return false;\n    }\n\n    // We assume that any ascii character will not overlap\n    if (cell.getCode() < 256) {\n      return false;\n    }\n\n    const chars = cell.getChars();\n\n    // Deliver from cache if available\n    if (this._characterOverlapCache.hasOwnProperty(chars)) {\n      return this._characterOverlapCache[chars];\n    }\n\n    // Setup the font\n    this._ctx.save();\n    this._ctx.font = this._characterFont;\n\n    // Measure the width of the character, but Math.floor it\n    // because that is what the renderer does when it calculates\n    // the character dimensions we are comparing against\n    const overlaps = Math.floor(this._ctx.measureText(chars).width) > this._characterWidth;\n\n    // Restore the original context\n    this._ctx.restore();\n\n    // Cache and return\n    this._characterOverlapCache[chars] = overlaps;\n    return overlaps;\n  }\n\n  /**\n   * Clear the charcater at the cell specified.\n   * @param x The column of the char.\n   * @param y The row of the char.\n   */\n  // private _clearChar(x: number, y: number): void {\n  //   let colsToClear = 1;\n  //   // Clear the adjacent character if it was wide\n  //   const state = this._state.cache[x][y];\n  //   if (state && state[CHAR_DATA_WIDTH_INDEX] === 2) {\n  //     colsToClear = 2;\n  //   }\n  //   this.clearCells(x, y, colsToClear, 1);\n  // }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IGlyphIdentifier } from 'browser/renderer/atlas/Types';\nimport { IDisposable } from 'common/Types';\n\nexport abstract class BaseCharAtlas implements IDisposable {\n  private _didWarmUp: boolean = false;\n\n  public dispose(): void { }\n\n  /**\n   * Perform any work needed to warm the cache before it can be used. May be called multiple times.\n   * Implement _doWarmUp instead if you only want to get called once.\n   */\n  public warmUp(): void {\n    if (!this._didWarmUp) {\n      this._doWarmUp();\n      this._didWarmUp = true;\n    }\n  }\n\n  /**\n   * Perform any work needed to warm the cache before it can be used. Used by the default\n   * implementation of warmUp(), and will only be called once.\n   */\n  private _doWarmUp(): void { }\n\n  public clear(): void { }\n\n  /**\n   * Called when we start drawing a new frame.\n   *\n   * TODO: We rely on this getting called by TextRenderLayer. This should really be called by\n   * Renderer instead, but we need to make Renderer the source-of-truth for the char atlas, instead\n   * of BaseRenderLayer.\n   */\n  public beginFrame(): void { }\n\n  /**\n   * May be called before warmUp finishes, however it is okay for the implementation to\n   * do nothing and return false in that case.\n   *\n   * @param ctx Where to draw the character onto.\n   * @param glyph Information about what to draw\n   * @param x The position on the context to start drawing at\n   * @param y The position on the context to start drawing at\n   * @returns The success state. True if we drew the character.\n   */\n  public abstract draw(\n    ctx: CanvasRenderingContext2D,\n    glyph: IGlyphIdentifier,\n    x: number,\n    y: number\n  ): boolean;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { generateConfig, configEquals } from 'browser/renderer/atlas/CharAtlasUtils';\nimport { BaseCharAtlas } from 'browser/renderer/atlas/BaseCharAtlas';\nimport { DynamicCharAtlas } from 'browser/renderer/atlas/DynamicCharAtlas';\nimport { ICharAtlasConfig } from 'browser/renderer/atlas/Types';\nimport { IColorSet } from 'browser/Types';\nimport { ITerminalOptions } from 'common/services/Services';\n\ninterface ICharAtlasCacheEntry {\n  atlas: BaseCharAtlas;\n  config: ICharAtlasConfig;\n  // N.B. This implementation potentially holds onto copies of the terminal forever, so\n  // this may cause memory leaks.\n  ownedBy: number[];\n}\n\nconst charAtlasCache: ICharAtlasCacheEntry[] = [];\n\n/**\n * Acquires a char atlas, either generating a new one or returning an existing\n * one that is in use by another terminal.\n */\nexport function acquireCharAtlas(\n  options: ITerminalOptions,\n  rendererId: number,\n  colors: IColorSet,\n  scaledCharWidth: number,\n  scaledCharHeight: number\n): BaseCharAtlas {\n  const newConfig = generateConfig(scaledCharWidth, scaledCharHeight, options, colors);\n\n  // Check to see if the renderer already owns this config\n  for (let i = 0; i < charAtlasCache.length; i++) {\n    const entry = charAtlasCache[i];\n    const ownedByIndex = entry.ownedBy.indexOf(rendererId);\n    if (ownedByIndex >= 0) {\n      if (configEquals(entry.config, newConfig)) {\n        return entry.atlas;\n      }\n      // The configs differ, release the renderer from the entry\n      if (entry.ownedBy.length === 1) {\n        entry.atlas.dispose();\n        charAtlasCache.splice(i, 1);\n      } else {\n        entry.ownedBy.splice(ownedByIndex, 1);\n      }\n      break;\n    }\n  }\n\n  // Try match a char atlas from the cache\n  for (let i = 0; i < charAtlasCache.length; i++) {\n    const entry = charAtlasCache[i];\n    if (configEquals(entry.config, newConfig)) {\n      // Add the renderer to the cache entry and return\n      entry.ownedBy.push(rendererId);\n      return entry.atlas;\n    }\n  }\n\n  const newEntry: ICharAtlasCacheEntry = {\n    atlas: new DynamicCharAtlas(\n      document,\n      newConfig\n    ),\n    config: newConfig,\n    ownedBy: [rendererId]\n  };\n  charAtlasCache.push(newEntry);\n  return newEntry.atlas;\n}\n\n/**\n * Removes a terminal reference from the cache, allowing its memory to be freed.\n */\nexport function removeTerminalFromCache(rendererId: number): void {\n  for (let i = 0; i < charAtlasCache.length; i++) {\n    const index = charAtlasCache[i].ownedBy.indexOf(rendererId);\n    if (index !== -1) {\n      if (charAtlasCache[i].ownedBy.length === 1) {\n        // Remove the cache entry if it's the only renderer\n        charAtlasCache[i].atlas.dispose();\n        charAtlasCache.splice(i, 1);\n      } else {\n        // Remove the reference from the cache entry\n        charAtlasCache[i].ownedBy.splice(index, 1);\n      }\n      break;\n    }\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharAtlasConfig } from 'browser/renderer/atlas/Types';\nimport { DEFAULT_COLOR } from 'common/buffer/Constants';\nimport { IColorSet, IPartialColorSet } from 'browser/Types';\nimport { ITerminalOptions } from 'common/services/Services';\n\nexport function generateConfig(scaledCharWidth: number, scaledCharHeight: number, options: ITerminalOptions, colors: IColorSet): ICharAtlasConfig {\n  // null out some fields that don't matter\n  const clonedColors: IPartialColorSet = {\n    foreground: colors.foreground,\n    background: colors.background,\n    cursor: undefined,\n    cursorAccent: undefined,\n    selection: undefined,\n    ansi: colors.ansi\n  };\n  return {\n    devicePixelRatio: window.devicePixelRatio,\n    scaledCharWidth,\n    scaledCharHeight,\n    fontFamily: options.fontFamily,\n    fontSize: options.fontSize,\n    fontWeight: options.fontWeight,\n    fontWeightBold: options.fontWeightBold,\n    allowTransparency: options.allowTransparency,\n    colors: clonedColors\n  };\n}\n\nexport function configEquals(a: ICharAtlasConfig, b: ICharAtlasConfig): boolean {\n  for (let i = 0; i < a.colors.ansi.length; i++) {\n    if (a.colors.ansi[i].rgba !== b.colors.ansi[i].rgba) {\n      return false;\n    }\n  }\n  return a.devicePixelRatio === b.devicePixelRatio &&\n      a.fontFamily === b.fontFamily &&\n      a.fontSize === b.fontSize &&\n      a.fontWeight === b.fontWeight &&\n      a.fontWeightBold === b.fontWeightBold &&\n      a.allowTransparency === b.allowTransparency &&\n      a.scaledCharWidth === b.scaledCharWidth &&\n      a.scaledCharHeight === b.scaledCharHeight &&\n      a.colors.foreground === b.colors.foreground &&\n      a.colors.background === b.colors.background;\n}\n\nexport function is256Color(colorCode: number): boolean {\n  return colorCode < DEFAULT_COLOR;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { isFirefox } from 'common/Platform';\n\nexport const INVERTED_DEFAULT_COLOR = 257;\nexport const DIM_OPACITY = 0.5;\n// The text baseline is set conditionally by browser. Using 'ideographic' for Firefox would\n// result in truncated text (Issue 3353). Using 'bottom' for Chrome would result in slightly\n// unaligned Powerline fonts (PR 3356#issuecomment-850928179).\nexport const TEXT_BASELINE: CanvasTextBaseline = isFirefox ? 'bottom' : 'ideographic';\n\nexport const CHAR_ATLAS_CELL_SPACING = 1;\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { DIM_OPACITY, INVERTED_DEFAULT_COLOR, TEXT_BASELINE } from 'browser/renderer/atlas/Constants';\nimport { IGlyphIdentifier, ICharAtlasConfig } from 'browser/renderer/atlas/Types';\nimport { BaseCharAtlas } from 'browser/renderer/atlas/BaseCharAtlas';\nimport { DEFAULT_ANSI_COLORS } from 'browser/ColorManager';\nimport { LRUMap } from 'browser/renderer/atlas/LRUMap';\nimport { isFirefox, isSafari } from 'common/Platform';\nimport { IColor } from 'browser/Types';\nimport { throwIfFalsy } from 'browser/renderer/RendererUtils';\nimport { color } from 'browser/Color';\n\n// In practice we're probably never going to exhaust a texture this large. For debugging purposes,\n// however, it can be useful to set this to a really tiny value, to verify that LRU eviction works.\nconst TEXTURE_WIDTH = 1024;\nconst TEXTURE_HEIGHT = 1024;\n\nconst TRANSPARENT_COLOR = {\n  css: 'rgba(0, 0, 0, 0)',\n  rgba: 0\n};\n\n// Drawing to the cache is expensive: If we have to draw more than this number of glyphs to the\n// cache in a single frame, give up on trying to cache anything else, and try to finish the current\n// frame ASAP.\n//\n// This helps to limit the amount of damage a program can do when it would otherwise thrash the\n// cache.\nconst FRAME_CACHE_DRAW_LIMIT = 100;\n\n/**\n * The number of milliseconds to wait before generating the ImageBitmap, this is to debounce/batch\n * the operation as window.createImageBitmap is asynchronous.\n */\nconst GLYPH_BITMAP_COMMIT_DELAY = 100;\n\ninterface IGlyphCacheValue {\n  index: number;\n  isEmpty: boolean;\n  inBitmap: boolean;\n}\n\nexport function getGlyphCacheKey(glyph: IGlyphIdentifier): number {\n  // Note that this only returns a valid key when code < 256\n  // Layout:\n  // 0b00000000000000000000000000000001: italic (1)\n  // 0b00000000000000000000000000000010: dim (1)\n  // 0b00000000000000000000000000000100: bold (1)\n  // 0b00000000000000000000111111111000: fg (9)\n  // 0b00000000000111111111000000000000: bg (9)\n  // 0b00011111111000000000000000000000: code (8)\n  // 0b11100000000000000000000000000000: unused (3)\n  return glyph.code << 21 | glyph.bg << 12 | glyph.fg << 3 | (glyph.bold ? 0 : 4) + (glyph.dim ? 0 : 2) + (glyph.italic ? 0 : 1);\n}\n\nexport class DynamicCharAtlas extends BaseCharAtlas {\n  // An ordered map that we're using to keep track of where each glyph is in the atlas texture.\n  // It's ordered so that we can determine when to remove the old entries.\n  private _cacheMap: LRUMap<IGlyphCacheValue>;\n\n  // The texture that the atlas is drawn to\n  private _cacheCanvas: HTMLCanvasElement;\n  private _cacheCtx: CanvasRenderingContext2D;\n\n  // A temporary context that glyphs are drawn to before being transfered to the atlas.\n  private _tmpCtx: CanvasRenderingContext2D;\n\n  // The number of characters stored in the atlas by width/height\n  private _width: number;\n  private _height: number;\n\n  private _drawToCacheCount: number = 0;\n\n  // An array of glyph keys that are waiting on the bitmap to be generated.\n  private _glyphsWaitingOnBitmap: IGlyphCacheValue[] = [];\n\n  // The timeout that is used to batch bitmap generation so it's not requested for every new glyph.\n  private _bitmapCommitTimeout: number | null = null;\n\n  // The bitmap to draw from, this is much faster on other browsers than others.\n  private _bitmap: ImageBitmap | null = null;\n\n  constructor(document: Document, private _config: ICharAtlasConfig) {\n    super();\n    this._cacheCanvas = document.createElement('canvas');\n    this._cacheCanvas.width = TEXTURE_WIDTH;\n    this._cacheCanvas.height = TEXTURE_HEIGHT;\n    // The canvas needs alpha because we use clearColor to convert the background color to alpha.\n    // It might also contain some characters with transparent backgrounds if allowTransparency is\n    // set.\n    this._cacheCtx = throwIfFalsy(this._cacheCanvas.getContext('2d', { alpha: true }));\n\n    const tmpCanvas = document.createElement('canvas');\n    tmpCanvas.width = this._config.scaledCharWidth;\n    tmpCanvas.height = this._config.scaledCharHeight;\n    this._tmpCtx = throwIfFalsy(tmpCanvas.getContext('2d', { alpha: this._config.allowTransparency }));\n\n    this._width = Math.floor(TEXTURE_WIDTH / this._config.scaledCharWidth);\n    this._height = Math.floor(TEXTURE_HEIGHT / this._config.scaledCharHeight);\n    const capacity = this._width * this._height;\n    this._cacheMap = new LRUMap(capacity);\n    this._cacheMap.prealloc(capacity);\n\n    // This is useful for debugging\n    // document.body.appendChild(this._cacheCanvas);\n  }\n\n  public dispose(): void {\n    if (this._bitmapCommitTimeout !== null) {\n      window.clearTimeout(this._bitmapCommitTimeout);\n      this._bitmapCommitTimeout = null;\n    }\n  }\n\n  public beginFrame(): void {\n    this._drawToCacheCount = 0;\n  }\n\n  public clear(): void {\n    if (this._cacheMap.size > 0) {\n      const capacity = this._width * this._height;\n      this._cacheMap = new LRUMap(capacity);\n      this._cacheMap.prealloc(capacity);\n    }\n    this._cacheCtx.clearRect(0, 0, TEXTURE_WIDTH, TEXTURE_HEIGHT);\n    this._tmpCtx.clearRect(0, 0, this._config.scaledCharWidth, this._config.scaledCharHeight);\n  }\n\n  public draw(\n    ctx: CanvasRenderingContext2D,\n    glyph: IGlyphIdentifier,\n    x: number,\n    y: number\n  ): boolean {\n    // Space is always an empty cell, special case this as it's so common\n    if (glyph.code === 32) {\n      return true;\n    }\n\n    // Exit early for uncachable glyphs\n    if (!this._canCache(glyph)) {\n      return false;\n    }\n\n    const glyphKey = getGlyphCacheKey(glyph);\n    const cacheValue = this._cacheMap.get(glyphKey);\n    if (cacheValue !== null && cacheValue !== undefined) {\n      this._drawFromCache(ctx, cacheValue, x, y);\n      return true;\n    }\n    if (this._drawToCacheCount < FRAME_CACHE_DRAW_LIMIT) {\n      let index;\n      if (this._cacheMap.size < this._cacheMap.capacity) {\n        index = this._cacheMap.size;\n      } else {\n        // we're out of space, so our call to set will delete this item\n        index = this._cacheMap.peek()!.index;\n      }\n      const cacheValue = this._drawToCache(glyph, index);\n      this._cacheMap.set(glyphKey, cacheValue);\n      this._drawFromCache(ctx, cacheValue, x, y);\n      return true;\n    }\n    return false;\n  }\n\n  private _canCache(glyph: IGlyphIdentifier): boolean {\n    // Only cache ascii and extended characters for now, to be safe. In the future, we could do\n    // something more complicated to determine the expected width of a character.\n    //\n    // If we switch the renderer over to webgl at some point, we may be able to use blending modes\n    // to draw overlapping glyphs from the atlas:\n    // https://github.com/servo/webrender/issues/464#issuecomment-255632875\n    // https://webglfundamentals.org/webgl/lessons/webgl-text-texture.html\n    return glyph.code < 256;\n  }\n\n  private _toCoordinateX(index: number): number {\n    return (index % this._width) * this._config.scaledCharWidth;\n  }\n\n  private _toCoordinateY(index: number): number {\n    return Math.floor(index / this._width) * this._config.scaledCharHeight;\n  }\n\n  private _drawFromCache(\n    ctx: CanvasRenderingContext2D,\n    cacheValue: IGlyphCacheValue,\n    x: number,\n    y: number\n  ): void {\n    // We don't actually need to do anything if this is whitespace.\n    if (cacheValue.isEmpty) {\n      return;\n    }\n    const cacheX = this._toCoordinateX(cacheValue.index);\n    const cacheY = this._toCoordinateY(cacheValue.index);\n    ctx.drawImage(\n      cacheValue.inBitmap ? this._bitmap! : this._cacheCanvas,\n      cacheX,\n      cacheY,\n      this._config.scaledCharWidth,\n      this._config.scaledCharHeight,\n      x,\n      y,\n      this._config.scaledCharWidth,\n      this._config.scaledCharHeight\n    );\n  }\n\n  private _getColorFromAnsiIndex(idx: number): IColor {\n    if (idx < this._config.colors.ansi.length) {\n      return this._config.colors.ansi[idx];\n    }\n    return DEFAULT_ANSI_COLORS[idx];\n  }\n\n  private _getBackgroundColor(glyph: IGlyphIdentifier): IColor {\n    if (this._config.allowTransparency) {\n      // The background color might have some transparency, so we need to render it as fully\n      // transparent in the atlas. Otherwise we'd end up drawing the transparent background twice\n      // around the anti-aliased edges of the glyph, and it would look too dark.\n      return TRANSPARENT_COLOR;\n    }\n    if (glyph.bg === INVERTED_DEFAULT_COLOR) {\n      return this._config.colors.foreground;\n    }\n    if (glyph.bg < 256) {\n      return this._getColorFromAnsiIndex(glyph.bg);\n    }\n    return this._config.colors.background;\n  }\n\n  private _getForegroundColor(glyph: IGlyphIdentifier): IColor {\n    if (glyph.fg === INVERTED_DEFAULT_COLOR) {\n      return color.opaque(this._config.colors.background);\n    }\n    if (glyph.fg < 256) {\n      // 256 color support\n      return this._getColorFromAnsiIndex(glyph.fg);\n    }\n    return this._config.colors.foreground;\n  }\n\n  // TODO: We do this (or something similar) in multiple places. We should split this off\n  // into a shared function.\n  private _drawToCache(glyph: IGlyphIdentifier, index: number): IGlyphCacheValue {\n    this._drawToCacheCount++;\n\n    this._tmpCtx.save();\n\n    // draw the background\n    const backgroundColor = this._getBackgroundColor(glyph);\n    // Use a 'copy' composite operation to clear any existing glyph out of _tmpCtxWithAlpha, regardless of\n    // transparency in backgroundColor\n    this._tmpCtx.globalCompositeOperation = 'copy';\n    this._tmpCtx.fillStyle = backgroundColor.css;\n    this._tmpCtx.fillRect(0, 0, this._config.scaledCharWidth, this._config.scaledCharHeight);\n    this._tmpCtx.globalCompositeOperation = 'source-over';\n\n    // draw the foreground/glyph\n    const fontWeight = glyph.bold ? this._config.fontWeightBold : this._config.fontWeight;\n    const fontStyle = glyph.italic ? 'italic' : '';\n    this._tmpCtx.font =\n      `${fontStyle} ${fontWeight} ${this._config.fontSize * this._config.devicePixelRatio}px ${this._config.fontFamily}`;\n    this._tmpCtx.textBaseline = TEXT_BASELINE;\n\n    this._tmpCtx.fillStyle = this._getForegroundColor(glyph).css;\n\n    // Apply alpha to dim the character\n    if (glyph.dim) {\n      this._tmpCtx.globalAlpha = DIM_OPACITY;\n    }\n    // Draw the character\n    this._tmpCtx.fillText(glyph.chars, 0, this._config.scaledCharHeight);\n\n    // clear the background from the character to avoid issues with drawing over the previous\n    // character if it extends past it's bounds\n    let imageData = this._tmpCtx.getImageData(\n      0, 0, this._config.scaledCharWidth, this._config.scaledCharHeight\n    );\n    let isEmpty = false;\n    if (!this._config.allowTransparency) {\n      isEmpty = clearColor(imageData, backgroundColor);\n    }\n\n    // If this charcater is underscore and empty, shift it up until it is visible, try for a maximum\n    // of 5 pixels.\n    if (isEmpty && glyph.chars === '_' && !this._config.allowTransparency) {\n      for (let offset = 1; offset <= 5; offset++) {\n        // Draw the character\n        this._tmpCtx.fillText(glyph.chars, 0, this._config.scaledCharHeight - offset);\n\n        // clear the background from the character to avoid issues with drawing over the previous\n        // character if it extends past it's bounds\n        imageData = this._tmpCtx.getImageData(\n          0, 0, this._config.scaledCharWidth, this._config.scaledCharHeight\n        );\n        isEmpty = clearColor(imageData, backgroundColor);\n        if (!isEmpty) {\n          break;\n        }\n      }\n    }\n\n    this._tmpCtx.restore();\n\n    // copy the data from imageData to _cacheCanvas\n    const x = this._toCoordinateX(index);\n    const y = this._toCoordinateY(index);\n    // putImageData doesn't do any blending, so it will overwrite any existing cache entry for us\n    this._cacheCtx.putImageData(imageData, x, y);\n\n    // Add the glyph and queue it to the bitmap (if the browser supports it)\n    const cacheValue = {\n      index,\n      isEmpty,\n      inBitmap: false\n    };\n    this._addGlyphToBitmap(cacheValue);\n\n    return cacheValue;\n  }\n\n  private _addGlyphToBitmap(cacheValue: IGlyphCacheValue): void {\n    // Support is patchy for createImageBitmap at the moment, pass a canvas back\n    // if support is lacking as drawImage works there too. Firefox is also\n    // included here as ImageBitmap appears both buggy and has horrible\n    // performance (tested on v55).\n    if (!('createImageBitmap' in window) || isFirefox || isSafari) {\n      return;\n    }\n\n    // Add the glyph to the queue\n    this._glyphsWaitingOnBitmap.push(cacheValue);\n\n    // Check if bitmap generation timeout already exists\n    if (this._bitmapCommitTimeout !== null) {\n      return;\n    }\n\n    this._bitmapCommitTimeout = window.setTimeout(() => this._generateBitmap(), GLYPH_BITMAP_COMMIT_DELAY);\n  }\n\n  private _generateBitmap(): void {\n    const glyphsMovingToBitmap = this._glyphsWaitingOnBitmap;\n    this._glyphsWaitingOnBitmap = [];\n    window.createImageBitmap(this._cacheCanvas).then(bitmap => {\n      // Set bitmap\n      this._bitmap = bitmap;\n\n      // Mark all new glyphs as in bitmap, excluding glyphs that came in after\n      // the bitmap was requested\n      for (let i = 0; i < glyphsMovingToBitmap.length; i++) {\n        const value = glyphsMovingToBitmap[i];\n        // It doesn't matter if the value was already evicted, it will be\n        // released from memory after this block if so.\n        value.inBitmap = true;\n      }\n    });\n    this._bitmapCommitTimeout = null;\n  }\n}\n\n// This is used for debugging the renderer, just swap out `new DynamicCharAtlas` with\n// `new NoneCharAtlas`.\nexport class NoneCharAtlas extends BaseCharAtlas {\n  constructor(document: Document, config: ICharAtlasConfig) {\n    super();\n  }\n\n  public draw(\n    ctx: CanvasRenderingContext2D,\n    glyph: IGlyphIdentifier,\n    x: number,\n    y: number\n  ): boolean {\n    return false;\n  }\n}\n\n/**\n * Makes a partiicular rgb color in an ImageData completely transparent.\n * @returns True if the result is \"empty\", meaning all pixels are fully transparent.\n */\nfunction clearColor(imageData: ImageData, color: IColor): boolean {\n  let isEmpty = true;\n  const r = color.rgba >>> 24;\n  const g = color.rgba >>> 16 & 0xFF;\n  const b = color.rgba >>> 8 & 0xFF;\n  for (let offset = 0; offset < imageData.data.length; offset += 4) {\n    if (imageData.data[offset] === r &&\n        imageData.data[offset + 1] === g &&\n        imageData.data[offset + 2] === b) {\n      imageData.data[offset + 3] = 0;\n    } else {\n      isEmpty = false;\n    }\n  }\n  return isEmpty;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\ninterface ILinkedListNode<T> {\n  prev: ILinkedListNode<T> | null;\n  next: ILinkedListNode<T> | null;\n  key: number | null;\n  value: T | null;\n}\n\nexport class LRUMap<T> {\n  private _map: { [key: number]: ILinkedListNode<T> } = {};\n  private _head: ILinkedListNode<T> | null = null;\n  private _tail: ILinkedListNode<T> | null = null;\n  private _nodePool: ILinkedListNode<T>[] = [];\n  public size: number = 0;\n\n  constructor(public capacity: number) { }\n\n  private _unlinkNode(node: ILinkedListNode<T>): void {\n    const prev = node.prev;\n    const next = node.next;\n    if (node === this._head) {\n      this._head = next;\n    }\n    if (node === this._tail) {\n      this._tail = prev;\n    }\n    if (prev !== null) {\n      prev.next = next;\n    }\n    if (next !== null) {\n      next.prev = prev;\n    }\n  }\n\n  private _appendNode(node: ILinkedListNode<T>): void {\n    const tail = this._tail;\n    if (tail !== null) {\n      tail.next = node;\n    }\n    node.prev = tail;\n    node.next = null;\n    this._tail = node;\n    if (this._head === null) {\n      this._head = node;\n    }\n  }\n\n  /**\n   * Preallocate a bunch of linked-list nodes. Allocating these nodes ahead of time means that\n   * they're more likely to live next to each other in memory, which seems to improve performance.\n   *\n   * Each empty object only consumes about 60 bytes of memory, so this is pretty cheap, even for\n   * large maps.\n   */\n  public prealloc(count: number): void {\n    const nodePool = this._nodePool;\n    for (let i = 0; i < count; i++) {\n      nodePool.push({\n        prev: null,\n        next: null,\n        key: null,\n        value: null\n      });\n    }\n  }\n\n  public get(key: number): T | null {\n    // This is unsafe: We're assuming our keyspace doesn't overlap with Object.prototype. However,\n    // it's faster than calling hasOwnProperty, and in our case, it would never overlap.\n    const node = this._map[key];\n    if (node !== undefined) {\n      this._unlinkNode(node);\n      this._appendNode(node);\n      return node.value;\n    }\n    return null;\n  }\n\n  /**\n   * Gets a value from a key without marking it as the most recently used item.\n   */\n  public peekValue(key: number): T | null {\n    const node = this._map[key];\n    if (node !== undefined) {\n      return node.value;\n    }\n    return null;\n  }\n\n  public peek(): T | null {\n    const head = this._head;\n    return head === null ? null : head.value;\n  }\n\n  public set(key: number, value: T): void {\n    // This is unsafe: See note above.\n    let node = this._map[key];\n    if (node !== undefined) {\n      // already exists, we just need to mutate it and move it to the end of the list\n      node = this._map[key];\n      this._unlinkNode(node);\n      node.value = value;\n    } else if (this.size >= this.capacity) {\n      // we're out of space: recycle the head node, move it to the tail\n      node = this._head!;\n      this._unlinkNode(node);\n      delete this._map[node.key!];\n      node.key = key;\n      node.value = value;\n      this._map[key] = node;\n    } else {\n      // make a new element\n      const nodePool = this._nodePool;\n      if (nodePool.length > 0) {\n        // use a preallocated node if we can\n        node = nodePool.pop()!;\n        node.key = key;\n        node.value = value;\n      } else {\n        node = {\n          prev: null,\n          next: null,\n          key,\n          value\n        };\n      }\n      this._map[key] = node;\n      this.size++;\n    }\n    this._appendNode(node);\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderer, IRenderDimensions, IRequestRedrawEvent } from 'browser/renderer/Types';\nimport { BOLD_CLASS, ITALIC_CLASS, CURSOR_CLASS, CURSOR_STYLE_BLOCK_CLASS, CURSOR_BLINK_CLASS, CURSOR_STYLE_BAR_CLASS, CURSOR_STYLE_UNDERLINE_CLASS, DomRendererRowFactory } from 'browser/renderer/dom/DomRendererRowFactory';\nimport { INVERTED_DEFAULT_COLOR } from 'browser/renderer/atlas/Constants';\nimport { Disposable } from 'common/Lifecycle';\nimport { IColorSet, ILinkifierEvent, ILinkifier, ILinkifier2 } from 'browser/Types';\nimport { ICharSizeService } from 'browser/services/Services';\nimport { IOptionsService, IBufferService, IInstantiationService } from 'common/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { color } from 'browser/Color';\nimport { removeElementFromParent } from 'browser/Dom';\n\nconst TERMINAL_CLASS_PREFIX = 'xterm-dom-renderer-owner-';\nconst ROW_CONTAINER_CLASS = 'xterm-rows';\nconst FG_CLASS_PREFIX = 'xterm-fg-';\nconst BG_CLASS_PREFIX = 'xterm-bg-';\nconst FOCUS_CLASS = 'xterm-focus';\nconst SELECTION_CLASS = 'xterm-selection';\n\nlet nextTerminalId = 1;\n\n/**\n * A fallback renderer for when canvas is slow. This is not meant to be\n * particularly fast or feature complete, more just stable and usable for when\n * canvas is not an option.\n */\nexport class DomRenderer extends Disposable implements IRenderer {\n  private _rowFactory: DomRendererRowFactory;\n  private _terminalClass: number = nextTerminalId++;\n\n  private _themeStyleElement!: HTMLStyleElement;\n  private _dimensionsStyleElement!: HTMLStyleElement;\n  private _rowContainer: HTMLElement;\n  private _rowElements: HTMLElement[] = [];\n  private _selectionContainer: HTMLElement;\n\n  public dimensions: IRenderDimensions;\n\n  public get onRequestRedraw(): IEvent<IRequestRedrawEvent> { return new EventEmitter<IRequestRedrawEvent>().event; }\n\n  constructor(\n    private _colors: IColorSet,\n    private readonly _element: HTMLElement,\n    private readonly _screenElement: HTMLElement,\n    private readonly _viewportElement: HTMLElement,\n    private readonly _linkifier: ILinkifier,\n    private readonly _linkifier2: ILinkifier2,\n    @IInstantiationService instantiationService: IInstantiationService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @IBufferService private readonly _bufferService: IBufferService\n  ) {\n    super();\n    this._rowContainer = document.createElement('div');\n    this._rowContainer.classList.add(ROW_CONTAINER_CLASS);\n    this._rowContainer.style.lineHeight = 'normal';\n    this._rowContainer.setAttribute('aria-hidden', 'true');\n    this._refreshRowElements(this._bufferService.cols, this._bufferService.rows);\n    this._selectionContainer = document.createElement('div');\n    this._selectionContainer.classList.add(SELECTION_CLASS);\n    this._selectionContainer.setAttribute('aria-hidden', 'true');\n\n    this.dimensions = {\n      scaledCharWidth: 0,\n      scaledCharHeight: 0,\n      scaledCellWidth: 0,\n      scaledCellHeight: 0,\n      scaledCharLeft: 0,\n      scaledCharTop: 0,\n      scaledCanvasWidth: 0,\n      scaledCanvasHeight: 0,\n      canvasWidth: 0,\n      canvasHeight: 0,\n      actualCellWidth: 0,\n      actualCellHeight: 0\n    };\n    this._updateDimensions();\n    this._injectCss();\n\n    this._rowFactory = instantiationService.createInstance(DomRendererRowFactory, document, this._colors);\n\n    this._element.classList.add(TERMINAL_CLASS_PREFIX + this._terminalClass);\n    this._screenElement.appendChild(this._rowContainer);\n    this._screenElement.appendChild(this._selectionContainer);\n\n    this._linkifier.onShowLinkUnderline(e => this._onLinkHover(e));\n    this._linkifier.onHideLinkUnderline(e => this._onLinkLeave(e));\n\n    this._linkifier2.onShowLinkUnderline(e => this._onLinkHover(e));\n    this._linkifier2.onHideLinkUnderline(e => this._onLinkLeave(e));\n  }\n\n  public dispose(): void {\n    this._element.classList.remove(TERMINAL_CLASS_PREFIX + this._terminalClass);\n\n    // Outside influences such as React unmounts may manipulate the DOM before our disposal.\n    // https://github.com/xtermjs/xterm.js/issues/2960\n    removeElementFromParent(this._rowContainer, this._selectionContainer, this._themeStyleElement, this._dimensionsStyleElement);\n\n    super.dispose();\n  }\n\n  private _updateDimensions(): void {\n    this.dimensions.scaledCharWidth = this._charSizeService.width * window.devicePixelRatio;\n    this.dimensions.scaledCharHeight = Math.ceil(this._charSizeService.height * window.devicePixelRatio);\n    this.dimensions.scaledCellWidth = this.dimensions.scaledCharWidth + Math.round(this._optionsService.options.letterSpacing);\n    this.dimensions.scaledCellHeight = Math.floor(this.dimensions.scaledCharHeight * this._optionsService.options.lineHeight);\n    this.dimensions.scaledCharLeft = 0;\n    this.dimensions.scaledCharTop = 0;\n    this.dimensions.scaledCanvasWidth = this.dimensions.scaledCellWidth * this._bufferService.cols;\n    this.dimensions.scaledCanvasHeight = this.dimensions.scaledCellHeight * this._bufferService.rows;\n    this.dimensions.canvasWidth = Math.round(this.dimensions.scaledCanvasWidth / window.devicePixelRatio);\n    this.dimensions.canvasHeight = Math.round(this.dimensions.scaledCanvasHeight / window.devicePixelRatio);\n    this.dimensions.actualCellWidth = this.dimensions.canvasWidth / this._bufferService.cols;\n    this.dimensions.actualCellHeight = this.dimensions.canvasHeight / this._bufferService.rows;\n\n    for (const element of this._rowElements) {\n      element.style.width = `${this.dimensions.canvasWidth}px`;\n      element.style.height = `${this.dimensions.actualCellHeight}px`;\n      element.style.lineHeight = `${this.dimensions.actualCellHeight}px`;\n      // Make sure rows don't overflow onto following row\n      element.style.overflow = 'hidden';\n    }\n\n    if (!this._dimensionsStyleElement) {\n      this._dimensionsStyleElement = document.createElement('style');\n      this._screenElement.appendChild(this._dimensionsStyleElement);\n    }\n\n    const styles =\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} span {` +\n      ` display: inline-block;` +\n      ` height: 100%;` +\n      ` vertical-align: top;` +\n      ` width: ${this.dimensions.actualCellWidth}px` +\n      `}`;\n\n    this._dimensionsStyleElement.textContent = styles;\n\n    this._selectionContainer.style.height = this._viewportElement.style.height;\n    this._screenElement.style.width = `${this.dimensions.canvasWidth}px`;\n    this._screenElement.style.height = `${this.dimensions.canvasHeight}px`;\n  }\n\n  public setColors(colors: IColorSet): void {\n    this._colors = colors;\n    this._injectCss();\n  }\n\n  private _injectCss(): void {\n    if (!this._themeStyleElement) {\n      this._themeStyleElement = document.createElement('style');\n      this._screenElement.appendChild(this._themeStyleElement);\n    }\n\n    // Base CSS\n    let styles =\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} {` +\n      ` color: ${this._colors.foreground.css};` +\n      ` font-family: ${this._optionsService.options.fontFamily};` +\n      ` font-size: ${this._optionsService.options.fontSize}px;` +\n      `}`;\n    // Text styles\n    styles +=\n      `${this._terminalSelector} span:not(.${BOLD_CLASS}) {` +\n      ` font-weight: ${this._optionsService.options.fontWeight};` +\n      `}` +\n      `${this._terminalSelector} span.${BOLD_CLASS} {` +\n      ` font-weight: ${this._optionsService.options.fontWeightBold};` +\n      `}` +\n      `${this._terminalSelector} span.${ITALIC_CLASS} {` +\n      ` font-style: italic;` +\n      `}`;\n    // Blink animation\n    styles +=\n      `@keyframes blink_box_shadow` + `_` + this._terminalClass + ` {` +\n      ` 50% {` +\n      `  box-shadow: none;` +\n      ` }` +\n      `}`;\n    styles +=\n      `@keyframes blink_block` + `_` + this._terminalClass + ` {` +\n      ` 0% {` +\n      `  background-color: ${this._colors.cursor.css};` +\n      `  color: ${this._colors.cursorAccent.css};` +\n      ` }` +\n      ` 50% {` +\n      `  background-color: ${this._colors.cursorAccent.css};` +\n      `  color: ${this._colors.cursor.css};` +\n      ` }` +\n      `}`;\n    // Cursor\n    styles +=\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS}:not(.${FOCUS_CLASS}) .${CURSOR_CLASS}.${CURSOR_STYLE_BLOCK_CLASS} {` +\n      ` outline: 1px solid ${this._colors.cursor.css};` +\n      ` outline-offset: -1px;` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS}.${FOCUS_CLASS} .${CURSOR_CLASS}.${CURSOR_BLINK_CLASS}:not(.${CURSOR_STYLE_BLOCK_CLASS}) {` +\n      ` animation: blink_box_shadow` + `_` + this._terminalClass + ` 1s step-end infinite;` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS}.${FOCUS_CLASS} .${CURSOR_CLASS}.${CURSOR_BLINK_CLASS}.${CURSOR_STYLE_BLOCK_CLASS} {` +\n      ` animation: blink_block` + `_` + this._terminalClass + ` 1s step-end infinite;` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS}.${FOCUS_CLASS} .${CURSOR_CLASS}.${CURSOR_STYLE_BLOCK_CLASS} {` +\n      ` background-color: ${this._colors.cursor.css};` +\n      ` color: ${this._colors.cursorAccent.css};` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} .${CURSOR_CLASS}.${CURSOR_STYLE_BAR_CLASS} {` +\n      ` box-shadow: ${this._optionsService.options.cursorWidth}px 0 0 ${this._colors.cursor.css} inset;` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} .${CURSOR_CLASS}.${CURSOR_STYLE_UNDERLINE_CLASS} {` +\n      ` box-shadow: 0 -1px 0 ${this._colors.cursor.css} inset;` +\n      `}`;\n    // Selection\n    styles +=\n      `${this._terminalSelector} .${SELECTION_CLASS} {` +\n      ` position: absolute;` +\n      ` top: 0;` +\n      ` left: 0;` +\n      ` z-index: 1;` +\n      ` pointer-events: none;` +\n      `}` +\n      `${this._terminalSelector} .${SELECTION_CLASS} div {` +\n      ` position: absolute;` +\n      ` background-color: ${this._colors.selectionTransparent.css};` +\n      `}`;\n    // Colors\n    this._colors.ansi.forEach((c, i) => {\n      styles +=\n        `${this._terminalSelector} .${FG_CLASS_PREFIX}${i} { color: ${c.css}; }` +\n        `${this._terminalSelector} .${BG_CLASS_PREFIX}${i} { background-color: ${c.css}; }`;\n    });\n    styles +=\n      `${this._terminalSelector} .${FG_CLASS_PREFIX}${INVERTED_DEFAULT_COLOR} { color: ${color.opaque(this._colors.background).css}; }` +\n      `${this._terminalSelector} .${BG_CLASS_PREFIX}${INVERTED_DEFAULT_COLOR} { background-color: ${this._colors.foreground.css}; }`;\n\n    this._themeStyleElement.textContent = styles;\n  }\n\n  public onDevicePixelRatioChange(): void {\n    this._updateDimensions();\n  }\n\n  private _refreshRowElements(cols: number, rows: number): void {\n    // Add missing elements\n    for (let i = this._rowElements.length; i <= rows; i++) {\n      const row = document.createElement('div');\n      this._rowContainer.appendChild(row);\n      this._rowElements.push(row);\n    }\n    // Remove excess elements\n    while (this._rowElements.length > rows) {\n      this._rowContainer.removeChild(this._rowElements.pop()!);\n    }\n  }\n\n  public onResize(cols: number, rows: number): void {\n    this._refreshRowElements(cols, rows);\n    this._updateDimensions();\n  }\n\n  public onCharSizeChanged(): void {\n    this._updateDimensions();\n  }\n\n  public onBlur(): void {\n    this._rowContainer.classList.remove(FOCUS_CLASS);\n  }\n\n  public onFocus(): void {\n    this._rowContainer.classList.add(FOCUS_CLASS);\n  }\n\n  public onSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean): void {\n    // Remove all selections\n    while (this._selectionContainer.children.length) {\n      this._selectionContainer.removeChild(this._selectionContainer.children[0]);\n    }\n\n    // Selection does not exist\n    if (!start || !end) {\n      return;\n    }\n\n    // Translate from buffer position to viewport position\n    const viewportStartRow = start[1] - this._bufferService.buffer.ydisp;\n    const viewportEndRow = end[1] - this._bufferService.buffer.ydisp;\n    const viewportCappedStartRow = Math.max(viewportStartRow, 0);\n    const viewportCappedEndRow = Math.min(viewportEndRow, this._bufferService.rows - 1);\n\n    // No need to draw the selection\n    if (viewportCappedStartRow >= this._bufferService.rows || viewportCappedEndRow < 0) {\n      return;\n    }\n\n    // Create the selections\n    const documentFragment = document.createDocumentFragment();\n\n    if (columnSelectMode) {\n      documentFragment.appendChild(\n        this._createSelectionElement(viewportCappedStartRow, start[0], end[0], viewportCappedEndRow - viewportCappedStartRow + 1)\n      );\n    } else {\n      // Draw first row\n      const startCol = viewportStartRow === viewportCappedStartRow ? start[0] : 0;\n      const endCol = viewportCappedStartRow === viewportEndRow ? end[0] : this._bufferService.cols;\n      documentFragment.appendChild(this._createSelectionElement(viewportCappedStartRow, startCol, endCol));\n      // Draw middle rows\n      const middleRowsCount = viewportCappedEndRow - viewportCappedStartRow - 1;\n      documentFragment.appendChild(this._createSelectionElement(viewportCappedStartRow + 1, 0, this._bufferService.cols, middleRowsCount));\n      // Draw final row\n      if (viewportCappedStartRow !== viewportCappedEndRow) {\n        // Only draw viewportEndRow if it's not the same as viewporttartRow\n        const endCol = viewportEndRow === viewportCappedEndRow ? end[0] : this._bufferService.cols;\n        documentFragment.appendChild(this._createSelectionElement(viewportCappedEndRow, 0, endCol));\n      }\n    }\n    this._selectionContainer.appendChild(documentFragment);\n  }\n\n  /**\n   * Creates a selection element at the specified position.\n   * @param row The row of the selection.\n   * @param colStart The start column.\n   * @param colEnd The end columns.\n   */\n  private _createSelectionElement(row: number, colStart: number, colEnd: number, rowCount: number = 1): HTMLElement {\n    const element = document.createElement('div');\n    element.style.height = `${rowCount * this.dimensions.actualCellHeight}px`;\n    element.style.top = `${row * this.dimensions.actualCellHeight}px`;\n    element.style.left = `${colStart * this.dimensions.actualCellWidth}px`;\n    element.style.width = `${this.dimensions.actualCellWidth * (colEnd - colStart)}px`;\n    return element;\n  }\n\n  public onCursorMove(): void {\n    // No-op, the cursor is drawn when rows are drawn\n  }\n\n  public onOptionsChanged(): void {\n    // Force a refresh\n    this._updateDimensions();\n    this._injectCss();\n  }\n\n  public clear(): void {\n    for (const e of this._rowElements) {\n      e.innerText = '';\n    }\n  }\n\n  public renderRows(start: number, end: number): void {\n    const cursorAbsoluteY = this._bufferService.buffer.ybase + this._bufferService.buffer.y;\n    const cursorX = Math.min(this._bufferService.buffer.x, this._bufferService.cols - 1);\n    const cursorBlink = this._optionsService.options.cursorBlink;\n\n    for (let y = start; y <= end; y++) {\n      const rowElement = this._rowElements[y];\n      rowElement.innerText = '';\n\n      const row = y + this._bufferService.buffer.ydisp;\n      const lineData = this._bufferService.buffer.lines.get(row);\n      const cursorStyle = this._optionsService.options.cursorStyle;\n      rowElement.appendChild(this._rowFactory.createRow(lineData!, row, row === cursorAbsoluteY, cursorStyle, cursorX, cursorBlink, this.dimensions.actualCellWidth, this._bufferService.cols));\n    }\n  }\n\n  private get _terminalSelector(): string {\n    return `.${TERMINAL_CLASS_PREFIX}${this._terminalClass}`;\n  }\n\n  private _onLinkHover(e: ILinkifierEvent): void {\n    this._setCellUnderline(e.x1, e.x2, e.y1, e.y2, e.cols, true);\n  }\n\n  private _onLinkLeave(e: ILinkifierEvent): void {\n    this._setCellUnderline(e.x1, e.x2, e.y1, e.y2, e.cols, false);\n  }\n\n  private _setCellUnderline(x: number, x2: number, y: number, y2: number, cols: number, enabled: boolean): void {\n    while (x !== x2 || y !== y2) {\n      const row = this._rowElements[y];\n      if (!row) {\n        return;\n      }\n      const span = row.children[x] as HTMLElement;\n      if (span) {\n        span.style.textDecoration = enabled ? 'underline' : 'none';\n      }\n      if (++x >= cols) {\n        x = 0;\n        y++;\n      }\n    }\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferLine } from 'common/Types';\nimport { INVERTED_DEFAULT_COLOR } from 'browser/renderer/atlas/Constants';\nimport { NULL_CELL_CODE, WHITESPACE_CELL_CHAR, Attributes } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { ICoreService, IOptionsService } from 'common/services/Services';\nimport { color, rgba } from 'browser/Color';\nimport { IColorSet, IColor } from 'browser/Types';\nimport { ICharacterJoinerService } from 'browser/services/Services';\nimport { JoinedCellData } from 'browser/services/CharacterJoinerService';\n\nexport const BOLD_CLASS = 'xterm-bold';\nexport const DIM_CLASS = 'xterm-dim';\nexport const ITALIC_CLASS = 'xterm-italic';\nexport const UNDERLINE_CLASS = 'xterm-underline';\nexport const STRIKETHROUGH_CLASS = 'xterm-strikethrough';\nexport const CURSOR_CLASS = 'xterm-cursor';\nexport const CURSOR_BLINK_CLASS = 'xterm-cursor-blink';\nexport const CURSOR_STYLE_BLOCK_CLASS = 'xterm-cursor-block';\nexport const CURSOR_STYLE_BAR_CLASS = 'xterm-cursor-bar';\nexport const CURSOR_STYLE_UNDERLINE_CLASS = 'xterm-cursor-underline';\n\nexport class DomRendererRowFactory {\n  private _workCell: CellData = new CellData();\n\n  constructor(\n    private readonly _document: Document,\n    private _colors: IColorSet,\n    @ICharacterJoinerService private readonly _characterJoinerService: ICharacterJoinerService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @ICoreService private readonly _coreService: ICoreService\n  ) {\n  }\n\n  public setColors(colors: IColorSet): void {\n    this._colors = colors;\n  }\n\n  public createRow(lineData: IBufferLine, row: number, isCursorRow: boolean, cursorStyle: string | undefined, cursorX: number, cursorBlink: boolean, cellWidth: number, cols: number): DocumentFragment {\n    const fragment = this._document.createDocumentFragment();\n\n    const joinedRanges = this._characterJoinerService.getJoinedCharacters(row);\n    // Find the line length first, this prevents the need to output a bunch of\n    // empty cells at the end. This cannot easily be integrated into the main\n    // loop below because of the colCount feature (which can be removed after we\n    // properly support reflow and disallow data to go beyond the right-side of\n    // the viewport).\n    let lineLength = 0;\n    for (let x = Math.min(lineData.length, cols) - 1; x >= 0; x--) {\n      if (lineData.loadCell(x, this._workCell).getCode() !== NULL_CELL_CODE || (isCursorRow && x === cursorX)) {\n        lineLength = x + 1;\n        break;\n      }\n    }\n\n    for (let x = 0; x < lineLength; x++) {\n      lineData.loadCell(x, this._workCell);\n      let width = this._workCell.getWidth();\n\n      // The character to the left is a wide character, drawing is owned by the char at x-1\n      if (width === 0) {\n        continue;\n      }\n\n      // If true, indicates that the current character(s) to draw were joined.\n      let isJoined = false;\n      let lastCharX = x;\n\n      // Process any joined character ranges as needed. Because of how the\n      // ranges are produced, we know that they are valid for the characters\n      // and attributes of our input.\n      let cell = this._workCell;\n      if (joinedRanges.length > 0 && x === joinedRanges[0][0]) {\n        isJoined = true;\n        const range = joinedRanges.shift()!;\n\n        // We already know the exact start and end column of the joined range,\n        // so we get the string and width representing it directly\n        cell = new JoinedCellData(\n          this._workCell,\n          lineData.translateToString(true, range[0], range[1]),\n          range[1] - range[0]\n        );\n\n        // Skip over the cells occupied by this range in the loop\n        lastCharX = range[1] - 1;\n\n        // Recalculate width\n        width = cell.getWidth();\n      }\n\n      const charElement = this._document.createElement('span');\n      if (width > 1) {\n        charElement.style.width = `${cellWidth * width}px`;\n      }\n\n      if (isJoined) {\n        // Ligatures in the DOM renderer must use display inline, as they may not show with\n        // inline-block if they are outside the bounds of the element\n        charElement.style.display = 'inline';\n\n        // The DOM renderer colors the background of the cursor but for ligatures all cells are\n        // joined. The workaround here is to show a cursor around the whole ligature so it shows up,\n        // the cursor looks the same when on any character of the ligature though\n        if (cursorX >= x && cursorX <= lastCharX) {\n          cursorX = x;\n        }\n      }\n\n      if (!this._coreService.isCursorHidden && isCursorRow && x === cursorX) {\n        charElement.classList.add(CURSOR_CLASS);\n\n        if (cursorBlink) {\n          charElement.classList.add(CURSOR_BLINK_CLASS);\n        }\n\n        switch (cursorStyle) {\n          case 'bar':\n            charElement.classList.add(CURSOR_STYLE_BAR_CLASS);\n            break;\n          case 'underline':\n            charElement.classList.add(CURSOR_STYLE_UNDERLINE_CLASS);\n            break;\n          default:\n            charElement.classList.add(CURSOR_STYLE_BLOCK_CLASS);\n            break;\n        }\n      }\n\n      if (cell.isBold()) {\n        charElement.classList.add(BOLD_CLASS);\n      }\n\n      if (cell.isItalic()) {\n        charElement.classList.add(ITALIC_CLASS);\n      }\n\n      if (cell.isDim()) {\n        charElement.classList.add(DIM_CLASS);\n      }\n\n      if (cell.isUnderline()) {\n        charElement.classList.add(UNDERLINE_CLASS);\n      }\n\n      if (cell.isInvisible()) {\n        charElement.textContent = WHITESPACE_CELL_CHAR;\n      } else {\n        charElement.textContent = cell.getChars() || WHITESPACE_CELL_CHAR;\n      }\n\n      if (cell.isStrikethrough()) {\n        charElement.classList.add(STRIKETHROUGH_CLASS);\n      }\n\n      let fg = cell.getFgColor();\n      let fgColorMode = cell.getFgColorMode();\n      let bg = cell.getBgColor();\n      let bgColorMode = cell.getBgColorMode();\n      const isInverse = !!cell.isInverse();\n      if (isInverse) {\n        const temp = fg;\n        fg = bg;\n        bg = temp;\n        const temp2 = fgColorMode;\n        fgColorMode = bgColorMode;\n        bgColorMode = temp2;\n      }\n\n      // Foreground\n      switch (fgColorMode) {\n        case Attributes.CM_P16:\n        case Attributes.CM_P256:\n          if (cell.isBold() && fg < 8 && this._optionsService.options.drawBoldTextInBrightColors) {\n            fg += 8;\n          }\n          if (!this._applyMinimumContrast(charElement, this._colors.background, this._colors.ansi[fg])) {\n            charElement.classList.add(`xterm-fg-${fg}`);\n          }\n          break;\n        case Attributes.CM_RGB:\n          const color = rgba.toColor(\n            (fg >> 16) & 0xFF,\n            (fg >>  8) & 0xFF,\n            (fg      ) & 0xFF\n          );\n          if (!this._applyMinimumContrast(charElement, this._colors.background, color)) {\n            this._addStyle(charElement, `color:#${padStart(fg.toString(16), '0', 6)}`);\n          }\n          break;\n        case Attributes.CM_DEFAULT:\n        default:\n          if (!this._applyMinimumContrast(charElement, this._colors.background, this._colors.foreground)) {\n            if (isInverse) {\n              charElement.classList.add(`xterm-fg-${INVERTED_DEFAULT_COLOR}`);\n            }\n          }\n      }\n\n      // Background\n      switch (bgColorMode) {\n        case Attributes.CM_P16:\n        case Attributes.CM_P256:\n          charElement.classList.add(`xterm-bg-${bg}`);\n          break;\n        case Attributes.CM_RGB:\n          this._addStyle(charElement, `background-color:#${padStart(bg.toString(16), '0', 6)}`);\n          break;\n        case Attributes.CM_DEFAULT:\n        default:\n          if (isInverse) {\n            charElement.classList.add(`xterm-bg-${INVERTED_DEFAULT_COLOR}`);\n          }\n      }\n\n      fragment.appendChild(charElement);\n\n      x = lastCharX;\n    }\n    return fragment;\n  }\n\n  private _applyMinimumContrast(element: HTMLElement, bg: IColor, fg: IColor): boolean {\n    if (this._optionsService.options.minimumContrastRatio === 1) {\n      return false;\n    }\n\n    // Try get from cache first\n    let adjustedColor = this._colors.contrastCache.getColor(this._workCell.bg, this._workCell.fg);\n\n    // Calculate and store in cache\n    if (adjustedColor === undefined) {\n      adjustedColor = color.ensureContrastRatio(bg, fg, this._optionsService.options.minimumContrastRatio);\n      this._colors.contrastCache.setColor(this._workCell.bg, this._workCell.fg, adjustedColor ?? null);\n    }\n\n    if (adjustedColor) {\n      this._addStyle(element, `color:${adjustedColor.css}`);\n      return true;\n    }\n\n    return false;\n  }\n\n  private _addStyle(element: HTMLElement, style: string): void {\n    element.setAttribute('style', `${element.getAttribute('style') || ''}${style};`);\n  }\n}\n\nfunction padStart(text: string, padChar: string, length: number): string {\n  while (text.length < length) {\n    text = padChar + text;\n  }\n  return text;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferService } from 'common/services/Services';\n\n/**\n * Represents a selection within the buffer. This model only cares about column\n * and row coordinates, not wide characters.\n */\nexport class SelectionModel {\n  /**\n   * Whether select all is currently active.\n   */\n  public isSelectAllActive: boolean = false;\n\n  /**\n   * The minimal length of the selection from the start position. When double\n   * clicking on a word, the word will be selected which makes the selection\n   * start at the start of the word and makes this variable the length.\n   */\n  public selectionStartLength: number = 0;\n\n  /**\n   * The [x, y] position the selection starts at.\n   */\n  public selectionStart: [number, number] | undefined;\n\n  /**\n   * The [x, y] position the selection ends at.\n   */\n  public selectionEnd: [number, number] | undefined;\n\n  constructor(\n    private _bufferService: IBufferService\n  ) {\n  }\n\n  /**\n   * Clears the current selection.\n   */\n  public clearSelection(): void {\n    this.selectionStart = undefined;\n    this.selectionEnd = undefined;\n    this.isSelectAllActive = false;\n    this.selectionStartLength = 0;\n  }\n\n  /**\n   * The final selection start, taking into consideration select all.\n   */\n  public get finalSelectionStart(): [number, number] | undefined {\n    if (this.isSelectAllActive) {\n      return [0, 0];\n    }\n\n    if (!this.selectionEnd || !this.selectionStart) {\n      return this.selectionStart;\n    }\n\n    return this.areSelectionValuesReversed() ? this.selectionEnd : this.selectionStart;\n  }\n\n  /**\n   * The final selection end, taking into consideration select all, double click\n   * word selection and triple click line selection.\n   */\n  public get finalSelectionEnd(): [number, number] | undefined {\n    if (this.isSelectAllActive) {\n      return [this._bufferService.cols, this._bufferService.buffer.ybase + this._bufferService.rows - 1];\n    }\n\n    if (!this.selectionStart) {\n      return undefined;\n    }\n\n    // Use the selection start + length if the end doesn't exist or they're reversed\n    if (!this.selectionEnd || this.areSelectionValuesReversed()) {\n      const startPlusLength = this.selectionStart[0] + this.selectionStartLength;\n      if (startPlusLength > this._bufferService.cols) {\n        return [startPlusLength % this._bufferService.cols, this.selectionStart[1] + Math.floor(startPlusLength / this._bufferService.cols)];\n      }\n      return [startPlusLength, this.selectionStart[1]];\n    }\n\n    // Ensure the the word/line is selected after a double/triple click\n    if (this.selectionStartLength) {\n      // Select the larger of the two when start and end are on the same line\n      if (this.selectionEnd[1] === this.selectionStart[1]) {\n        return [Math.max(this.selectionStart[0] + this.selectionStartLength, this.selectionEnd[0]), this.selectionEnd[1]];\n      }\n    }\n    return this.selectionEnd;\n  }\n\n  /**\n   * Returns whether the selection start and end are reversed.\n   */\n  public areSelectionValuesReversed(): boolean {\n    const start = this.selectionStart;\n    const end = this.selectionEnd;\n    if (!start || !end) {\n      return false;\n    }\n    return start[1] > end[1] || (start[1] === end[1] && start[0] > end[0]);\n  }\n\n  /**\n   * Handle the buffer being trimmed, adjust the selection position.\n   * @param amount The amount the buffer is being trimmed.\n   * @return Whether a refresh is necessary.\n   */\n  public onTrim(amount: number): boolean {\n    // Adjust the selection position based on the trimmed amount.\n    if (this.selectionStart) {\n      this.selectionStart[1] -= amount;\n    }\n    if (this.selectionEnd) {\n      this.selectionEnd[1] -= amount;\n    }\n\n    // The selection has moved off the buffer, clear it.\n    if (this.selectionEnd && this.selectionEnd[1] < 0) {\n      this.clearSelection();\n      return true;\n    }\n\n    // If the selection start is trimmed, ensure the start column is 0.\n    if (this.selectionStart && this.selectionStart[1] < 0) {\n      this.selectionStart[1] = 0;\n    }\n    return false;\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IOptionsService } from 'common/services/Services';\nimport { IEvent, EventEmitter } from 'common/EventEmitter';\nimport { ICharSizeService } from 'browser/services/Services';\n\nexport class CharSizeService implements ICharSizeService {\n  public serviceBrand: undefined;\n\n  public width: number = 0;\n  public height: number = 0;\n  private _measureStrategy: IMeasureStrategy;\n\n  public get hasValidSize(): boolean { return this.width > 0 && this.height > 0; }\n\n  private _onCharSizeChange = new EventEmitter<void>();\n  public get onCharSizeChange(): IEvent<void> { return this._onCharSizeChange.event; }\n\n  constructor(\n    document: Document,\n    parentElement: HTMLElement,\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    this._measureStrategy = new DomMeasureStrategy(document, parentElement, this._optionsService);\n  }\n\n  public measure(): void {\n    const result = this._measureStrategy.measure();\n    if (result.width !== this.width || result.height !== this.height) {\n      this.width = result.width;\n      this.height = result.height;\n      this._onCharSizeChange.fire();\n    }\n  }\n}\n\ninterface IMeasureStrategy {\n  measure(): IReadonlyMeasureResult;\n}\n\ninterface IReadonlyMeasureResult {\n  readonly width: number;\n  readonly height: number;\n}\n\ninterface IMeasureResult {\n  width: number;\n  height: number;\n}\n\n// TODO: For supporting browsers we should also provide a CanvasCharDimensionsProvider that uses ctx.measureText\nclass DomMeasureStrategy implements IMeasureStrategy {\n  private _result: IMeasureResult = { width: 0, height: 0 };\n  private _measureElement: HTMLElement;\n\n  constructor(\n    private _document: Document,\n    private _parentElement: HTMLElement,\n    private _optionsService: IOptionsService\n  ) {\n    this._measureElement = this._document.createElement('span');\n    this._measureElement.classList.add('xterm-char-measure-element');\n    this._measureElement.textContent = 'W';\n    this._measureElement.setAttribute('aria-hidden', 'true');\n    this._parentElement.appendChild(this._measureElement);\n  }\n\n  public measure(): IReadonlyMeasureResult {\n    this._measureElement.style.fontFamily = this._optionsService.options.fontFamily;\n    this._measureElement.style.fontSize = `${this._optionsService.options.fontSize}px`;\n\n    // Note that this triggers a synchronous layout\n    const geometry = this._measureElement.getBoundingClientRect();\n\n    // If values are 0 then the element is likely currently display:none, in which case we should\n    // retain the previous value.\n    if (geometry.width !== 0 && geometry.height !== 0) {\n      this._result.width = geometry.width;\n      this._result.height = Math.ceil(geometry.height);\n    }\n\n    return this._result;\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferLine, ICellData, CharData } from 'common/Types';\nimport { ICharacterJoiner } from 'browser/Types';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { WHITESPACE_CELL_CHAR, Content } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { IBufferService } from 'common/services/Services';\nimport { ICharacterJoinerService } from 'browser/services/Services';\n\nexport class JoinedCellData extends AttributeData implements ICellData {\n  private _width: number;\n  // .content carries no meaning for joined CellData, simply nullify it\n  // thus we have to overload all other .content accessors\n  public content: number = 0;\n  public fg: number;\n  public bg: number;\n  public combinedData: string = '';\n\n  constructor(firstCell: ICellData, chars: string, width: number) {\n    super();\n    this.fg = firstCell.fg;\n    this.bg = firstCell.bg;\n    this.combinedData = chars;\n    this._width = width;\n  }\n\n  public isCombined(): number {\n    // always mark joined cell data as combined\n    return Content.IS_COMBINED_MASK;\n  }\n\n  public getWidth(): number {\n    return this._width;\n  }\n\n  public getChars(): string {\n    return this.combinedData;\n  }\n\n  public getCode(): number {\n    // code always gets the highest possible fake codepoint (read as -1)\n    // this is needed as code is used by caches as identifier\n    return 0x1FFFFF;\n  }\n\n  public setFromCharData(value: CharData): void {\n    throw new Error('not implemented');\n  }\n\n  public getAsCharData(): CharData {\n    return [this.fg, this.getChars(), this.getWidth(), this.getCode()];\n  }\n}\n\nexport class CharacterJoinerService implements ICharacterJoinerService {\n  public serviceBrand: undefined;\n\n  private _characterJoiners: ICharacterJoiner[] = [];\n  private _nextCharacterJoinerId: number = 0;\n  private _workCell: CellData = new CellData();\n\n  constructor(\n    @IBufferService private _bufferService: IBufferService\n  ) { }\n\n  public register(handler: (text: string) => [number, number][]): number {\n    const joiner: ICharacterJoiner = {\n      id: this._nextCharacterJoinerId++,\n      handler\n    };\n\n    this._characterJoiners.push(joiner);\n    return joiner.id;\n  }\n\n  public deregister(joinerId: number): boolean {\n    for (let i = 0; i < this._characterJoiners.length; i++) {\n      if (this._characterJoiners[i].id === joinerId) {\n        this._characterJoiners.splice(i, 1);\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  public getJoinedCharacters(row: number): [number, number][] {\n    if (this._characterJoiners.length === 0) {\n      return [];\n    }\n\n    const line = this._bufferService.buffer.lines.get(row);\n    if (!line || line.length === 0) {\n      return [];\n    }\n\n    const ranges: [number, number][] = [];\n    const lineStr = line.translateToString(true);\n\n    // Because some cells can be represented by multiple javascript characters,\n    // we track the cell and the string indexes separately. This allows us to\n    // translate the string ranges we get from the joiners back into cell ranges\n    // for use when rendering\n    let rangeStartColumn = 0;\n    let currentStringIndex = 0;\n    let rangeStartStringIndex = 0;\n    let rangeAttrFG = line.getFg(0);\n    let rangeAttrBG = line.getBg(0);\n\n    for (let x = 0; x < line.getTrimmedLength(); x++) {\n      line.loadCell(x, this._workCell);\n\n      if (this._workCell.getWidth() === 0) {\n        // If this character is of width 0, skip it.\n        continue;\n      }\n\n      // End of range\n      if (this._workCell.fg !== rangeAttrFG || this._workCell.bg !== rangeAttrBG) {\n        // If we ended up with a sequence of more than one character,\n        // look for ranges to join.\n        if (x - rangeStartColumn > 1) {\n          const joinedRanges = this._getJoinedRanges(\n            lineStr,\n            rangeStartStringIndex,\n            currentStringIndex,\n            line,\n            rangeStartColumn\n          );\n          for (let i = 0; i < joinedRanges.length; i++) {\n            ranges.push(joinedRanges[i]);\n          }\n        }\n\n        // Reset our markers for a new range.\n        rangeStartColumn = x;\n        rangeStartStringIndex = currentStringIndex;\n        rangeAttrFG = this._workCell.fg;\n        rangeAttrBG = this._workCell.bg;\n      }\n\n      currentStringIndex += this._workCell.getChars().length || WHITESPACE_CELL_CHAR.length;\n    }\n\n    // Process any trailing ranges.\n    if (this._bufferService.cols - rangeStartColumn > 1) {\n      const joinedRanges = this._getJoinedRanges(\n        lineStr,\n        rangeStartStringIndex,\n        currentStringIndex,\n        line,\n        rangeStartColumn\n      );\n      for (let i = 0; i < joinedRanges.length; i++) {\n        ranges.push(joinedRanges[i]);\n      }\n    }\n\n    return ranges;\n  }\n\n  /**\n   * Given a segment of a line of text, find all ranges of text that should be\n   * joined in a single rendering unit. Ranges are internally converted to\n   * column ranges, rather than string ranges.\n   * @param line String representation of the full line of text\n   * @param startIndex Start position of the range to search in the string (inclusive)\n   * @param endIndex End position of the range to search in the string (exclusive)\n   */\n  private _getJoinedRanges(line: string, startIndex: number, endIndex: number, lineData: IBufferLine, startCol: number): [number, number][] {\n    const text = line.substring(startIndex, endIndex);\n    // At this point we already know that there is at least one joiner so\n    // we can just pull its value and assign it directly rather than\n    // merging it into an empty array, which incurs unnecessary writes.\n    const joinedRanges: [number, number][] = this._characterJoiners[0].handler(text);\n    for (let i = 1; i < this._characterJoiners.length; i++) {\n      // We merge any overlapping ranges across the different joiners\n      const joinerRanges = this._characterJoiners[i].handler(text);\n      for (let j = 0; j < joinerRanges.length; j++) {\n        CharacterJoinerService._mergeRanges(joinedRanges, joinerRanges[j]);\n      }\n    }\n    this._stringRangesToCellRanges(joinedRanges, lineData, startCol);\n    return joinedRanges;\n  }\n\n  /**\n   * Modifies the provided ranges in-place to adjust for variations between\n   * string length and cell width so that the range represents a cell range,\n   * rather than the string range the joiner provides.\n   * @param ranges String ranges containing start (inclusive) and end (exclusive) index\n   * @param line Cell data for the relevant line in the terminal\n   * @param startCol Offset within the line to start from\n   */\n  private _stringRangesToCellRanges(ranges: [number, number][], line: IBufferLine, startCol: number): void {\n    let currentRangeIndex = 0;\n    let currentRangeStarted = false;\n    let currentStringIndex = 0;\n    let currentRange = ranges[currentRangeIndex];\n\n    // If we got through all of the ranges, stop searching\n    if (!currentRange) {\n      return;\n    }\n\n    for (let x = startCol; x < this._bufferService.cols; x++) {\n      const width = line.getWidth(x);\n      const length = line.getString(x).length || WHITESPACE_CELL_CHAR.length;\n\n      // We skip zero-width characters when creating the string to join the text\n      // so we do the same here\n      if (width === 0) {\n        continue;\n      }\n\n      // Adjust the start of the range\n      if (!currentRangeStarted && currentRange[0] <= currentStringIndex) {\n        currentRange[0] = x;\n        currentRangeStarted = true;\n      }\n\n      // Adjust the end of the range\n      if (currentRange[1] <= currentStringIndex) {\n        currentRange[1] = x;\n\n        // We're finished with this range, so we move to the next one\n        currentRange = ranges[++currentRangeIndex];\n\n        // If there are no more ranges left, stop searching\n        if (!currentRange) {\n          break;\n        }\n\n        // Ranges can be on adjacent characters. Because the end index of the\n        // ranges are exclusive, this means that the index for the start of a\n        // range can be the same as the end index of the previous range. To\n        // account for the start of the next range, we check here just in case.\n        if (currentRange[0] <= currentStringIndex) {\n          currentRange[0] = x;\n          currentRangeStarted = true;\n        } else {\n          currentRangeStarted = false;\n        }\n      }\n\n      // Adjust the string index based on the character length to line up with\n      // the column adjustment\n      currentStringIndex += length;\n    }\n\n    // If there is still a range left at the end, it must extend all the way to\n    // the end of the line.\n    if (currentRange) {\n      currentRange[1] = this._bufferService.cols;\n    }\n  }\n\n  /**\n   * Merges the range defined by the provided start and end into the list of\n   * existing ranges. The merge is done in place on the existing range for\n   * performance and is also returned.\n   * @param ranges Existing range list\n   * @param newRange Tuple of two numbers representing the new range to merge in.\n   * @returns The ranges input with the new range merged in place\n   */\n  private static _mergeRanges(ranges: [number, number][], newRange: [number, number]): [number, number][] {\n    let inRange = false;\n    for (let i = 0; i < ranges.length; i++) {\n      const range = ranges[i];\n      if (!inRange) {\n        if (newRange[1] <= range[0]) {\n          // Case 1: New range is before the search range\n          ranges.splice(i, 0, newRange);\n          return ranges;\n        }\n\n        if (newRange[1] <= range[1]) {\n          // Case 2: New range is either wholly contained within the\n          // search range or overlaps with the front of it\n          range[0] = Math.min(newRange[0], range[0]);\n          return ranges;\n        }\n\n        if (newRange[0] < range[1]) {\n          // Case 3: New range either wholly contains the search range\n          // or overlaps with the end of it\n          range[0] = Math.min(newRange[0], range[0]);\n          inRange = true;\n        }\n\n        // Case 4: New range starts after the search range\n        continue;\n      } else {\n        if (newRange[1] <= range[0]) {\n          // Case 5: New range extends from previous range but doesn't\n          // reach the current one\n          ranges[i - 1][1] = newRange[1];\n          return ranges;\n        }\n\n        if (newRange[1] <= range[1]) {\n          // Case 6: New range extends from prvious range into the\n          // current range\n          ranges[i - 1][1] = Math.max(newRange[1], range[1]);\n          ranges.splice(i, 1);\n          return ranges;\n        }\n\n        // Case 7: New range extends from previous range past the\n        // end of the current range\n        ranges.splice(i, 1);\n        i--;\n      }\n    }\n\n    if (inRange) {\n      // Case 8: New range extends past the last existing range\n      ranges[ranges.length - 1][1] = newRange[1];\n    } else {\n      // Case 9: New range starts after the last existing range\n      ranges.push(newRange);\n    }\n\n    return ranges;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICoreBrowserService } from './Services';\n\nexport class CoreBrowserService implements ICoreBrowserService {\n  public serviceBrand: undefined;\n\n  constructor(\n    private _textarea: HTMLTextAreaElement\n  ) {\n  }\n\n  public get isFocused(): boolean {\n    const docOrShadowRoot = this._textarea.getRootNode ? this._textarea.getRootNode() as Document | ShadowRoot : document;\n    return docOrShadowRoot.activeElement === this._textarea && document.hasFocus();\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharSizeService, IRenderService, IMouseService } from './Services';\nimport { getCoords, getRawByteCoords } from 'browser/input/Mouse';\n\nexport class MouseService implements IMouseService {\n  public serviceBrand: undefined;\n\n  constructor(\n    @IRenderService private readonly _renderService: IRenderService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService\n  ) {\n  }\n\n  public getCoords(event: {clientX: number, clientY: number}, element: HTMLElement, colCount: number, rowCount: number, isSelection?: boolean): [number, number] | undefined {\n    return getCoords(\n      event,\n      element,\n      colCount,\n      rowCount,\n      this._charSizeService.hasValidSize,\n      this._renderService.dimensions.actualCellWidth,\n      this._renderService.dimensions.actualCellHeight,\n      isSelection\n    );\n  }\n\n  public getRawByteCoords(event: MouseEvent, element: HTMLElement, colCount: number, rowCount: number): { x: number, y: number } | undefined {\n    const coords = this.getCoords(event, element, colCount, rowCount);\n    return getRawByteCoords(coords);\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderer, IRenderDimensions } from 'browser/renderer/Types';\nimport { RenderDebouncer } from 'browser/RenderDebouncer';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { ScreenDprMonitor } from 'browser/ScreenDprMonitor';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { IColorSet, IRenderDebouncer } from 'browser/Types';\nimport { IOptionsService, IBufferService } from 'common/services/Services';\nimport { ICharSizeService, IRenderService } from 'browser/services/Services';\n\ninterface ISelectionState {\n  start: [number, number] | undefined;\n  end: [number, number] | undefined;\n  columnSelectMode: boolean;\n}\n\nexport class RenderService extends Disposable implements IRenderService {\n  public serviceBrand: undefined;\n\n  private _renderDebouncer: IRenderDebouncer;\n  private _screenDprMonitor: ScreenDprMonitor;\n\n  private _isPaused: boolean = false;\n  private _needsFullRefresh: boolean = false;\n  private _isNextRenderRedrawOnly: boolean = true;\n  private _needsSelectionRefresh: boolean = false;\n  private _canvasWidth: number = 0;\n  private _canvasHeight: number = 0;\n  private _selectionState: ISelectionState = {\n    start: undefined,\n    end: undefined,\n    columnSelectMode: false\n  };\n\n  private _onDimensionsChange = new EventEmitter<IRenderDimensions>();\n  public get onDimensionsChange(): IEvent<IRenderDimensions> { return this._onDimensionsChange.event; }\n  private _onRender = new EventEmitter<{ start: number, end: number }>();\n  public get onRenderedBufferChange(): IEvent<{ start: number, end: number }> { return this._onRender.event; }\n  private _onRefreshRequest = new EventEmitter<{ start: number, end: number }>();\n  public get onRefreshRequest(): IEvent<{ start: number, end: number }> { return this._onRefreshRequest.event; }\n\n  public get dimensions(): IRenderDimensions { return this._renderer.dimensions; }\n\n  constructor(\n    private _renderer: IRenderer,\n    private _rowCount: number,\n    screenElement: HTMLElement,\n    @IOptionsService optionsService: IOptionsService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService,\n    @IBufferService bufferService: IBufferService\n  ) {\n    super();\n\n    this.register({ dispose: () => this._renderer.dispose() });\n\n    this._renderDebouncer = new RenderDebouncer((start, end) => this._renderRows(start, end));\n    this.register(this._renderDebouncer);\n\n    this._screenDprMonitor = new ScreenDprMonitor();\n    this._screenDprMonitor.setListener(() => this.onDevicePixelRatioChange());\n    this.register(this._screenDprMonitor);\n\n    this.register(bufferService.onResize(e => this._fullRefresh()));\n    this.register(optionsService.onOptionChange(() => this._renderer.onOptionsChanged()));\n    this.register(this._charSizeService.onCharSizeChange(() => this.onCharSizeChanged()));\n\n    // No need to register this as renderer is explicitly disposed in RenderService.dispose\n    this._renderer.onRequestRedraw(e => this.refreshRows(e.start, e.end, true));\n\n    // dprchange should handle this case, we need this as well for browsers that don't support the\n    // matchMedia query.\n    this.register(addDisposableDomListener(window, 'resize', () => this.onDevicePixelRatioChange()));\n\n    // Detect whether IntersectionObserver is detected and enable renderer pause\n    // and resume based on terminal visibility if so\n    if ('IntersectionObserver' in window) {\n      const observer = new IntersectionObserver(e => this._onIntersectionChange(e[e.length - 1]), { threshold: 0 });\n      observer.observe(screenElement);\n      this.register({ dispose: () => observer.disconnect() });\n    }\n  }\n\n  private _onIntersectionChange(entry: IntersectionObserverEntry): void {\n    this._isPaused = entry.isIntersecting === undefined ? (entry.intersectionRatio === 0) : !entry.isIntersecting;\n\n    // Terminal was hidden on open\n    if (!this._isPaused && !this._charSizeService.hasValidSize) {\n      this._charSizeService.measure();\n    }\n\n    if (!this._isPaused && this._needsFullRefresh) {\n      this.refreshRows(0, this._rowCount - 1);\n      this._needsFullRefresh = false;\n    }\n  }\n\n  public refreshRows(start: number, end: number, isRedrawOnly: boolean = false): void {\n    if (this._isPaused) {\n      this._needsFullRefresh = true;\n      return;\n    }\n    if (!isRedrawOnly) {\n      this._isNextRenderRedrawOnly = false;\n    }\n    this._renderDebouncer.refresh(start, end, this._rowCount);\n  }\n\n  private _renderRows(start: number, end: number): void {\n    this._renderer.renderRows(start, end);\n\n    // Update selection if needed\n    if (this._needsSelectionRefresh) {\n      this._renderer.onSelectionChanged(this._selectionState.start, this._selectionState.end, this._selectionState.columnSelectMode);\n      this._needsSelectionRefresh = false;\n    }\n\n    // Fire render event only if it was not a redraw\n    if (!this._isNextRenderRedrawOnly) {\n      this._onRender.fire({ start, end });\n    }\n    this._isNextRenderRedrawOnly = true;\n  }\n\n  public resize(cols: number, rows: number): void {\n    this._rowCount = rows;\n    this._fireOnCanvasResize();\n  }\n\n  public changeOptions(): void {\n    this._renderer.onOptionsChanged();\n    this.refreshRows(0, this._rowCount - 1);\n    this._fireOnCanvasResize();\n  }\n\n  private _fireOnCanvasResize(): void {\n    // Don't fire the event if the dimensions haven't changed\n    if (this._renderer.dimensions.canvasWidth === this._canvasWidth && this._renderer.dimensions.canvasHeight === this._canvasHeight) {\n      return;\n    }\n    this._onDimensionsChange.fire(this._renderer.dimensions);\n  }\n\n  public dispose(): void {\n    super.dispose();\n  }\n\n  public setRenderer(renderer: IRenderer): void {\n    // TODO: RenderService should be the only one to dispose the renderer\n    this._renderer.dispose();\n    this._renderer = renderer;\n    this._renderer.onRequestRedraw(e => this.refreshRows(e.start, e.end, true));\n\n    // Force a refresh\n    this._needsSelectionRefresh = true;\n    this._fullRefresh();\n  }\n\n  private _fullRefresh(): void {\n    if (this._isPaused) {\n      this._needsFullRefresh = true;\n    } else {\n      this.refreshRows(0, this._rowCount - 1);\n    }\n  }\n\n  public clearTextureAtlas(): void {\n    this._renderer?.clearTextureAtlas?.();\n    this._fullRefresh();\n  }\n\n  public setColors(colors: IColorSet): void {\n    this._renderer.setColors(colors);\n    this._fullRefresh();\n  }\n\n  public onDevicePixelRatioChange(): void {\n    // Force char size measurement as DomMeasureStrategy(getBoundingClientRect) is not stable\n    // when devicePixelRatio changes\n    this._charSizeService.measure();\n\n    this._renderer.onDevicePixelRatioChange();\n    this.refreshRows(0, this._rowCount - 1);\n  }\n\n  public onResize(cols: number, rows: number): void {\n    this._renderer.onResize(cols, rows);\n    this._fullRefresh();\n  }\n\n  // TODO: Is this useful when we have onResize?\n  public onCharSizeChanged(): void {\n    this._renderer.onCharSizeChanged();\n  }\n\n  public onBlur(): void {\n    this._renderer.onBlur();\n  }\n\n  public onFocus(): void {\n    this._renderer.onFocus();\n  }\n\n  public onSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean): void {\n    this._selectionState.start = start;\n    this._selectionState.end = end;\n    this._selectionState.columnSelectMode = columnSelectMode;\n    this._renderer.onSelectionChanged(start, end, columnSelectMode);\n  }\n\n  public onCursorMove(): void {\n    this._renderer.onCursorMove();\n  }\n\n  public clear(): void {\n    this._renderer.clear();\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ISelectionRedrawRequestEvent, ISelectionRequestScrollLinesEvent } from 'browser/selection/Types';\nimport { IBuffer } from 'common/buffer/Types';\nimport { IBufferLine, IDisposable } from 'common/Types';\nimport * as Browser from 'common/Platform';\nimport { SelectionModel } from 'browser/selection/SelectionModel';\nimport { CellData } from 'common/buffer/CellData';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { IMouseService, ISelectionService, IRenderService } from 'browser/services/Services';\nimport { ILinkifier2 } from 'browser/Types';\nimport { IBufferService, IOptionsService, ICoreService } from 'common/services/Services';\nimport { getCoordsRelativeToElement } from 'browser/input/Mouse';\nimport { moveToCellSequence } from 'browser/input/MoveToCell';\nimport { Disposable } from 'common/Lifecycle';\nimport { getRangeLength } from 'common/buffer/BufferRange';\n\n/**\n * The number of pixels the mouse needs to be above or below the viewport in\n * order to scroll at the maximum speed.\n */\nconst DRAG_SCROLL_MAX_THRESHOLD = 50;\n\n/**\n * The maximum scrolling speed\n */\nconst DRAG_SCROLL_MAX_SPEED = 15;\n\n/**\n * The number of milliseconds between drag scroll updates.\n */\nconst DRAG_SCROLL_INTERVAL = 50;\n\n/**\n * The maximum amount of time that can have elapsed for an alt click to move the\n * cursor.\n */\nconst ALT_CLICK_MOVE_CURSOR_TIME = 500;\n\nconst NON_BREAKING_SPACE_CHAR = String.fromCharCode(160);\nconst ALL_NON_BREAKING_SPACE_REGEX = new RegExp(NON_BREAKING_SPACE_CHAR, 'g');\n\n/**\n * Represents a position of a word on a line.\n */\ninterface IWordPosition {\n  start: number;\n  length: number;\n}\n\n/**\n * A selection mode, this drives how the selection behaves on mouse move.\n */\nexport const enum SelectionMode {\n  NORMAL,\n  WORD,\n  LINE,\n  COLUMN\n}\n\n/**\n * A class that manages the selection of the terminal. With help from\n * SelectionModel, SelectionService handles with all logic associated with\n * dealing with the selection, including handling mouse interaction, wide\n * characters and fetching the actual text within the selection. Rendering is\n * not handled by the SelectionService but the onRedrawRequest event is fired\n * when the selection is ready to be redrawn (on an animation frame).\n */\nexport class SelectionService extends Disposable implements ISelectionService {\n  public serviceBrand: undefined;\n\n  protected _model: SelectionModel;\n\n  /**\n   * The amount to scroll every drag scroll update (depends on how far the mouse\n   * drag is above or below the terminal).\n   */\n  private _dragScrollAmount: number = 0;\n\n  /**\n   * The current selection mode.\n   */\n  protected _activeSelectionMode: SelectionMode;\n\n  /**\n   * A setInterval timer that is active while the mouse is down whose callback\n   * scrolls the viewport when necessary.\n   */\n  private _dragScrollIntervalTimer: number | undefined;\n\n  /**\n   * The animation frame ID used for refreshing the selection.\n   */\n  private _refreshAnimationFrame: number | undefined;\n\n  /**\n   * Whether selection is enabled.\n   */\n  private _enabled = true;\n\n  private _mouseMoveListener: EventListener;\n  private _mouseUpListener: EventListener;\n  private _trimListener: IDisposable;\n  private _workCell: CellData = new CellData();\n\n  private _mouseDownTimeStamp: number = 0;\n  private _oldHasSelection: boolean = false;\n  private _oldSelectionStart: [number, number] | undefined = undefined;\n  private _oldSelectionEnd: [number, number] | undefined = undefined;\n\n  private _onLinuxMouseSelection = this.register(new EventEmitter<string>());\n  public get onLinuxMouseSelection(): IEvent<string> { return this._onLinuxMouseSelection.event; }\n  private _onRedrawRequest = this.register(new EventEmitter<ISelectionRedrawRequestEvent>());\n  public get onRequestRedraw(): IEvent<ISelectionRedrawRequestEvent> { return this._onRedrawRequest.event; }\n  private _onSelectionChange = this.register(new EventEmitter<void>());\n  public get onSelectionChange(): IEvent<void> { return this._onSelectionChange.event; }\n  private _onRequestScrollLines = this.register(new EventEmitter<ISelectionRequestScrollLinesEvent>());\n  public get onRequestScrollLines(): IEvent<ISelectionRequestScrollLinesEvent> { return this._onRequestScrollLines.event; }\n\n  constructor(\n    private readonly _element: HTMLElement,\n    private readonly _screenElement: HTMLElement,\n    private readonly _linkifier: ILinkifier2,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ICoreService private readonly _coreService: ICoreService,\n    @IMouseService private readonly _mouseService: IMouseService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @IRenderService private readonly _renderService: IRenderService\n  ) {\n    super();\n\n    // Init listeners\n    this._mouseMoveListener = event => this._onMouseMove(event as MouseEvent);\n    this._mouseUpListener = event => this._onMouseUp(event as MouseEvent);\n    this._coreService.onUserInput(() => {\n      if (this.hasSelection) {\n        this.clearSelection();\n      }\n    });\n    this._trimListener = this._bufferService.buffer.lines.onTrim(amount => this._onTrim(amount));\n    this.register(this._bufferService.buffers.onBufferActivate(e => this._onBufferActivate(e)));\n\n    this.enable();\n\n    this._model = new SelectionModel(this._bufferService);\n    this._activeSelectionMode = SelectionMode.NORMAL;\n  }\n\n  public dispose(): void {\n    this._removeMouseDownListeners();\n  }\n\n  public reset(): void {\n    this.clearSelection();\n  }\n\n  /**\n   * Disables the selection manager. This is useful for when terminal mouse\n   * are enabled.\n   */\n  public disable(): void {\n    this.clearSelection();\n    this._enabled = false;\n  }\n\n  /**\n   * Enable the selection manager.\n   */\n  public enable(): void {\n    this._enabled = true;\n  }\n\n  public get selectionStart(): [number, number] | undefined { return this._model.finalSelectionStart; }\n  public get selectionEnd(): [number, number] | undefined { return this._model.finalSelectionEnd; }\n\n  /**\n   * Gets whether there is an active text selection.\n   */\n  public get hasSelection(): boolean {\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n    if (!start || !end) {\n      return false;\n    }\n    return start[0] !== end[0] || start[1] !== end[1];\n  }\n\n  /**\n   * Gets the text currently selected.\n   */\n  public get selectionText(): string {\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n    if (!start || !end) {\n      return '';\n    }\n\n    const buffer = this._bufferService.buffer;\n    const result: string[] = [];\n\n    if (this._activeSelectionMode === SelectionMode.COLUMN) {\n      // Ignore zero width selections\n      if (start[0] === end[0]) {\n        return '';\n      }\n\n      for (let i = start[1]; i <= end[1]; i++) {\n        const lineText = buffer.translateBufferLineToString(i, true, start[0], end[0]);\n        result.push(lineText);\n      }\n    } else {\n      // Get first row\n      const startRowEndCol = start[1] === end[1] ? end[0] : undefined;\n      result.push(buffer.translateBufferLineToString(start[1], true, start[0], startRowEndCol));\n\n      // Get middle rows\n      for (let i = start[1] + 1; i <= end[1] - 1; i++) {\n        const bufferLine = buffer.lines.get(i);\n        const lineText = buffer.translateBufferLineToString(i, true);\n        if (bufferLine && bufferLine.isWrapped) {\n          result[result.length - 1] += lineText;\n        } else {\n          result.push(lineText);\n        }\n      }\n\n      // Get final row\n      if (start[1] !== end[1]) {\n        const bufferLine = buffer.lines.get(end[1]);\n        const lineText = buffer.translateBufferLineToString(end[1], true, 0, end[0]);\n        if (bufferLine && bufferLine!.isWrapped) {\n          result[result.length - 1] += lineText;\n        } else {\n          result.push(lineText);\n        }\n      }\n    }\n\n    // Format string by replacing non-breaking space chars with regular spaces\n    // and joining the array into a multi-line string.\n    const formattedResult = result.map(line => {\n      return line.replace(ALL_NON_BREAKING_SPACE_REGEX, ' ');\n    }).join(Browser.isWindows ? '\\r\\n' : '\\n');\n\n    return formattedResult;\n  }\n\n  /**\n   * Clears the current terminal selection.\n   */\n  public clearSelection(): void {\n    this._model.clearSelection();\n    this._removeMouseDownListeners();\n    this.refresh();\n    this._onSelectionChange.fire();\n  }\n\n  /**\n   * Queues a refresh, redrawing the selection on the next opportunity.\n   * @param isLinuxMouseSelection Whether the selection should be registered as a new\n   * selection on Linux.\n   */\n  public refresh(isLinuxMouseSelection?: boolean): void {\n    // Queue the refresh for the renderer\n    if (!this._refreshAnimationFrame) {\n      this._refreshAnimationFrame = window.requestAnimationFrame(() => this._refresh());\n    }\n\n    // If the platform is Linux and the refresh call comes from a mouse event,\n    // we need to update the selection for middle click to paste selection.\n    if (Browser.isLinux && isLinuxMouseSelection) {\n      const selectionText = this.selectionText;\n      if (selectionText.length) {\n        this._onLinuxMouseSelection.fire(this.selectionText);\n      }\n    }\n  }\n\n  /**\n   * Fires the refresh event, causing consumers to pick it up and redraw the\n   * selection state.\n   */\n  private _refresh(): void {\n    this._refreshAnimationFrame = undefined;\n    this._onRedrawRequest.fire({\n      start: this._model.finalSelectionStart,\n      end: this._model.finalSelectionEnd,\n      columnSelectMode: this._activeSelectionMode === SelectionMode.COLUMN\n    });\n  }\n\n  /**\n   * Checks if the current click was inside the current selection\n   * @param event The mouse event\n   */\n  private _isClickInSelection(event: MouseEvent): boolean {\n    const coords = this._getMouseBufferCoords(event);\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n\n    if (!start || !end || !coords) {\n      return false;\n    }\n\n    return this._areCoordsInSelection(coords, start, end);\n  }\n\n  protected _areCoordsInSelection(coords: [number, number], start: [number, number], end: [number, number]): boolean {\n    return (coords[1] > start[1] && coords[1] < end[1]) ||\n        (start[1] === end[1] && coords[1] === start[1] && coords[0] >= start[0] && coords[0] < end[0]) ||\n        (start[1] < end[1] && coords[1] === end[1] && coords[0] < end[0]) ||\n        (start[1] < end[1] && coords[1] === start[1] && coords[0] >= start[0]);\n  }\n\n  /**\n   * Selects word at the current mouse event coordinates.\n   * @param event The mouse event.\n   */\n  private _selectWordAtCursor(event: MouseEvent, allowWhitespaceOnlySelection: boolean): boolean {\n    // Check if there is a link under the cursor first and select that if so\n    const range = this._linkifier.currentLink?.link?.range;\n    if (range) {\n      this._model.selectionStart = [range.start.x - 1, range.start.y - 1];\n      this._model.selectionStartLength = getRangeLength(range, this._bufferService.cols);\n      this._model.selectionEnd = undefined;\n      return true;\n    }\n\n    const coords = this._getMouseBufferCoords(event);\n    if (coords) {\n      this._selectWordAt(coords, allowWhitespaceOnlySelection);\n      this._model.selectionEnd = undefined;\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Selects all text within the terminal.\n   */\n  public selectAll(): void {\n    this._model.isSelectAllActive = true;\n    this.refresh();\n    this._onSelectionChange.fire();\n  }\n\n  public selectLines(start: number, end: number): void {\n    this._model.clearSelection();\n    start = Math.max(start, 0);\n    end = Math.min(end, this._bufferService.buffer.lines.length - 1);\n    this._model.selectionStart = [0, start];\n    this._model.selectionEnd = [this._bufferService.cols, end];\n    this.refresh();\n    this._onSelectionChange.fire();\n  }\n\n  /**\n   * Handle the buffer being trimmed, adjust the selection position.\n   * @param amount The amount the buffer is being trimmed.\n   */\n  private _onTrim(amount: number): void {\n    const needsRefresh = this._model.onTrim(amount);\n    if (needsRefresh) {\n      this.refresh();\n    }\n  }\n\n  /**\n   * Gets the 0-based [x, y] buffer coordinates of the current mouse event.\n   * @param event The mouse event.\n   */\n  private _getMouseBufferCoords(event: MouseEvent): [number, number] | undefined {\n    const coords = this._mouseService.getCoords(event, this._screenElement, this._bufferService.cols, this._bufferService.rows, true);\n    if (!coords) {\n      return undefined;\n    }\n\n    // Convert to 0-based\n    coords[0]--;\n    coords[1]--;\n\n    // Convert viewport coords to buffer coords\n    coords[1] += this._bufferService.buffer.ydisp;\n    return coords;\n  }\n\n  /**\n   * Gets the amount the viewport should be scrolled based on how far out of the\n   * terminal the mouse is.\n   * @param event The mouse event.\n   */\n  private _getMouseEventScrollAmount(event: MouseEvent): number {\n    let offset = getCoordsRelativeToElement(event, this._screenElement)[1];\n    const terminalHeight = this._renderService.dimensions.canvasHeight;\n    if (offset >= 0 && offset <= terminalHeight) {\n      return 0;\n    }\n    if (offset > terminalHeight) {\n      offset -= terminalHeight;\n    }\n\n    offset = Math.min(Math.max(offset, -DRAG_SCROLL_MAX_THRESHOLD), DRAG_SCROLL_MAX_THRESHOLD);\n    offset /= DRAG_SCROLL_MAX_THRESHOLD;\n    return (offset / Math.abs(offset)) + Math.round(offset * (DRAG_SCROLL_MAX_SPEED - 1));\n  }\n\n  /**\n   * Returns whether the selection manager should force selection, regardless of\n   * whether the terminal is in mouse events mode.\n   * @param event The mouse event.\n   */\n  public shouldForceSelection(event: MouseEvent): boolean {\n    if (Browser.isMac) {\n      return event.altKey && this._optionsService.options.macOptionClickForcesSelection;\n    }\n\n    return event.shiftKey;\n  }\n\n  /**\n   * Handles te mousedown event, setting up for a new selection.\n   * @param event The mousedown event.\n   */\n  public onMouseDown(event: MouseEvent): void {\n    this._mouseDownTimeStamp = event.timeStamp;\n    // If we have selection, we want the context menu on right click even if the\n    // terminal is in mouse mode.\n    if (event.button === 2 && this.hasSelection) {\n      return;\n    }\n\n    // Only action the primary button\n    if (event.button !== 0) {\n      return;\n    }\n\n    // Allow selection when using a specific modifier key, even when disabled\n    if (!this._enabled) {\n      if (!this.shouldForceSelection(event)) {\n        return;\n      }\n\n      // Don't send the mouse down event to the current process, we want to select\n      event.stopPropagation();\n    }\n\n    // Tell the browser not to start a regular selection\n    event.preventDefault();\n\n    // Reset drag scroll state\n    this._dragScrollAmount = 0;\n\n    if (this._enabled && event.shiftKey) {\n      this._onIncrementalClick(event);\n    } else {\n      if (event.detail === 1) {\n        this._onSingleClick(event);\n      } else if (event.detail === 2) {\n        this._onDoubleClick(event);\n      } else if (event.detail === 3) {\n        this._onTripleClick(event);\n      }\n    }\n\n    this._addMouseDownListeners();\n    this.refresh(true);\n  }\n\n  /**\n   * Adds listeners when mousedown is triggered.\n   */\n  private _addMouseDownListeners(): void {\n    // Listen on the document so that dragging outside of viewport works\n    if (this._screenElement.ownerDocument) {\n      this._screenElement.ownerDocument.addEventListener('mousemove', this._mouseMoveListener);\n      this._screenElement.ownerDocument.addEventListener('mouseup', this._mouseUpListener);\n    }\n    this._dragScrollIntervalTimer = window.setInterval(() => this._dragScroll(), DRAG_SCROLL_INTERVAL);\n  }\n\n  /**\n   * Removes the listeners that are registered when mousedown is triggered.\n   */\n  private _removeMouseDownListeners(): void {\n    if (this._screenElement.ownerDocument) {\n      this._screenElement.ownerDocument.removeEventListener('mousemove', this._mouseMoveListener);\n      this._screenElement.ownerDocument.removeEventListener('mouseup', this._mouseUpListener);\n    }\n    clearInterval(this._dragScrollIntervalTimer);\n    this._dragScrollIntervalTimer = undefined;\n  }\n\n  /**\n   * Performs an incremental click, setting the selection end position to the mouse\n   * position.\n   * @param event The mouse event.\n   */\n  private _onIncrementalClick(event: MouseEvent): void {\n    if (this._model.selectionStart) {\n      this._model.selectionEnd = this._getMouseBufferCoords(event);\n    }\n  }\n\n  /**\n   * Performs a single click, resetting relevant state and setting the selection\n   * start position.\n   * @param event The mouse event.\n   */\n  private _onSingleClick(event: MouseEvent): void {\n    this._model.selectionStartLength = 0;\n    this._model.isSelectAllActive = false;\n    this._activeSelectionMode = this.shouldColumnSelect(event) ? SelectionMode.COLUMN : SelectionMode.NORMAL;\n\n    // Initialize the new selection\n    this._model.selectionStart = this._getMouseBufferCoords(event);\n    if (!this._model.selectionStart) {\n      return;\n    }\n    this._model.selectionEnd = undefined;\n\n    // Ensure the line exists\n    const line = this._bufferService.buffer.lines.get(this._model.selectionStart[1]);\n    if (!line) {\n      return;\n    }\n\n    // Return early if the click event is not in the buffer (eg. in scroll bar)\n    if (line.length === this._model.selectionStart[0]) {\n      return;\n    }\n\n    // If the mouse is over the second half of a wide character, adjust the\n    // selection to cover the whole character\n    if (line.hasWidth(this._model.selectionStart[0]) === 0) {\n      this._model.selectionStart[0]++;\n    }\n  }\n\n  /**\n   * Performs a double click, selecting the current word.\n   * @param event The mouse event.\n   */\n  private _onDoubleClick(event: MouseEvent): void {\n    if (this._selectWordAtCursor(event, true)) {\n      this._activeSelectionMode = SelectionMode.WORD;\n    }\n  }\n\n  /**\n   * Performs a triple click, selecting the current line and activating line\n   * select mode.\n   * @param event The mouse event.\n   */\n  private _onTripleClick(event: MouseEvent): void {\n    const coords = this._getMouseBufferCoords(event);\n    if (coords) {\n      this._activeSelectionMode = SelectionMode.LINE;\n      this._selectLineAt(coords[1]);\n    }\n  }\n\n  /**\n   * Returns whether the selection manager should operate in column select mode\n   * @param event the mouse or keyboard event\n   */\n  public shouldColumnSelect(event: KeyboardEvent | MouseEvent): boolean {\n    return event.altKey && !(Browser.isMac && this._optionsService.options.macOptionClickForcesSelection);\n  }\n\n  /**\n   * Handles the mousemove event when the mouse button is down, recording the\n   * end of the selection and refreshing the selection.\n   * @param event The mousemove event.\n   */\n  private _onMouseMove(event: MouseEvent): void {\n    // If the mousemove listener is active it means that a selection is\n    // currently being made, we should stop propagation to prevent mouse events\n    // to be sent to the pty.\n    event.stopImmediatePropagation();\n\n    // Do nothing if there is no selection start, this can happen if the first\n    // click in the terminal is an incremental click\n    if (!this._model.selectionStart) {\n      return;\n    }\n\n    // Record the previous position so we know whether to redraw the selection\n    // at the end.\n    const previousSelectionEnd = this._model.selectionEnd ? [this._model.selectionEnd[0], this._model.selectionEnd[1]] : null;\n\n    // Set the initial selection end based on the mouse coordinates\n    this._model.selectionEnd = this._getMouseBufferCoords(event);\n    if (!this._model.selectionEnd) {\n      this.refresh(true);\n      return;\n    }\n\n    // Select the entire line if line select mode is active.\n    if (this._activeSelectionMode === SelectionMode.LINE) {\n      if (this._model.selectionEnd[1] < this._model.selectionStart[1]) {\n        this._model.selectionEnd[0] = 0;\n      } else {\n        this._model.selectionEnd[0] = this._bufferService.cols;\n      }\n    } else if (this._activeSelectionMode === SelectionMode.WORD) {\n      this._selectToWordAt(this._model.selectionEnd);\n    }\n\n    // Determine the amount of scrolling that will happen.\n    this._dragScrollAmount = this._getMouseEventScrollAmount(event);\n\n    // If the cursor was above or below the viewport, make sure it's at the\n    // start or end of the viewport respectively. This should only happen when\n    // NOT in column select mode.\n    if (this._activeSelectionMode !== SelectionMode.COLUMN) {\n      if (this._dragScrollAmount > 0) {\n        this._model.selectionEnd[0] = this._bufferService.cols;\n      } else if (this._dragScrollAmount < 0) {\n        this._model.selectionEnd[0] = 0;\n      }\n    }\n\n    // If the character is a wide character include the cell to the right in the\n    // selection. Note that selections at the very end of the line will never\n    // have a character.\n    const buffer = this._bufferService.buffer;\n    if (this._model.selectionEnd[1] < buffer.lines.length) {\n      const line = buffer.lines.get(this._model.selectionEnd[1]);\n      if (line && line.hasWidth(this._model.selectionEnd[0]) === 0) {\n        this._model.selectionEnd[0]++;\n      }\n    }\n\n    // Only draw here if the selection changes.\n    if (!previousSelectionEnd ||\n      previousSelectionEnd[0] !== this._model.selectionEnd[0] ||\n      previousSelectionEnd[1] !== this._model.selectionEnd[1]) {\n      this.refresh(true);\n    }\n  }\n\n  /**\n   * The callback that occurs every DRAG_SCROLL_INTERVAL ms that does the\n   * scrolling of the viewport.\n   */\n  private _dragScroll(): void {\n    if (!this._model.selectionEnd || !this._model.selectionStart) {\n      return;\n    }\n    if (this._dragScrollAmount) {\n      this._onRequestScrollLines.fire({ amount: this._dragScrollAmount, suppressScrollEvent: false });\n      // Re-evaluate selection\n      // If the cursor was above or below the viewport, make sure it's at the\n      // start or end of the viewport respectively. This should only happen when\n      // NOT in column select mode.\n      const buffer = this._bufferService.buffer;\n      if (this._dragScrollAmount > 0) {\n        if (this._activeSelectionMode !== SelectionMode.COLUMN) {\n          this._model.selectionEnd[0] = this._bufferService.cols;\n        }\n        this._model.selectionEnd[1] = Math.min(buffer.ydisp + this._bufferService.rows, buffer.lines.length - 1);\n      } else {\n        if (this._activeSelectionMode !== SelectionMode.COLUMN) {\n          this._model.selectionEnd[0] = 0;\n        }\n        this._model.selectionEnd[1] = buffer.ydisp;\n      }\n      this.refresh();\n    }\n  }\n\n  /**\n   * Handles the mouseup event, removing the mousedown listeners.\n   * @param event The mouseup event.\n   */\n  private _onMouseUp(event: MouseEvent): void {\n    const timeElapsed = event.timeStamp - this._mouseDownTimeStamp;\n\n    this._removeMouseDownListeners();\n\n    if (this.selectionText.length <= 1 && timeElapsed < ALT_CLICK_MOVE_CURSOR_TIME && event.altKey && this._optionsService.getOption('altClickMovesCursor')) {\n      if (this._bufferService.buffer.ybase === this._bufferService.buffer.ydisp) {\n        const coordinates = this._mouseService.getCoords(\n          event,\n          this._element,\n          this._bufferService.cols,\n          this._bufferService.rows,\n          false\n        );\n        if (coordinates && coordinates[0] !== undefined && coordinates[1] !== undefined) {\n          const sequence = moveToCellSequence(coordinates[0] - 1, coordinates[1] - 1, this._bufferService, this._coreService.decPrivateModes.applicationCursorKeys);\n          this._coreService.triggerDataEvent(sequence, true);\n        }\n      }\n    } else {\n      this._fireEventIfSelectionChanged();\n    }\n  }\n\n  private _fireEventIfSelectionChanged(): void {\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n    const hasSelection = !!start && !!end && (start[0] !== end[0] || start[1] !== end[1]);\n\n    if (!hasSelection) {\n      if (this._oldHasSelection) {\n        this._fireOnSelectionChange(start, end, hasSelection);\n      }\n      return;\n    }\n\n    // Sanity check, these should not be undefined as there is a selection\n    if (!start || !end) {\n      return;\n    }\n\n    if (!this._oldSelectionStart || !this._oldSelectionEnd || (\n      start[0] !== this._oldSelectionStart[0] || start[1] !== this._oldSelectionStart[1] ||\n      end[0] !== this._oldSelectionEnd[0] || end[1] !== this._oldSelectionEnd[1])) {\n\n      this._fireOnSelectionChange(start, end, hasSelection);\n    }\n  }\n\n  private _fireOnSelectionChange(start: [number, number] | undefined, end: [number, number] | undefined, hasSelection: boolean): void {\n    this._oldSelectionStart = start;\n    this._oldSelectionEnd = end;\n    this._oldHasSelection = hasSelection;\n    this._onSelectionChange.fire();\n  }\n\n  private _onBufferActivate(e: {activeBuffer: IBuffer, inactiveBuffer: IBuffer}): void {\n    this.clearSelection();\n    // Only adjust the selection on trim, shiftElements is rarely used (only in\n    // reverseIndex) and delete in a splice is only ever used when the same\n    // number of elements was just added. Given this is could actually be\n    // beneficial to leave the selection as is for these cases.\n    this._trimListener.dispose();\n    this._trimListener = e.activeBuffer.lines.onTrim(amount => this._onTrim(amount));\n  }\n\n  /**\n   * Converts a viewport column to the character index on the buffer line, the\n   * latter takes into account wide characters.\n   * @param coords The coordinates to find the 2 index for.\n   */\n  private _convertViewportColToCharacterIndex(bufferLine: IBufferLine, coords: [number, number]): number {\n    let charIndex = coords[0];\n    for (let i = 0; coords[0] >= i; i++) {\n      const length = bufferLine.loadCell(i, this._workCell).getChars().length;\n      if (this._workCell.getWidth() === 0) {\n        // Wide characters aren't included in the line string so decrement the\n        // index so the index is back on the wide character.\n        charIndex--;\n      } else if (length > 1 && coords[0] !== i) {\n        // Emojis take up multiple characters, so adjust accordingly. For these\n        // we don't want ot include the character at the column as we're\n        // returning the start index in the string, not the end index.\n        charIndex += length - 1;\n      }\n    }\n    return charIndex;\n  }\n\n  public setSelection(col: number, row: number, length: number): void {\n    this._model.clearSelection();\n    this._removeMouseDownListeners();\n    this._model.selectionStart = [col, row];\n    this._model.selectionStartLength = length;\n    this.refresh();\n  }\n\n  public rightClickSelect(ev: MouseEvent): void {\n    if (!this._isClickInSelection(ev)) {\n      if (this._selectWordAtCursor(ev, false)) {\n        this.refresh(true);\n      }\n      this._fireEventIfSelectionChanged();\n    }\n  }\n\n  /**\n   * Gets positional information for the word at the coordinated specified.\n   * @param coords The coordinates to get the word at.\n   */\n  private _getWordAt(coords: [number, number], allowWhitespaceOnlySelection: boolean, followWrappedLinesAbove: boolean = true, followWrappedLinesBelow: boolean = true): IWordPosition | undefined {\n    // Ensure coords are within viewport (eg. not within scroll bar)\n    if (coords[0] >= this._bufferService.cols) {\n      return undefined;\n    }\n\n    const buffer = this._bufferService.buffer;\n    const bufferLine = buffer.lines.get(coords[1]);\n    if (!bufferLine) {\n      return undefined;\n    }\n\n    const line = buffer.translateBufferLineToString(coords[1], false);\n\n    // Get actual index, taking into consideration wide characters\n    let startIndex = this._convertViewportColToCharacterIndex(bufferLine, coords);\n    let endIndex = startIndex;\n\n    // Record offset to be used later\n    const charOffset = coords[0] - startIndex;\n    let leftWideCharCount = 0;\n    let rightWideCharCount = 0;\n    let leftLongCharOffset = 0;\n    let rightLongCharOffset = 0;\n\n    if (line.charAt(startIndex) === ' ') {\n      // Expand until non-whitespace is hit\n      while (startIndex > 0 && line.charAt(startIndex - 1) === ' ') {\n        startIndex--;\n      }\n      while (endIndex < line.length && line.charAt(endIndex + 1) === ' ') {\n        endIndex++;\n      }\n    } else {\n      // Expand until whitespace is hit. This algorithm works by scanning left\n      // and right from the starting position, keeping both the index format\n      // (line) and the column format (bufferLine) in sync. When a wide\n      // character is hit, it is recorded and the column index is adjusted.\n      let startCol = coords[0];\n      let endCol = coords[0];\n\n      // Consider the initial position, skip it and increment the wide char\n      // variable\n      if (bufferLine.getWidth(startCol) === 0) {\n        leftWideCharCount++;\n        startCol--;\n      }\n      if (bufferLine.getWidth(endCol) === 2) {\n        rightWideCharCount++;\n        endCol++;\n      }\n\n      // Adjust the end index for characters whose length are > 1 (emojis)\n      const length = bufferLine.getString(endCol).length;\n      if (length > 1) {\n        rightLongCharOffset += length - 1;\n        endIndex += length - 1;\n      }\n\n      // Expand the string in both directions until a space is hit\n      while (startCol > 0 && startIndex > 0 && !this._isCharWordSeparator(bufferLine.loadCell(startCol - 1, this._workCell))) {\n        bufferLine.loadCell(startCol - 1, this._workCell);\n        const length = this._workCell.getChars().length;\n        if (this._workCell.getWidth() === 0) {\n          // If the next character is a wide char, record it and skip the column\n          leftWideCharCount++;\n          startCol--;\n        } else if (length > 1) {\n          // If the next character's string is longer than 1 char (eg. emoji),\n          // adjust the index\n          leftLongCharOffset += length - 1;\n          startIndex -= length - 1;\n        }\n        startIndex--;\n        startCol--;\n      }\n      while (endCol < bufferLine.length && endIndex + 1 < line.length && !this._isCharWordSeparator(bufferLine.loadCell(endCol + 1, this._workCell))) {\n        bufferLine.loadCell(endCol + 1, this._workCell);\n        const length = this._workCell.getChars().length;\n        if (this._workCell.getWidth() === 2) {\n          // If the next character is a wide char, record it and skip the column\n          rightWideCharCount++;\n          endCol++;\n        } else if (length > 1) {\n          // If the next character's string is longer than 1 char (eg. emoji),\n          // adjust the index\n          rightLongCharOffset += length - 1;\n          endIndex += length - 1;\n        }\n        endIndex++;\n        endCol++;\n      }\n    }\n\n    // Incremenet the end index so it is at the start of the next character\n    endIndex++;\n\n    // Calculate the start _column_, converting the the string indexes back to\n    // column coordinates.\n    let start =\n        startIndex // The index of the selection's start char in the line string\n        + charOffset // The difference between the initial char's column and index\n        - leftWideCharCount // The number of wide chars left of the initial char\n        + leftLongCharOffset; // The number of additional chars left of the initial char added by columns with strings longer than 1 (emojis)\n\n    // Calculate the length in _columns_, converting the the string indexes back\n    // to column coordinates.\n    let length = Math.min(this._bufferService.cols, // Disallow lengths larger than the terminal cols\n      endIndex // The index of the selection's end char in the line string\n      - startIndex // The index of the selection's start char in the line string\n      + leftWideCharCount // The number of wide chars left of the initial char\n      + rightWideCharCount // The number of wide chars right of the initial char (inclusive)\n      - leftLongCharOffset // The number of additional chars left of the initial char added by columns with strings longer than 1 (emojis)\n      - rightLongCharOffset); // The number of additional chars right of the initial char (inclusive) added by columns with strings longer than 1 (emojis)\n\n    if (!allowWhitespaceOnlySelection && line.slice(startIndex, endIndex).trim() === '') {\n      return undefined;\n    }\n\n    // Recurse upwards if the line is wrapped and the word wraps to the above line\n    if (followWrappedLinesAbove) {\n      if (start === 0 && bufferLine.getCodePoint(0) !== 32 /* ' ' */) {\n        const previousBufferLine = buffer.lines.get(coords[1] - 1);\n        if (previousBufferLine && bufferLine.isWrapped && previousBufferLine.getCodePoint(this._bufferService.cols - 1) !== 32 /* ' ' */) {\n          const previousLineWordPosition = this._getWordAt([this._bufferService.cols - 1, coords[1] - 1], false, true, false);\n          if (previousLineWordPosition) {\n            const offset = this._bufferService.cols - previousLineWordPosition.start;\n            start -= offset;\n            length += offset;\n          }\n        }\n      }\n    }\n\n    // Recurse downwards if the line is wrapped and the word wraps to the next line\n    if (followWrappedLinesBelow) {\n      if (start + length === this._bufferService.cols && bufferLine.getCodePoint(this._bufferService.cols - 1) !== 32 /* ' ' */) {\n        const nextBufferLine = buffer.lines.get(coords[1] + 1);\n        if (nextBufferLine && nextBufferLine.isWrapped && nextBufferLine.getCodePoint(0) !== 32 /* ' ' */) {\n          const nextLineWordPosition = this._getWordAt([0, coords[1] + 1], false, false, true);\n          if (nextLineWordPosition) {\n            length += nextLineWordPosition.length;\n          }\n        }\n      }\n    }\n\n    return { start, length };\n  }\n\n  /**\n   * Selects the word at the coordinates specified.\n   * @param coords The coordinates to get the word at.\n   * @param allowWhitespaceOnlySelection If whitespace should be selected\n   */\n  protected _selectWordAt(coords: [number, number], allowWhitespaceOnlySelection: boolean): void {\n    const wordPosition = this._getWordAt(coords, allowWhitespaceOnlySelection);\n    if (wordPosition) {\n      // Adjust negative start value\n      while (wordPosition.start < 0) {\n        wordPosition.start += this._bufferService.cols;\n        coords[1]--;\n      }\n      this._model.selectionStart = [wordPosition.start, coords[1]];\n      this._model.selectionStartLength = wordPosition.length;\n    }\n  }\n\n  /**\n   * Sets the selection end to the word at the coordinated specified.\n   * @param coords The coordinates to get the word at.\n   */\n  private _selectToWordAt(coords: [number, number]): void {\n    const wordPosition = this._getWordAt(coords, true);\n    if (wordPosition) {\n      let endRow = coords[1];\n\n      // Adjust negative start value\n      while (wordPosition.start < 0) {\n        wordPosition.start += this._bufferService.cols;\n        endRow--;\n      }\n\n      // Adjust wrapped length value, this only needs to happen when values are reversed as in that\n      // case we're interested in the start of the word, not the end\n      if (!this._model.areSelectionValuesReversed()) {\n        while (wordPosition.start + wordPosition.length > this._bufferService.cols) {\n          wordPosition.length -= this._bufferService.cols;\n          endRow++;\n        }\n      }\n\n      this._model.selectionEnd = [this._model.areSelectionValuesReversed() ? wordPosition.start : wordPosition.start + wordPosition.length, endRow];\n    }\n  }\n\n  /**\n   * Gets whether the character is considered a word separator by the select\n   * word logic.\n   * @param char The character to check.\n   */\n  private _isCharWordSeparator(cell: CellData): boolean {\n    // Zero width characters are never separators as they are always to the\n    // right of wide characters\n    if (cell.getWidth() === 0) {\n      return false;\n    }\n    return this._optionsService.options.wordSeparator.indexOf(cell.getChars()) >= 0;\n  }\n\n  /**\n   * Selects the line specified.\n   * @param line The line index.\n   */\n  protected _selectLineAt(line: number): void {\n    const wrappedRange = this._bufferService.buffer.getWrappedRangeForLine(line);\n    this._model.selectionStart = [0, wrappedRange.first];\n    this._model.selectionEnd = [this._bufferService.cols, wrappedRange.last];\n    this._model.selectionStartLength = 0;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IEvent } from 'common/EventEmitter';\nimport { IRenderDimensions, IRenderer } from 'browser/renderer/Types';\nimport { IColorSet } from 'browser/Types';\nimport { ISelectionRedrawRequestEvent as ISelectionRequestRedrawEvent, ISelectionRequestScrollLinesEvent } from 'browser/selection/Types';\nimport { createDecorator } from 'common/services/ServiceRegistry';\nimport { IDisposable } from 'common/Types';\n\nexport const ICharSizeService = createDecorator<ICharSizeService>('CharSizeService');\nexport interface ICharSizeService {\n  serviceBrand: undefined;\n\n  readonly width: number;\n  readonly height: number;\n  readonly hasValidSize: boolean;\n\n  readonly onCharSizeChange: IEvent<void>;\n\n  measure(): void;\n}\n\nexport const ICoreBrowserService = createDecorator<ICoreBrowserService>('CoreBrowserService');\nexport interface ICoreBrowserService {\n  serviceBrand: undefined;\n\n  readonly isFocused: boolean;\n}\n\nexport const IMouseService = createDecorator<IMouseService>('MouseService');\nexport interface IMouseService {\n  serviceBrand: undefined;\n\n  getCoords(event: {clientX: number, clientY: number}, element: HTMLElement, colCount: number, rowCount: number, isSelection?: boolean): [number, number] | undefined;\n  getRawByteCoords(event: MouseEvent, element: HTMLElement, colCount: number, rowCount: number): { x: number, y: number } | undefined;\n}\n\nexport const IRenderService = createDecorator<IRenderService>('RenderService');\nexport interface IRenderService extends IDisposable {\n  serviceBrand: undefined;\n\n  onDimensionsChange: IEvent<IRenderDimensions>;\n  /**\n   * Fires when buffer changes are rendered. This does not fire when only cursor\n   * or selections are rendered.\n   */\n  onRenderedBufferChange: IEvent<{ start: number, end: number }>;\n  onRefreshRequest: IEvent<{ start: number, end: number }>;\n\n  dimensions: IRenderDimensions;\n\n  refreshRows(start: number, end: number): void;\n  clearTextureAtlas(): void;\n  resize(cols: number, rows: number): void;\n  changeOptions(): void;\n  setRenderer(renderer: IRenderer): void;\n  setColors(colors: IColorSet): void;\n  onDevicePixelRatioChange(): void;\n  onResize(cols: number, rows: number): void;\n  // TODO: Is this useful when we have onResize?\n  onCharSizeChanged(): void;\n  onBlur(): void;\n  onFocus(): void;\n  onSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean): void;\n  onCursorMove(): void;\n  clear(): void;\n}\n\nexport const ISelectionService = createDecorator<ISelectionService>('SelectionService');\nexport interface ISelectionService {\n  serviceBrand: undefined;\n\n  readonly selectionText: string;\n  readonly hasSelection: boolean;\n  readonly selectionStart: [number, number] | undefined;\n  readonly selectionEnd: [number, number] | undefined;\n\n  readonly onLinuxMouseSelection: IEvent<string>;\n  readonly onRequestRedraw: IEvent<ISelectionRequestRedrawEvent>;\n  readonly onRequestScrollLines: IEvent<ISelectionRequestScrollLinesEvent>;\n  readonly onSelectionChange: IEvent<void>;\n\n  disable(): void;\n  enable(): void;\n  reset(): void;\n  setSelection(row: number, col: number, length: number): void;\n  selectAll(): void;\n  selectLines(start: number, end: number): void;\n  clearSelection(): void;\n  rightClickSelect(event: MouseEvent): void;\n  shouldColumnSelect(event: KeyboardEvent | MouseEvent): boolean;\n  shouldForceSelection(event: MouseEvent): boolean;\n  refresh(isLinuxMouseSelection?: boolean): void;\n  onMouseDown(event: MouseEvent): void;\n}\n\nexport const ISoundService = createDecorator<ISoundService>('SoundService');\nexport interface ISoundService {\n  serviceBrand: undefined;\n\n  playBellSound(): void;\n}\n\n\nexport const ICharacterJoinerService = createDecorator<ICharacterJoinerService>('CharacterJoinerService');\nexport interface ICharacterJoinerService {\n  serviceBrand: undefined;\n\n  register(handler: (text: string) => [number, number][]): number;\n  deregister(joinerId: number): boolean;\n  getJoinedCharacters(row: number): [number, number][];\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IOptionsService } from 'common/services/Services';\nimport { ISoundService } from 'browser/services/Services';\n\nexport class SoundService implements ISoundService {\n  public serviceBrand: undefined;\n\n  private static _audioContext: AudioContext;\n\n  public static get audioContext(): AudioContext | null {\n    if (!SoundService._audioContext) {\n      const audioContextCtor: typeof AudioContext = (window as any).AudioContext || (window as any).webkitAudioContext;\n      if (!audioContextCtor) {\n        console.warn('Web Audio API is not supported by this browser. Consider upgrading to the latest version');\n        return null;\n      }\n      SoundService._audioContext = new audioContextCtor();\n    }\n    return SoundService._audioContext;\n  }\n\n  constructor(\n    @IOptionsService private _optionsService: IOptionsService\n  ) {\n  }\n\n  public playBellSound(): void {\n    const ctx = SoundService.audioContext;\n    if (!ctx) {\n      return;\n    }\n    const bellAudioSource = ctx.createBufferSource();\n    ctx.decodeAudioData(this._base64ToArrayBuffer(this._removeMimeType(this._optionsService.options.bellSound)), (buffer) => {\n      bellAudioSource.buffer = buffer;\n      bellAudioSource.connect(ctx.destination);\n      bellAudioSource.start(0);\n    });\n  }\n\n  private _base64ToArrayBuffer(base64: string): ArrayBuffer {\n    const binaryString = window.atob(base64);\n    const len = binaryString.length;\n    const bytes = new Uint8Array(len);\n\n    for (let i = 0; i < len; i++) {\n      bytes[i] = binaryString.charCodeAt(i);\n    }\n\n    return bytes.buffer;\n  }\n\n  private _removeMimeType(dataURI: string): string {\n    // Split the input to get the mime-type and the data itself\n    const splitUri = dataURI.split(',');\n\n    // Return only the data\n    return splitUri[1];\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICircularList } from 'common/Types';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\n\nexport interface IInsertEvent {\n  index: number;\n  amount: number;\n}\n\nexport interface IDeleteEvent {\n  index: number;\n  amount: number;\n}\n\n/**\n * Represents a circular list; a list with a maximum size that wraps around when push is called,\n * overriding values at the start of the list.\n */\nexport class CircularList<T> implements ICircularList<T> {\n  protected _array: (T | undefined)[];\n  private _startIndex: number;\n  private _length: number;\n\n  public onDeleteEmitter = new EventEmitter<IDeleteEvent>();\n  public get onDelete(): IEvent<IDeleteEvent> { return this.onDeleteEmitter.event; }\n  public onInsertEmitter = new EventEmitter<IInsertEvent>();\n  public get onInsert(): IEvent<IInsertEvent> { return this.onInsertEmitter.event; }\n  public onTrimEmitter = new EventEmitter<number>();\n  public get onTrim(): IEvent<number> { return this.onTrimEmitter.event; }\n\n  constructor(\n    private _maxLength: number\n  ) {\n    this._array = new Array<T>(this._maxLength);\n    this._startIndex = 0;\n    this._length = 0;\n  }\n\n  public get maxLength(): number {\n    return this._maxLength;\n  }\n\n  public set maxLength(newMaxLength: number) {\n    // There was no change in maxLength, return early.\n    if (this._maxLength === newMaxLength) {\n      return;\n    }\n\n    // Reconstruct array, starting at index 0. Only transfer values from the\n    // indexes 0 to length.\n    const newArray = new Array<T | undefined>(newMaxLength);\n    for (let i = 0; i < Math.min(newMaxLength, this.length); i++) {\n      newArray[i] = this._array[this._getCyclicIndex(i)];\n    }\n    this._array = newArray;\n    this._maxLength = newMaxLength;\n    this._startIndex = 0;\n  }\n\n  public get length(): number {\n    return this._length;\n  }\n\n  public set length(newLength: number) {\n    if (newLength > this._length) {\n      for (let i = this._length; i < newLength; i++) {\n        this._array[i] = undefined;\n      }\n    }\n    this._length = newLength;\n  }\n\n  /**\n   * Gets the value at an index.\n   *\n   * Note that for performance reasons there is no bounds checking here, the index reference is\n   * circular so this should always return a value and never throw.\n   * @param index The index of the value to get.\n   * @return The value corresponding to the index.\n   */\n  public get(index: number): T | undefined {\n    return this._array[this._getCyclicIndex(index)];\n  }\n\n  /**\n   * Sets the value at an index.\n   *\n   * Note that for performance reasons there is no bounds checking here, the index reference is\n   * circular so this should always return a value and never throw.\n   * @param index The index to set.\n   * @param value The value to set.\n   */\n  public set(index: number, value: T | undefined): void {\n    this._array[this._getCyclicIndex(index)] = value;\n  }\n\n  /**\n   * Pushes a new value onto the list, wrapping around to the start of the array, overriding index 0\n   * if the maximum length is reached.\n   * @param value The value to push onto the list.\n   */\n  public push(value: T): void {\n    this._array[this._getCyclicIndex(this._length)] = value;\n    if (this._length === this._maxLength) {\n      this._startIndex = ++this._startIndex % this._maxLength;\n      this.onTrimEmitter.fire(1);\n    } else {\n      this._length++;\n    }\n  }\n\n  /**\n   * Advance ringbuffer index and return current element for recycling.\n   * Note: The buffer must be full for this method to work.\n   * @throws When the buffer is not full.\n   */\n  public recycle(): T {\n    if (this._length !== this._maxLength) {\n      throw new Error('Can only recycle when the buffer is full');\n    }\n    this._startIndex = ++this._startIndex % this._maxLength;\n    this.onTrimEmitter.fire(1);\n    return this._array[this._getCyclicIndex(this._length - 1)]!;\n  }\n\n  /**\n   * Ringbuffer is at max length.\n   */\n  public get isFull(): boolean {\n    return this._length === this._maxLength;\n  }\n\n  /**\n   * Removes and returns the last value on the list.\n   * @return The popped value.\n   */\n  public pop(): T | undefined {\n    return this._array[this._getCyclicIndex(this._length-- - 1)];\n  }\n\n  /**\n   * Deletes and/or inserts items at a particular index (in that order). Unlike\n   * Array.prototype.splice, this operation does not return the deleted items as a new array in\n   * order to save creating a new array. Note that this operation may shift all values in the list\n   * in the worst case.\n   * @param start The index to delete and/or insert.\n   * @param deleteCount The number of elements to delete.\n   * @param items The items to insert.\n   */\n  public splice(start: number, deleteCount: number, ...items: T[]): void {\n    // Delete items\n    if (deleteCount) {\n      for (let i = start; i < this._length - deleteCount; i++) {\n        this._array[this._getCyclicIndex(i)] = this._array[this._getCyclicIndex(i + deleteCount)];\n      }\n      this._length -= deleteCount;\n      this.onDeleteEmitter.fire({ index: start, amount: deleteCount });\n    }\n\n    // Add items\n    for (let i = this._length - 1; i >= start; i--) {\n      this._array[this._getCyclicIndex(i + items.length)] = this._array[this._getCyclicIndex(i)];\n    }\n    for (let i = 0; i < items.length; i++) {\n      this._array[this._getCyclicIndex(start + i)] = items[i];\n    }\n    if (items.length) {\n      this.onInsertEmitter.fire({ index: start, amount: items.length });\n    }\n\n    // Adjust length as needed\n    if (this._length + items.length > this._maxLength) {\n      const countToTrim = (this._length + items.length) - this._maxLength;\n      this._startIndex += countToTrim;\n      this._length = this._maxLength;\n      this.onTrimEmitter.fire(countToTrim);\n    } else {\n      this._length += items.length;\n    }\n  }\n\n  /**\n   * Trims a number of items from the start of the list.\n   * @param count The number of items to remove.\n   */\n  public trimStart(count: number): void {\n    if (count > this._length) {\n      count = this._length;\n    }\n    this._startIndex += count;\n    this._length -= count;\n    this.onTrimEmitter.fire(count);\n  }\n\n  public shiftElements(start: number, count: number, offset: number): void {\n    if (count <= 0) {\n      return;\n    }\n    if (start < 0 || start >= this._length) {\n      throw new Error('start argument out of range');\n    }\n    if (start + offset < 0) {\n      throw new Error('Cannot shift elements in list beyond index 0');\n    }\n\n    if (offset > 0) {\n      for (let i = count - 1; i >= 0; i--) {\n        this.set(start + i + offset, this.get(start + i));\n      }\n      const expandListBy = (start + count + offset) - this._length;\n      if (expandListBy > 0) {\n        this._length += expandListBy;\n        while (this._length > this._maxLength) {\n          this._length--;\n          this._startIndex++;\n          this.onTrimEmitter.fire(1);\n        }\n      }\n    } else {\n      for (let i = 0; i < count; i++) {\n        this.set(start + i + offset, this.get(start + i));\n      }\n    }\n  }\n\n  /**\n   * Gets the cyclic index for the specified regular index. The cyclic index can then be used on the\n   * backing array to get the element associated with the regular index.\n   * @param index The regular index.\n   * @returns The cyclic index.\n   */\n  private _getCyclicIndex(index: number): number {\n    return (this._startIndex + index) % this._maxLength;\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/*\n * A simple utility for cloning values\n */\nexport function clone<T>(val: T, depth: number = 5): T {\n  if (typeof val !== 'object') {\n    return val;\n  }\n\n  // If we're cloning an array, use an array as the base, otherwise use an object\n  const clonedObject: any = Array.isArray(val) ? [] : {};\n\n  for (const key in val) {\n    // Recursively clone eack item unless we're at the maximum depth\n    clonedObject[key] = depth <= 1 ? val[key] : (val[key] && clone(val[key], depth - 1));\n  }\n\n  return clonedObject as T;\n}\n","/**\n * Copyright (c) 2014-2020 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n *\n * Originally forked from (with the author's permission):\n *   Fabrice Bellard's javascript vt100 for jslinux:\n *   http://bellard.org/jslinux/\n *   Copyright (c) 2011 Fabrice Bellard\n *   The original design remains. The terminal itself\n *   has been extended to include xterm CSI codes, among\n *   other features.\n *\n * Terminal Emulation References:\n *   http://vt100.net/\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.txt\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.html\n *   http://invisible-island.net/vttest/\n *   http://www.inwap.com/pdp10/ansicode.txt\n *   http://linux.die.net/man/4/console_codes\n *   http://linux.die.net/man/7/urxvt\n */\n\nimport { Disposable } from 'common/Lifecycle';\nimport { IInstantiationService, IOptionsService, IBufferService, ILogService, ICharsetService, ICoreService, ICoreMouseService, IUnicodeService, IDirtyRowService, LogLevelEnum } from 'common/services/Services';\nimport { InstantiationService } from 'common/services/InstantiationService';\nimport { LogService } from 'common/services/LogService';\nimport { BufferService, MINIMUM_COLS, MINIMUM_ROWS } from 'common/services/BufferService';\nimport { OptionsService } from 'common/services/OptionsService';\nimport { ITerminalOptions, IDisposable, IBufferLine, IAttributeData, ICoreTerminal, IKeyboardEvent, IScrollEvent, ScrollSource } from 'common/Types';\nimport { CoreService } from 'common/services/CoreService';\nimport { EventEmitter, IEvent, forwardEvent } from 'common/EventEmitter';\nimport { CoreMouseService } from 'common/services/CoreMouseService';\nimport { DirtyRowService } from 'common/services/DirtyRowService';\nimport { UnicodeService } from 'common/services/UnicodeService';\nimport { CharsetService } from 'common/services/CharsetService';\nimport { updateWindowsModeWrappedState } from 'common/WindowsMode';\nimport { IFunctionIdentifier, IParams } from 'common/parser/Types';\nimport { IBufferSet } from 'common/buffer/Types';\nimport { InputHandler } from 'common/InputHandler';\nimport { WriteBuffer } from 'common/input/WriteBuffer';\n\n// Only trigger this warning a single time per session\nlet hasWriteSyncWarnHappened = false;\n\nexport abstract class CoreTerminal extends Disposable implements ICoreTerminal {\n  protected readonly _instantiationService: IInstantiationService;\n  protected readonly _bufferService: IBufferService;\n  protected readonly _logService: ILogService;\n  protected readonly _charsetService: ICharsetService;\n  protected readonly _dirtyRowService: IDirtyRowService;\n\n  public readonly coreMouseService: ICoreMouseService;\n  public readonly coreService: ICoreService;\n  public readonly unicodeService: IUnicodeService;\n  public readonly optionsService: IOptionsService;\n\n  protected _inputHandler: InputHandler;\n  private _writeBuffer: WriteBuffer;\n  private _windowsMode: IDisposable | undefined;\n\n  private _onBinary = new EventEmitter<string>();\n  public get onBinary(): IEvent<string> { return this._onBinary.event; }\n  private _onData = new EventEmitter<string>();\n  public get onData(): IEvent<string> { return this._onData.event; }\n  protected _onLineFeed = new EventEmitter<void>();\n  public get onLineFeed(): IEvent<void> { return this._onLineFeed.event; }\n  private _onResize = new EventEmitter<{ cols: number, rows: number }>();\n  public get onResize(): IEvent<{ cols: number, rows: number }> { return this._onResize.event; }\n  protected _onScroll = new EventEmitter<IScrollEvent, void>();\n  /**\n   * Internally we track the source of the scroll but this is meaningless outside the library so\n   * it's filtered out.\n   */\n  protected _onScrollApi?: EventEmitter<number, void>;\n  public get onScroll(): IEvent<number, void> {\n    if (!this._onScrollApi) {\n      this._onScrollApi = new EventEmitter<number, void>();\n      this.register(this._onScroll.event(ev => {\n        this._onScrollApi?.fire(ev.position);\n      }));\n    }\n    return this._onScrollApi.event;\n  }\n\n  public get cols(): number { return this._bufferService.cols; }\n  public get rows(): number { return this._bufferService.rows; }\n  public get buffers(): IBufferSet { return this._bufferService.buffers; }\n  public get options(): ITerminalOptions { return this.optionsService.publicOptions; }\n\n  constructor(\n    options: Partial<ITerminalOptions>\n  ) {\n    super();\n\n    // Setup and initialize services\n    this._instantiationService = new InstantiationService();\n    this.optionsService = new OptionsService(options);\n    this._instantiationService.setService(IOptionsService, this.optionsService);\n    this._bufferService = this.register(this._instantiationService.createInstance(BufferService));\n    this._instantiationService.setService(IBufferService, this._bufferService);\n    this._logService = this._instantiationService.createInstance(LogService);\n    this._instantiationService.setService(ILogService, this._logService);\n    this.coreService = this.register(this._instantiationService.createInstance(CoreService, () => this.scrollToBottom()));\n    this._instantiationService.setService(ICoreService, this.coreService);\n    this.coreMouseService = this._instantiationService.createInstance(CoreMouseService);\n    this._instantiationService.setService(ICoreMouseService, this.coreMouseService);\n    this._dirtyRowService = this._instantiationService.createInstance(DirtyRowService);\n    this._instantiationService.setService(IDirtyRowService, this._dirtyRowService);\n    this.unicodeService = this._instantiationService.createInstance(UnicodeService);\n    this._instantiationService.setService(IUnicodeService, this.unicodeService);\n    this._charsetService = this._instantiationService.createInstance(CharsetService);\n    this._instantiationService.setService(ICharsetService, this._charsetService);\n\n    // Register input handler and handle/forward events\n    this._inputHandler = new InputHandler(this._bufferService, this._charsetService, this.coreService, this._dirtyRowService, this._logService, this.optionsService, this.coreMouseService, this.unicodeService);\n    this.register(forwardEvent(this._inputHandler.onLineFeed, this._onLineFeed));\n    this.register(this._inputHandler);\n\n    // Setup listeners\n    this.register(forwardEvent(this._bufferService.onResize, this._onResize));\n    this.register(forwardEvent(this.coreService.onData, this._onData));\n    this.register(forwardEvent(this.coreService.onBinary, this._onBinary));\n    this.register(this.optionsService.onOptionChange(key => this._updateOptions(key)));\n    this.register(this._bufferService.onScroll(event => {\n      this._onScroll.fire({ position: this._bufferService.buffer.ydisp, source: ScrollSource.TERMINAL });\n      this._dirtyRowService.markRangeDirty(this._bufferService.buffer.scrollTop, this._bufferService.buffer.scrollBottom);\n    }));\n    this.register(this._inputHandler.onScroll(event => {\n      this._onScroll.fire({ position: this._bufferService.buffer.ydisp, source: ScrollSource.TERMINAL });\n      this._dirtyRowService.markRangeDirty(this._bufferService.buffer.scrollTop, this._bufferService.buffer.scrollBottom);\n    }));\n\n    // Setup WriteBuffer\n    this._writeBuffer = new WriteBuffer((data, promiseResult) => this._inputHandler.parse(data, promiseResult));\n  }\n\n  public dispose(): void {\n    if (this._isDisposed) {\n      return;\n    }\n    super.dispose();\n    this._windowsMode?.dispose();\n    this._windowsMode = undefined;\n  }\n\n  public write(data: string | Uint8Array, callback?: () => void): void {\n    this._writeBuffer.write(data, callback);\n  }\n\n  /**\n   * Write data to terminal synchonously.\n   *\n   * This method is unreliable with async parser handlers, thus should not\n   * be used anymore. If you need blocking semantics on data input consider\n   * `write` with a callback instead.\n   *\n   * @deprecated Unreliable, will be removed soon.\n   */\n  public writeSync(data: string | Uint8Array, maxSubsequentCalls?: number): void {\n    if (this._logService.logLevel <= LogLevelEnum.WARN && !hasWriteSyncWarnHappened) {\n      this._logService.warn('writeSync is unreliable and will be removed soon.');\n      hasWriteSyncWarnHappened = true;\n    }\n    this._writeBuffer.writeSync(data, maxSubsequentCalls);\n  }\n\n  public resize(x: number, y: number): void {\n    if (isNaN(x) || isNaN(y)) {\n      return;\n    }\n\n    x = Math.max(x, MINIMUM_COLS);\n    y = Math.max(y, MINIMUM_ROWS);\n\n    this._bufferService.resize(x, y);\n  }\n\n  /**\n   * Scroll the terminal down 1 row, creating a blank line.\n   * @param isWrapped Whether the new line is wrapped from the previous line.\n   */\n  public scroll(eraseAttr: IAttributeData, isWrapped: boolean = false): void {\n    this._bufferService.scroll(eraseAttr, isWrapped);\n  }\n\n  /**\n   * Scroll the display of the terminal\n   * @param disp The number of lines to scroll down (negative scroll up).\n   * @param suppressScrollEvent Don't emit the scroll event as scrollLines. This is used\n   * to avoid unwanted events being handled by the viewport when the event was triggered from the\n   * viewport originally.\n   */\n  public scrollLines(disp: number, suppressScrollEvent?: boolean, source?: ScrollSource): void {\n    this._bufferService.scrollLines(disp, suppressScrollEvent, source);\n  }\n\n  /**\n   * Scroll the display of the terminal by a number of pages.\n   * @param pageCount The number of pages to scroll (negative scrolls up).\n   */\n  public scrollPages(pageCount: number): void {\n    this._bufferService.scrollPages(pageCount);\n  }\n\n  /**\n   * Scrolls the display of the terminal to the top.\n   */\n  public scrollToTop(): void {\n    this._bufferService.scrollToTop();\n  }\n\n  /**\n   * Scrolls the display of the terminal to the bottom.\n   */\n  public scrollToBottom(): void {\n    this._bufferService.scrollToBottom();\n  }\n\n  public scrollToLine(line: number): void {\n    this._bufferService.scrollToLine(line);\n  }\n\n  /** Add handler for ESC escape sequence. See xterm.d.ts for details. */\n  public registerEscHandler(id: IFunctionIdentifier, callback: () => boolean | Promise<boolean>): IDisposable {\n    return this._inputHandler.registerEscHandler(id, callback);\n  }\n\n  /** Add handler for DCS escape sequence. See xterm.d.ts for details. */\n  public registerDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: IParams) => boolean | Promise<boolean>): IDisposable {\n    return this._inputHandler.registerDcsHandler(id, callback);\n  }\n\n  /** Add handler for CSI escape sequence. See xterm.d.ts for details. */\n  public registerCsiHandler(id: IFunctionIdentifier, callback: (params: IParams) => boolean | Promise<boolean>): IDisposable {\n    return this._inputHandler.registerCsiHandler(id, callback);\n  }\n\n  /** Add handler for OSC escape sequence. See xterm.d.ts for details. */\n  public registerOscHandler(ident: number, callback: (data: string) => boolean | Promise<boolean>): IDisposable {\n    return this._inputHandler.registerOscHandler(ident, callback);\n  }\n\n  protected _setup(): void {\n    if (this.optionsService.options.windowsMode) {\n      this._enableWindowsMode();\n    }\n  }\n\n  public reset(): void {\n    this._inputHandler.reset();\n    this._bufferService.reset();\n    this._charsetService.reset();\n    this.coreService.reset();\n    this.coreMouseService.reset();\n  }\n\n  protected _updateOptions(key: string): void {\n    // TODO: These listeners should be owned by individual components\n    switch (key) {\n      case 'scrollback':\n        this.buffers.resize(this.cols, this.rows);\n        break;\n      case 'windowsMode':\n        if (this.optionsService.options.windowsMode) {\n          this._enableWindowsMode();\n        } else {\n          this._windowsMode?.dispose();\n          this._windowsMode = undefined;\n        }\n        break;\n    }\n  }\n\n  protected _enableWindowsMode(): void {\n    if (!this._windowsMode) {\n      const disposables: IDisposable[] = [];\n      disposables.push(this.onLineFeed(updateWindowsModeWrappedState.bind(null, this._bufferService)));\n      disposables.push(this.registerCsiHandler({ final: 'H' }, () => {\n        updateWindowsModeWrappedState(this._bufferService);\n        return false;\n      }));\n      this._windowsMode = {\n        dispose: () => {\n          for (const d of disposables) {\n            d.dispose();\n          }\n        }\n      };\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\ninterface IListener<T, U = void> {\n  (arg1: T, arg2: U): void;\n}\n\nexport interface IEvent<T, U = void> {\n  (listener: (arg1: T, arg2: U) => any): IDisposable;\n}\n\nexport interface IEventEmitter<T, U = void> {\n  event: IEvent<T, U>;\n  fire(arg1: T, arg2: U): void;\n  dispose(): void;\n}\n\nexport class EventEmitter<T, U = void> implements IEventEmitter<T, U> {\n  private _listeners: IListener<T, U>[] = [];\n  private _event?: IEvent<T, U>;\n  private _disposed: boolean = false;\n\n  public get event(): IEvent<T, U> {\n    if (!this._event) {\n      this._event = (listener: (arg1: T, arg2: U) => any) => {\n        this._listeners.push(listener);\n        const disposable = {\n          dispose: () => {\n            if (!this._disposed) {\n              for (let i = 0; i < this._listeners.length; i++) {\n                if (this._listeners[i] === listener) {\n                  this._listeners.splice(i, 1);\n                  return;\n                }\n              }\n            }\n          }\n        };\n        return disposable;\n      };\n    }\n    return this._event;\n  }\n\n  public fire(arg1: T, arg2: U): void {\n    const queue: IListener<T, U>[] = [];\n    for (let i = 0; i < this._listeners.length; i++) {\n      queue.push(this._listeners[i]);\n    }\n    for (let i = 0; i < queue.length; i++) {\n      queue[i].call(undefined, arg1, arg2);\n    }\n  }\n\n  public dispose(): void {\n    if (this._listeners) {\n      this._listeners.length = 0;\n    }\n    this._disposed = true;\n  }\n}\n\nexport function forwardEvent<T>(from: IEvent<T>, to: IEventEmitter<T>): IDisposable {\n  return from(e => to.fire(e));\n}\n","/**\n * Copyright (c) 2014 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n */\n\nimport { IInputHandler, IAttributeData, IDisposable, IWindowOptions, IAnsiColorChangeEvent, IParseStack } from 'common/Types';\nimport { C0, C1 } from 'common/data/EscapeSequences';\nimport { CHARSETS, DEFAULT_CHARSET } from 'common/data/Charsets';\nimport { EscapeSequenceParser } from 'common/parser/EscapeSequenceParser';\nimport { Disposable } from 'common/Lifecycle';\nimport { concat } from 'common/TypedArrayUtils';\nimport { StringToUtf32, stringFromCodePoint, utf32ToString, Utf8ToUtf32 } from 'common/input/TextDecoder';\nimport { DEFAULT_ATTR_DATA } from 'common/buffer/BufferLine';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { IParsingState, IDcsHandler, IEscapeSequenceParser, IParams, IFunctionIdentifier } from 'common/parser/Types';\nimport { NULL_CELL_CODE, NULL_CELL_WIDTH, Attributes, FgFlags, BgFlags, Content, UnderlineStyle } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { ICoreService, IBufferService, IOptionsService, ILogService, IDirtyRowService, ICoreMouseService, ICharsetService, IUnicodeService, LogLevelEnum } from 'common/services/Services';\nimport { OscHandler } from 'common/parser/OscParser';\nimport { DcsHandler } from 'common/parser/DcsParser';\nimport { IBuffer } from 'common/buffer/Types';\n\n/**\n * Map collect to glevel. Used in `selectCharset`.\n */\nconst GLEVEL: {[key: string]: number} = { '(': 0, ')': 1, '*': 2, '+': 3, '-': 1, '.': 2 };\n\n/**\n * VT commands done by the parser - FIXME: move this to the parser?\n */\n// @vt: #Y   ESC   CSI   \"Control Sequence Introducer\"   \"ESC [\"   \"Start of a CSI sequence.\"\n// @vt: #Y   ESC   OSC   \"Operating System Command\"      \"ESC ]\"   \"Start of an OSC sequence.\"\n// @vt: #Y   ESC   DCS   \"Device Control String\"         \"ESC P\"   \"Start of a DCS sequence.\"\n// @vt: #Y   ESC   ST    \"String Terminator\"             \"ESC \\\"   \"Terminator used for string type sequences.\"\n// @vt: #Y   ESC   PM    \"Privacy Message\"               \"ESC ^\"   \"Start of a privacy message.\"\n// @vt: #Y   ESC   APC   \"Application Program Command\"   \"ESC _\"   \"Start of an APC sequence.\"\n// @vt: #Y   C1    CSI   \"Control Sequence Introducer\"   \"\\x9B\"    \"Start of a CSI sequence.\"\n// @vt: #Y   C1    OSC   \"Operating System Command\"      \"\\x9D\"    \"Start of an OSC sequence.\"\n// @vt: #Y   C1    DCS   \"Device Control String\"         \"\\x90\"    \"Start of a DCS sequence.\"\n// @vt: #Y   C1    ST    \"String Terminator\"             \"\\x9C\"    \"Terminator used for string type sequences.\"\n// @vt: #Y   C1    PM    \"Privacy Message\"               \"\\x9E\"    \"Start of a privacy message.\"\n// @vt: #Y   C1    APC   \"Application Program Command\"   \"\\x9F\"    \"Start of an APC sequence.\"\n// @vt: #Y   C0    NUL   \"Null\"                          \"\\0, \\x00\"  \"NUL is ignored.\"\n// @vt: #Y   C0    ESC   \"Escape\"                        \"\\e, \\x1B\"  \"Start of a sequence. Cancels any other sequence.\"\n\n/**\n * Document common VT features here that are currently unsupported\n */\n// @vt: #N   DCS   SIXEL   \"SIXEL Graphics\"  \"DCS Ps ; Ps ; Ps ; q \tPt ST\"   \"Draw SIXEL image starting at cursor position.\"\n// @vt: #N   OSC    1   \"Set Icon Name\"  \"OSC 1 ; Pt BEL\"  \"Set icon name.\"\n\n/**\n * Max length of the UTF32 input buffer. Real memory consumption is 4 times higher.\n */\nconst MAX_PARSEBUFFER_LENGTH = 131072;\n\n/**\n * Limit length of title and icon name stacks.\n */\nconst STACK_LIMIT = 10;\n\n// map params to window option\nfunction paramToWindowOption(n: number, opts: IWindowOptions): boolean {\n  if (n > 24) {\n    return opts.setWinLines || false;\n  }\n  switch (n) {\n    case 1: return !!opts.restoreWin;\n    case 2: return !!opts.minimizeWin;\n    case 3: return !!opts.setWinPosition;\n    case 4: return !!opts.setWinSizePixels;\n    case 5: return !!opts.raiseWin;\n    case 6: return !!opts.lowerWin;\n    case 7: return !!opts.refreshWin;\n    case 8: return !!opts.setWinSizeChars;\n    case 9: return !!opts.maximizeWin;\n    case 10: return !!opts.fullscreenWin;\n    case 11: return !!opts.getWinState;\n    case 13: return !!opts.getWinPosition;\n    case 14: return !!opts.getWinSizePixels;\n    case 15: return !!opts.getScreenSizePixels;\n    case 16: return !!opts.getCellSizePixels;\n    case 18: return !!opts.getWinSizeChars;\n    case 19: return !!opts.getScreenSizeChars;\n    case 20: return !!opts.getIconTitle;\n    case 21: return !!opts.getWinTitle;\n    case 22: return !!opts.pushTitle;\n    case 23: return !!opts.popTitle;\n    case 24: return !!opts.setWinLines;\n  }\n  return false;\n}\n\nexport enum WindowsOptionsReportType {\n  GET_WIN_SIZE_PIXELS = 0,\n  GET_CELL_SIZE_PIXELS = 1\n}\n\n// create a warning log if an async handler takes longer than the limit (in ms)\nconst SLOW_ASYNC_LIMIT = 5000;\n\n/**\n * DCS subparser implementations\n */\n\n/**\n * DCS $ q Pt ST\n *   DECRQSS (https://vt100.net/docs/vt510-rm/DECRQSS.html)\n *   Request Status String (DECRQSS), VT420 and up.\n *   Response: DECRPSS (https://vt100.net/docs/vt510-rm/DECRPSS.html)\n *\n * @vt: #P[See limited support below.]  DCS   DECRQSS   \"Request Selection or Setting\"  \"DCS $ q Pt ST\"   \"Request several terminal settings.\"\n * Response is in the form `ESC P 1 $ r Pt ST` for valid requests, where `Pt` contains the corresponding CSI string,\n * `ESC P 0 ST` for invalid requests.\n *\n * Supported requests and responses:\n *\n * | Type                             | Request           | Response (`Pt`)                                       |\n * | -------------------------------- | ----------------- | ----------------------------------------------------- |\n * | Graphic Rendition (SGR)          | `DCS $ q m ST`    | always reporting `0m` (currently broken)              |\n * | Top and Bottom Margins (DECSTBM) | `DCS $ q r ST`    | `Ps ; Ps r`                                           |\n * | Cursor Style (DECSCUSR)          | `DCS $ q SP q ST` | `Ps SP q`                                             |\n * | Protection Attribute (DECSCA)    | `DCS $ q \" q ST`  | always reporting `0 \" q` (DECSCA is unsupported)      |\n * | Conformance Level (DECSCL)       | `DCS $ q \" p ST`  | always reporting `61 ; 1 \" p` (DECSCL is unsupported) |\n *\n *\n * TODO:\n * - fix SGR report\n * - either implement DECSCA or remove the report\n * - either check which conformance is better suited or remove the report completely\n *   --> we are currently a mixture of all up to VT400 but dont follow anyone strictly\n */\nclass DECRQSS implements IDcsHandler {\n  private _data: Uint32Array = new Uint32Array(0);\n\n  constructor(\n    private _bufferService: IBufferService,\n    private _coreService: ICoreService,\n    private _logService: ILogService,\n    private _optionsService: IOptionsService\n  ) { }\n\n  public hook(params: IParams): void {\n    this._data = new Uint32Array(0);\n  }\n\n  public put(data: Uint32Array, start: number, end: number): void {\n    this._data = concat(this._data, data.subarray(start, end));\n  }\n\n  public unhook(success: boolean): boolean {\n    if (!success) {\n      this._data = new Uint32Array(0);\n      return true;\n    }\n    const data = utf32ToString(this._data);\n    this._data = new Uint32Array(0);\n    switch (data) {\n      // valid: DCS 1 $ r Pt ST (xterm)\n      case '\"q': // DECSCA\n        this._coreService.triggerDataEvent(`${C0.ESC}P1$r0\"q${C0.ESC}\\\\`);\n        break;\n      case '\"p': // DECSCL\n        this._coreService.triggerDataEvent(`${C0.ESC}P1$r61;1\"p${C0.ESC}\\\\`);\n        break;\n      case 'r': // DECSTBM\n        const pt = '' + (this._bufferService.buffer.scrollTop + 1) +\n                ';' + (this._bufferService.buffer.scrollBottom + 1) + 'r';\n        this._coreService.triggerDataEvent(`${C0.ESC}P1$r${pt}${C0.ESC}\\\\`);\n        break;\n      case 'm': // SGR\n        // TODO: report real settings instead of 0m\n        this._coreService.triggerDataEvent(`${C0.ESC}P1$r0m${C0.ESC}\\\\`);\n        break;\n      case ' q': // DECSCUSR\n        const STYLES: {[key: string]: number} = { 'block': 2, 'underline': 4, 'bar': 6 };\n        let style = STYLES[this._optionsService.options.cursorStyle];\n        style -= this._optionsService.options.cursorBlink ? 1 : 0;\n        this._coreService.triggerDataEvent(`${C0.ESC}P1$r${style} q${C0.ESC}\\\\`);\n        break;\n      default:\n        // invalid: DCS 0 $ r Pt ST (xterm)\n        this._logService.debug('Unknown DCS $q %s', data);\n        this._coreService.triggerDataEvent(`${C0.ESC}P0$r${C0.ESC}\\\\`);\n    }\n    return true;\n  }\n}\n\n/**\n * DCS Ps; Ps| Pt ST\n *   DECUDK (https://vt100.net/docs/vt510-rm/DECUDK.html)\n *   not supported\n *\n * @vt: #N  DCS   DECUDK   \"User Defined Keys\"  \"DCS Ps ; Ps | Pt ST\"   \"Definitions for user-defined keys.\"\n */\n\n/**\n * DCS + q Pt ST (xterm)\n *   Request Terminfo String\n *   not implemented\n *\n * @vt: #N  DCS   XTGETTCAP   \"Request Terminfo String\"  \"DCS + q Pt ST\"   \"Request Terminfo String.\"\n */\n\n/**\n * DCS + p Pt ST (xterm)\n *   Set Terminfo Data\n *   not supported\n *\n * @vt: #N  DCS   XTSETTCAP   \"Set Terminfo Data\"  \"DCS + p Pt ST\"   \"Set Terminfo Data.\"\n */\n\n\n\n/**\n * The terminal's standard implementation of IInputHandler, this handles all\n * input from the Parser.\n *\n * Refer to http://invisible-island.net/xterm/ctlseqs/ctlseqs.html to understand\n * each function's header comment.\n */\nexport class InputHandler extends Disposable implements IInputHandler {\n  private _parseBuffer: Uint32Array = new Uint32Array(4096);\n  private _stringDecoder: StringToUtf32 = new StringToUtf32();\n  private _utf8Decoder: Utf8ToUtf32 = new Utf8ToUtf32();\n  private _workCell: CellData = new CellData();\n  private _windowTitle = '';\n  private _iconName = '';\n  protected _windowTitleStack: string[] = [];\n  protected _iconNameStack: string[] = [];\n\n  private _curAttrData: IAttributeData = DEFAULT_ATTR_DATA.clone();\n  private _eraseAttrDataInternal: IAttributeData = DEFAULT_ATTR_DATA.clone();\n\n  private _activeBuffer: IBuffer;\n\n  private _onRequestBell = new EventEmitter<void>();\n  public get onRequestBell(): IEvent<void> { return this._onRequestBell.event; }\n  private _onRequestRefreshRows = new EventEmitter<number, number>();\n  public get onRequestRefreshRows(): IEvent<number, number> { return this._onRequestRefreshRows.event; }\n  private _onRequestReset = new EventEmitter<void>();\n  public get onRequestReset(): IEvent<void> { return this._onRequestReset.event; }\n  private _onRequestSendFocus = new EventEmitter<void>();\n  public get onRequestSendFocus(): IEvent<void> { return this._onRequestSendFocus.event; }\n  private _onRequestSyncScrollBar = new EventEmitter<void>();\n  public get onRequestSyncScrollBar(): IEvent<void> { return this._onRequestSyncScrollBar.event; }\n  private _onRequestWindowsOptionsReport = new EventEmitter<WindowsOptionsReportType>();\n  public get onRequestWindowsOptionsReport(): IEvent<WindowsOptionsReportType> { return this._onRequestWindowsOptionsReport.event; }\n\n  private _onA11yChar = new EventEmitter<string>();\n  public get onA11yChar(): IEvent<string> { return this._onA11yChar.event; }\n  private _onA11yTab = new EventEmitter<number>();\n  public get onA11yTab(): IEvent<number> { return this._onA11yTab.event; }\n  private _onCursorMove = new EventEmitter<void>();\n  public get onCursorMove(): IEvent<void> { return this._onCursorMove.event; }\n  private _onLineFeed = new EventEmitter<void>();\n  public get onLineFeed(): IEvent<void> { return this._onLineFeed.event; }\n  private _onScroll = new EventEmitter<number>();\n  public get onScroll(): IEvent<number> { return this._onScroll.event; }\n  private _onTitleChange = new EventEmitter<string>();\n  public get onTitleChange(): IEvent<string> { return this._onTitleChange.event; }\n  private _onAnsiColorChange = new EventEmitter<IAnsiColorChangeEvent>();\n  public get onAnsiColorChange(): IEvent<IAnsiColorChangeEvent> { return this._onAnsiColorChange.event; }\n\n  private _parseStack: IParseStack = {\n    paused: false,\n    cursorStartX: 0,\n    cursorStartY: 0,\n    decodedLength: 0,\n    position: 0\n  };\n\n  constructor(\n    private readonly _bufferService: IBufferService,\n    private readonly _charsetService: ICharsetService,\n    private readonly _coreService: ICoreService,\n    private readonly _dirtyRowService: IDirtyRowService,\n    private readonly _logService: ILogService,\n    private readonly _optionsService: IOptionsService,\n    private readonly _coreMouseService: ICoreMouseService,\n    private readonly _unicodeService: IUnicodeService,\n    private readonly _parser: IEscapeSequenceParser = new EscapeSequenceParser()\n  ) {\n    super();\n    this.register(this._parser);\n\n    // Track properties used in performance critical code manually to avoid using slow getters\n    this._activeBuffer = this._bufferService.buffer;\n    this.register(this._bufferService.buffers.onBufferActivate(e => this._activeBuffer = e.activeBuffer));\n\n    /**\n     * custom fallback handlers\n     */\n    this._parser.setCsiHandlerFallback((ident, params) => {\n      this._logService.debug('Unknown CSI code: ', { identifier: this._parser.identToString(ident), params: params.toArray() });\n    });\n    this._parser.setEscHandlerFallback(ident => {\n      this._logService.debug('Unknown ESC code: ', { identifier: this._parser.identToString(ident) });\n    });\n    this._parser.setExecuteHandlerFallback(code => {\n      this._logService.debug('Unknown EXECUTE code: ', { code });\n    });\n    this._parser.setOscHandlerFallback((identifier, action, data) => {\n      this._logService.debug('Unknown OSC code: ', { identifier, action, data });\n    });\n    this._parser.setDcsHandlerFallback((ident, action, payload) => {\n      if (action === 'HOOK') {\n        payload = payload.toArray();\n      }\n      this._logService.debug('Unknown DCS code: ', { identifier: this._parser.identToString(ident), action, payload });\n    });\n\n    /**\n     * print handler\n     */\n    this._parser.setPrintHandler((data, start, end) => this.print(data, start, end));\n\n    /**\n     * CSI handler\n     */\n    this._parser.registerCsiHandler({ final: '@' }, params => this.insertChars(params));\n    this._parser.registerCsiHandler({ intermediates: ' ', final: '@' }, params => this.scrollLeft(params));\n    this._parser.registerCsiHandler({ final: 'A' }, params => this.cursorUp(params));\n    this._parser.registerCsiHandler({ intermediates: ' ', final: 'A' }, params => this.scrollRight(params));\n    this._parser.registerCsiHandler({ final: 'B' }, params => this.cursorDown(params));\n    this._parser.registerCsiHandler({ final: 'C' }, params => this.cursorForward(params));\n    this._parser.registerCsiHandler({ final: 'D' }, params => this.cursorBackward(params));\n    this._parser.registerCsiHandler({ final: 'E' }, params => this.cursorNextLine(params));\n    this._parser.registerCsiHandler({ final: 'F' }, params => this.cursorPrecedingLine(params));\n    this._parser.registerCsiHandler({ final: 'G' }, params => this.cursorCharAbsolute(params));\n    this._parser.registerCsiHandler({ final: 'H' }, params => this.cursorPosition(params));\n    this._parser.registerCsiHandler({ final: 'I' }, params => this.cursorForwardTab(params));\n    this._parser.registerCsiHandler({ final: 'J' }, params => this.eraseInDisplay(params));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'J' }, params => this.eraseInDisplay(params));\n    this._parser.registerCsiHandler({ final: 'K' }, params => this.eraseInLine(params));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'K' }, params => this.eraseInLine(params));\n    this._parser.registerCsiHandler({ final: 'L' }, params => this.insertLines(params));\n    this._parser.registerCsiHandler({ final: 'M' }, params => this.deleteLines(params));\n    this._parser.registerCsiHandler({ final: 'P' }, params => this.deleteChars(params));\n    this._parser.registerCsiHandler({ final: 'S' }, params => this.scrollUp(params));\n    this._parser.registerCsiHandler({ final: 'T' }, params => this.scrollDown(params));\n    this._parser.registerCsiHandler({ final: 'X' }, params => this.eraseChars(params));\n    this._parser.registerCsiHandler({ final: 'Z' }, params => this.cursorBackwardTab(params));\n    this._parser.registerCsiHandler({ final: '`' }, params => this.charPosAbsolute(params));\n    this._parser.registerCsiHandler({ final: 'a' }, params => this.hPositionRelative(params));\n    this._parser.registerCsiHandler({ final: 'b' }, params => this.repeatPrecedingCharacter(params));\n    this._parser.registerCsiHandler({ final: 'c' }, params => this.sendDeviceAttributesPrimary(params));\n    this._parser.registerCsiHandler({ prefix: '>', final: 'c' }, params => this.sendDeviceAttributesSecondary(params));\n    this._parser.registerCsiHandler({ final: 'd' }, params => this.linePosAbsolute(params));\n    this._parser.registerCsiHandler({ final: 'e' }, params => this.vPositionRelative(params));\n    this._parser.registerCsiHandler({ final: 'f' }, params => this.hVPosition(params));\n    this._parser.registerCsiHandler({ final: 'g' }, params => this.tabClear(params));\n    this._parser.registerCsiHandler({ final: 'h' }, params => this.setMode(params));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'h' }, params => this.setModePrivate(params));\n    this._parser.registerCsiHandler({ final: 'l' }, params => this.resetMode(params));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'l' }, params => this.resetModePrivate(params));\n    this._parser.registerCsiHandler({ final: 'm' }, params => this.charAttributes(params));\n    this._parser.registerCsiHandler({ final: 'n' }, params => this.deviceStatus(params));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'n' }, params => this.deviceStatusPrivate(params));\n    this._parser.registerCsiHandler({ intermediates: '!', final: 'p' }, params => this.softReset(params));\n    this._parser.registerCsiHandler({ intermediates: ' ', final: 'q' }, params => this.setCursorStyle(params));\n    this._parser.registerCsiHandler({ final: 'r' }, params => this.setScrollRegion(params));\n    this._parser.registerCsiHandler({ final: 's' }, params => this.saveCursor(params));\n    this._parser.registerCsiHandler({ final: 't' }, params => this.windowOptions(params));\n    this._parser.registerCsiHandler({ final: 'u' }, params => this.restoreCursor(params));\n    this._parser.registerCsiHandler({ intermediates: '\\'', final: '}' }, params => this.insertColumns(params));\n    this._parser.registerCsiHandler({ intermediates: '\\'', final: '~' }, params => this.deleteColumns(params));\n\n    /**\n     * execute handler\n     */\n    this._parser.setExecuteHandler(C0.BEL, () => this.bell());\n    this._parser.setExecuteHandler(C0.LF, () => this.lineFeed());\n    this._parser.setExecuteHandler(C0.VT, () => this.lineFeed());\n    this._parser.setExecuteHandler(C0.FF, () => this.lineFeed());\n    this._parser.setExecuteHandler(C0.CR, () => this.carriageReturn());\n    this._parser.setExecuteHandler(C0.BS, () => this.backspace());\n    this._parser.setExecuteHandler(C0.HT, () => this.tab());\n    this._parser.setExecuteHandler(C0.SO, () => this.shiftOut());\n    this._parser.setExecuteHandler(C0.SI, () => this.shiftIn());\n    // FIXME:   What do to with missing? Old code just added those to print.\n\n    this._parser.setExecuteHandler(C1.IND, () => this.index());\n    this._parser.setExecuteHandler(C1.NEL, () => this.nextLine());\n    this._parser.setExecuteHandler(C1.HTS, () => this.tabSet());\n\n    /**\n     * OSC handler\n     */\n    //   0 - icon name + title\n    this._parser.registerOscHandler(0, new OscHandler(data => { this.setTitle(data); this.setIconName(data); return true; }));\n    //   1 - icon name\n    this._parser.registerOscHandler(1, new OscHandler(data => this.setIconName(data)));\n    //   2 - title\n    this._parser.registerOscHandler(2, new OscHandler(data => this.setTitle(data)));\n    //   3 - set property X in the form \"prop=value\"\n    //   4 - Change Color Number\n    this._parser.registerOscHandler(4, new OscHandler(data => this.setAnsiColor(data)));\n    //   5 - Change Special Color Number\n    //   6 - Enable/disable Special Color Number c\n    //   7 - current directory? (not in xterm spec, see https://gitlab.com/gnachman/iterm2/issues/3939)\n    //  10 - Change VT100 text foreground color to Pt.\n    //  11 - Change VT100 text background color to Pt.\n    //  12 - Change text cursor color to Pt.\n    //  13 - Change mouse foreground color to Pt.\n    //  14 - Change mouse background color to Pt.\n    //  15 - Change Tektronix foreground color to Pt.\n    //  16 - Change Tektronix background color to Pt.\n    //  17 - Change highlight background color to Pt.\n    //  18 - Change Tektronix cursor color to Pt.\n    //  19 - Change highlight foreground color to Pt.\n    //  46 - Change Log File to Pt.\n    //  50 - Set Font to Pt.\n    //  51 - reserved for Emacs shell.\n    //  52 - Manipulate Selection Data.\n    // 104 ; c - Reset Color Number c.\n    // 105 ; c - Reset Special Color Number c.\n    // 106 ; c; f - Enable/disable Special Color Number c.\n    // 110 - Reset VT100 text foreground color.\n    // 111 - Reset VT100 text background color.\n    // 112 - Reset text cursor color.\n    // 113 - Reset mouse foreground color.\n    // 114 - Reset mouse background color.\n    // 115 - Reset Tektronix foreground color.\n    // 116 - Reset Tektronix background color.\n    // 117 - Reset highlight color.\n    // 118 - Reset Tektronix cursor color.\n    // 119 - Reset highlight foreground color.\n\n    /**\n     * ESC handlers\n     */\n    this._parser.registerEscHandler({ final: '7' }, () => this.saveCursor());\n    this._parser.registerEscHandler({ final: '8' }, () => this.restoreCursor());\n    this._parser.registerEscHandler({ final: 'D' }, () => this.index());\n    this._parser.registerEscHandler({ final: 'E' }, () => this.nextLine());\n    this._parser.registerEscHandler({ final: 'H' }, () => this.tabSet());\n    this._parser.registerEscHandler({ final: 'M' }, () => this.reverseIndex());\n    this._parser.registerEscHandler({ final: '=' }, () => this.keypadApplicationMode());\n    this._parser.registerEscHandler({ final: '>' }, () => this.keypadNumericMode());\n    this._parser.registerEscHandler({ final: 'c' }, () => this.fullReset());\n    this._parser.registerEscHandler({ final: 'n' }, () => this.setgLevel(2));\n    this._parser.registerEscHandler({ final: 'o' }, () => this.setgLevel(3));\n    this._parser.registerEscHandler({ final: '|' }, () => this.setgLevel(3));\n    this._parser.registerEscHandler({ final: '}' }, () => this.setgLevel(2));\n    this._parser.registerEscHandler({ final: '~' }, () => this.setgLevel(1));\n    this._parser.registerEscHandler({ intermediates: '%', final: '@' }, () => this.selectDefaultCharset());\n    this._parser.registerEscHandler({ intermediates: '%', final: 'G' }, () => this.selectDefaultCharset());\n    for (const flag in CHARSETS) {\n      this._parser.registerEscHandler({ intermediates: '(', final: flag }, () => this.selectCharset('(' + flag));\n      this._parser.registerEscHandler({ intermediates: ')', final: flag }, () => this.selectCharset(')' + flag));\n      this._parser.registerEscHandler({ intermediates: '*', final: flag }, () => this.selectCharset('*' + flag));\n      this._parser.registerEscHandler({ intermediates: '+', final: flag }, () => this.selectCharset('+' + flag));\n      this._parser.registerEscHandler({ intermediates: '-', final: flag }, () => this.selectCharset('-' + flag));\n      this._parser.registerEscHandler({ intermediates: '.', final: flag }, () => this.selectCharset('.' + flag));\n      this._parser.registerEscHandler({ intermediates: '/', final: flag }, () => this.selectCharset('/' + flag)); // TODO: supported?\n    }\n    this._parser.registerEscHandler({ intermediates: '#', final: '8' }, () => this.screenAlignmentPattern());\n\n    /**\n     * error handler\n     */\n    this._parser.setErrorHandler((state: IParsingState) => {\n      this._logService.error('Parsing error: ', state);\n      return state;\n    });\n\n    /**\n     * DCS handler\n     */\n    this._parser.registerDcsHandler({ intermediates: '$', final: 'q' }, new DECRQSS(this._bufferService, this._coreService, this._logService, this._optionsService));\n  }\n\n  public dispose(): void {\n    super.dispose();\n  }\n\n  /**\n   * Async parse support.\n   */\n  private _preserveStack(cursorStartX: number, cursorStartY: number, decodedLength: number, position: number): void {\n    this._parseStack.paused = true;\n    this._parseStack.cursorStartX = cursorStartX;\n    this._parseStack.cursorStartY = cursorStartY;\n    this._parseStack.decodedLength = decodedLength;\n    this._parseStack.position = position;\n  }\n\n  private _logSlowResolvingAsync(p: Promise<boolean>): void {\n    // log a limited warning about an async handler taking too long\n    if (this._logService.logLevel <= LogLevelEnum.WARN) {\n      Promise.race([p, new Promise((res, rej) => setTimeout(() => rej('#SLOW_TIMEOUT'), SLOW_ASYNC_LIMIT))])\n        .catch(err => {\n          if (err !== '#SLOW_TIMEOUT') {\n            throw err;\n          }\n          console.warn(`async parser handler taking longer than ${SLOW_ASYNC_LIMIT} ms`);\n        });\n    }\n  }\n\n  /**\n   * Parse call with async handler support.\n   *\n   * Whether the stack state got preserved for the next call, is indicated by the return value:\n   * - undefined (void):\n   *   all handlers were sync, no stack save, continue normally with next chunk\n   * - Promise\\<boolean\\>:\n   *   execution stopped at async handler, stack saved, continue with\n   *   same chunk and the promise resolve value as `promiseResult` until the method returns `undefined`\n   *\n   * Note: This method should only be called by `Terminal.write` to ensure correct execution order and\n   * proper continuation of async parser handlers.\n   */\n  public parse(data: string | Uint8Array, promiseResult?: boolean): void | Promise<boolean> {\n    let result: void | Promise<boolean>;\n    let cursorStartX = this._activeBuffer.x;\n    let cursorStartY = this._activeBuffer.y;\n    let start = 0;\n    const wasPaused = this._parseStack.paused;\n\n    if (wasPaused) {\n      // assumption: _parseBuffer never mutates between async calls\n      if (result = this._parser.parse(this._parseBuffer, this._parseStack.decodedLength, promiseResult)) {\n        this._logSlowResolvingAsync(result);\n        return result;\n      }\n      cursorStartX = this._parseStack.cursorStartX;\n      cursorStartY = this._parseStack.cursorStartY;\n      this._parseStack.paused = false;\n      if (data.length > MAX_PARSEBUFFER_LENGTH) {\n        start = this._parseStack.position + MAX_PARSEBUFFER_LENGTH;\n      }\n    }\n\n    this._logService.debug('parsing data', data);\n\n    // resize input buffer if needed\n    if (this._parseBuffer.length < data.length) {\n      if (this._parseBuffer.length < MAX_PARSEBUFFER_LENGTH) {\n        this._parseBuffer = new Uint32Array(Math.min(data.length, MAX_PARSEBUFFER_LENGTH));\n      }\n    }\n\n    // Clear the dirty row service so we know which lines changed as a result of parsing\n    // Important: do not clear between async calls, otherwise we lost pending update information.\n    if (!wasPaused) {\n      this._dirtyRowService.clearRange();\n    }\n\n    // process big data in smaller chunks\n    if (data.length > MAX_PARSEBUFFER_LENGTH) {\n      for (let i = start; i < data.length; i += MAX_PARSEBUFFER_LENGTH) {\n        const end = i + MAX_PARSEBUFFER_LENGTH < data.length ? i + MAX_PARSEBUFFER_LENGTH : data.length;\n        const len = (typeof data === 'string')\n          ? this._stringDecoder.decode(data.substring(i, end), this._parseBuffer)\n          : this._utf8Decoder.decode(data.subarray(i, end), this._parseBuffer);\n        if (result = this._parser.parse(this._parseBuffer, len)) {\n          this._preserveStack(cursorStartX, cursorStartY, len, i);\n          this._logSlowResolvingAsync(result);\n          return result;\n        }\n      }\n    } else {\n      if (!wasPaused) {\n        const len = (typeof data === 'string')\n          ? this._stringDecoder.decode(data, this._parseBuffer)\n          : this._utf8Decoder.decode(data, this._parseBuffer);\n        if (result = this._parser.parse(this._parseBuffer, len)) {\n          this._preserveStack(cursorStartX, cursorStartY, len, 0);\n          this._logSlowResolvingAsync(result);\n          return result;\n        }\n      }\n    }\n\n    if (this._activeBuffer.x !== cursorStartX || this._activeBuffer.y !== cursorStartY) {\n      this._onCursorMove.fire();\n    }\n\n    // Refresh any dirty rows accumulated as part of parsing\n    this._onRequestRefreshRows.fire(this._dirtyRowService.start, this._dirtyRowService.end);\n  }\n\n  public print(data: Uint32Array, start: number, end: number): void {\n    let code: number;\n    let chWidth: number;\n    const charset = this._charsetService.charset;\n    const screenReaderMode = this._optionsService.options.screenReaderMode;\n    const cols = this._bufferService.cols;\n    const wraparoundMode = this._coreService.decPrivateModes.wraparound;\n    const insertMode = this._coreService.modes.insertMode;\n    const curAttr = this._curAttrData;\n    let bufferRow = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!;\n\n    this._dirtyRowService.markDirty(this._activeBuffer.y);\n\n    // handle wide chars: reset start_cell-1 if we would overwrite the second cell of a wide char\n    if (this._activeBuffer.x && end - start > 0 && bufferRow.getWidth(this._activeBuffer.x - 1) === 2) {\n      bufferRow.setCellFromCodePoint(this._activeBuffer.x - 1, 0, 1, curAttr.fg, curAttr.bg, curAttr.extended);\n    }\n\n    for (let pos = start; pos < end; ++pos) {\n      code = data[pos];\n\n      // calculate print space\n      // expensive call, therefore we save width in line buffer\n      chWidth = this._unicodeService.wcwidth(code);\n\n      // get charset replacement character\n      // charset is only defined for ASCII, therefore we only\n      // search for an replacement char if code < 127\n      if (code < 127 && charset) {\n        const ch = charset[String.fromCharCode(code)];\n        if (ch) {\n          code = ch.charCodeAt(0);\n        }\n      }\n\n      if (screenReaderMode) {\n        this._onA11yChar.fire(stringFromCodePoint(code));\n      }\n\n      // insert combining char at last cursor position\n      // this._activeBuffer.x should never be 0 for a combining char\n      // since they always follow a cell consuming char\n      // therefore we can test for this._activeBuffer.x to avoid overflow left\n      if (!chWidth && this._activeBuffer.x) {\n        if (!bufferRow.getWidth(this._activeBuffer.x - 1)) {\n          // found empty cell after fullwidth, need to go 2 cells back\n          // it is save to step 2 cells back here\n          // since an empty cell is only set by fullwidth chars\n          bufferRow.addCodepointToCell(this._activeBuffer.x - 2, code);\n        } else {\n          bufferRow.addCodepointToCell(this._activeBuffer.x - 1, code);\n        }\n        continue;\n      }\n\n      // goto next line if ch would overflow\n      // NOTE: To avoid costly width checks here,\n      // the terminal does not allow a cols < 2.\n      if (this._activeBuffer.x + chWidth - 1 >= cols) {\n        // autowrap - DECAWM\n        // automatically wraps to the beginning of the next line\n        if (wraparoundMode) {\n          // clear left over cells to the right\n          while (this._activeBuffer.x < cols) {\n            bufferRow.setCellFromCodePoint(this._activeBuffer.x++, 0, 1, curAttr.fg, curAttr.bg, curAttr.extended);\n          }\n          this._activeBuffer.x = 0;\n          this._activeBuffer.y++;\n          if (this._activeBuffer.y === this._activeBuffer.scrollBottom + 1) {\n            this._activeBuffer.y--;\n            this._bufferService.scroll(this._eraseAttrData(), true);\n          } else {\n            if (this._activeBuffer.y >= this._bufferService.rows) {\n              this._activeBuffer.y = this._bufferService.rows - 1;\n            }\n            // The line already exists (eg. the initial viewport), mark it as a\n            // wrapped line\n            this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!.isWrapped = true;\n          }\n          // row changed, get it again\n          bufferRow = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!;\n        } else {\n          this._activeBuffer.x = cols - 1;\n          if (chWidth === 2) {\n            // FIXME: check for xterm behavior\n            // What to do here? We got a wide char that does not fit into last cell\n            continue;\n          }\n        }\n      }\n\n      // insert mode: move characters to right\n      if (insertMode) {\n        // right shift cells according to the width\n        bufferRow.insertCells(this._activeBuffer.x, chWidth, this._activeBuffer.getNullCell(curAttr), curAttr);\n        // test last cell - since the last cell has only room for\n        // a halfwidth char any fullwidth shifted there is lost\n        // and will be set to empty cell\n        if (bufferRow.getWidth(cols - 1) === 2) {\n          bufferRow.setCellFromCodePoint(cols - 1, NULL_CELL_CODE, NULL_CELL_WIDTH, curAttr.fg, curAttr.bg, curAttr.extended);\n        }\n      }\n\n      // write current char to buffer and advance cursor\n      bufferRow.setCellFromCodePoint(this._activeBuffer.x++, code, chWidth, curAttr.fg, curAttr.bg, curAttr.extended);\n\n      // fullwidth char - also set next cell to placeholder stub and advance cursor\n      // for graphemes bigger than fullwidth we can simply loop to zero\n      // we already made sure above, that this._activeBuffer.x + chWidth will not overflow right\n      if (chWidth > 0) {\n        while (--chWidth) {\n          // other than a regular empty cell a cell following a wide char has no width\n          bufferRow.setCellFromCodePoint(this._activeBuffer.x++, 0, 0, curAttr.fg, curAttr.bg, curAttr.extended);\n        }\n      }\n    }\n    // store last char in Parser.precedingCodepoint for REP to work correctly\n    // This needs to check whether:\n    //  - fullwidth + surrogates: reset\n    //  - combining: only base char gets carried on (bug in xterm?)\n    if (end - start > 0) {\n      bufferRow.loadCell(this._activeBuffer.x - 1, this._workCell);\n      if (this._workCell.getWidth() === 2 || this._workCell.getCode() > 0xFFFF) {\n        this._parser.precedingCodepoint = 0;\n      } else if (this._workCell.isCombined()) {\n        this._parser.precedingCodepoint = this._workCell.getChars().charCodeAt(0);\n      } else {\n        this._parser.precedingCodepoint = this._workCell.content;\n      }\n    }\n\n    // handle wide chars: reset cell to the right if it is second cell of a wide char\n    if (this._activeBuffer.x < cols && end - start > 0 && bufferRow.getWidth(this._activeBuffer.x) === 0 && !bufferRow.hasContent(this._activeBuffer.x)) {\n      bufferRow.setCellFromCodePoint(this._activeBuffer.x, 0, 1, curAttr.fg, curAttr.bg, curAttr.extended);\n    }\n\n    this._dirtyRowService.markDirty(this._activeBuffer.y);\n  }\n\n  /**\n   * Forward registerCsiHandler from parser.\n   */\n  public registerCsiHandler(id: IFunctionIdentifier, callback: (params: IParams) => boolean | Promise<boolean>): IDisposable {\n    if (id.final === 't' && !id.prefix && !id.intermediates) {\n      // security: always check whether window option is allowed\n      return this._parser.registerCsiHandler(id, params => {\n        if (!paramToWindowOption(params.params[0], this._optionsService.options.windowOptions)) {\n          return true;\n        }\n        return callback(params);\n      });\n    }\n    return this._parser.registerCsiHandler(id, callback);\n  }\n\n  /**\n   * Forward registerDcsHandler from parser.\n   */\n  public registerDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: IParams) => boolean | Promise<boolean>): IDisposable {\n    return this._parser.registerDcsHandler(id, new DcsHandler(callback));\n  }\n\n  /**\n   * Forward registerEscHandler from parser.\n   */\n  public registerEscHandler(id: IFunctionIdentifier, callback: () => boolean | Promise<boolean>): IDisposable {\n    return this._parser.registerEscHandler(id, callback);\n  }\n\n  /**\n   * Forward registerOscHandler from parser.\n   */\n  public registerOscHandler(ident: number, callback: (data: string) => boolean | Promise<boolean>): IDisposable {\n    return this._parser.registerOscHandler(ident, new OscHandler(callback));\n  }\n\n  /**\n   * BEL\n   * Bell (Ctrl-G).\n   *\n   * @vt: #Y   C0    BEL   \"Bell\"  \"\\a, \\x07\"  \"Ring the bell.\"\n   * The behavior of the bell is further customizable with `ITerminalOptions.bellStyle`\n   * and `ITerminalOptions.bellSound`.\n   */\n  public bell(): boolean {\n    this._onRequestBell.fire();\n    return true;\n  }\n\n  /**\n   * LF\n   * Line Feed or New Line (NL).  (LF  is Ctrl-J).\n   *\n   * @vt: #Y   C0    LF   \"Line Feed\"            \"\\n, \\x0A\"  \"Move the cursor one row down, scrolling if needed.\"\n   * Scrolling is restricted to scroll margins and will only happen on the bottom line.\n   *\n   * @vt: #Y   C0    VT   \"Vertical Tabulation\"  \"\\v, \\x0B\"  \"Treated as LF.\"\n   * @vt: #Y   C0    FF   \"Form Feed\"            \"\\f, \\x0C\"  \"Treated as LF.\"\n   */\n  public lineFeed(): boolean {\n    this._dirtyRowService.markDirty(this._activeBuffer.y);\n    if (this._optionsService.options.convertEol) {\n      this._activeBuffer.x = 0;\n    }\n    this._activeBuffer.y++;\n    if (this._activeBuffer.y === this._activeBuffer.scrollBottom + 1) {\n      this._activeBuffer.y--;\n      this._bufferService.scroll(this._eraseAttrData());\n    } else if (this._activeBuffer.y >= this._bufferService.rows) {\n      this._activeBuffer.y = this._bufferService.rows - 1;\n    }\n    // If the end of the line is hit, prevent this action from wrapping around to the next line.\n    if (this._activeBuffer.x >= this._bufferService.cols) {\n      this._activeBuffer.x--;\n    }\n    this._dirtyRowService.markDirty(this._activeBuffer.y);\n\n    this._onLineFeed.fire();\n    return true;\n  }\n\n  /**\n   * CR\n   * Carriage Return (Ctrl-M).\n   *\n   * @vt: #Y   C0    CR   \"Carriage Return\"  \"\\r, \\x0D\"  \"Move the cursor to the beginning of the row.\"\n   */\n  public carriageReturn(): boolean {\n    this._activeBuffer.x = 0;\n    return true;\n  }\n\n  /**\n   * BS\n   * Backspace (Ctrl-H).\n   *\n   * @vt: #Y   C0    BS   \"Backspace\"  \"\\b, \\x08\"  \"Move the cursor one position to the left.\"\n   * By default it is not possible to move the cursor past the leftmost position.\n   * If `reverse wrap-around` (`CSI ? 45 h`) is set, a previous soft line wrap (DECAWM)\n   * can be undone with BS within the scroll margins. In that case the cursor will wrap back\n   * to the end of the previous row. Note that it is not possible to peek back into the scrollbuffer\n   * with the cursor, thus at the home position (top-leftmost cell) this has no effect.\n   */\n  public backspace(): boolean {\n    // reverse wrap-around is disabled\n    if (!this._coreService.decPrivateModes.reverseWraparound) {\n      this._restrictCursor();\n      if (this._activeBuffer.x > 0) {\n        this._activeBuffer.x--;\n      }\n      return true;\n    }\n\n    // reverse wrap-around is enabled\n    // other than for normal operation mode, reverse wrap-around allows the cursor\n    // to be at x=cols to be able to address the last cell of a row by BS\n    this._restrictCursor(this._bufferService.cols);\n\n    if (this._activeBuffer.x > 0) {\n      this._activeBuffer.x--;\n    } else {\n      /**\n       * reverse wrap-around handling:\n       * Our implementation deviates from xterm on purpose. Details:\n       * - only previous soft NLs can be reversed (isWrapped=true)\n       * - only works within scrollborders (top/bottom, left/right not yet supported)\n       * - cannot peek into scrollbuffer\n       * - any cursor movement sequence keeps working as expected\n       */\n      if (this._activeBuffer.x === 0\n          && this._activeBuffer.y > this._activeBuffer.scrollTop\n          && this._activeBuffer.y <= this._activeBuffer.scrollBottom\n          && this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)?.isWrapped)\n      {\n        this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!.isWrapped = false;\n        this._activeBuffer.y--;\n        this._activeBuffer.x = this._bufferService.cols - 1;\n        // find last taken cell - last cell can have 3 different states:\n        // - hasContent(true) + hasWidth(1): narrow char - we are done\n        // - hasWidth(0): second part of wide char - we are done\n        // - hasContent(false) + hasWidth(1): empty cell due to early wrapping wide char, go one cell further back\n        const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!;\n        if (line.hasWidth(this._activeBuffer.x) && !line.hasContent(this._activeBuffer.x)) {\n          this._activeBuffer.x--;\n          // We do this only once, since width=1 + hasContent=false currently happens only once before\n          // early wrapping of a wide char.\n          // This needs to be fixed once we support graphemes taking more than 2 cells.\n        }\n      }\n    }\n    this._restrictCursor();\n    return true;\n  }\n\n  /**\n   * TAB\n   * Horizontal Tab (HT) (Ctrl-I).\n   *\n   * @vt: #Y   C0    HT   \"Horizontal Tabulation\"  \"\\t, \\x09\"  \"Move the cursor to the next character tab stop.\"\n   */\n  public tab(): boolean {\n    if (this._activeBuffer.x >= this._bufferService.cols) {\n      return true;\n    }\n    const originalX = this._activeBuffer.x;\n    this._activeBuffer.x = this._activeBuffer.nextStop();\n    if (this._optionsService.options.screenReaderMode) {\n      this._onA11yTab.fire(this._activeBuffer.x - originalX);\n    }\n    return true;\n  }\n\n  /**\n   * SO\n   * Shift Out (Ctrl-N) -> Switch to Alternate Character Set.  This invokes the\n   * G1 character set.\n   *\n   * @vt: #P[Only limited ISO-2022 charset support.]  C0    SO   \"Shift Out\"  \"\\x0E\"  \"Switch to an alternative character set.\"\n   */\n  public shiftOut(): boolean {\n    this._charsetService.setgLevel(1);\n    return true;\n  }\n\n  /**\n   * SI\n   * Shift In (Ctrl-O) -> Switch to Standard Character Set.  This invokes the G0\n   * character set (the default).\n   *\n   * @vt: #Y   C0    SI   \"Shift In\"   \"\\x0F\"  \"Return to regular character set after Shift Out.\"\n   */\n  public shiftIn(): boolean {\n    this._charsetService.setgLevel(0);\n    return true;\n  }\n\n  /**\n   * Restrict cursor to viewport size / scroll margin (origin mode).\n   */\n  private _restrictCursor(maxCol: number = this._bufferService.cols - 1): void {\n    this._activeBuffer.x = Math.min(maxCol, Math.max(0, this._activeBuffer.x));\n    this._activeBuffer.y = this._coreService.decPrivateModes.origin\n      ? Math.min(this._activeBuffer.scrollBottom, Math.max(this._activeBuffer.scrollTop, this._activeBuffer.y))\n      : Math.min(this._bufferService.rows - 1, Math.max(0, this._activeBuffer.y));\n    this._dirtyRowService.markDirty(this._activeBuffer.y);\n  }\n\n  /**\n   * Set absolute cursor position.\n   */\n  private _setCursor(x: number, y: number): void {\n    this._dirtyRowService.markDirty(this._activeBuffer.y);\n    if (this._coreService.decPrivateModes.origin) {\n      this._activeBuffer.x = x;\n      this._activeBuffer.y = this._activeBuffer.scrollTop + y;\n    } else {\n      this._activeBuffer.x = x;\n      this._activeBuffer.y = y;\n    }\n    this._restrictCursor();\n    this._dirtyRowService.markDirty(this._activeBuffer.y);\n  }\n\n  /**\n   * Set relative cursor position.\n   */\n  private _moveCursor(x: number, y: number): void {\n    // for relative changes we have to make sure we are within 0 .. cols/rows - 1\n    // before calculating the new position\n    this._restrictCursor();\n    this._setCursor(this._activeBuffer.x + x, this._activeBuffer.y + y);\n  }\n\n  /**\n   * CSI Ps A\n   * Cursor Up Ps Times (default = 1) (CUU).\n   *\n   * @vt: #Y CSI CUU   \"Cursor Up\"   \"CSI Ps A\"  \"Move cursor `Ps` times up (default=1).\"\n   * If the cursor would pass the top scroll margin, it will stop there.\n   */\n  public cursorUp(params: IParams): boolean {\n    // stop at scrollTop\n    const diffToTop = this._activeBuffer.y - this._activeBuffer.scrollTop;\n    if (diffToTop >= 0) {\n      this._moveCursor(0, -Math.min(diffToTop, params.params[0] || 1));\n    } else {\n      this._moveCursor(0, -(params.params[0] || 1));\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps B\n   * Cursor Down Ps Times (default = 1) (CUD).\n   *\n   * @vt: #Y CSI CUD   \"Cursor Down\"   \"CSI Ps B\"  \"Move cursor `Ps` times down (default=1).\"\n   * If the cursor would pass the bottom scroll margin, it will stop there.\n   */\n  public cursorDown(params: IParams): boolean {\n    // stop at scrollBottom\n    const diffToBottom = this._activeBuffer.scrollBottom - this._activeBuffer.y;\n    if (diffToBottom >= 0) {\n      this._moveCursor(0, Math.min(diffToBottom, params.params[0] || 1));\n    } else {\n      this._moveCursor(0, params.params[0] || 1);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps C\n   * Cursor Forward Ps Times (default = 1) (CUF).\n   *\n   * @vt: #Y CSI CUF   \"Cursor Forward\"    \"CSI Ps C\"  \"Move cursor `Ps` times forward (default=1).\"\n   */\n  public cursorForward(params: IParams): boolean {\n    this._moveCursor(params.params[0] || 1, 0);\n    return true;\n  }\n\n  /**\n   * CSI Ps D\n   * Cursor Backward Ps Times (default = 1) (CUB).\n   *\n   * @vt: #Y CSI CUB   \"Cursor Backward\"   \"CSI Ps D\"  \"Move cursor `Ps` times backward (default=1).\"\n   */\n  public cursorBackward(params: IParams): boolean {\n    this._moveCursor(-(params.params[0] || 1), 0);\n    return true;\n  }\n\n  /**\n   * CSI Ps E\n   * Cursor Next Line Ps Times (default = 1) (CNL).\n   * Other than cursorDown (CUD) also set the cursor to first column.\n   *\n   * @vt: #Y CSI CNL   \"Cursor Next Line\"  \"CSI Ps E\"  \"Move cursor `Ps` times down (default=1) and to the first column.\"\n   * Same as CUD, additionally places the cursor at the first column.\n   */\n  public cursorNextLine(params: IParams): boolean {\n    this.cursorDown(params);\n    this._activeBuffer.x = 0;\n    return true;\n  }\n\n  /**\n   * CSI Ps F\n   * Cursor Previous Line Ps Times (default = 1) (CPL).\n   * Other than cursorUp (CUU) also set the cursor to first column.\n   *\n   * @vt: #Y CSI CPL   \"Cursor Backward\"   \"CSI Ps F\"  \"Move cursor `Ps` times up (default=1) and to the first column.\"\n   * Same as CUU, additionally places the cursor at the first column.\n   */\n  public cursorPrecedingLine(params: IParams): boolean {\n    this.cursorUp(params);\n    this._activeBuffer.x = 0;\n    return true;\n  }\n\n  /**\n   * CSI Ps G\n   * Cursor Character Absolute  [column] (default = [row,1]) (CHA).\n   *\n   * @vt: #Y CSI CHA   \"Cursor Horizontal Absolute\" \"CSI Ps G\" \"Move cursor to `Ps`-th column of the active row (default=1).\"\n   */\n  public cursorCharAbsolute(params: IParams): boolean {\n    this._setCursor((params.params[0] || 1) - 1, this._activeBuffer.y);\n    return true;\n  }\n\n  /**\n   * CSI Ps ; Ps H\n   * Cursor Position [row;column] (default = [1,1]) (CUP).\n   *\n   * @vt: #Y CSI CUP   \"Cursor Position\"   \"CSI Ps ; Ps H\"  \"Set cursor to position [`Ps`, `Ps`] (default = [1, 1]).\"\n   * If ORIGIN mode is set, places the cursor to the absolute position within the scroll margins.\n   * If ORIGIN mode is not set, places the cursor to the absolute position within the viewport.\n   * Note that the coordinates are 1-based, thus the top left position starts at `1 ; 1`.\n   */\n  public cursorPosition(params: IParams): boolean {\n    this._setCursor(\n      // col\n      (params.length >= 2) ? (params.params[1] || 1) - 1 : 0,\n      // row\n      (params.params[0] || 1) - 1\n    );\n    return true;\n  }\n\n  /**\n   * CSI Pm `  Character Position Absolute\n   *   [column] (default = [row,1]) (HPA).\n   * Currently same functionality as CHA.\n   *\n   * @vt: #Y CSI HPA   \"Horizontal Position Absolute\"  \"CSI Ps ` \" \"Same as CHA.\"\n   */\n  public charPosAbsolute(params: IParams): boolean {\n    this._setCursor((params.params[0] || 1) - 1, this._activeBuffer.y);\n    return true;\n  }\n\n  /**\n   * CSI Pm a  Character Position Relative\n   *   [columns] (default = [row,col+1]) (HPR)\n   *\n   * @vt: #Y CSI HPR   \"Horizontal Position Relative\"  \"CSI Ps a\"  \"Same as CUF.\"\n   */\n  public hPositionRelative(params: IParams): boolean {\n    this._moveCursor(params.params[0] || 1, 0);\n    return true;\n  }\n\n  /**\n   * CSI Pm d  Vertical Position Absolute (VPA)\n   *   [row] (default = [1,column])\n   *\n   * @vt: #Y CSI VPA   \"Vertical Position Absolute\"    \"CSI Ps d\"  \"Move cursor to `Ps`-th row (default=1).\"\n   */\n  public linePosAbsolute(params: IParams): boolean {\n    this._setCursor(this._activeBuffer.x, (params.params[0] || 1) - 1);\n    return true;\n  }\n\n  /**\n   * CSI Pm e  Vertical Position Relative (VPR)\n   *   [rows] (default = [row+1,column])\n   * reuse CSI Ps B ?\n   *\n   * @vt: #Y CSI VPR   \"Vertical Position Relative\"    \"CSI Ps e\"  \"Move cursor `Ps` times down (default=1).\"\n   */\n  public vPositionRelative(params: IParams): boolean {\n    this._moveCursor(0, params.params[0] || 1);\n    return true;\n  }\n\n  /**\n   * CSI Ps ; Ps f\n   *   Horizontal and Vertical Position [row;column] (default =\n   *   [1,1]) (HVP).\n   *   Same as CUP.\n   *\n   * @vt: #Y CSI HVP   \"Horizontal and Vertical Position\" \"CSI Ps ; Ps f\"  \"Same as CUP.\"\n   */\n  public hVPosition(params: IParams): boolean {\n    this.cursorPosition(params);\n    return true;\n  }\n\n  /**\n   * CSI Ps g  Tab Clear (TBC).\n   *     Ps = 0  -> Clear Current Column (default).\n   *     Ps = 3  -> Clear All.\n   * Potentially:\n   *   Ps = 2  -> Clear Stops on Line.\n   *   http://vt100.net/annarbor/aaa-ug/section6.html\n   *\n   * @vt: #Y CSI TBC   \"Tab Clear\" \"CSI Ps g\"  \"Clear tab stops at current position (0) or all (3) (default=0).\"\n   * Clearing tabstops off the active row (Ps = 2, VT100) is currently not supported.\n   */\n  public tabClear(params: IParams): boolean {\n    const param = params.params[0];\n    if (param === 0) {\n      delete this._activeBuffer.tabs[this._activeBuffer.x];\n    } else if (param === 3) {\n      this._activeBuffer.tabs = {};\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps I\n   *   Cursor Forward Tabulation Ps tab stops (default = 1) (CHT).\n   *\n   * @vt: #Y CSI CHT   \"Cursor Horizontal Tabulation\" \"CSI Ps I\" \"Move cursor `Ps` times tabs forward (default=1).\"\n   */\n  public cursorForwardTab(params: IParams): boolean {\n    if (this._activeBuffer.x >= this._bufferService.cols) {\n      return true;\n    }\n    let param = params.params[0] || 1;\n    while (param--) {\n      this._activeBuffer.x = this._activeBuffer.nextStop();\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps Z  Cursor Backward Tabulation Ps tab stops (default = 1) (CBT).\n   *\n   * @vt: #Y CSI CBT   \"Cursor Backward Tabulation\"  \"CSI Ps Z\"  \"Move cursor `Ps` tabs backward (default=1).\"\n   */\n  public cursorBackwardTab(params: IParams): boolean {\n    if (this._activeBuffer.x >= this._bufferService.cols) {\n      return true;\n    }\n    let param = params.params[0] || 1;\n\n    while (param--) {\n      this._activeBuffer.x = this._activeBuffer.prevStop();\n    }\n    return true;\n  }\n\n\n  /**\n   * Helper method to erase cells in a terminal row.\n   * The cell gets replaced with the eraseChar of the terminal.\n   * @param y row index\n   * @param start first cell index to be erased\n   * @param end   end - 1 is last erased cell\n   */\n  private _eraseInBufferLine(y: number, start: number, end: number, clearWrap: boolean = false): void {\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n    line.replaceCells(\n      start,\n      end,\n      this._activeBuffer.getNullCell(this._eraseAttrData()),\n      this._eraseAttrData()\n    );\n    if (clearWrap) {\n      line.isWrapped = false;\n    }\n  }\n\n  /**\n   * Helper method to reset cells in a terminal row.\n   * The cell gets replaced with the eraseChar of the terminal and the isWrapped property is set to false.\n   * @param y row index\n   */\n  private _resetBufferLine(y: number): void {\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n    line.fill(this._activeBuffer.getNullCell(this._eraseAttrData()));\n    line.isWrapped = false;\n  }\n\n  /**\n   * CSI Ps J  Erase in Display (ED).\n   *     Ps = 0  -> Erase Below (default).\n   *     Ps = 1  -> Erase Above.\n   *     Ps = 2  -> Erase All.\n   *     Ps = 3  -> Erase Saved Lines (xterm).\n   * CSI ? Ps J\n   *   Erase in Display (DECSED).\n   *     Ps = 0  -> Selective Erase Below (default).\n   *     Ps = 1  -> Selective Erase Above.\n   *     Ps = 2  -> Selective Erase All.\n   *\n   * @vt: #Y CSI ED  \"Erase In Display\"  \"CSI Ps J\"  \"Erase various parts of the viewport.\"\n   * Supported param values:\n   *\n   * | Ps | Effect                                                       |\n   * | -- | ------------------------------------------------------------ |\n   * | 0  | Erase from the cursor through the end of the viewport.       |\n   * | 1  | Erase from the beginning of the viewport through the cursor. |\n   * | 2  | Erase complete viewport.                                     |\n   * | 3  | Erase scrollback.                                            |\n   *\n   * @vt: #P[Protection attributes are not supported.] CSI DECSED   \"Selective Erase In Display\"  \"CSI ? Ps J\"  \"Currently the same as ED.\"\n   */\n  public eraseInDisplay(params: IParams): boolean {\n    this._restrictCursor(this._bufferService.cols);\n    let j;\n    switch (params.params[0]) {\n      case 0:\n        j = this._activeBuffer.y;\n        this._dirtyRowService.markDirty(j);\n        this._eraseInBufferLine(j++, this._activeBuffer.x, this._bufferService.cols, this._activeBuffer.x === 0);\n        for (; j < this._bufferService.rows; j++) {\n          this._resetBufferLine(j);\n        }\n        this._dirtyRowService.markDirty(j);\n        break;\n      case 1:\n        j = this._activeBuffer.y;\n        this._dirtyRowService.markDirty(j);\n        // Deleted front part of line and everything before. This line will no longer be wrapped.\n        this._eraseInBufferLine(j, 0, this._activeBuffer.x + 1, true);\n        if (this._activeBuffer.x + 1 >= this._bufferService.cols) {\n          // Deleted entire previous line. This next line can no longer be wrapped.\n          this._activeBuffer.lines.get(j + 1)!.isWrapped = false;\n        }\n        while (j--) {\n          this._resetBufferLine(j);\n        }\n        this._dirtyRowService.markDirty(0);\n        break;\n      case 2:\n        j = this._bufferService.rows;\n        this._dirtyRowService.markDirty(j - 1);\n        while (j--) {\n          this._resetBufferLine(j);\n        }\n        this._dirtyRowService.markDirty(0);\n        break;\n      case 3:\n        // Clear scrollback (everything not in viewport)\n        const scrollBackSize = this._activeBuffer.lines.length - this._bufferService.rows;\n        if (scrollBackSize > 0) {\n          this._activeBuffer.lines.trimStart(scrollBackSize);\n          this._activeBuffer.ybase = Math.max(this._activeBuffer.ybase - scrollBackSize, 0);\n          this._activeBuffer.ydisp = Math.max(this._activeBuffer.ydisp - scrollBackSize, 0);\n          // Force a scroll event to refresh viewport\n          this._onScroll.fire(0);\n        }\n        break;\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps K  Erase in Line (EL).\n   *     Ps = 0  -> Erase to Right (default).\n   *     Ps = 1  -> Erase to Left.\n   *     Ps = 2  -> Erase All.\n   * CSI ? Ps K\n   *   Erase in Line (DECSEL).\n   *     Ps = 0  -> Selective Erase to Right (default).\n   *     Ps = 1  -> Selective Erase to Left.\n   *     Ps = 2  -> Selective Erase All.\n   *\n   * @vt: #Y CSI EL    \"Erase In Line\"  \"CSI Ps K\"  \"Erase various parts of the active row.\"\n   * Supported param values:\n   *\n   * | Ps | Effect                                                   |\n   * | -- | -------------------------------------------------------- |\n   * | 0  | Erase from the cursor through the end of the row.        |\n   * | 1  | Erase from the beginning of the line through the cursor. |\n   * | 2  | Erase complete line.                                     |\n   *\n   * @vt: #P[Protection attributes are not supported.] CSI DECSEL   \"Selective Erase In Line\"  \"CSI ? Ps K\"  \"Currently the same as EL.\"\n   */\n  public eraseInLine(params: IParams): boolean {\n    this._restrictCursor(this._bufferService.cols);\n    switch (params.params[0]) {\n      case 0:\n        this._eraseInBufferLine(this._activeBuffer.y, this._activeBuffer.x, this._bufferService.cols);\n        break;\n      case 1:\n        this._eraseInBufferLine(this._activeBuffer.y, 0, this._activeBuffer.x + 1);\n        break;\n      case 2:\n        this._eraseInBufferLine(this._activeBuffer.y, 0, this._bufferService.cols);\n        break;\n    }\n    this._dirtyRowService.markDirty(this._activeBuffer.y);\n    return true;\n  }\n\n  /**\n   * CSI Ps L\n   * Insert Ps Line(s) (default = 1) (IL).\n   *\n   * @vt: #Y CSI IL  \"Insert Line\"   \"CSI Ps L\"  \"Insert `Ps` blank lines at active row (default=1).\"\n   * For every inserted line at the scroll top one line at the scroll bottom gets removed.\n   * The cursor is set to the first column.\n   * IL has no effect if the cursor is outside the scroll margins.\n   */\n  public insertLines(params: IParams): boolean {\n    this._restrictCursor();\n    let param = params.params[0] || 1;\n\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n\n    const row: number = this._activeBuffer.ybase + this._activeBuffer.y;\n\n    const scrollBottomRowsOffset = this._bufferService.rows - 1 - this._activeBuffer.scrollBottom;\n    const scrollBottomAbsolute = this._bufferService.rows - 1 + this._activeBuffer.ybase - scrollBottomRowsOffset + 1;\n    while (param--) {\n      // test: echo -e '\\e[44m\\e[1L\\e[0m'\n      // blankLine(true) - xterm/linux behavior\n      this._activeBuffer.lines.splice(scrollBottomAbsolute - 1, 1);\n      this._activeBuffer.lines.splice(row, 0, this._activeBuffer.getBlankLine(this._eraseAttrData()));\n    }\n\n    this._dirtyRowService.markRangeDirty(this._activeBuffer.y, this._activeBuffer.scrollBottom);\n    this._activeBuffer.x = 0; // see https://vt100.net/docs/vt220-rm/chapter4.html - vt220 only?\n    return true;\n  }\n\n  /**\n   * CSI Ps M\n   * Delete Ps Line(s) (default = 1) (DL).\n   *\n   * @vt: #Y CSI DL  \"Delete Line\"   \"CSI Ps M\"  \"Delete `Ps` lines at active row (default=1).\"\n   * For every deleted line at the scroll top one blank line at the scroll bottom gets appended.\n   * The cursor is set to the first column.\n   * DL has no effect if the cursor is outside the scroll margins.\n   */\n  public deleteLines(params: IParams): boolean {\n    this._restrictCursor();\n    let param = params.params[0] || 1;\n\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n\n    const row: number = this._activeBuffer.ybase + this._activeBuffer.y;\n\n    let j: number;\n    j = this._bufferService.rows - 1 - this._activeBuffer.scrollBottom;\n    j = this._bufferService.rows - 1 + this._activeBuffer.ybase - j;\n    while (param--) {\n      // test: echo -e '\\e[44m\\e[1M\\e[0m'\n      // blankLine(true) - xterm/linux behavior\n      this._activeBuffer.lines.splice(row, 1);\n      this._activeBuffer.lines.splice(j, 0, this._activeBuffer.getBlankLine(this._eraseAttrData()));\n    }\n\n    this._dirtyRowService.markRangeDirty(this._activeBuffer.y, this._activeBuffer.scrollBottom);\n    this._activeBuffer.x = 0; // see https://vt100.net/docs/vt220-rm/chapter4.html - vt220 only?\n    return true;\n  }\n\n  /**\n   * CSI Ps @\n   * Insert Ps (Blank) Character(s) (default = 1) (ICH).\n   *\n   * @vt: #Y CSI ICH  \"Insert Characters\"   \"CSI Ps @\"  \"Insert `Ps` (blank) characters (default = 1).\"\n   * The ICH sequence inserts `Ps` blank characters. The cursor remains at the beginning of the blank characters.\n   * Text between the cursor and right margin moves to the right. Characters moved past the right margin are lost.\n   *\n   *\n   * FIXME: check against xterm - should not work outside of scroll margins (see VT520 manual)\n   */\n  public insertChars(params: IParams): boolean {\n    this._restrictCursor();\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y);\n    if (line) {\n      line.insertCells(\n        this._activeBuffer.x,\n        params.params[0] || 1,\n        this._activeBuffer.getNullCell(this._eraseAttrData()),\n        this._eraseAttrData()\n      );\n      this._dirtyRowService.markDirty(this._activeBuffer.y);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps P\n   * Delete Ps Character(s) (default = 1) (DCH).\n   *\n   * @vt: #Y CSI DCH   \"Delete Character\"  \"CSI Ps P\"  \"Delete `Ps` characters (default=1).\"\n   * As characters are deleted, the remaining characters between the cursor and right margin move to the left.\n   * Character attributes move with the characters. The terminal adds blank characters at the right margin.\n   *\n   *\n   * FIXME: check against xterm - should not work outside of scroll margins (see VT520 manual)\n   */\n  public deleteChars(params: IParams): boolean {\n    this._restrictCursor();\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y);\n    if (line) {\n      line.deleteCells(\n        this._activeBuffer.x,\n        params.params[0] || 1,\n        this._activeBuffer.getNullCell(this._eraseAttrData()),\n        this._eraseAttrData()\n      );\n      this._dirtyRowService.markDirty(this._activeBuffer.y);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps S  Scroll up Ps lines (default = 1) (SU).\n   *\n   * @vt: #Y CSI SU  \"Scroll Up\"   \"CSI Ps S\"  \"Scroll `Ps` lines up (default=1).\"\n   *\n   *\n   * FIXME: scrolled out lines at top = 1 should add to scrollback (xterm)\n   */\n  public scrollUp(params: IParams): boolean {\n    let param = params.params[0] || 1;\n\n    while (param--) {\n      this._activeBuffer.lines.splice(this._activeBuffer.ybase + this._activeBuffer.scrollTop, 1);\n      this._activeBuffer.lines.splice(this._activeBuffer.ybase + this._activeBuffer.scrollBottom, 0, this._activeBuffer.getBlankLine(this._eraseAttrData()));\n    }\n    this._dirtyRowService.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Ps T  Scroll down Ps lines (default = 1) (SD).\n   *\n   * @vt: #Y CSI SD  \"Scroll Down\"   \"CSI Ps T\"  \"Scroll `Ps` lines down (default=1).\"\n   */\n  public scrollDown(params: IParams): boolean {\n    let param = params.params[0] || 1;\n\n    while (param--) {\n      this._activeBuffer.lines.splice(this._activeBuffer.ybase + this._activeBuffer.scrollBottom, 1);\n      this._activeBuffer.lines.splice(this._activeBuffer.ybase + this._activeBuffer.scrollTop, 0, this._activeBuffer.getBlankLine(DEFAULT_ATTR_DATA));\n    }\n    this._dirtyRowService.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Ps SP @  Scroll left Ps columns (default = 1) (SL) ECMA-48\n   *\n   * Notation: (Pn)\n   * Representation: CSI Pn 02/00 04/00\n   * Parameter default value: Pn = 1\n   * SL causes the data in the presentation component to be moved by n character positions\n   * if the line orientation is horizontal, or by n line positions if the line orientation\n   * is vertical, such that the data appear to move to the left; where n equals the value of Pn.\n   * The active presentation position is not affected by this control function.\n   *\n   * Supported:\n   *   - always left shift (no line orientation setting respected)\n   *\n   * @vt: #Y CSI SL  \"Scroll Left\" \"CSI Ps SP @\" \"Scroll viewport `Ps` times to the left.\"\n   * SL moves the content of all lines within the scroll margins `Ps` times to the left.\n   * SL has no effect outside of the scroll margins.\n   */\n  public scrollLeft(params: IParams): boolean {\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n    const param = params.params[0] || 1;\n    for (let y = this._activeBuffer.scrollTop; y <= this._activeBuffer.scrollBottom; ++y) {\n      const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n      line.deleteCells(0, param, this._activeBuffer.getNullCell(this._eraseAttrData()), this._eraseAttrData());\n      line.isWrapped = false;\n    }\n    this._dirtyRowService.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Ps SP A  Scroll right Ps columns (default = 1) (SR) ECMA-48\n   *\n   * Notation: (Pn)\n   * Representation: CSI Pn 02/00 04/01\n   * Parameter default value: Pn = 1\n   * SR causes the data in the presentation component to be moved by n character positions\n   * if the line orientation is horizontal, or by n line positions if the line orientation\n   * is vertical, such that the data appear to move to the right; where n equals the value of Pn.\n   * The active presentation position is not affected by this control function.\n   *\n   * Supported:\n   *   - always right shift (no line orientation setting respected)\n   *\n   * @vt: #Y CSI SR  \"Scroll Right\"  \"CSI Ps SP A\"   \"Scroll viewport `Ps` times to the right.\"\n   * SL moves the content of all lines within the scroll margins `Ps` times to the right.\n   * Content at the right margin is lost.\n   * SL has no effect outside of the scroll margins.\n   */\n  public scrollRight(params: IParams): boolean {\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n    const param = params.params[0] || 1;\n    for (let y = this._activeBuffer.scrollTop; y <= this._activeBuffer.scrollBottom; ++y) {\n      const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n      line.insertCells(0, param, this._activeBuffer.getNullCell(this._eraseAttrData()), this._eraseAttrData());\n      line.isWrapped = false;\n    }\n    this._dirtyRowService.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Pm ' }\n   * Insert Ps Column(s) (default = 1) (DECIC), VT420 and up.\n   *\n   * @vt: #Y CSI DECIC \"Insert Columns\"  \"CSI Ps ' }\"  \"Insert `Ps` columns at cursor position.\"\n   * DECIC inserts `Ps` times blank columns at the cursor position for all lines with the scroll margins,\n   * moving content to the right. Content at the right margin is lost.\n   * DECIC has no effect outside the scrolling margins.\n   */\n  public insertColumns(params: IParams): boolean {\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n    const param = params.params[0] || 1;\n    for (let y = this._activeBuffer.scrollTop; y <= this._activeBuffer.scrollBottom; ++y) {\n      const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n      line.insertCells(this._activeBuffer.x, param, this._activeBuffer.getNullCell(this._eraseAttrData()), this._eraseAttrData());\n      line.isWrapped = false;\n    }\n    this._dirtyRowService.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Pm ' ~\n   * Delete Ps Column(s) (default = 1) (DECDC), VT420 and up.\n   *\n   * @vt: #Y CSI DECDC \"Delete Columns\"  \"CSI Ps ' ~\"  \"Delete `Ps` columns at cursor position.\"\n   * DECDC deletes `Ps` times columns at the cursor position for all lines with the scroll margins,\n   * moving content to the left. Blank columns are added at the right margin.\n   * DECDC has no effect outside the scrolling margins.\n   */\n  public deleteColumns(params: IParams): boolean {\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n    const param = params.params[0] || 1;\n    for (let y = this._activeBuffer.scrollTop; y <= this._activeBuffer.scrollBottom; ++y) {\n      const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n      line.deleteCells(this._activeBuffer.x, param, this._activeBuffer.getNullCell(this._eraseAttrData()), this._eraseAttrData());\n      line.isWrapped = false;\n    }\n    this._dirtyRowService.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Ps X\n   * Erase Ps Character(s) (default = 1) (ECH).\n   *\n   * @vt: #Y CSI ECH   \"Erase Character\"   \"CSI Ps X\"  \"Erase `Ps` characters from current cursor position to the right (default=1).\"\n   * ED erases `Ps` characters from current cursor position to the right.\n   * ED works inside or outside the scrolling margins.\n   */\n  public eraseChars(params: IParams): boolean {\n    this._restrictCursor();\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y);\n    if (line) {\n      line.replaceCells(\n        this._activeBuffer.x,\n        this._activeBuffer.x + (params.params[0] || 1),\n        this._activeBuffer.getNullCell(this._eraseAttrData()),\n        this._eraseAttrData()\n      );\n      this._dirtyRowService.markDirty(this._activeBuffer.y);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps b  Repeat the preceding graphic character Ps times (REP).\n   * From ECMA 48 (@see http://www.ecma-international.org/publications/files/ECMA-ST/Ecma-048.pdf)\n   *    Notation: (Pn)\n   *    Representation: CSI Pn 06/02\n   *    Parameter default value: Pn = 1\n   *    REP is used to indicate that the preceding character in the data stream,\n   *    if it is a graphic character (represented by one or more bit combinations) including SPACE,\n   *    is to be repeated n times, where n equals the value of Pn.\n   *    If the character preceding REP is a control function or part of a control function,\n   *    the effect of REP is not defined by this Standard.\n   *\n   * Since we propagate the terminal as xterm-256color we have to follow xterm's behavior:\n   *    - fullwidth + surrogate chars are ignored\n   *    - for combining chars only the base char gets repeated\n   *    - text attrs are applied normally\n   *    - wrap around is respected\n   *    - any valid sequence resets the carried forward char\n   *\n   * Note: To get reset on a valid sequence working correctly without much runtime penalty,\n   * the preceding codepoint is stored on the parser in `this.print` and reset during `parser.parse`.\n   *\n   * @vt: #Y CSI REP   \"Repeat Preceding Character\"    \"CSI Ps b\"  \"Repeat preceding character `Ps` times (default=1).\"\n   * REP repeats the previous character `Ps` times advancing the cursor, also wrapping if DECAWM is set.\n   * REP has no effect if the sequence does not follow a printable ASCII character\n   * (NOOP for any other sequence in between or NON ASCII characters).\n   */\n  public repeatPrecedingCharacter(params: IParams): boolean {\n    if (!this._parser.precedingCodepoint) {\n      return true;\n    }\n    // call print to insert the chars and handle correct wrapping\n    const length = params.params[0] || 1;\n    const data = new Uint32Array(length);\n    for (let i = 0; i < length; ++i) {\n      data[i] = this._parser.precedingCodepoint;\n    }\n    this.print(data, 0, data.length);\n    return true;\n  }\n\n  /**\n   * CSI Ps c  Send Device Attributes (Primary DA).\n   *     Ps = 0  or omitted -> request attributes from terminal.  The\n   *     response depends on the decTerminalID resource setting.\n   *     -> CSI ? 1 ; 2 c  (``VT100 with Advanced Video Option'')\n   *     -> CSI ? 1 ; 0 c  (``VT101 with No Options'')\n   *     -> CSI ? 6 c  (``VT102'')\n   *     -> CSI ? 6 0 ; 1 ; 2 ; 6 ; 8 ; 9 ; 1 5 ; c  (``VT220'')\n   *   The VT100-style response parameters do not mean anything by\n   *   themselves.  VT220 parameters do, telling the host what fea-\n   *   tures the terminal supports:\n   *     Ps = 1  -> 132-columns.\n   *     Ps = 2  -> Printer.\n   *     Ps = 6  -> Selective erase.\n   *     Ps = 8  -> User-defined keys.\n   *     Ps = 9  -> National replacement character sets.\n   *     Ps = 1 5  -> Technical characters.\n   *     Ps = 2 2  -> ANSI color, e.g., VT525.\n   *     Ps = 2 9  -> ANSI text locator (i.e., DEC Locator mode).\n   *\n   * @vt: #Y CSI DA1   \"Primary Device Attributes\"     \"CSI c\"  \"Send primary device attributes.\"\n   *\n   *\n   * TODO: fix and cleanup response\n   */\n  public sendDeviceAttributesPrimary(params: IParams): boolean {\n    if (params.params[0] > 0) {\n      return true;\n    }\n    if (this._is('xterm') || this._is('rxvt-unicode') || this._is('screen')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[?1;2c');\n    } else if (this._is('linux')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[?6c');\n    }\n    return true;\n  }\n\n  /**\n   * CSI > Ps c\n   *   Send Device Attributes (Secondary DA).\n   *     Ps = 0  or omitted -> request the terminal's identification\n   *     code.  The response depends on the decTerminalID resource set-\n   *     ting.  It should apply only to VT220 and up, but xterm extends\n   *     this to VT100.\n   *     -> CSI  > Pp ; Pv ; Pc c\n   *   where Pp denotes the terminal type\n   *     Pp = 0  -> ``VT100''.\n   *     Pp = 1  -> ``VT220''.\n   *   and Pv is the firmware version (for xterm, this was originally\n   *   the XFree86 patch number, starting with 95).  In a DEC termi-\n   *   nal, Pc indicates the ROM cartridge registration number and is\n   *   always zero.\n   * More information:\n   *   xterm/charproc.c - line 2012, for more information.\n   *   vim responds with ^[[?0c or ^[[?1c after the terminal's response (?)\n   *\n   * @vt: #Y CSI DA2   \"Secondary Device Attributes\"   \"CSI > c\" \"Send primary device attributes.\"\n   *\n   *\n   * TODO: fix and cleanup response\n   */\n  public sendDeviceAttributesSecondary(params: IParams): boolean {\n    if (params.params[0] > 0) {\n      return true;\n    }\n    // xterm and urxvt\n    // seem to spit this\n    // out around ~370 times (?).\n    if (this._is('xterm')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[>0;276;0c');\n    } else if (this._is('rxvt-unicode')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[>85;95;0c');\n    } else if (this._is('linux')) {\n      // not supported by linux console.\n      // linux console echoes parameters.\n      this._coreService.triggerDataEvent(params.params[0] + 'c');\n    } else if (this._is('screen')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[>83;40003;0c');\n    }\n    return true;\n  }\n\n  /**\n   * Evaluate if the current terminal is the given argument.\n   * @param term The terminal name to evaluate\n   */\n  private _is(term: string): boolean {\n    return (this._optionsService.options.termName + '').indexOf(term) === 0;\n  }\n\n  /**\n   * CSI Pm h  Set Mode (SM).\n   *     Ps = 2  -> Keyboard Action Mode (AM).\n   *     Ps = 4  -> Insert Mode (IRM).\n   *     Ps = 1 2  -> Send/receive (SRM).\n   *     Ps = 2 0  -> Automatic Newline (LNM).\n   *\n   * @vt: #P[Only IRM is supported.]    CSI SM    \"Set Mode\"  \"CSI Pm h\"  \"Set various terminal modes.\"\n   * Supported param values by SM:\n   *\n   * | Param | Action                                 | Support |\n   * | ----- | -------------------------------------- | ------- |\n   * | 2     | Keyboard Action Mode (KAM). Always on. | #N      |\n   * | 4     | Insert Mode (IRM).                     | #Y      |\n   * | 12    | Send/receive (SRM). Always off.        | #N      |\n   * | 20    | Automatic Newline (LNM). Always off.   | #N      |\n   */\n  public setMode(params: IParams): boolean {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 4:\n          this._coreService.modes.insertMode = true;\n          break;\n        case 20:\n          // this._t.convertEol = true;\n          break;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * CSI ? Pm h\n   *   DEC Private Mode Set (DECSET).\n   *     Ps = 1  -> Application Cursor Keys (DECCKM).\n   *     Ps = 2  -> Designate USASCII for character sets G0-G3\n   *     (DECANM), and set VT100 mode.\n   *     Ps = 3  -> 132 Column Mode (DECCOLM).\n   *     Ps = 4  -> Smooth (Slow) Scroll (DECSCLM).\n   *     Ps = 5  -> Reverse Video (DECSCNM).\n   *     Ps = 6  -> Origin Mode (DECOM).\n   *     Ps = 7  -> Wraparound Mode (DECAWM).\n   *     Ps = 8  -> Auto-repeat Keys (DECARM).\n   *     Ps = 9  -> Send Mouse X & Y on button press.  See the sec-\n   *     tion Mouse Tracking.\n   *     Ps = 1 0  -> Show toolbar (rxvt).\n   *     Ps = 1 2  -> Start Blinking Cursor (att610).\n   *     Ps = 1 8  -> Print form feed (DECPFF).\n   *     Ps = 1 9  -> Set print extent to full screen (DECPEX).\n   *     Ps = 2 5  -> Show Cursor (DECTCEM).\n   *     Ps = 3 0  -> Show scrollbar (rxvt).\n   *     Ps = 3 5  -> Enable font-shifting functions (rxvt).\n   *     Ps = 3 8  -> Enter Tektronix Mode (DECTEK).\n   *     Ps = 4 0  -> Allow 80 -> 132 Mode.\n   *     Ps = 4 1  -> more(1) fix (see curses resource).\n   *     Ps = 4 2  -> Enable Nation Replacement Character sets (DECN-\n   *     RCM).\n   *     Ps = 4 4  -> Turn On Margin Bell.\n   *     Ps = 4 5  -> Reverse-wraparound Mode.\n   *     Ps = 4 6  -> Start Logging.  This is normally disabled by a\n   *     compile-time option.\n   *     Ps = 4 7  -> Use Alternate Screen Buffer.  (This may be dis-\n   *     abled by the titeInhibit resource).\n   *     Ps = 6 6  -> Application keypad (DECNKM).\n   *     Ps = 6 7  -> Backarrow key sends backspace (DECBKM).\n   *     Ps = 1 0 0 0  -> Send Mouse X & Y on button press and\n   *     release.  See the section Mouse Tracking.\n   *     Ps = 1 0 0 1  -> Use Hilite Mouse Tracking.\n   *     Ps = 1 0 0 2  -> Use Cell Motion Mouse Tracking.\n   *     Ps = 1 0 0 3  -> Use All Motion Mouse Tracking.\n   *     Ps = 1 0 0 4  -> Send FocusIn/FocusOut events.\n   *     Ps = 1 0 0 5  -> Enable Extended Mouse Mode.\n   *     Ps = 1 0 1 0  -> Scroll to bottom on tty output (rxvt).\n   *     Ps = 1 0 1 1  -> Scroll to bottom on key press (rxvt).\n   *     Ps = 1 0 3 4  -> Interpret \"meta\" key, sets eighth bit.\n   *     (enables the eightBitInput resource).\n   *     Ps = 1 0 3 5  -> Enable special modifiers for Alt and Num-\n   *     Lock keys.  (This enables the numLock resource).\n   *     Ps = 1 0 3 6  -> Send ESC   when Meta modifies a key.  (This\n   *     enables the metaSendsEscape resource).\n   *     Ps = 1 0 3 7  -> Send DEL from the editing-keypad Delete\n   *     key.\n   *     Ps = 1 0 3 9  -> Send ESC  when Alt modifies a key.  (This\n   *     enables the altSendsEscape resource).\n   *     Ps = 1 0 4 0  -> Keep selection even if not highlighted.\n   *     (This enables the keepSelection resource).\n   *     Ps = 1 0 4 1  -> Use the CLIPBOARD selection.  (This enables\n   *     the selectToClipboard resource).\n   *     Ps = 1 0 4 2  -> Enable Urgency window manager hint when\n   *     Control-G is received.  (This enables the bellIsUrgent\n   *     resource).\n   *     Ps = 1 0 4 3  -> Enable raising of the window when Control-G\n   *     is received.  (enables the popOnBell resource).\n   *     Ps = 1 0 4 7  -> Use Alternate Screen Buffer.  (This may be\n   *     disabled by the titeInhibit resource).\n   *     Ps = 1 0 4 8  -> Save cursor as in DECSC.  (This may be dis-\n   *     abled by the titeInhibit resource).\n   *     Ps = 1 0 4 9  -> Save cursor as in DECSC and use Alternate\n   *     Screen Buffer, clearing it first.  (This may be disabled by\n   *     the titeInhibit resource).  This combines the effects of the 1\n   *     0 4 7  and 1 0 4 8  modes.  Use this with terminfo-based\n   *     applications rather than the 4 7  mode.\n   *     Ps = 1 0 5 0  -> Set terminfo/termcap function-key mode.\n   *     Ps = 1 0 5 1  -> Set Sun function-key mode.\n   *     Ps = 1 0 5 2  -> Set HP function-key mode.\n   *     Ps = 1 0 5 3  -> Set SCO function-key mode.\n   *     Ps = 1 0 6 0  -> Set legacy keyboard emulation (X11R6).\n   *     Ps = 1 0 6 1  -> Set VT220 keyboard emulation.\n   *     Ps = 2 0 0 4  -> Set bracketed paste mode.\n   * Modes:\n   *   http: *vt100.net/docs/vt220-rm/chapter4.html\n   *\n   * @vt: #P[See below for supported modes.]    CSI DECSET  \"DEC Private Set Mode\" \"CSI ? Pm h\"  \"Set various terminal attributes.\"\n   * Supported param values by DECSET:\n   *\n   * | param | Action                                                  | Support |\n   * | ----- | ------------------------------------------------------- | --------|\n   * | 1     | Application Cursor Keys (DECCKM).                       | #Y      |\n   * | 2     | Designate US-ASCII for character sets G0-G3 (DECANM).   | #Y      |\n   * | 3     | 132 Column Mode (DECCOLM).                              | #Y      |\n   * | 6     | Origin Mode (DECOM).                                    | #Y      |\n   * | 7     | Auto-wrap Mode (DECAWM).                                | #Y      |\n   * | 8     | Auto-repeat Keys (DECARM). Always on.                   | #N      |\n   * | 9     | X10 xterm mouse protocol.                               | #Y      |\n   * | 12    | Start Blinking Cursor.                                  | #Y      |\n   * | 25    | Show Cursor (DECTCEM).                                  | #Y      |\n   * | 45    | Reverse wrap-around.                                    | #Y      |\n   * | 47    | Use Alternate Screen Buffer.                            | #Y      |\n   * | 66    | Application keypad (DECNKM).                            | #Y      |\n   * | 1000  | X11 xterm mouse protocol.                               | #Y      |\n   * | 1002  | Use Cell Motion Mouse Tracking.                         | #Y      |\n   * | 1003  | Use All Motion Mouse Tracking.                          | #Y      |\n   * | 1004  | Send FocusIn/FocusOut events                            | #Y      |\n   * | 1005  | Enable UTF-8 Mouse Mode.                                | #N      |\n   * | 1006  | Enable SGR Mouse Mode.                                  | #Y      |\n   * | 1015  | Enable urxvt Mouse Mode.                                | #N      |\n   * | 1047  | Use Alternate Screen Buffer.                            | #Y      |\n   * | 1048  | Save cursor as in DECSC.                                | #Y      |\n   * | 1049  | Save cursor and switch to alternate buffer clearing it. | #P[Does not clear the alternate buffer.] |\n   * | 2004  | Set bracketed paste mode.                               | #Y      |\n   *\n   *\n   * FIXME: implement DECSCNM, 1049 should clear altbuffer\n   */\n  public setModePrivate(params: IParams): boolean {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 1:\n          this._coreService.decPrivateModes.applicationCursorKeys = true;\n          break;\n        case 2:\n          this._charsetService.setgCharset(0, DEFAULT_CHARSET);\n          this._charsetService.setgCharset(1, DEFAULT_CHARSET);\n          this._charsetService.setgCharset(2, DEFAULT_CHARSET);\n          this._charsetService.setgCharset(3, DEFAULT_CHARSET);\n          // set VT100 mode here\n          break;\n        case 3:\n          /**\n           * DECCOLM - 132 column mode.\n           * This is only active if 'SetWinLines' (24) is enabled\n           * through `options.windowsOptions`.\n           */\n          if (this._optionsService.options.windowOptions.setWinLines) {\n            this._bufferService.resize(132, this._bufferService.rows);\n            this._onRequestReset.fire();\n          }\n          break;\n        case 6:\n          this._coreService.decPrivateModes.origin = true;\n          this._setCursor(0, 0);\n          break;\n        case 7:\n          this._coreService.decPrivateModes.wraparound = true;\n          break;\n        case 12:\n          // this.cursorBlink = true;\n          break;\n        case 45:\n          this._coreService.decPrivateModes.reverseWraparound = true;\n          break;\n        case 66:\n          this._logService.debug('Serial port requested application keypad.');\n          this._coreService.decPrivateModes.applicationKeypad = true;\n          this._onRequestSyncScrollBar.fire();\n          break;\n        case 9: // X10 Mouse\n          // no release, no motion, no wheel, no modifiers.\n          this._coreMouseService.activeProtocol = 'X10';\n          break;\n        case 1000: // vt200 mouse\n          // no motion.\n          this._coreMouseService.activeProtocol = 'VT200';\n          break;\n        case 1002: // button event mouse\n          this._coreMouseService.activeProtocol = 'DRAG';\n          break;\n        case 1003: // any event mouse\n          // any event - sends motion events,\n          // even if there is no button held down.\n          this._coreMouseService.activeProtocol = 'ANY';\n          break;\n        case 1004: // send focusin/focusout events\n          // focusin: ^[[I\n          // focusout: ^[[O\n          this._coreService.decPrivateModes.sendFocus = true;\n          this._onRequestSendFocus.fire();\n          break;\n        case 1005: // utf8 ext mode mouse - removed in #2507\n          this._logService.debug('DECSET 1005 not supported (see #2507)');\n          break;\n        case 1006: // sgr ext mode mouse\n          this._coreMouseService.activeEncoding = 'SGR';\n          break;\n        case 1015: // urxvt ext mode mouse - removed in #2507\n          this._logService.debug('DECSET 1015 not supported (see #2507)');\n          break;\n        case 25: // show cursor\n          this._coreService.isCursorHidden = false;\n          break;\n        case 1048: // alt screen cursor\n          this.saveCursor();\n          break;\n        case 1049: // alt screen buffer cursor\n          this.saveCursor();\n          // FALL-THROUGH\n        case 47: // alt screen buffer\n        case 1047: // alt screen buffer\n          this._bufferService.buffers.activateAltBuffer(this._eraseAttrData());\n          this._coreService.isCursorInitialized = true;\n          this._onRequestRefreshRows.fire(0, this._bufferService.rows - 1);\n          this._onRequestSyncScrollBar.fire();\n          break;\n        case 2004: // bracketed paste mode (https://cirw.in/blog/bracketed-paste)\n          this._coreService.decPrivateModes.bracketedPasteMode = true;\n          break;\n      }\n    }\n    return true;\n  }\n\n\n  /**\n   * CSI Pm l  Reset Mode (RM).\n   *     Ps = 2  -> Keyboard Action Mode (AM).\n   *     Ps = 4  -> Replace Mode (IRM).\n   *     Ps = 1 2  -> Send/receive (SRM).\n   *     Ps = 2 0  -> Normal Linefeed (LNM).\n   *\n   * @vt: #P[Only IRM is supported.]    CSI RM    \"Reset Mode\"  \"CSI Pm l\"  \"Set various terminal attributes.\"\n   * Supported param values by RM:\n   *\n   * | Param | Action                                 | Support |\n   * | ----- | -------------------------------------- | ------- |\n   * | 2     | Keyboard Action Mode (KAM). Always on. | #N      |\n   * | 4     | Replace Mode (IRM). (default)          | #Y      |\n   * | 12    | Send/receive (SRM). Always off.        | #N      |\n   * | 20    | Normal Linefeed (LNM). Always off.     | #N      |\n   *\n   *\n   * FIXME: why is LNM commented out?\n   */\n  public resetMode(params: IParams): boolean {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 4:\n          this._coreService.modes.insertMode = false;\n          break;\n        case 20:\n          // this._t.convertEol = false;\n          break;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * CSI ? Pm l\n   *   DEC Private Mode Reset (DECRST).\n   *     Ps = 1  -> Normal Cursor Keys (DECCKM).\n   *     Ps = 2  -> Designate VT52 mode (DECANM).\n   *     Ps = 3  -> 80 Column Mode (DECCOLM).\n   *     Ps = 4  -> Jump (Fast) Scroll (DECSCLM).\n   *     Ps = 5  -> Normal Video (DECSCNM).\n   *     Ps = 6  -> Normal Cursor Mode (DECOM).\n   *     Ps = 7  -> No Wraparound Mode (DECAWM).\n   *     Ps = 8  -> No Auto-repeat Keys (DECARM).\n   *     Ps = 9  -> Don't send Mouse X & Y on button press.\n   *     Ps = 1 0  -> Hide toolbar (rxvt).\n   *     Ps = 1 2  -> Stop Blinking Cursor (att610).\n   *     Ps = 1 8  -> Don't print form feed (DECPFF).\n   *     Ps = 1 9  -> Limit print to scrolling region (DECPEX).\n   *     Ps = 2 5  -> Hide Cursor (DECTCEM).\n   *     Ps = 3 0  -> Don't show scrollbar (rxvt).\n   *     Ps = 3 5  -> Disable font-shifting functions (rxvt).\n   *     Ps = 4 0  -> Disallow 80 -> 132 Mode.\n   *     Ps = 4 1  -> No more(1) fix (see curses resource).\n   *     Ps = 4 2  -> Disable Nation Replacement Character sets (DEC-\n   *     NRCM).\n   *     Ps = 4 4  -> Turn Off Margin Bell.\n   *     Ps = 4 5  -> No Reverse-wraparound Mode.\n   *     Ps = 4 6  -> Stop Logging.  (This is normally disabled by a\n   *     compile-time option).\n   *     Ps = 4 7  -> Use Normal Screen Buffer.\n   *     Ps = 6 6  -> Numeric keypad (DECNKM).\n   *     Ps = 6 7  -> Backarrow key sends delete (DECBKM).\n   *     Ps = 1 0 0 0  -> Don't send Mouse X & Y on button press and\n   *     release.  See the section Mouse Tracking.\n   *     Ps = 1 0 0 1  -> Don't use Hilite Mouse Tracking.\n   *     Ps = 1 0 0 2  -> Don't use Cell Motion Mouse Tracking.\n   *     Ps = 1 0 0 3  -> Don't use All Motion Mouse Tracking.\n   *     Ps = 1 0 0 4  -> Don't send FocusIn/FocusOut events.\n   *     Ps = 1 0 0 5  -> Disable Extended Mouse Mode.\n   *     Ps = 1 0 1 0  -> Don't scroll to bottom on tty output\n   *     (rxvt).\n   *     Ps = 1 0 1 1  -> Don't scroll to bottom on key press (rxvt).\n   *     Ps = 1 0 3 4  -> Don't interpret \"meta\" key.  (This disables\n   *     the eightBitInput resource).\n   *     Ps = 1 0 3 5  -> Disable special modifiers for Alt and Num-\n   *     Lock keys.  (This disables the numLock resource).\n   *     Ps = 1 0 3 6  -> Don't send ESC  when Meta modifies a key.\n   *     (This disables the metaSendsEscape resource).\n   *     Ps = 1 0 3 7  -> Send VT220 Remove from the editing-keypad\n   *     Delete key.\n   *     Ps = 1 0 3 9  -> Don't send ESC  when Alt modifies a key.\n   *     (This disables the altSendsEscape resource).\n   *     Ps = 1 0 4 0  -> Do not keep selection when not highlighted.\n   *     (This disables the keepSelection resource).\n   *     Ps = 1 0 4 1  -> Use the PRIMARY selection.  (This disables\n   *     the selectToClipboard resource).\n   *     Ps = 1 0 4 2  -> Disable Urgency window manager hint when\n   *     Control-G is received.  (This disables the bellIsUrgent\n   *     resource).\n   *     Ps = 1 0 4 3  -> Disable raising of the window when Control-\n   *     G is received.  (This disables the popOnBell resource).\n   *     Ps = 1 0 4 7  -> Use Normal Screen Buffer, clearing screen\n   *     first if in the Alternate Screen.  (This may be disabled by\n   *     the titeInhibit resource).\n   *     Ps = 1 0 4 8  -> Restore cursor as in DECRC.  (This may be\n   *     disabled by the titeInhibit resource).\n   *     Ps = 1 0 4 9  -> Use Normal Screen Buffer and restore cursor\n   *     as in DECRC.  (This may be disabled by the titeInhibit\n   *     resource).  This combines the effects of the 1 0 4 7  and 1 0\n   *     4 8  modes.  Use this with terminfo-based applications rather\n   *     than the 4 7  mode.\n   *     Ps = 1 0 5 0  -> Reset terminfo/termcap function-key mode.\n   *     Ps = 1 0 5 1  -> Reset Sun function-key mode.\n   *     Ps = 1 0 5 2  -> Reset HP function-key mode.\n   *     Ps = 1 0 5 3  -> Reset SCO function-key mode.\n   *     Ps = 1 0 6 0  -> Reset legacy keyboard emulation (X11R6).\n   *     Ps = 1 0 6 1  -> Reset keyboard emulation to Sun/PC style.\n   *     Ps = 2 0 0 4  -> Reset bracketed paste mode.\n   *\n   * @vt: #P[See below for supported modes.]    CSI DECRST  \"DEC Private Reset Mode\" \"CSI ? Pm l\"  \"Reset various terminal attributes.\"\n   * Supported param values by DECRST:\n   *\n   * | param | Action                                                  | Support |\n   * | ----- | ------------------------------------------------------- | ------- |\n   * | 1     | Normal Cursor Keys (DECCKM).                            | #Y      |\n   * | 2     | Designate VT52 mode (DECANM).                           | #N      |\n   * | 3     | 80 Column Mode (DECCOLM).                               | #B[Switches to old column width instead of 80.] |\n   * | 6     | Normal Cursor Mode (DECOM).                             | #Y      |\n   * | 7     | No Wraparound Mode (DECAWM).                            | #Y      |\n   * | 8     | No Auto-repeat Keys (DECARM).                           | #N      |\n   * | 9     | Don't send Mouse X & Y on button press.                 | #Y      |\n   * | 12    | Stop Blinking Cursor.                                   | #Y      |\n   * | 25    | Hide Cursor (DECTCEM).                                  | #Y      |\n   * | 45    | No reverse wrap-around.                                 | #Y      |\n   * | 47    | Use Normal Screen Buffer.                               | #Y      |\n   * | 66    | Numeric keypad (DECNKM).                                | #Y      |\n   * | 1000  | Don't send Mouse reports.                               | #Y      |\n   * | 1002  | Don't use Cell Motion Mouse Tracking.                   | #Y      |\n   * | 1003  | Don't use All Motion Mouse Tracking.                    | #Y      |\n   * | 1004  | Don't send FocusIn/FocusOut events.                     | #Y      |\n   * | 1005  | Disable UTF-8 Mouse Mode.                               | #N      |\n   * | 1006  | Disable SGR Mouse Mode.                                 | #Y      |\n   * | 1015  | Disable urxvt Mouse Mode.                               | #N      |\n   * | 1047  | Use Normal Screen Buffer (clearing screen if in alt).   | #Y      |\n   * | 1048  | Restore cursor as in DECRC.                             | #Y      |\n   * | 1049  | Use Normal Screen Buffer and restore cursor.            | #Y      |\n   * | 2004  | Reset bracketed paste mode.                             | #Y      |\n   *\n   *\n   * FIXME: DECCOLM is currently broken (already fixed in window options PR)\n   */\n  public resetModePrivate(params: IParams): boolean {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 1:\n          this._coreService.decPrivateModes.applicationCursorKeys = false;\n          break;\n        case 3:\n          /**\n           * DECCOLM - 80 column mode.\n           * This is only active if 'SetWinLines' (24) is enabled\n           * through `options.windowsOptions`.\n           */\n          if (this._optionsService.options.windowOptions.setWinLines) {\n            this._bufferService.resize(80, this._bufferService.rows);\n            this._onRequestReset.fire();\n          }\n          break;\n        case 6:\n          this._coreService.decPrivateModes.origin = false;\n          this._setCursor(0, 0);\n          break;\n        case 7:\n          this._coreService.decPrivateModes.wraparound = false;\n          break;\n        case 12:\n          // this.cursorBlink = false;\n          break;\n        case 45:\n          this._coreService.decPrivateModes.reverseWraparound = false;\n          break;\n        case 66:\n          this._logService.debug('Switching back to normal keypad.');\n          this._coreService.decPrivateModes.applicationKeypad = false;\n          this._onRequestSyncScrollBar.fire();\n          break;\n        case 9: // X10 Mouse\n        case 1000: // vt200 mouse\n        case 1002: // button event mouse\n        case 1003: // any event mouse\n          this._coreMouseService.activeProtocol = 'NONE';\n          break;\n        case 1004: // send focusin/focusout events\n          this._coreService.decPrivateModes.sendFocus = false;\n          break;\n        case 1005: // utf8 ext mode mouse - removed in #2507\n          this._logService.debug('DECRST 1005 not supported (see #2507)');\n          break;\n        case 1006: // sgr ext mode mouse\n          this._coreMouseService.activeEncoding = 'DEFAULT';\n          break;\n        case 1015: // urxvt ext mode mouse - removed in #2507\n          this._logService.debug('DECRST 1015 not supported (see #2507)');\n          break;\n        case 25: // hide cursor\n          this._coreService.isCursorHidden = true;\n          break;\n        case 1048: // alt screen cursor\n          this.restoreCursor();\n          break;\n        case 1049: // alt screen buffer cursor\n          // FALL-THROUGH\n        case 47: // normal screen buffer\n        case 1047: // normal screen buffer - clearing it first\n          // Ensure the selection manager has the correct buffer\n          this._bufferService.buffers.activateNormalBuffer();\n          if (params.params[i] === 1049) {\n            this.restoreCursor();\n          }\n          this._coreService.isCursorInitialized = true;\n          this._onRequestRefreshRows.fire(0, this._bufferService.rows - 1);\n          this._onRequestSyncScrollBar.fire();\n          break;\n        case 2004: // bracketed paste mode (https://cirw.in/blog/bracketed-paste)\n          this._coreService.decPrivateModes.bracketedPasteMode = false;\n          break;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Helper to write color information packed with color mode.\n   */\n  private _updateAttrColor(color: number, mode: number, c1: number, c2: number, c3: number): number {\n    if (mode === 2) {\n      color |= Attributes.CM_RGB;\n      color &= ~Attributes.RGB_MASK;\n      color |= AttributeData.fromColorRGB([c1, c2, c3]);\n    } else if (mode === 5) {\n      color &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n      color |= Attributes.CM_P256 | (c1 & 0xff);\n    }\n    return color;\n  }\n\n  /**\n   * Helper to extract and apply color params/subparams.\n   * Returns advance for params index.\n   */\n  private _extractColor(params: IParams, pos: number, attr: IAttributeData): number {\n    // normalize params\n    // meaning: [target, CM, ign, val, val, val]\n    // RGB    : [ 38/48,  2, ign,   r,   g,   b]\n    // P256   : [ 38/48,  5, ign,   v, ign, ign]\n    const accu = [0, 0, -1, 0, 0, 0];\n\n    // alignment placeholder for non color space sequences\n    let cSpace = 0;\n\n    // return advance we took in params\n    let advance = 0;\n\n    do {\n      accu[advance + cSpace] = params.params[pos + advance];\n      if (params.hasSubParams(pos + advance)) {\n        const subparams = params.getSubParams(pos + advance)!;\n        let i = 0;\n        do {\n          if (accu[1] === 5) {\n            cSpace = 1;\n          }\n          accu[advance + i + 1 + cSpace] = subparams[i];\n        } while (++i < subparams.length && i + advance + 1 + cSpace < accu.length);\n        break;\n      }\n      // exit early if can decide color mode with semicolons\n      if ((accu[1] === 5 && advance + cSpace >= 2)\n          || (accu[1] === 2 && advance + cSpace >= 5)) {\n        break;\n      }\n      // offset colorSpace slot for semicolon mode\n      if (accu[1]) {\n        cSpace = 1;\n      }\n    } while (++advance + pos < params.length && advance + cSpace < accu.length);\n\n    // set default values to 0\n    for (let i = 2; i < accu.length; ++i) {\n      if (accu[i] === -1) {\n        accu[i] = 0;\n      }\n    }\n\n    // apply colors\n    switch (accu[0]) {\n      case 38:\n        attr.fg = this._updateAttrColor(attr.fg, accu[1], accu[3], accu[4], accu[5]);\n        break;\n      case 48:\n        attr.bg = this._updateAttrColor(attr.bg, accu[1], accu[3], accu[4], accu[5]);\n        break;\n      case 58:\n        attr.extended = attr.extended.clone();\n        attr.extended.underlineColor = this._updateAttrColor(attr.extended.underlineColor, accu[1], accu[3], accu[4], accu[5]);\n    }\n\n    return advance;\n  }\n\n  /**\n   * SGR 4 subparams:\n   *    4:0   -   equal to SGR 24 (turn off all underline)\n   *    4:1   -   equal to SGR 4 (single underline)\n   *    4:2   -   equal to SGR 21 (double underline)\n   *    4:3   -   curly underline\n   *    4:4   -   dotted underline\n   *    4:5   -   dashed underline\n   */\n  private _processUnderline(style: number, attr: IAttributeData): void {\n    // treat extended attrs as immutable, thus always clone from old one\n    // this is needed since the buffer only holds references to it\n    attr.extended = attr.extended.clone();\n\n    // default to 1 == single underline\n    if (!~style || style > 5) {\n      style = 1;\n    }\n    attr.extended.underlineStyle = style;\n    attr.fg |= FgFlags.UNDERLINE;\n\n    // 0 deactivates underline\n    if (style === 0) {\n      attr.fg &= ~FgFlags.UNDERLINE;\n    }\n\n    // update HAS_EXTENDED in BG\n    attr.updateExtended();\n  }\n\n  /**\n   * CSI Pm m  Character Attributes (SGR).\n   *\n   * @vt: #P[See below for supported attributes.]    CSI SGR   \"Select Graphic Rendition\"  \"CSI Pm m\"  \"Set/Reset various text attributes.\"\n   * SGR selects one or more character attributes at the same time. Multiple params (up to 32)\n   * are applied in order from left to right. The changed attributes are applied to all new\n   * characters received. If you move characters in the viewport by scrolling or any other means,\n   * then the attributes move with the characters.\n   *\n   * Supported param values by SGR:\n   *\n   * | Param     | Meaning                                                  | Support |\n   * | --------- | -------------------------------------------------------- | ------- |\n   * | 0         | Normal (default). Resets any other preceding SGR.        | #Y      |\n   * | 1         | Bold. (also see `options.drawBoldTextInBrightColors`)    | #Y      |\n   * | 2         | Faint, decreased intensity.                              | #Y      |\n   * | 3         | Italic.                                                  | #Y      |\n   * | 4         | Underlined (see below for style support).                | #Y      |\n   * | 5         | Slowly blinking.                                         | #N      |\n   * | 6         | Rapidly blinking.                                        | #N      |\n   * | 7         | Inverse. Flips foreground and background color.          | #Y      |\n   * | 8         | Invisible (hidden).                                      | #Y      |\n   * | 9         | Crossed-out characters (strikethrough).                  | #Y      |\n   * | 21        | Doubly underlined.                                       | #P[Currently outputs a single underline.] |\n   * | 22        | Normal (neither bold nor faint).                         | #Y      |\n   * | 23        | No italic.                                               | #Y      |\n   * | 24        | Not underlined.                                          | #Y      |\n   * | 25        | Steady (not blinking).                                   | #Y      |\n   * | 27        | Positive (not inverse).                                  | #Y      |\n   * | 28        | Visible (not hidden).                                    | #Y      |\n   * | 29        | Not Crossed-out (strikethrough).                         | #Y      |\n   * | 30        | Foreground color: Black.                                 | #Y      |\n   * | 31        | Foreground color: Red.                                   | #Y      |\n   * | 32        | Foreground color: Green.                                 | #Y      |\n   * | 33        | Foreground color: Yellow.                                | #Y      |\n   * | 34        | Foreground color: Blue.                                  | #Y      |\n   * | 35        | Foreground color: Magenta.                               | #Y      |\n   * | 36        | Foreground color: Cyan.                                  | #Y      |\n   * | 37        | Foreground color: White.                                 | #Y      |\n   * | 38        | Foreground color: Extended color.                        | #P[Support for RGB and indexed colors, see below.] |\n   * | 39        | Foreground color: Default (original).                    | #Y      |\n   * | 40        | Background color: Black.                                 | #Y      |\n   * | 41        | Background color: Red.                                   | #Y      |\n   * | 42        | Background color: Green.                                 | #Y      |\n   * | 43        | Background color: Yellow.                                | #Y      |\n   * | 44        | Background color: Blue.                                  | #Y      |\n   * | 45        | Background color: Magenta.                               | #Y      |\n   * | 46        | Background color: Cyan.                                  | #Y      |\n   * | 47        | Background color: White.                                 | #Y      |\n   * | 48        | Background color: Extended color.                        | #P[Support for RGB and indexed colors, see below.] |\n   * | 49        | Background color: Default (original).                    | #Y      |\n   * | 90 - 97   | Bright foreground color (analogous to 30 - 37).          | #Y      |\n   * | 100 - 107 | Bright background color (analogous to 40 - 47).          | #Y      |\n   *\n   * Underline supports subparams to denote the style in the form `4 : x`:\n   *\n   * | x      | Meaning                                                       | Support |\n   * | ------ | ------------------------------------------------------------- | ------- |\n   * | 0      | No underline. Same as `SGR 24 m`.                             | #Y      |\n   * | 1      | Single underline. Same as `SGR 4 m`.                          | #Y      |\n   * | 2      | Double underline.                                             | #P[Currently outputs a single underline.] |\n   * | 3      | Curly underline.                                              | #P[Currently outputs a single underline.] |\n   * | 4      | Dotted underline.                                             | #P[Currently outputs a single underline.] |\n   * | 5      | Dashed underline.                                             | #P[Currently outputs a single underline.] |\n   * | other  | Single underline. Same as `SGR 4 m`.                          | #Y      |\n   *\n   * Extended colors are supported for foreground (Ps=38) and background (Ps=48) as follows:\n   *\n   * | Ps + 1 | Meaning                                                       | Support |\n   * | ------ | ------------------------------------------------------------- | ------- |\n   * | 0      | Implementation defined.                                       | #N      |\n   * | 1      | Transparent.                                                  | #N      |\n   * | 2      | RGB color as `Ps ; 2 ; R ; G ; B` or `Ps : 2 : : R : G : B`.  | #Y      |\n   * | 3      | CMY color.                                                    | #N      |\n   * | 4      | CMYK color.                                                   | #N      |\n   * | 5      | Indexed (256 colors) as `Ps ; 5 ; INDEX` or `Ps : 5 : INDEX`. | #Y      |\n   *\n   *\n   * FIXME: blinking is implemented in attrs, but not working in renderers?\n   * FIXME: remove dead branch for p=100\n   */\n  public charAttributes(params: IParams): boolean {\n    // Optimize a single SGR0.\n    if (params.length === 1 && params.params[0] === 0) {\n      this._curAttrData.fg = DEFAULT_ATTR_DATA.fg;\n      this._curAttrData.bg = DEFAULT_ATTR_DATA.bg;\n      return true;\n    }\n\n    const l = params.length;\n    let p;\n    const attr = this._curAttrData;\n\n    for (let i = 0; i < l; i++) {\n      p = params.params[i];\n      if (p >= 30 && p <= 37) {\n        // fg color 8\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.fg |= Attributes.CM_P16 | (p - 30);\n      } else if (p >= 40 && p <= 47) {\n        // bg color 8\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.bg |= Attributes.CM_P16 | (p - 40);\n      } else if (p >= 90 && p <= 97) {\n        // fg color 16\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.fg |= Attributes.CM_P16 | (p - 90) | 8;\n      } else if (p >= 100 && p <= 107) {\n        // bg color 16\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.bg |= Attributes.CM_P16 | (p - 100) | 8;\n      } else if (p === 0) {\n        // default\n        attr.fg = DEFAULT_ATTR_DATA.fg;\n        attr.bg = DEFAULT_ATTR_DATA.bg;\n      } else if (p === 1) {\n        // bold text\n        attr.fg |= FgFlags.BOLD;\n      } else if (p === 3) {\n        // italic text\n        attr.bg |= BgFlags.ITALIC;\n      } else if (p === 4) {\n        // underlined text\n        attr.fg |= FgFlags.UNDERLINE;\n        this._processUnderline(params.hasSubParams(i) ? params.getSubParams(i)![0] : UnderlineStyle.SINGLE, attr);\n      } else if (p === 5) {\n        // blink\n        attr.fg |= FgFlags.BLINK;\n      } else if (p === 7) {\n        // inverse and positive\n        // test with: echo -e '\\e[31m\\e[42mhello\\e[7mworld\\e[27mhi\\e[m'\n        attr.fg |= FgFlags.INVERSE;\n      } else if (p === 8) {\n        // invisible\n        attr.fg |= FgFlags.INVISIBLE;\n      } else if (p === 9) {\n        // strikethrough\n        attr.fg |= FgFlags.STRIKETHROUGH;\n      } else if (p === 2) {\n        // dimmed text\n        attr.bg |= BgFlags.DIM;\n      } else if (p === 21) {\n        // double underline\n        this._processUnderline(UnderlineStyle.DOUBLE, attr);\n      } else if (p === 22) {\n        // not bold nor faint\n        attr.fg &= ~FgFlags.BOLD;\n        attr.bg &= ~BgFlags.DIM;\n      } else if (p === 23) {\n        // not italic\n        attr.bg &= ~BgFlags.ITALIC;\n      } else if (p === 24) {\n        // not underlined\n        attr.fg &= ~FgFlags.UNDERLINE;\n      } else if (p === 25) {\n        // not blink\n        attr.fg &= ~FgFlags.BLINK;\n      } else if (p === 27) {\n        // not inverse\n        attr.fg &= ~FgFlags.INVERSE;\n      } else if (p === 28) {\n        // not invisible\n        attr.fg &= ~FgFlags.INVISIBLE;\n      } else if (p === 29) {\n        // not strikethrough\n        attr.fg &= ~FgFlags.STRIKETHROUGH;\n      } else if (p === 39) {\n        // reset fg\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.fg |= DEFAULT_ATTR_DATA.fg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n      } else if (p === 49) {\n        // reset bg\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.bg |= DEFAULT_ATTR_DATA.bg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n      } else if (p === 38 || p === 48 || p === 58) {\n        // fg color 256 and RGB\n        i += this._extractColor(params, i, attr);\n      } else if (p === 59) {\n        attr.extended = attr.extended.clone();\n        attr.extended.underlineColor = -1;\n        attr.updateExtended();\n      } else if (p === 100) { // FIXME: dead branch, p=100 already handled above!\n        // reset fg/bg\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.fg |= DEFAULT_ATTR_DATA.fg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.bg |= DEFAULT_ATTR_DATA.bg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n      } else {\n        this._logService.debug('Unknown SGR attribute: %d.', p);\n      }\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps n  Device Status Report (DSR).\n   *     Ps = 5  -> Status Report.  Result (``OK'') is\n   *   CSI 0 n\n   *     Ps = 6  -> Report Cursor Position (CPR) [row;column].\n   *   Result is\n   *   CSI r ; c R\n   * CSI ? Ps n\n   *   Device Status Report (DSR, DEC-specific).\n   *     Ps = 6  -> Report Cursor Position (CPR) [row;column] as CSI\n   *     ? r ; c R (assumes page is zero).\n   *     Ps = 1 5  -> Report Printer status as CSI ? 1 0  n  (ready).\n   *     or CSI ? 1 1  n  (not ready).\n   *     Ps = 2 5  -> Report UDK status as CSI ? 2 0  n  (unlocked)\n   *     or CSI ? 2 1  n  (locked).\n   *     Ps = 2 6  -> Report Keyboard status as\n   *   CSI ? 2 7  ;  1  ;  0  ;  0  n  (North American).\n   *   The last two parameters apply to VT400 & up, and denote key-\n   *   board ready and LK01 respectively.\n   *     Ps = 5 3  -> Report Locator status as\n   *   CSI ? 5 3  n  Locator available, if compiled-in, or\n   *   CSI ? 5 0  n  No Locator, if not.\n   *\n   * @vt: #Y CSI DSR   \"Device Status Report\"  \"CSI Ps n\"  \"Request cursor position (CPR) with `Ps` = 6.\"\n   */\n  public deviceStatus(params: IParams): boolean {\n    switch (params.params[0]) {\n      case 5:\n        // status report\n        this._coreService.triggerDataEvent(`${C0.ESC}[0n`);\n        break;\n      case 6:\n        // cursor position\n        const y = this._activeBuffer.y + 1;\n        const x = this._activeBuffer.x + 1;\n        this._coreService.triggerDataEvent(`${C0.ESC}[${y};${x}R`);\n        break;\n    }\n    return true;\n  }\n\n  // @vt: #P[Only CPR is supported.]  CSI DECDSR  \"DEC Device Status Report\"  \"CSI ? Ps n\"  \"Only CPR is supported (same as DSR).\"\n  public deviceStatusPrivate(params: IParams): boolean {\n    // modern xterm doesnt seem to\n    // respond to any of these except ?6, 6, and 5\n    switch (params.params[0]) {\n      case 6:\n        // cursor position\n        const y = this._activeBuffer.y + 1;\n        const x = this._activeBuffer.x + 1;\n        this._coreService.triggerDataEvent(`${C0.ESC}[?${y};${x}R`);\n        break;\n      case 15:\n        // no printer\n        // this.handler(C0.ESC + '[?11n');\n        break;\n      case 25:\n        // dont support user defined keys\n        // this.handler(C0.ESC + '[?21n');\n        break;\n      case 26:\n        // north american keyboard\n        // this.handler(C0.ESC + '[?27;1;0;0n');\n        break;\n      case 53:\n        // no dec locator/mouse\n        // this.handler(C0.ESC + '[?50n');\n        break;\n    }\n    return true;\n  }\n\n  /**\n   * CSI ! p   Soft terminal reset (DECSTR).\n   * http://vt100.net/docs/vt220-rm/table4-10.html\n   *\n   * @vt: #Y CSI DECSTR  \"Soft Terminal Reset\"   \"CSI ! p\"   \"Reset several terminal attributes to initial state.\"\n   * There are two terminal reset sequences - RIS and DECSTR. While RIS performs almost a full terminal bootstrap,\n   * DECSTR only resets certain attributes. For most needs DECSTR should be sufficient.\n   *\n   * The following terminal attributes are reset to default values:\n   * - IRM is reset (dafault = false)\n   * - scroll margins are reset (default = viewport size)\n   * - erase attributes are reset to default\n   * - charsets are reset\n   * - DECSC data is reset to initial values\n   * - DECOM is reset to absolute mode\n   *\n   *\n   * FIXME: there are several more attributes missing (see VT520 manual)\n   */\n  public softReset(params: IParams): boolean {\n    this._coreService.isCursorHidden = false;\n    this._onRequestSyncScrollBar.fire();\n    this._activeBuffer.scrollTop = 0;\n    this._activeBuffer.scrollBottom = this._bufferService.rows - 1;\n    this._curAttrData = DEFAULT_ATTR_DATA.clone();\n    this._coreService.reset();\n    this._charsetService.reset();\n\n    // reset DECSC data\n    this._activeBuffer.savedX = 0;\n    this._activeBuffer.savedY = this._activeBuffer.ybase;\n    this._activeBuffer.savedCurAttrData.fg = this._curAttrData.fg;\n    this._activeBuffer.savedCurAttrData.bg = this._curAttrData.bg;\n    this._activeBuffer.savedCharset = this._charsetService.charset;\n\n    // reset DECOM\n    this._coreService.decPrivateModes.origin = false;\n    return true;\n  }\n\n  /**\n   * CSI Ps SP q  Set cursor style (DECSCUSR, VT520).\n   *   Ps = 0  -> blinking block.\n   *   Ps = 1  -> blinking block (default).\n   *   Ps = 2  -> steady block.\n   *   Ps = 3  -> blinking underline.\n   *   Ps = 4  -> steady underline.\n   *   Ps = 5  -> blinking bar (xterm).\n   *   Ps = 6  -> steady bar (xterm).\n   *\n   * @vt: #Y CSI DECSCUSR  \"Set Cursor Style\"  \"CSI Ps SP q\"   \"Set cursor style.\"\n   * Supported cursor styles:\n   *  - empty, 0 or 1: steady block\n   *  - 2: blink block\n   *  - 3: steady underline\n   *  - 4: blink underline\n   *  - 5: steady bar\n   *  - 6: blink bar\n   */\n  public setCursorStyle(params: IParams): boolean {\n    const param = params.params[0] || 1;\n    switch (param) {\n      case 1:\n      case 2:\n        this._optionsService.options.cursorStyle = 'block';\n        break;\n      case 3:\n      case 4:\n        this._optionsService.options.cursorStyle = 'underline';\n        break;\n      case 5:\n      case 6:\n        this._optionsService.options.cursorStyle = 'bar';\n        break;\n    }\n    const isBlinking = param % 2 === 1;\n    this._optionsService.options.cursorBlink = isBlinking;\n    return true;\n  }\n\n  /**\n   * CSI Ps ; Ps r\n   *   Set Scrolling Region [top;bottom] (default = full size of win-\n   *   dow) (DECSTBM).\n   *\n   * @vt: #Y CSI DECSTBM \"Set Top and Bottom Margin\" \"CSI Ps ; Ps r\" \"Set top and bottom margins of the viewport [top;bottom] (default = viewport size).\"\n   */\n  public setScrollRegion(params: IParams): boolean {\n    const top = params.params[0] || 1;\n    let bottom: number;\n\n    if (params.length < 2 || (bottom = params.params[1]) >  this._bufferService.rows || bottom === 0) {\n      bottom = this._bufferService.rows;\n    }\n\n    if (bottom > top) {\n      this._activeBuffer.scrollTop = top - 1;\n      this._activeBuffer.scrollBottom = bottom - 1;\n      this._setCursor(0, 0);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps ; Ps ; Ps t - Various window manipulations and reports (xterm)\n   *\n   * Note: Only those listed below are supported. All others are left to integrators and\n   * need special treatment based on the embedding environment.\n   *\n   *    Ps = 1 4                                                          supported\n   *      Report xterm text area size in pixels.\n   *      Result is CSI 4 ; height ; width t\n   *    Ps = 14 ; 2                                                       not implemented\n   *    Ps = 16                                                           supported\n   *      Report xterm character cell size in pixels.\n   *      Result is CSI 6 ; height ; width t\n   *    Ps = 18                                                           supported\n   *      Report the size of the text area in characters.\n   *      Result is CSI 8 ; height ; width t\n   *    Ps = 20                                                           supported\n   *      Report xterm window's icon label.\n   *      Result is OSC L label ST\n   *    Ps = 21                                                           supported\n   *      Report xterm window's title.\n   *      Result is OSC l label ST\n   *    Ps = 22 ; 0  -> Save xterm icon and window title on stack.        supported\n   *    Ps = 22 ; 1  -> Save xterm icon title on stack.                   supported\n   *    Ps = 22 ; 2  -> Save xterm window title on stack.                 supported\n   *    Ps = 23 ; 0  -> Restore xterm icon and window title from stack.   supported\n   *    Ps = 23 ; 1  -> Restore xterm icon title from stack.              supported\n   *    Ps = 23 ; 2  -> Restore xterm window title from stack.            supported\n   *    Ps >= 24                                                          not implemented\n   */\n  public windowOptions(params: IParams): boolean {\n    if (!paramToWindowOption(params.params[0], this._optionsService.options.windowOptions)) {\n      return true;\n    }\n    const second = (params.length > 1) ? params.params[1] : 0;\n    switch (params.params[0]) {\n      case 14:  // GetWinSizePixels, returns CSI 4 ; height ; width t\n        if (second !== 2) {\n          this._onRequestWindowsOptionsReport.fire(WindowsOptionsReportType.GET_WIN_SIZE_PIXELS);\n        }\n        break;\n      case 16:  // GetCellSizePixels, returns CSI 6 ; height ; width t\n        this._onRequestWindowsOptionsReport.fire(WindowsOptionsReportType.GET_CELL_SIZE_PIXELS);\n        break;\n      case 18:  // GetWinSizeChars, returns CSI 8 ; height ; width t\n        if (this._bufferService) {\n          this._coreService.triggerDataEvent(`${C0.ESC}[8;${this._bufferService.rows};${this._bufferService.cols}t`);\n        }\n        break;\n      case 22:  // PushTitle\n        if (second === 0 || second === 2) {\n          this._windowTitleStack.push(this._windowTitle);\n          if (this._windowTitleStack.length > STACK_LIMIT) {\n            this._windowTitleStack.shift();\n          }\n        }\n        if (second === 0 || second === 1) {\n          this._iconNameStack.push(this._iconName);\n          if (this._iconNameStack.length > STACK_LIMIT) {\n            this._iconNameStack.shift();\n          }\n        }\n        break;\n      case 23:  // PopTitle\n        if (second === 0 || second === 2) {\n          if (this._windowTitleStack.length) {\n            this.setTitle(this._windowTitleStack.pop()!);\n          }\n        }\n        if (second === 0 || second === 1) {\n          if (this._iconNameStack.length) {\n            this.setIconName(this._iconNameStack.pop()!);\n          }\n        }\n        break;\n    }\n    return true;\n  }\n\n\n  /**\n   * CSI s\n   * ESC 7\n   *   Save cursor (ANSI.SYS).\n   *\n   * @vt: #P[TODO...]  CSI SCOSC   \"Save Cursor\"   \"CSI s\"   \"Save cursor position, charmap and text attributes.\"\n   * @vt: #Y ESC  SC   \"Save Cursor\"   \"ESC 7\"   \"Save cursor position, charmap and text attributes.\"\n   */\n  public saveCursor(params?: IParams): boolean {\n    this._activeBuffer.savedX = this._activeBuffer.x;\n    this._activeBuffer.savedY = this._activeBuffer.ybase + this._activeBuffer.y;\n    this._activeBuffer.savedCurAttrData.fg = this._curAttrData.fg;\n    this._activeBuffer.savedCurAttrData.bg = this._curAttrData.bg;\n    this._activeBuffer.savedCharset = this._charsetService.charset;\n    return true;\n  }\n\n\n  /**\n   * CSI u\n   * ESC 8\n   *   Restore cursor (ANSI.SYS).\n   *\n   * @vt: #P[TODO...]  CSI SCORC \"Restore Cursor\"  \"CSI u\"   \"Restore cursor position, charmap and text attributes.\"\n   * @vt: #Y ESC  RC \"Restore Cursor\"  \"ESC 8\"   \"Restore cursor position, charmap and text attributes.\"\n   */\n  public restoreCursor(params?: IParams): boolean {\n    this._activeBuffer.x = this._activeBuffer.savedX || 0;\n    this._activeBuffer.y = Math.max(this._activeBuffer.savedY - this._activeBuffer.ybase, 0);\n    this._curAttrData.fg = this._activeBuffer.savedCurAttrData.fg;\n    this._curAttrData.bg = this._activeBuffer.savedCurAttrData.bg;\n    this._charsetService.charset = (this as any)._savedCharset;\n    if (this._activeBuffer.savedCharset) {\n      this._charsetService.charset = this._activeBuffer.savedCharset;\n    }\n    this._restrictCursor();\n    return true;\n  }\n\n\n  /**\n   * OSC 2; <data> ST (set window title)\n   *   Proxy to set window title.\n   *\n   * @vt: #P[Icon name is not exposed.]   OSC    0   \"Set Windows Title and Icon Name\"  \"OSC 0 ; Pt BEL\"  \"Set window title and icon name.\"\n   * Icon name is not supported. For Window Title see below.\n   *\n   * @vt: #Y     OSC    2   \"Set Windows Title\"  \"OSC 2 ; Pt BEL\"  \"Set window title.\"\n   * xterm.js does not manipulate the title directly, instead exposes changes via the event `Terminal.onTitleChange`.\n   */\n  public setTitle(data: string): boolean {\n    this._windowTitle = data;\n    this._onTitleChange.fire(data);\n    return true;\n  }\n\n  /**\n   * OSC 1; <data> ST\n   * Note: Icon name is not exposed.\n   */\n  public setIconName(data: string): boolean {\n    this._iconName = data;\n    return true;\n  }\n\n  protected _parseAnsiColorChange(data: string): IAnsiColorChangeEvent | null {\n    const result: IAnsiColorChangeEvent = { colors: [] };\n    // example data: 5;rgb:aa/bb/cc\n    const regex = /(\\d+);rgb:([\\da-f]{2})\\/([\\da-f]{2})\\/([\\da-f]{2})/gi;\n    let match;\n\n    while ((match = regex.exec(data)) !== null) {\n      result.colors.push({\n        colorIndex: parseInt(match[1]),\n        red: parseInt(match[2], 16),\n        green: parseInt(match[3], 16),\n        blue: parseInt(match[4], 16)\n      });\n    }\n\n    if (result.colors.length === 0) {\n      return null;\n    }\n\n    return result;\n  }\n\n  /**\n   * OSC 4; <num> ; <text> ST (set ANSI color <num> to <text>)\n   *\n   * @vt: #Y    OSC    4    \"Set ANSI color\"   \"OSC 4 ; c ; spec BEL\" \"Change color number `c` to the color specified by `spec`.\"\n   * `c` is the color index between 0 and 255. `spec` color format is 'rgb:hh/hh/hh' where `h` are hexadecimal digits.\n   * There may be multipe c ; spec elements present in the same instruction, e.g. 1;rgb:10/20/30;2;rgb:a0/b0/c0.\n   */\n  public setAnsiColor(data: string): boolean {\n    const event = this._parseAnsiColorChange(data);\n    if (event) {\n      this._onAnsiColorChange.fire(event);\n    }\n    else {\n      this._logService.warn(`Expected format <num>;rgb:<rr>/<gg>/<bb> but got data: ${data}`);\n    }\n    return true;\n  }\n\n  /**\n   * ESC E\n   * C1.NEL\n   *   DEC mnemonic: NEL (https://vt100.net/docs/vt510-rm/NEL)\n   *   Moves cursor to first position on next line.\n   *\n   * @vt: #Y   C1    NEL   \"Next Line\"   \"\\x85\"    \"Move the cursor to the beginning of the next row.\"\n   * @vt: #Y   ESC   NEL   \"Next Line\"   \"ESC E\"   \"Move the cursor to the beginning of the next row.\"\n   */\n  public nextLine(): boolean {\n    this._activeBuffer.x = 0;\n    this.index();\n    return true;\n  }\n\n  /**\n   * ESC =\n   *   DEC mnemonic: DECKPAM (https://vt100.net/docs/vt510-rm/DECKPAM.html)\n   *   Enables the numeric keypad to send application sequences to the host.\n   */\n  public keypadApplicationMode(): boolean {\n    this._logService.debug('Serial port requested application keypad.');\n    this._coreService.decPrivateModes.applicationKeypad = true;\n    this._onRequestSyncScrollBar.fire();\n    return true;\n  }\n\n  /**\n   * ESC >\n   *   DEC mnemonic: DECKPNM (https://vt100.net/docs/vt510-rm/DECKPNM.html)\n   *   Enables the keypad to send numeric characters to the host.\n   */\n  public keypadNumericMode(): boolean {\n    this._logService.debug('Switching back to normal keypad.');\n    this._coreService.decPrivateModes.applicationKeypad = false;\n    this._onRequestSyncScrollBar.fire();\n    return true;\n  }\n\n  /**\n   * ESC % @\n   * ESC % G\n   *   Select default character set. UTF-8 is not supported (string are unicode anyways)\n   *   therefore ESC % G does the same.\n   */\n  public selectDefaultCharset(): boolean {\n    this._charsetService.setgLevel(0);\n    this._charsetService.setgCharset(0, DEFAULT_CHARSET); // US (default)\n    return true;\n  }\n\n  /**\n   * ESC ( C\n   *   Designate G0 Character Set, VT100, ISO 2022.\n   * ESC ) C\n   *   Designate G1 Character Set (ISO 2022, VT100).\n   * ESC * C\n   *   Designate G2 Character Set (ISO 2022, VT220).\n   * ESC + C\n   *   Designate G3 Character Set (ISO 2022, VT220).\n   * ESC - C\n   *   Designate G1 Character Set (VT300).\n   * ESC . C\n   *   Designate G2 Character Set (VT300).\n   * ESC / C\n   *   Designate G3 Character Set (VT300). C = A  -> ISO Latin-1 Supplemental. - Supported?\n   */\n  public selectCharset(collectAndFlag: string): boolean {\n    if (collectAndFlag.length !== 2) {\n      this.selectDefaultCharset();\n      return true;\n    }\n    if (collectAndFlag[0] === '/') {\n      return true;  // TODO: Is this supported?\n    }\n    this._charsetService.setgCharset(GLEVEL[collectAndFlag[0]], CHARSETS[collectAndFlag[1]] || DEFAULT_CHARSET);\n    return true;\n  }\n\n  /**\n   * ESC D\n   * C1.IND\n   *   DEC mnemonic: IND (https://vt100.net/docs/vt510-rm/IND.html)\n   *   Moves the cursor down one line in the same column.\n   *\n   * @vt: #Y   C1    IND   \"Index\"   \"\\x84\"    \"Move the cursor one line down scrolling if needed.\"\n   * @vt: #Y   ESC   IND   \"Index\"   \"ESC D\"   \"Move the cursor one line down scrolling if needed.\"\n   */\n  public index(): boolean {\n    this._restrictCursor();\n    this._activeBuffer.y++;\n    if (this._activeBuffer.y === this._activeBuffer.scrollBottom + 1) {\n      this._activeBuffer.y--;\n      this._bufferService.scroll(this._eraseAttrData());\n    } else if (this._activeBuffer.y >= this._bufferService.rows) {\n      this._activeBuffer.y = this._bufferService.rows - 1;\n    }\n    this._restrictCursor();\n    return true;\n  }\n\n  /**\n   * ESC H\n   * C1.HTS\n   *   DEC mnemonic: HTS (https://vt100.net/docs/vt510-rm/HTS.html)\n   *   Sets a horizontal tab stop at the column position indicated by\n   *   the value of the active column when the terminal receives an HTS.\n   *\n   * @vt: #Y   C1    HTS   \"Horizontal Tabulation Set\" \"\\x88\"    \"Places a tab stop at the current cursor position.\"\n   * @vt: #Y   ESC   HTS   \"Horizontal Tabulation Set\" \"ESC H\"   \"Places a tab stop at the current cursor position.\"\n   */\n  public tabSet(): boolean {\n    this._activeBuffer.tabs[this._activeBuffer.x] = true;\n    return true;\n  }\n\n  /**\n   * ESC M\n   * C1.RI\n   *   DEC mnemonic: HTS\n   *   Moves the cursor up one line in the same column. If the cursor is at the top margin,\n   *   the page scrolls down.\n   *\n   * @vt: #Y ESC  IR \"Reverse Index\" \"ESC M\"  \"Move the cursor one line up scrolling if needed.\"\n   */\n  public reverseIndex(): boolean {\n    this._restrictCursor();\n    if (this._activeBuffer.y === this._activeBuffer.scrollTop) {\n      // possibly move the code below to term.reverseScroll();\n      // test: echo -ne '\\e[1;1H\\e[44m\\eM\\e[0m'\n      // blankLine(true) is xterm/linux behavior\n      const scrollRegionHeight = this._activeBuffer.scrollBottom - this._activeBuffer.scrollTop;\n      this._activeBuffer.lines.shiftElements(this._activeBuffer.ybase + this._activeBuffer.y, scrollRegionHeight, 1);\n      this._activeBuffer.lines.set(this._activeBuffer.ybase + this._activeBuffer.y, this._activeBuffer.getBlankLine(this._eraseAttrData()));\n      this._dirtyRowService.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    } else {\n      this._activeBuffer.y--;\n      this._restrictCursor(); // quickfix to not run out of bounds\n    }\n    return true;\n  }\n\n  /**\n   * ESC c\n   *   DEC mnemonic: RIS (https://vt100.net/docs/vt510-rm/RIS.html)\n   *   Reset to initial state.\n   */\n  public fullReset(): boolean {\n    this._parser.reset();\n    this._onRequestReset.fire();\n    return true;\n  }\n\n  public reset(): void {\n    this._curAttrData = DEFAULT_ATTR_DATA.clone();\n    this._eraseAttrDataInternal = DEFAULT_ATTR_DATA.clone();\n  }\n\n  /**\n   * back_color_erase feature for xterm.\n   */\n  private _eraseAttrData(): IAttributeData {\n    this._eraseAttrDataInternal.bg &= ~(Attributes.CM_MASK | 0xFFFFFF);\n    this._eraseAttrDataInternal.bg |= this._curAttrData.bg & ~0xFC000000;\n    return this._eraseAttrDataInternal;\n  }\n\n  /**\n   * ESC n\n   * ESC o\n   * ESC |\n   * ESC }\n   * ESC ~\n   *   DEC mnemonic: LS (https://vt100.net/docs/vt510-rm/LS.html)\n   *   When you use a locking shift, the character set remains in GL or GR until\n   *   you use another locking shift. (partly supported)\n   */\n  public setgLevel(level: number): boolean {\n    this._charsetService.setgLevel(level);\n    return true;\n  }\n\n  /**\n   * ESC # 8\n   *   DEC mnemonic: DECALN (https://vt100.net/docs/vt510-rm/DECALN.html)\n   *   This control function fills the complete screen area with\n   *   a test pattern (E) used for adjusting screen alignment.\n   *\n   * @vt: #Y   ESC   DECALN   \"Screen Alignment Pattern\"  \"ESC # 8\"  \"Fill viewport with a test pattern (E).\"\n   */\n  public screenAlignmentPattern(): boolean {\n    // prepare cell data\n    const cell = new CellData();\n    cell.content = 1 << Content.WIDTH_SHIFT | 'E'.charCodeAt(0);\n    cell.fg = this._curAttrData.fg;\n    cell.bg = this._curAttrData.bg;\n\n\n    this._setCursor(0, 0);\n    for (let yOffset = 0; yOffset < this._bufferService.rows; ++yOffset) {\n      const row = this._activeBuffer.ybase + this._activeBuffer.y + yOffset;\n      const line = this._activeBuffer.lines.get(row);\n      if (line) {\n        line.fill(cell);\n        line.isWrapped = false;\n      }\n    }\n    this._dirtyRowService.markAllDirty();\n    this._setCursor(0, 0);\n    return true;\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\n/**\n * A base class that can be extended to provide convenience methods for managing the lifecycle of an\n * object and its components.\n */\nexport abstract class Disposable implements IDisposable {\n  protected _disposables: IDisposable[] = [];\n  protected _isDisposed: boolean = false;\n\n  constructor() {\n  }\n\n  /**\n   * Disposes the object, triggering the `dispose` method on all registered IDisposables.\n   */\n  public dispose(): void {\n    this._isDisposed = true;\n    for (const d of this._disposables) {\n      d.dispose();\n    }\n    this._disposables.length = 0;\n  }\n\n  /**\n   * Registers a disposable object.\n   * @param d The disposable to register.\n   * @returns The disposable.\n   */\n  public register<T extends IDisposable>(d: T): T {\n    this._disposables.push(d);\n    return d;\n  }\n\n  /**\n   * Unregisters a disposable object if it has been registered, if not do\n   * nothing.\n   * @param d The disposable to unregister.\n   */\n  public unregister<T extends IDisposable>(d: T): void {\n    const index = this._disposables.indexOf(d);\n    if (index !== -1) {\n      this._disposables.splice(index, 1);\n    }\n  }\n}\n\n/**\n * Dispose of all disposables in an array and set its length to 0.\n */\nexport function disposeArray(disposables: IDisposable[]): void {\n  for (const d of disposables) {\n    d.dispose();\n  }\n  disposables.length = 0;\n}\n\n/**\n * Creates a disposable that will dispose of an array of disposables when disposed.\n */\nexport function getDisposeArrayDisposable(array: IDisposable[]): IDisposable {\n  return { dispose: () => disposeArray(array) };\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\ninterface INavigator {\n  userAgent: string;\n  language: string;\n  platform: string;\n}\n\n// We're declaring a navigator global here as we expect it in all runtimes (node and browser), but\n// we want this module to live in common.\ndeclare const navigator: INavigator;\n\nconst isNode = (typeof navigator === 'undefined') ? true : false;\nconst userAgent = (isNode) ? 'node' : navigator.userAgent;\nconst platform = (isNode) ? 'node' : navigator.platform;\n\nexport const isFirefox = userAgent.includes('Firefox');\nexport const isSafari = /^((?!chrome|android).)*safari/i.test(userAgent);\n\n// Find the users platform. We use this to interpret the meta key\n// and ISO third level shifts.\n// http://stackoverflow.com/q/19877924/577598\nexport const isMac = ['Macintosh', 'MacIntel', 'MacPPC', 'Mac68K'].includes(platform);\nexport const isIpad = platform === 'iPad';\nexport const isIphone = platform === 'iPhone';\nexport const isWindows = ['Windows', 'Win16', 'Win32', 'WinCE'].includes(platform);\nexport const isLinux = platform.indexOf('Linux') >= 0;\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport type TypedArray = Uint8Array | Uint16Array | Uint32Array | Uint8ClampedArray | Int8Array | Int16Array | Int32Array | Float32Array | Float64Array;\n\n\n/**\n * polyfill for TypedArray.fill\n * This is needed to support .fill in all safari versions and IE 11.\n */\nexport function fill<T extends TypedArray>(array: T, value: number, start?: number, end?: number): T {\n  // all modern engines that support .fill\n  if (array.fill) {\n    return array.fill(value, start, end) as T;\n  }\n  return fillFallback(array, value, start, end);\n}\n\nexport function fillFallback<T extends TypedArray>(array: T, value: number, start: number = 0, end: number = array.length): T {\n  // safari and IE 11\n  // since IE 11 does not support Array.prototype.fill either\n  // we cannot use the suggested polyfill from MDN\n  // instead we simply fall back to looping\n  if (start >= array.length) {\n    return array;\n  }\n  start = (array.length + start) % array.length;\n  if (end >= array.length) {\n    end = array.length;\n  } else {\n    end = (array.length + end) % array.length;\n  }\n  for (let i = start; i < end; ++i) {\n    array[i] = value;\n  }\n  return array;\n}\n\n/**\n * Concat two typed arrays `a` and `b`.\n * Returns a new typed array.\n */\nexport function concat<T extends TypedArray>(a: T, b: T): T {\n  const result = new (a.constructor as any)(a.length + b.length);\n  result.set(a);\n  result.set(b, a.length);\n  return result;\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CHAR_DATA_CODE_INDEX, NULL_CELL_CODE, WHITESPACE_CELL_CODE } from 'common/buffer/Constants';\nimport { IBufferService } from 'common/services/Services';\n\nexport function updateWindowsModeWrappedState(bufferService: IBufferService): void {\n  // Winpty does not support wraparound mode which means that lines will never\n  // be marked as wrapped. This causes issues for things like copying a line\n  // retaining the wrapped new line characters or if consumers are listening\n  // in on the data stream.\n  //\n  // The workaround for this is to listen to every incoming line feed and mark\n  // the line as wrapped if the last character in the previous line is not a\n  // space. This is certainly not without its problems, but generally on\n  // Windows when text reaches the end of the terminal it's likely going to be\n  // wrapped.\n  const line = bufferService.buffer.lines.get(bufferService.buffer.ybase + bufferService.buffer.y - 1);\n  const lastChar = line?.get(bufferService.cols - 1);\n\n  const nextLine = bufferService.buffer.lines.get(bufferService.buffer.ybase + bufferService.buffer.y);\n  if (nextLine && lastChar) {\n    nextLine.isWrapped = (lastChar[CHAR_DATA_CODE_INDEX] !== NULL_CELL_CODE && lastChar[CHAR_DATA_CODE_INDEX] !== WHITESPACE_CELL_CODE);\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IAttributeData, IColorRGB, IExtendedAttrs } from 'common/Types';\nimport { Attributes, FgFlags, BgFlags, UnderlineStyle } from 'common/buffer/Constants';\n\nexport class AttributeData implements IAttributeData {\n  public static toColorRGB(value: number): IColorRGB {\n    return [\n      value >>> Attributes.RED_SHIFT & 255,\n      value >>> Attributes.GREEN_SHIFT & 255,\n      value & 255\n    ];\n  }\n\n  public static fromColorRGB(value: IColorRGB): number {\n    return (value[0] & 255) << Attributes.RED_SHIFT | (value[1] & 255) << Attributes.GREEN_SHIFT | value[2] & 255;\n  }\n\n  public clone(): IAttributeData {\n    const newObj = new AttributeData();\n    newObj.fg = this.fg;\n    newObj.bg = this.bg;\n    newObj.extended = this.extended.clone();\n    return newObj;\n  }\n\n  // data\n  public fg = 0;\n  public bg = 0;\n  public extended = new ExtendedAttrs();\n\n  // flags\n  public isInverse(): number       { return this.fg & FgFlags.INVERSE; }\n  public isBold(): number          { return this.fg & FgFlags.BOLD; }\n  public isUnderline(): number     { return this.fg & FgFlags.UNDERLINE; }\n  public isBlink(): number         { return this.fg & FgFlags.BLINK; }\n  public isInvisible(): number     { return this.fg & FgFlags.INVISIBLE; }\n  public isItalic(): number        { return this.bg & BgFlags.ITALIC; }\n  public isDim(): number           { return this.bg & BgFlags.DIM; }\n  public isStrikethrough(): number { return this.fg & FgFlags.STRIKETHROUGH; }\n\n  // color modes\n  public getFgColorMode(): number { return this.fg & Attributes.CM_MASK; }\n  public getBgColorMode(): number { return this.bg & Attributes.CM_MASK; }\n  public isFgRGB(): boolean       { return (this.fg & Attributes.CM_MASK) === Attributes.CM_RGB; }\n  public isBgRGB(): boolean       { return (this.bg & Attributes.CM_MASK) === Attributes.CM_RGB; }\n  public isFgPalette(): boolean   { return (this.fg & Attributes.CM_MASK) === Attributes.CM_P16 || (this.fg & Attributes.CM_MASK) === Attributes.CM_P256; }\n  public isBgPalette(): boolean   { return (this.bg & Attributes.CM_MASK) === Attributes.CM_P16 || (this.bg & Attributes.CM_MASK) === Attributes.CM_P256; }\n  public isFgDefault(): boolean   { return (this.fg & Attributes.CM_MASK) === 0; }\n  public isBgDefault(): boolean   { return (this.bg & Attributes.CM_MASK) === 0; }\n  public isAttributeDefault(): boolean { return this.fg === 0 && this.bg === 0; }\n\n  // colors\n  public getFgColor(): number {\n    switch (this.fg & Attributes.CM_MASK) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:  return this.fg & Attributes.PCOLOR_MASK;\n      case Attributes.CM_RGB:   return this.fg & Attributes.RGB_MASK;\n      default:                  return -1;  // CM_DEFAULT defaults to -1\n    }\n  }\n  public getBgColor(): number {\n    switch (this.bg & Attributes.CM_MASK) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:  return this.bg & Attributes.PCOLOR_MASK;\n      case Attributes.CM_RGB:   return this.bg & Attributes.RGB_MASK;\n      default:                  return -1;  // CM_DEFAULT defaults to -1\n    }\n  }\n\n  // extended attrs\n  public hasExtendedAttrs(): number {\n    return this.bg & BgFlags.HAS_EXTENDED;\n  }\n  public updateExtended(): void {\n    if (this.extended.isEmpty()) {\n      this.bg &= ~BgFlags.HAS_EXTENDED;\n    } else {\n      this.bg |= BgFlags.HAS_EXTENDED;\n    }\n  }\n  public getUnderlineColor(): number {\n    if ((this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor) {\n      switch (this.extended.underlineColor & Attributes.CM_MASK) {\n        case Attributes.CM_P16:\n        case Attributes.CM_P256:  return this.extended.underlineColor & Attributes.PCOLOR_MASK;\n        case Attributes.CM_RGB:   return this.extended.underlineColor & Attributes.RGB_MASK;\n        default:                  return this.getFgColor();\n      }\n    }\n    return this.getFgColor();\n  }\n  public getUnderlineColorMode(): number {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? this.extended.underlineColor & Attributes.CM_MASK\n      : this.getFgColorMode();\n  }\n  public isUnderlineColorRGB(): boolean {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? (this.extended.underlineColor & Attributes.CM_MASK) === Attributes.CM_RGB\n      : this.isFgRGB();\n  }\n  public isUnderlineColorPalette(): boolean {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? (this.extended.underlineColor & Attributes.CM_MASK) === Attributes.CM_P16\n          || (this.extended.underlineColor & Attributes.CM_MASK) === Attributes.CM_P256\n      : this.isFgPalette();\n  }\n  public isUnderlineColorDefault(): boolean {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? (this.extended.underlineColor & Attributes.CM_MASK) === 0\n      : this.isFgDefault();\n  }\n  public getUnderlineStyle(): UnderlineStyle {\n    return this.fg & FgFlags.UNDERLINE\n      ? (this.bg & BgFlags.HAS_EXTENDED ? this.extended.underlineStyle : UnderlineStyle.SINGLE)\n      : UnderlineStyle.NONE;\n  }\n}\n\n\n/**\n * Extended attributes for a cell.\n * Holds information about different underline styles and color.\n */\nexport class ExtendedAttrs implements IExtendedAttrs {\n  constructor(\n    // underline style, NONE is empty\n    public underlineStyle: UnderlineStyle = UnderlineStyle.NONE,\n    // underline color, -1 is empty (same as FG)\n    public underlineColor: number = -1\n  ) {}\n\n  public clone(): IExtendedAttrs {\n    return new ExtendedAttrs(this.underlineStyle, this.underlineColor);\n  }\n\n  /**\n   * Convenient method to indicate whether the object holds no additional information,\n   * that needs to be persistant in the buffer.\n   */\n  public isEmpty(): boolean {\n    return this.underlineStyle === UnderlineStyle.NONE;\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CircularList, IInsertEvent } from 'common/CircularList';\nimport { IBuffer, BufferIndex, IBufferStringIterator, IBufferStringIteratorResult } from 'common/buffer/Types';\nimport { IBufferLine, ICellData, IAttributeData, ICharset } from 'common/Types';\nimport { BufferLine, DEFAULT_ATTR_DATA } from 'common/buffer/BufferLine';\nimport { CellData } from 'common/buffer/CellData';\nimport { NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE, WHITESPACE_CELL_CHAR, WHITESPACE_CELL_WIDTH, WHITESPACE_CELL_CODE, CHAR_DATA_WIDTH_INDEX, CHAR_DATA_CHAR_INDEX } from 'common/buffer/Constants';\nimport { reflowLargerApplyNewLayout, reflowLargerCreateNewLayout, reflowLargerGetLinesToRemove, reflowSmallerGetNewLineLengths, getWrappedLineTrimmedLength } from 'common/buffer/BufferReflow';\nimport { Marker } from 'common/buffer/Marker';\nimport { IOptionsService, IBufferService } from 'common/services/Services';\nimport { DEFAULT_CHARSET } from 'common/data/Charsets';\nimport { ExtendedAttrs } from 'common/buffer/AttributeData';\n\nexport const MAX_BUFFER_SIZE = 4294967295; // 2^32 - 1\n\n/**\n * This class represents a terminal buffer (an internal state of the terminal), where the\n * following information is stored (in high-level):\n *   - text content of this particular buffer\n *   - cursor position\n *   - scroll position\n */\nexport class Buffer implements IBuffer {\n  public lines: CircularList<IBufferLine>;\n  public ydisp: number = 0;\n  public ybase: number = 0;\n  public y: number = 0;\n  public x: number = 0;\n  public scrollBottom: number;\n  public scrollTop: number;\n  // TODO: Type me\n  public tabs: any;\n  public savedY: number = 0;\n  public savedX: number = 0;\n  public savedCurAttrData = DEFAULT_ATTR_DATA.clone();\n  public savedCharset: ICharset | undefined = DEFAULT_CHARSET;\n  public markers: Marker[] = [];\n  private _nullCell: ICellData = CellData.fromCharData([0, NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE]);\n  private _whitespaceCell: ICellData = CellData.fromCharData([0, WHITESPACE_CELL_CHAR, WHITESPACE_CELL_WIDTH, WHITESPACE_CELL_CODE]);\n  private _cols: number;\n  private _rows: number;\n\n  constructor(\n    private _hasScrollback: boolean,\n    private _optionsService: IOptionsService,\n    private _bufferService: IBufferService\n  ) {\n    this._cols = this._bufferService.cols;\n    this._rows = this._bufferService.rows;\n    this.lines = new CircularList<IBufferLine>(this._getCorrectBufferLength(this._rows));\n    this.scrollTop = 0;\n    this.scrollBottom = this._rows - 1;\n    this.setupTabStops();\n  }\n\n  public getNullCell(attr?: IAttributeData): ICellData {\n    if (attr) {\n      this._nullCell.fg = attr.fg;\n      this._nullCell.bg = attr.bg;\n      this._nullCell.extended = attr.extended;\n    } else {\n      this._nullCell.fg = 0;\n      this._nullCell.bg = 0;\n      this._nullCell.extended = new ExtendedAttrs();\n    }\n    return this._nullCell;\n  }\n\n  public getWhitespaceCell(attr?: IAttributeData): ICellData {\n    if (attr) {\n      this._whitespaceCell.fg = attr.fg;\n      this._whitespaceCell.bg = attr.bg;\n      this._whitespaceCell.extended = attr.extended;\n    } else {\n      this._whitespaceCell.fg = 0;\n      this._whitespaceCell.bg = 0;\n      this._whitespaceCell.extended = new ExtendedAttrs();\n    }\n    return this._whitespaceCell;\n  }\n\n  public getBlankLine(attr: IAttributeData, isWrapped?: boolean): IBufferLine {\n    return new BufferLine(this._bufferService.cols, this.getNullCell(attr), isWrapped);\n  }\n\n  public get hasScrollback(): boolean {\n    return this._hasScrollback && this.lines.maxLength > this._rows;\n  }\n\n  public get isCursorInViewport(): boolean {\n    const absoluteY = this.ybase + this.y;\n    const relativeY = absoluteY - this.ydisp;\n    return (relativeY >= 0 && relativeY < this._rows);\n  }\n\n  /**\n   * Gets the correct buffer length based on the rows provided, the terminal's\n   * scrollback and whether this buffer is flagged to have scrollback or not.\n   * @param rows The terminal rows to use in the calculation.\n   */\n  private _getCorrectBufferLength(rows: number): number {\n    if (!this._hasScrollback) {\n      return rows;\n    }\n\n    const correctBufferLength = rows + this._optionsService.options.scrollback;\n\n    return correctBufferLength > MAX_BUFFER_SIZE ? MAX_BUFFER_SIZE : correctBufferLength;\n  }\n\n  /**\n   * Fills the buffer's viewport with blank lines.\n   */\n  public fillViewportRows(fillAttr?: IAttributeData): void {\n    if (this.lines.length === 0) {\n      if (fillAttr === undefined) {\n        fillAttr = DEFAULT_ATTR_DATA;\n      }\n      let i = this._rows;\n      while (i--) {\n        this.lines.push(this.getBlankLine(fillAttr));\n      }\n    }\n  }\n\n  /**\n   * Clears the buffer to it's initial state, discarding all previous data.\n   */\n  public clear(): void {\n    this.ydisp = 0;\n    this.ybase = 0;\n    this.y = 0;\n    this.x = 0;\n    this.lines = new CircularList<IBufferLine>(this._getCorrectBufferLength(this._rows));\n    this.scrollTop = 0;\n    this.scrollBottom = this._rows - 1;\n    this.setupTabStops();\n  }\n\n  /**\n   * Resizes the buffer, adjusting its data accordingly.\n   * @param newCols The new number of columns.\n   * @param newRows The new number of rows.\n   */\n  public resize(newCols: number, newRows: number): void {\n    // store reference to null cell with default attrs\n    const nullCell = this.getNullCell(DEFAULT_ATTR_DATA);\n\n    // Increase max length if needed before adjustments to allow space to fill\n    // as required.\n    const newMaxLength = this._getCorrectBufferLength(newRows);\n    if (newMaxLength > this.lines.maxLength) {\n      this.lines.maxLength = newMaxLength;\n    }\n\n    // The following adjustments should only happen if the buffer has been\n    // initialized/filled.\n    if (this.lines.length > 0) {\n      // Deal with columns increasing (reducing needs to happen after reflow)\n      if (this._cols < newCols) {\n        for (let i = 0; i < this.lines.length; i++) {\n          this.lines.get(i)!.resize(newCols, nullCell);\n        }\n      }\n\n      // Resize rows in both directions as needed\n      let addToY = 0;\n      if (this._rows < newRows) {\n        for (let y = this._rows; y < newRows; y++) {\n          if (this.lines.length < newRows + this.ybase) {\n            if (this._optionsService.options.windowsMode) {\n              // Just add the new missing rows on Windows as conpty reprints the screen with it's\n              // view of the world. Once a line enters scrollback for conpty it remains there\n              this.lines.push(new BufferLine(newCols, nullCell));\n            } else {\n              if (this.ybase > 0 && this.lines.length <= this.ybase + this.y + addToY + 1) {\n                // There is room above the buffer and there are no empty elements below the line,\n                // scroll up\n                this.ybase--;\n                addToY++;\n                if (this.ydisp > 0) {\n                  // Viewport is at the top of the buffer, must increase downwards\n                  this.ydisp--;\n                }\n              } else {\n                // Add a blank line if there is no buffer left at the top to scroll to, or if there\n                // are blank lines after the cursor\n                this.lines.push(new BufferLine(newCols, nullCell));\n              }\n            }\n          }\n        }\n      } else { // (this._rows >= newRows)\n        for (let y = this._rows; y > newRows; y--) {\n          if (this.lines.length > newRows + this.ybase) {\n            if (this.lines.length > this.ybase + this.y + 1) {\n              // The line is a blank line below the cursor, remove it\n              this.lines.pop();\n            } else {\n              // The line is the cursor, scroll down\n              this.ybase++;\n              this.ydisp++;\n            }\n          }\n        }\n      }\n\n      // Reduce max length if needed after adjustments, this is done after as it\n      // would otherwise cut data from the bottom of the buffer.\n      if (newMaxLength < this.lines.maxLength) {\n        // Trim from the top of the buffer and adjust ybase and ydisp.\n        const amountToTrim = this.lines.length - newMaxLength;\n        if (amountToTrim > 0) {\n          this.lines.trimStart(amountToTrim);\n          this.ybase = Math.max(this.ybase - amountToTrim, 0);\n          this.ydisp = Math.max(this.ydisp - amountToTrim, 0);\n          this.savedY = Math.max(this.savedY - amountToTrim, 0);\n        }\n        this.lines.maxLength = newMaxLength;\n      }\n\n      // Make sure that the cursor stays on screen\n      this.x = Math.min(this.x, newCols - 1);\n      this.y = Math.min(this.y, newRows - 1);\n      if (addToY) {\n        this.y += addToY;\n      }\n      this.savedX = Math.min(this.savedX, newCols - 1);\n\n      this.scrollTop = 0;\n    }\n\n    this.scrollBottom = newRows - 1;\n\n    if (this._isReflowEnabled) {\n      this._reflow(newCols, newRows);\n\n      // Trim the end of the line off if cols shrunk\n      if (this._cols > newCols) {\n        for (let i = 0; i < this.lines.length; i++) {\n          this.lines.get(i)!.resize(newCols, nullCell);\n        }\n      }\n    }\n\n    this._cols = newCols;\n    this._rows = newRows;\n  }\n\n  private get _isReflowEnabled(): boolean {\n    return this._hasScrollback && !this._optionsService.options.windowsMode;\n  }\n\n  private _reflow(newCols: number, newRows: number): void {\n    if (this._cols === newCols) {\n      return;\n    }\n\n    // Iterate through rows, ignore the last one as it cannot be wrapped\n    if (newCols > this._cols) {\n      this._reflowLarger(newCols, newRows);\n    } else {\n      this._reflowSmaller(newCols, newRows);\n    }\n  }\n\n  private _reflowLarger(newCols: number, newRows: number): void {\n    const toRemove: number[] = reflowLargerGetLinesToRemove(this.lines, this._cols, newCols, this.ybase + this.y, this.getNullCell(DEFAULT_ATTR_DATA));\n    if (toRemove.length > 0) {\n      const newLayoutResult = reflowLargerCreateNewLayout(this.lines, toRemove);\n      reflowLargerApplyNewLayout(this.lines, newLayoutResult.layout);\n      this._reflowLargerAdjustViewport(newCols, newRows, newLayoutResult.countRemoved);\n    }\n  }\n\n  private _reflowLargerAdjustViewport(newCols: number, newRows: number, countRemoved: number): void {\n    const nullCell = this.getNullCell(DEFAULT_ATTR_DATA);\n    // Adjust viewport based on number of items removed\n    let viewportAdjustments = countRemoved;\n    while (viewportAdjustments-- > 0) {\n      if (this.ybase === 0) {\n        if (this.y > 0) {\n          this.y--;\n        }\n        if (this.lines.length < newRows) {\n          // Add an extra row at the bottom of the viewport\n          this.lines.push(new BufferLine(newCols, nullCell));\n        }\n      } else {\n        if (this.ydisp === this.ybase) {\n          this.ydisp--;\n        }\n        this.ybase--;\n      }\n    }\n    this.savedY = Math.max(this.savedY - countRemoved, 0);\n  }\n\n  private _reflowSmaller(newCols: number, newRows: number): void {\n    const nullCell = this.getNullCell(DEFAULT_ATTR_DATA);\n    // Gather all BufferLines that need to be inserted into the Buffer here so that they can be\n    // batched up and only committed once\n    const toInsert = [];\n    let countToInsert = 0;\n    // Go backwards as many lines may be trimmed and this will avoid considering them\n    for (let y = this.lines.length - 1; y >= 0; y--) {\n      // Check whether this line is a problem\n      let nextLine = this.lines.get(y) as BufferLine;\n      if (!nextLine || !nextLine.isWrapped && nextLine.getTrimmedLength() <= newCols) {\n        continue;\n      }\n\n      // Gather wrapped lines and adjust y to be the starting line\n      const wrappedLines: BufferLine[] = [nextLine];\n      while (nextLine.isWrapped && y > 0) {\n        nextLine = this.lines.get(--y) as BufferLine;\n        wrappedLines.unshift(nextLine);\n      }\n\n      // If these lines contain the cursor don't touch them, the program will handle fixing up\n      // wrapped lines with the cursor\n      const absoluteY = this.ybase + this.y;\n      if (absoluteY >= y && absoluteY < y + wrappedLines.length) {\n        continue;\n      }\n\n      const lastLineLength = wrappedLines[wrappedLines.length - 1].getTrimmedLength();\n      const destLineLengths = reflowSmallerGetNewLineLengths(wrappedLines, this._cols, newCols);\n      const linesToAdd = destLineLengths.length - wrappedLines.length;\n      let trimmedLines: number;\n      if (this.ybase === 0 && this.y !== this.lines.length - 1) {\n        // If the top section of the buffer is not yet filled\n        trimmedLines = Math.max(0, this.y - this.lines.maxLength + linesToAdd);\n      } else {\n        trimmedLines = Math.max(0, this.lines.length - this.lines.maxLength + linesToAdd);\n      }\n\n      // Add the new lines\n      const newLines: BufferLine[] = [];\n      for (let i = 0; i < linesToAdd; i++) {\n        const newLine = this.getBlankLine(DEFAULT_ATTR_DATA, true) as BufferLine;\n        newLines.push(newLine);\n      }\n      if (newLines.length > 0) {\n        toInsert.push({\n          // countToInsert here gets the actual index, taking into account other inserted items.\n          // using this we can iterate through the list forwards\n          start: y + wrappedLines.length + countToInsert,\n          newLines\n        });\n        countToInsert += newLines.length;\n      }\n      wrappedLines.push(...newLines);\n\n      // Copy buffer data to new locations, this needs to happen backwards to do in-place\n      let destLineIndex = destLineLengths.length - 1; // Math.floor(cellsNeeded / newCols);\n      let destCol = destLineLengths[destLineIndex]; // cellsNeeded % newCols;\n      if (destCol === 0) {\n        destLineIndex--;\n        destCol = destLineLengths[destLineIndex];\n      }\n      let srcLineIndex = wrappedLines.length - linesToAdd - 1;\n      let srcCol = lastLineLength;\n      while (srcLineIndex >= 0) {\n        const cellsToCopy = Math.min(srcCol, destCol);\n        wrappedLines[destLineIndex].copyCellsFrom(wrappedLines[srcLineIndex], srcCol - cellsToCopy, destCol - cellsToCopy, cellsToCopy, true);\n        destCol -= cellsToCopy;\n        if (destCol === 0) {\n          destLineIndex--;\n          destCol = destLineLengths[destLineIndex];\n        }\n        srcCol -= cellsToCopy;\n        if (srcCol === 0) {\n          srcLineIndex--;\n          const wrappedLinesIndex = Math.max(srcLineIndex, 0);\n          srcCol = getWrappedLineTrimmedLength(wrappedLines, wrappedLinesIndex, this._cols);\n        }\n      }\n\n      // Null out the end of the line ends if a wide character wrapped to the following line\n      for (let i = 0; i < wrappedLines.length; i++) {\n        if (destLineLengths[i] < newCols) {\n          wrappedLines[i].setCell(destLineLengths[i], nullCell);\n        }\n      }\n\n      // Adjust viewport as needed\n      let viewportAdjustments = linesToAdd - trimmedLines;\n      while (viewportAdjustments-- > 0) {\n        if (this.ybase === 0) {\n          if (this.y < newRows - 1) {\n            this.y++;\n            this.lines.pop();\n          } else {\n            this.ybase++;\n            this.ydisp++;\n          }\n        } else {\n          // Ensure ybase does not exceed its maximum value\n          if (this.ybase < Math.min(this.lines.maxLength, this.lines.length + countToInsert) - newRows) {\n            if (this.ybase === this.ydisp) {\n              this.ydisp++;\n            }\n            this.ybase++;\n          }\n        }\n      }\n      this.savedY = Math.min(this.savedY + linesToAdd, this.ybase + newRows - 1);\n    }\n\n    // Rearrange lines in the buffer if there are any insertions, this is done at the end rather\n    // than earlier so that it's a single O(n) pass through the buffer, instead of O(n^2) from many\n    // costly calls to CircularList.splice.\n    if (toInsert.length > 0) {\n      // Record buffer insert events and then play them back backwards so that the indexes are\n      // correct\n      const insertEvents: IInsertEvent[] = [];\n\n      // Record original lines so they don't get overridden when we rearrange the list\n      const originalLines: BufferLine[] = [];\n      for (let i = 0; i < this.lines.length; i++) {\n        originalLines.push(this.lines.get(i) as BufferLine);\n      }\n      const originalLinesLength = this.lines.length;\n\n      let originalLineIndex = originalLinesLength - 1;\n      let nextToInsertIndex = 0;\n      let nextToInsert = toInsert[nextToInsertIndex];\n      this.lines.length = Math.min(this.lines.maxLength, this.lines.length + countToInsert);\n      let countInsertedSoFar = 0;\n      for (let i = Math.min(this.lines.maxLength - 1, originalLinesLength + countToInsert - 1); i >= 0; i--) {\n        if (nextToInsert && nextToInsert.start > originalLineIndex + countInsertedSoFar) {\n          // Insert extra lines here, adjusting i as needed\n          for (let nextI = nextToInsert.newLines.length - 1; nextI >= 0; nextI--) {\n            this.lines.set(i--, nextToInsert.newLines[nextI]);\n          }\n          i++;\n\n          // Create insert events for later\n          insertEvents.push({\n            index: originalLineIndex + 1,\n            amount: nextToInsert.newLines.length\n          });\n\n          countInsertedSoFar += nextToInsert.newLines.length;\n          nextToInsert = toInsert[++nextToInsertIndex];\n        } else {\n          this.lines.set(i, originalLines[originalLineIndex--]);\n        }\n      }\n\n      // Update markers\n      let insertCountEmitted = 0;\n      for (let i = insertEvents.length - 1; i >= 0; i--) {\n        insertEvents[i].index += insertCountEmitted;\n        this.lines.onInsertEmitter.fire(insertEvents[i]);\n        insertCountEmitted += insertEvents[i].amount;\n      }\n      const amountToTrim = Math.max(0, originalLinesLength + countToInsert - this.lines.maxLength);\n      if (amountToTrim > 0) {\n        this.lines.onTrimEmitter.fire(amountToTrim);\n      }\n    }\n  }\n\n  // private _reflowSmallerGetLinesNeeded()\n\n  /**\n   * Translates a string index back to a BufferIndex.\n   * To get the correct buffer position the string must start at `startCol` 0\n   * (default in translateBufferLineToString).\n   * The method also works on wrapped line strings given rows were not trimmed.\n   * The method operates on the CharData string length, there are no\n   * additional content or boundary checks. Therefore the string and the buffer\n   * should not be altered in between.\n   * TODO: respect trim flag after fixing #1685\n   * @param lineIndex line index the string was retrieved from\n   * @param stringIndex index within the string\n   * @param startCol column offset the string was retrieved from\n   */\n  public stringIndexToBufferIndex(lineIndex: number, stringIndex: number, trimRight: boolean = false): BufferIndex {\n    while (stringIndex) {\n      const line = this.lines.get(lineIndex);\n      if (!line) {\n        return [-1, -1];\n      }\n      const length = (trimRight) ? line.getTrimmedLength() : line.length;\n      for (let i = 0; i < length; ++i) {\n        if (line.get(i)[CHAR_DATA_WIDTH_INDEX]) {\n          // empty cells report a string length of 0, but get replaced\n          // with a whitespace in translateToString, thus replace with 1\n          stringIndex -= line.get(i)[CHAR_DATA_CHAR_INDEX].length || 1;\n        }\n        if (stringIndex < 0) {\n          return [lineIndex, i];\n        }\n      }\n      lineIndex++;\n    }\n    return [lineIndex, 0];\n  }\n\n  /**\n   * Translates a buffer line to a string, with optional start and end columns.\n   * Wide characters will count as two columns in the resulting string. This\n   * function is useful for getting the actual text underneath the raw selection\n   * position.\n   * @param line The line being translated.\n   * @param trimRight Whether to trim whitespace to the right.\n   * @param startCol The column to start at.\n   * @param endCol The column to end at.\n   */\n  public translateBufferLineToString(lineIndex: number, trimRight: boolean, startCol: number = 0, endCol?: number): string {\n    const line = this.lines.get(lineIndex);\n    if (!line) {\n      return '';\n    }\n    return line.translateToString(trimRight, startCol, endCol);\n  }\n\n  public getWrappedRangeForLine(y: number): { first: number, last: number } {\n    let first = y;\n    let last = y;\n    // Scan upwards for wrapped lines\n    while (first > 0 && this.lines.get(first)!.isWrapped) {\n      first--;\n    }\n    // Scan downwards for wrapped lines\n    while (last + 1 < this.lines.length && this.lines.get(last + 1)!.isWrapped) {\n      last++;\n    }\n    return { first, last };\n  }\n\n  /**\n   * Setup the tab stops.\n   * @param i The index to start setting up tab stops from.\n   */\n  public setupTabStops(i?: number): void {\n    if (i !== null && i !== undefined) {\n      if (!this.tabs[i]) {\n        i = this.prevStop(i);\n      }\n    } else {\n      this.tabs = {};\n      i = 0;\n    }\n\n    for (; i < this._cols; i += this._optionsService.options.tabStopWidth) {\n      this.tabs[i] = true;\n    }\n  }\n\n  /**\n   * Move the cursor to the previous tab stop from the given position (default is current).\n   * @param x The position to move the cursor to the previous tab stop.\n   */\n  public prevStop(x?: number): number {\n    if (x === null || x === undefined) {\n      x = this.x;\n    }\n    while (!this.tabs[--x] && x > 0);\n    return x >= this._cols ? this._cols - 1 : x < 0 ? 0 : x;\n  }\n\n  /**\n   * Move the cursor one tab stop forward from the given position (default is current).\n   * @param x The position to move the cursor one tab stop forward.\n   */\n  public nextStop(x?: number): number {\n    if (x === null || x === undefined) {\n      x = this.x;\n    }\n    while (!this.tabs[++x] && x < this._cols);\n    return x >= this._cols ? this._cols - 1 : x < 0 ? 0 : x;\n  }\n\n  public addMarker(y: number): Marker {\n    const marker = new Marker(y);\n    this.markers.push(marker);\n    marker.register(this.lines.onTrim(amount => {\n      marker.line -= amount;\n      // The marker should be disposed when the line is trimmed from the buffer\n      if (marker.line < 0) {\n        marker.dispose();\n      }\n    }));\n    marker.register(this.lines.onInsert(event => {\n      if (marker.line >= event.index) {\n        marker.line += event.amount;\n      }\n    }));\n    marker.register(this.lines.onDelete(event => {\n      // Delete the marker if it's within the range\n      if (marker.line >= event.index && marker.line < event.index + event.amount) {\n        marker.dispose();\n      }\n\n      // Shift the marker if it's after the deleted range\n      if (marker.line > event.index) {\n        marker.line -= event.amount;\n      }\n    }));\n    marker.register(marker.onDispose(() => this._removeMarker(marker)));\n    return marker;\n  }\n\n  private _removeMarker(marker: Marker): void {\n    this.markers.splice(this.markers.indexOf(marker), 1);\n  }\n\n  public iterator(trimRight: boolean, startIndex?: number, endIndex?: number, startOverscan?: number, endOverscan?: number): IBufferStringIterator {\n    return new BufferStringIterator(this, trimRight, startIndex, endIndex, startOverscan, endOverscan);\n  }\n}\n\n/**\n * Iterator to get unwrapped content strings from the buffer.\n * The iterator returns at least the string data between the borders\n * `startIndex` and `endIndex` (exclusive) and will expand the lines\n * by `startOverscan` to the top and by `endOverscan` to the bottom,\n * if no new line was found in between.\n * It will never read/return string data beyond `startIndex - startOverscan`\n * or `endIndex + endOverscan`. Therefore the first and last line might be truncated.\n * It is possible to always get the full string for the first and last line as well\n * by setting the overscan values to the actual buffer length. This not recommended\n * since it might return the whole buffer within a single string in a worst case scenario.\n */\nexport class BufferStringIterator implements IBufferStringIterator {\n  private _current: number;\n\n  constructor (\n    private _buffer: IBuffer,\n    private _trimRight: boolean,\n    private _startIndex: number = 0,\n    private _endIndex: number = _buffer.lines.length,\n    private _startOverscan: number = 0,\n    private _endOverscan: number = 0\n  ) {\n    if (this._startIndex < 0) {\n      this._startIndex = 0;\n    }\n    if (this._endIndex > this._buffer.lines.length) {\n      this._endIndex = this._buffer.lines.length;\n    }\n    this._current = this._startIndex;\n  }\n\n  public hasNext(): boolean {\n    return this._current < this._endIndex;\n  }\n\n  public next(): IBufferStringIteratorResult {\n    const range = this._buffer.getWrappedRangeForLine(this._current);\n    // limit search window to overscan value at both borders\n    if (range.first < this._startIndex - this._startOverscan) {\n      range.first = this._startIndex - this._startOverscan;\n    }\n    if (range.last > this._endIndex + this._endOverscan) {\n      range.last = this._endIndex + this._endOverscan;\n    }\n    // limit to current buffer length\n    range.first = Math.max(range.first, 0);\n    range.last = Math.min(range.last, this._buffer.lines.length);\n    let content = '';\n    for (let i = range.first; i <= range.last; ++i) {\n      content += this._buffer.translateBufferLineToString(i, this._trimRight);\n    }\n    this._current = range.last + 1;\n    return { range, content };\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CharData, IBufferLine, ICellData, IAttributeData, IExtendedAttrs } from 'common/Types';\nimport { stringFromCodePoint } from 'common/input/TextDecoder';\nimport { CHAR_DATA_CHAR_INDEX, CHAR_DATA_WIDTH_INDEX, CHAR_DATA_ATTR_INDEX, NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE, WHITESPACE_CELL_CHAR, Content, BgFlags } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { AttributeData, ExtendedAttrs } from 'common/buffer/AttributeData';\n\n/**\n * buffer memory layout:\n *\n *   |             uint32_t             |        uint32_t         |        uint32_t         |\n *   |             `content`            |          `FG`           |          `BG`           |\n *   | wcwidth(2) comb(1) codepoint(21) | flags(8) R(8) G(8) B(8) | flags(8) R(8) G(8) B(8) |\n */\n\n\n/** typed array slots taken by one cell */\nconst CELL_SIZE = 3;\n\n/**\n * Cell member indices.\n *\n * Direct access:\n *    `content = data[column * CELL_SIZE + Cell.CONTENT];`\n *    `fg = data[column * CELL_SIZE + Cell.FG];`\n *    `bg = data[column * CELL_SIZE + Cell.BG];`\n */\nconst enum Cell {\n  CONTENT = 0,\n  FG = 1, // currently simply holds all known attrs\n  BG = 2  // currently unused\n}\n\nexport const DEFAULT_ATTR_DATA = Object.freeze(new AttributeData());\n\n/**\n * Typed array based bufferline implementation.\n *\n * There are 2 ways to insert data into the cell buffer:\n * - `setCellFromCodepoint` + `addCodepointToCell`\n *   Use these for data that is already UTF32.\n *   Used during normal input in `InputHandler` for faster buffer access.\n * - `setCell`\n *   This method takes a CellData object and stores the data in the buffer.\n *   Use `CellData.fromCharData` to create the CellData object (e.g. from JS string).\n *\n * To retrieve data from the buffer use either one of the primitive methods\n * (if only one particular value is needed) or `loadCell`. For `loadCell` in a loop\n * memory allocs / GC pressure can be greatly reduced by reusing the CellData object.\n */\nexport class BufferLine implements IBufferLine {\n  protected _data: Uint32Array;\n  protected _combined: {[index: number]: string} = {};\n  protected _extendedAttrs: {[index: number]: ExtendedAttrs} = {};\n  public length: number;\n\n  constructor(cols: number, fillCellData?: ICellData, public isWrapped: boolean = false) {\n    this._data = new Uint32Array(cols * CELL_SIZE);\n    const cell = fillCellData || CellData.fromCharData([0, NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE]);\n    for (let i = 0; i < cols; ++i) {\n      this.setCell(i, cell);\n    }\n    this.length = cols;\n  }\n\n  /**\n   * Get cell data CharData.\n   * @deprecated\n   */\n  public get(index: number): CharData {\n    const content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    const cp = content & Content.CODEPOINT_MASK;\n    return [\n      this._data[index * CELL_SIZE + Cell.FG],\n      (content & Content.IS_COMBINED_MASK)\n        ? this._combined[index]\n        : (cp) ? stringFromCodePoint(cp) : '',\n      content >> Content.WIDTH_SHIFT,\n      (content & Content.IS_COMBINED_MASK)\n        ? this._combined[index].charCodeAt(this._combined[index].length - 1)\n        : cp\n    ];\n  }\n\n  /**\n   * Set cell data from CharData.\n   * @deprecated\n   */\n  public set(index: number, value: CharData): void {\n    this._data[index * CELL_SIZE + Cell.FG] = value[CHAR_DATA_ATTR_INDEX];\n    if (value[CHAR_DATA_CHAR_INDEX].length > 1) {\n      this._combined[index] = value[1];\n      this._data[index * CELL_SIZE + Cell.CONTENT] = index | Content.IS_COMBINED_MASK | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    } else {\n      this._data[index * CELL_SIZE + Cell.CONTENT] = value[CHAR_DATA_CHAR_INDEX].charCodeAt(0) | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    }\n  }\n\n  /**\n   * primitive getters\n   * use these when only one value is needed, otherwise use `loadCell`\n   */\n  public getWidth(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] >> Content.WIDTH_SHIFT;\n  }\n\n  /** Test whether content has width. */\n  public hasWidth(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] & Content.WIDTH_MASK;\n  }\n\n  /** Get FG cell component. */\n  public getFg(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.FG];\n  }\n\n  /** Get BG cell component. */\n  public getBg(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.BG];\n  }\n\n  /**\n   * Test whether contains any chars.\n   * Basically an empty has no content, but other cells might differ in FG/BG\n   * from real empty cells.\n   * */\n  public hasContent(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] & Content.HAS_CONTENT_MASK;\n  }\n\n  /**\n   * Get codepoint of the cell.\n   * To be in line with `code` in CharData this either returns\n   * a single UTF32 codepoint or the last codepoint of a combined string.\n   */\n  public getCodePoint(index: number): number {\n    const content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    if (content & Content.IS_COMBINED_MASK) {\n      return this._combined[index].charCodeAt(this._combined[index].length - 1);\n    }\n    return content & Content.CODEPOINT_MASK;\n  }\n\n  /** Test whether the cell contains a combined string. */\n  public isCombined(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] & Content.IS_COMBINED_MASK;\n  }\n\n  /** Returns the string content of the cell. */\n  public getString(index: number): string {\n    const content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    if (content & Content.IS_COMBINED_MASK) {\n      return this._combined[index];\n    }\n    if (content & Content.CODEPOINT_MASK) {\n      return stringFromCodePoint(content & Content.CODEPOINT_MASK);\n    }\n    // return empty string for empty cells\n    return '';\n  }\n\n  /**\n   * Load data at `index` into `cell`. This is used to access cells in a way that's more friendly\n   * to GC as it significantly reduced the amount of new objects/references needed.\n   */\n  public loadCell(index: number, cell: ICellData): ICellData {\n    const startIndex = index * CELL_SIZE;\n    cell.content = this._data[startIndex + Cell.CONTENT];\n    cell.fg = this._data[startIndex + Cell.FG];\n    cell.bg = this._data[startIndex + Cell.BG];\n    if (cell.content & Content.IS_COMBINED_MASK) {\n      cell.combinedData = this._combined[index];\n    }\n    if (cell.bg & BgFlags.HAS_EXTENDED) {\n      cell.extended = this._extendedAttrs[index];\n    }\n    return cell;\n  }\n\n  /**\n   * Set data at `index` to `cell`.\n   */\n  public setCell(index: number, cell: ICellData): void {\n    if (cell.content & Content.IS_COMBINED_MASK) {\n      this._combined[index] = cell.combinedData;\n    }\n    if (cell.bg & BgFlags.HAS_EXTENDED) {\n      this._extendedAttrs[index] = cell.extended;\n    }\n    this._data[index * CELL_SIZE + Cell.CONTENT] = cell.content;\n    this._data[index * CELL_SIZE + Cell.FG] = cell.fg;\n    this._data[index * CELL_SIZE + Cell.BG] = cell.bg;\n  }\n\n  /**\n   * Set cell data from input handler.\n   * Since the input handler see the incoming chars as UTF32 codepoints,\n   * it gets an optimized access method.\n   */\n  public setCellFromCodePoint(index: number, codePoint: number, width: number, fg: number, bg: number, eAttrs: IExtendedAttrs): void {\n    if (bg & BgFlags.HAS_EXTENDED) {\n      this._extendedAttrs[index] = eAttrs;\n    }\n    this._data[index * CELL_SIZE + Cell.CONTENT] = codePoint | (width << Content.WIDTH_SHIFT);\n    this._data[index * CELL_SIZE + Cell.FG] = fg;\n    this._data[index * CELL_SIZE + Cell.BG] = bg;\n  }\n\n  /**\n   * Add a codepoint to a cell from input handler.\n   * During input stage combining chars with a width of 0 follow and stack\n   * onto a leading char. Since we already set the attrs\n   * by the previous `setDataFromCodePoint` call, we can omit it here.\n   */\n  public addCodepointToCell(index: number, codePoint: number): void {\n    let content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    if (content & Content.IS_COMBINED_MASK) {\n      // we already have a combined string, simply add\n      this._combined[index] += stringFromCodePoint(codePoint);\n    } else {\n      if (content & Content.CODEPOINT_MASK) {\n        // normal case for combining chars:\n        //  - move current leading char + new one into combined string\n        //  - set combined flag\n        this._combined[index] = stringFromCodePoint(content & Content.CODEPOINT_MASK) + stringFromCodePoint(codePoint);\n        content &= ~Content.CODEPOINT_MASK; // set codepoint in buffer to 0\n        content |= Content.IS_COMBINED_MASK;\n      } else {\n        // should not happen - we actually have no data in the cell yet\n        // simply set the data in the cell buffer with a width of 1\n        content = codePoint | (1 << Content.WIDTH_SHIFT);\n      }\n      this._data[index * CELL_SIZE + Cell.CONTENT] = content;\n    }\n  }\n\n  public insertCells(pos: number, n: number, fillCellData: ICellData, eraseAttr?: IAttributeData): void {\n    pos %= this.length;\n\n    // handle fullwidth at pos: reset cell one to the left if pos is second cell of a wide char\n    if (pos && this.getWidth(pos - 1) === 2) {\n      this.setCellFromCodePoint(pos - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n\n    if (n < this.length - pos) {\n      const cell = new CellData();\n      for (let i = this.length - pos - n - 1; i >= 0; --i) {\n        this.setCell(pos + n + i, this.loadCell(pos + i, cell));\n      }\n      for (let i = 0; i < n; ++i) {\n        this.setCell(pos + i, fillCellData);\n      }\n    } else {\n      for (let i = pos; i < this.length; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    }\n\n    // handle fullwidth at line end: reset last cell if it is first cell of a wide char\n    if (this.getWidth(this.length - 1) === 2) {\n      this.setCellFromCodePoint(this.length - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n  }\n\n  public deleteCells(pos: number, n: number, fillCellData: ICellData, eraseAttr?: IAttributeData): void {\n    pos %= this.length;\n    if (n < this.length - pos) {\n      const cell = new CellData();\n      for (let i = 0; i < this.length - pos - n; ++i) {\n        this.setCell(pos + i, this.loadCell(pos + n + i, cell));\n      }\n      for (let i = this.length - n; i < this.length; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    } else {\n      for (let i = pos; i < this.length; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    }\n\n    // handle fullwidth at pos:\n    // - reset pos-1 if wide char\n    // - reset pos if width==0 (previous second cell of a wide char)\n    if (pos && this.getWidth(pos - 1) === 2) {\n      this.setCellFromCodePoint(pos - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n    if (this.getWidth(pos) === 0 && !this.hasContent(pos)) {\n      this.setCellFromCodePoint(pos, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n  }\n\n  public replaceCells(start: number, end: number, fillCellData: ICellData, eraseAttr?: IAttributeData): void {\n    // handle fullwidth at start: reset cell one to the left if start is second cell of a wide char\n    if (start && this.getWidth(start - 1) === 2) {\n      this.setCellFromCodePoint(start - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n    // handle fullwidth at last cell + 1: reset to empty cell if it is second part of a wide char\n    if (end < this.length && this.getWidth(end - 1) === 2) {\n      this.setCellFromCodePoint(end, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n\n    while (start < end  && start < this.length) {\n      this.setCell(start++, fillCellData);\n    }\n  }\n\n  public resize(cols: number, fillCellData: ICellData): void {\n    if (cols === this.length) {\n      return;\n    }\n    if (cols > this.length) {\n      const data = new Uint32Array(cols * CELL_SIZE);\n      if (this.length) {\n        if (cols * CELL_SIZE < this._data.length) {\n          data.set(this._data.subarray(0, cols * CELL_SIZE));\n        } else {\n          data.set(this._data);\n        }\n      }\n      this._data = data;\n      for (let i = this.length; i < cols; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    } else {\n      if (cols) {\n        const data = new Uint32Array(cols * CELL_SIZE);\n        data.set(this._data.subarray(0, cols * CELL_SIZE));\n        this._data = data;\n        // Remove any cut off combined data, FIXME: repeat this for extended attrs\n        const keys = Object.keys(this._combined);\n        for (let i = 0; i < keys.length; i++) {\n          const key = parseInt(keys[i], 10);\n          if (key >= cols) {\n            delete this._combined[key];\n          }\n        }\n      } else {\n        this._data = new Uint32Array(0);\n        this._combined = {};\n      }\n    }\n    this.length = cols;\n  }\n\n  /** fill a line with fillCharData */\n  public fill(fillCellData: ICellData): void {\n    this._combined = {};\n    this._extendedAttrs = {};\n    for (let i = 0; i < this.length; ++i) {\n      this.setCell(i, fillCellData);\n    }\n  }\n\n  /** alter to a full copy of line  */\n  public copyFrom(line: BufferLine): void {\n    if (this.length !== line.length) {\n      this._data = new Uint32Array(line._data);\n    } else {\n      // use high speed copy if lengths are equal\n      this._data.set(line._data);\n    }\n    this.length = line.length;\n    this._combined = {};\n    for (const el in line._combined) {\n      this._combined[el] = line._combined[el];\n    }\n    this._extendedAttrs = {};\n    for (const el in line._extendedAttrs) {\n      this._extendedAttrs[el] = line._extendedAttrs[el];\n    }\n    this.isWrapped = line.isWrapped;\n  }\n\n  /** create a new clone */\n  public clone(): IBufferLine {\n    const newLine = new BufferLine(0);\n    newLine._data = new Uint32Array(this._data);\n    newLine.length = this.length;\n    for (const el in this._combined) {\n      newLine._combined[el] = this._combined[el];\n    }\n    for (const el in this._extendedAttrs) {\n      newLine._extendedAttrs[el] = this._extendedAttrs[el];\n    }\n    newLine.isWrapped = this.isWrapped;\n    return newLine;\n  }\n\n  public getTrimmedLength(): number {\n    for (let i = this.length - 1; i >= 0; --i) {\n      if ((this._data[i * CELL_SIZE + Cell.CONTENT] & Content.HAS_CONTENT_MASK)) {\n        return i + (this._data[i * CELL_SIZE + Cell.CONTENT] >> Content.WIDTH_SHIFT);\n      }\n    }\n    return 0;\n  }\n\n  public copyCellsFrom(src: BufferLine, srcCol: number, destCol: number, length: number, applyInReverse: boolean): void {\n    const srcData = src._data;\n    if (applyInReverse) {\n      for (let cell = length - 1; cell >= 0; cell--) {\n        for (let i = 0; i < CELL_SIZE; i++) {\n          this._data[(destCol + cell) * CELL_SIZE + i] = srcData[(srcCol + cell) * CELL_SIZE + i];\n        }\n      }\n    } else {\n      for (let cell = 0; cell < length; cell++) {\n        for (let i = 0; i < CELL_SIZE; i++) {\n          this._data[(destCol + cell) * CELL_SIZE + i] = srcData[(srcCol + cell) * CELL_SIZE + i];\n        }\n      }\n    }\n\n    // Move any combined data over as needed, FIXME: repeat for extended attrs\n    const srcCombinedKeys = Object.keys(src._combined);\n    for (let i = 0; i < srcCombinedKeys.length; i++) {\n      const key = parseInt(srcCombinedKeys[i], 10);\n      if (key >= srcCol) {\n        this._combined[key - srcCol + destCol] = src._combined[key];\n      }\n    }\n  }\n\n  public translateToString(trimRight: boolean = false, startCol: number = 0, endCol: number = this.length): string {\n    if (trimRight) {\n      endCol = Math.min(endCol, this.getTrimmedLength());\n    }\n    let result = '';\n    while (startCol < endCol) {\n      const content = this._data[startCol * CELL_SIZE + Cell.CONTENT];\n      const cp = content & Content.CODEPOINT_MASK;\n      result += (content & Content.IS_COMBINED_MASK) ? this._combined[startCol] : (cp) ? stringFromCodePoint(cp) : WHITESPACE_CELL_CHAR;\n      startCol += (content >> Content.WIDTH_SHIFT) || 1; // always advance by 1\n    }\n    return result;\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferRange } from 'xterm';\n\nexport function getRangeLength(range: IBufferRange, bufferCols: number): number {\n  if (range.start.y > range.end.y) {\n    throw new Error(`Buffer range end (${range.end.x}, ${range.end.y}) cannot be before start (${range.start.x}, ${range.start.y})`);\n  }\n  return bufferCols * (range.end.y - range.start.y) + (range.end.x - range.start.x + 1);\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { BufferLine } from 'common/buffer/BufferLine';\nimport { CircularList } from 'common/CircularList';\nimport { IBufferLine, ICellData } from 'common/Types';\n\nexport interface INewLayoutResult {\n  layout: number[];\n  countRemoved: number;\n}\n\n/**\n * Evaluates and returns indexes to be removed after a reflow larger occurs. Lines will be removed\n * when a wrapped line unwraps.\n * @param lines The buffer lines.\n * @param newCols The columns after resize.\n */\nexport function reflowLargerGetLinesToRemove(lines: CircularList<IBufferLine>, oldCols: number, newCols: number, bufferAbsoluteY: number, nullCell: ICellData): number[] {\n  // Gather all BufferLines that need to be removed from the Buffer here so that they can be\n  // batched up and only committed once\n  const toRemove: number[] = [];\n\n  for (let y = 0; y < lines.length - 1; y++) {\n    // Check if this row is wrapped\n    let i = y;\n    let nextLine = lines.get(++i) as BufferLine;\n    if (!nextLine.isWrapped) {\n      continue;\n    }\n\n    // Check how many lines it's wrapped for\n    const wrappedLines: BufferLine[] = [lines.get(y) as BufferLine];\n    while (i < lines.length && nextLine.isWrapped) {\n      wrappedLines.push(nextLine);\n      nextLine = lines.get(++i) as BufferLine;\n    }\n\n    // If these lines contain the cursor don't touch them, the program will handle fixing up wrapped\n    // lines with the cursor\n    if (bufferAbsoluteY >= y && bufferAbsoluteY < i) {\n      y += wrappedLines.length - 1;\n      continue;\n    }\n\n    // Copy buffer data to new locations\n    let destLineIndex = 0;\n    let destCol = getWrappedLineTrimmedLength(wrappedLines, destLineIndex, oldCols);\n    let srcLineIndex = 1;\n    let srcCol = 0;\n    while (srcLineIndex < wrappedLines.length) {\n      const srcTrimmedTineLength = getWrappedLineTrimmedLength(wrappedLines, srcLineIndex, oldCols);\n      const srcRemainingCells = srcTrimmedTineLength - srcCol;\n      const destRemainingCells = newCols - destCol;\n      const cellsToCopy = Math.min(srcRemainingCells, destRemainingCells);\n\n      wrappedLines[destLineIndex].copyCellsFrom(wrappedLines[srcLineIndex], srcCol, destCol, cellsToCopy, false);\n\n      destCol += cellsToCopy;\n      if (destCol === newCols) {\n        destLineIndex++;\n        destCol = 0;\n      }\n      srcCol += cellsToCopy;\n      if (srcCol === srcTrimmedTineLength) {\n        srcLineIndex++;\n        srcCol = 0;\n      }\n\n      // Make sure the last cell isn't wide, if it is copy it to the current dest\n      if (destCol === 0 && destLineIndex !== 0) {\n        if (wrappedLines[destLineIndex - 1].getWidth(newCols - 1) === 2) {\n          wrappedLines[destLineIndex].copyCellsFrom(wrappedLines[destLineIndex - 1], newCols - 1, destCol++, 1, false);\n          // Null out the end of the last row\n          wrappedLines[destLineIndex - 1].setCell(newCols - 1, nullCell);\n        }\n      }\n    }\n\n    // Clear out remaining cells or fragments could remain;\n    wrappedLines[destLineIndex].replaceCells(destCol, newCols, nullCell);\n\n    // Work backwards and remove any rows at the end that only contain null cells\n    let countToRemove = 0;\n    for (let i = wrappedLines.length - 1; i > 0; i--) {\n      if (i > destLineIndex || wrappedLines[i].getTrimmedLength() === 0) {\n        countToRemove++;\n      } else {\n        break;\n      }\n    }\n\n    if (countToRemove > 0) {\n      toRemove.push(y + wrappedLines.length - countToRemove); // index\n      toRemove.push(countToRemove);\n    }\n\n    y += wrappedLines.length - 1;\n  }\n  return toRemove;\n}\n\n/**\n * Creates and return the new layout for lines given an array of indexes to be removed.\n * @param lines The buffer lines.\n * @param toRemove The indexes to remove.\n */\nexport function reflowLargerCreateNewLayout(lines: CircularList<IBufferLine>, toRemove: number[]): INewLayoutResult {\n  const layout: number[] = [];\n  // First iterate through the list and get the actual indexes to use for rows\n  let nextToRemoveIndex = 0;\n  let nextToRemoveStart = toRemove[nextToRemoveIndex];\n  let countRemovedSoFar = 0;\n  for (let i = 0; i < lines.length; i++) {\n    if (nextToRemoveStart === i) {\n      const countToRemove = toRemove[++nextToRemoveIndex];\n\n      // Tell markers that there was a deletion\n      lines.onDeleteEmitter.fire({\n        index: i - countRemovedSoFar,\n        amount: countToRemove\n      });\n\n      i += countToRemove - 1;\n      countRemovedSoFar += countToRemove;\n      nextToRemoveStart = toRemove[++nextToRemoveIndex];\n    } else {\n      layout.push(i);\n    }\n  }\n  return {\n    layout,\n    countRemoved: countRemovedSoFar\n  };\n}\n\n/**\n * Applies a new layout to the buffer. This essentially does the same as many splice calls but it's\n * done all at once in a single iteration through the list since splice is very expensive.\n * @param lines The buffer lines.\n * @param newLayout The new layout to apply.\n */\nexport function reflowLargerApplyNewLayout(lines: CircularList<IBufferLine>, newLayout: number[]): void {\n  // Record original lines so they don't get overridden when we rearrange the list\n  const newLayoutLines: BufferLine[] = [];\n  for (let i = 0; i < newLayout.length; i++) {\n    newLayoutLines.push(lines.get(newLayout[i]) as BufferLine);\n  }\n\n  // Rearrange the list\n  for (let i = 0; i < newLayoutLines.length; i++) {\n    lines.set(i, newLayoutLines[i]);\n  }\n  lines.length = newLayout.length;\n}\n\n/**\n * Gets the new line lengths for a given wrapped line. The purpose of this function it to pre-\n * compute the wrapping points since wide characters may need to be wrapped onto the following line.\n * This function will return an array of numbers of where each line wraps to, the resulting array\n * will only contain the values `newCols` (when the line does not end with a wide character) and\n * `newCols - 1` (when the line does end with a wide character), except for the last value which\n * will contain the remaining items to fill the line.\n *\n * Calling this with a `newCols` value of `1` will lock up.\n *\n * @param wrappedLines The wrapped lines to evaluate.\n * @param oldCols The columns before resize.\n * @param newCols The columns after resize.\n */\nexport function reflowSmallerGetNewLineLengths(wrappedLines: BufferLine[], oldCols: number, newCols: number): number[] {\n  const newLineLengths: number[] = [];\n  const cellsNeeded = wrappedLines.map((l, i) => getWrappedLineTrimmedLength(wrappedLines, i, oldCols)).reduce((p, c) => p + c);\n\n  // Use srcCol and srcLine to find the new wrapping point, use that to get the cellsAvailable and\n  // linesNeeded\n  let srcCol = 0;\n  let srcLine = 0;\n  let cellsAvailable = 0;\n  while (cellsAvailable < cellsNeeded) {\n    if (cellsNeeded - cellsAvailable < newCols) {\n      // Add the final line and exit the loop\n      newLineLengths.push(cellsNeeded - cellsAvailable);\n      break;\n    }\n    srcCol += newCols;\n    const oldTrimmedLength = getWrappedLineTrimmedLength(wrappedLines, srcLine, oldCols);\n    if (srcCol > oldTrimmedLength) {\n      srcCol -= oldTrimmedLength;\n      srcLine++;\n    }\n    const endsWithWide = wrappedLines[srcLine].getWidth(srcCol - 1) === 2;\n    if (endsWithWide) {\n      srcCol--;\n    }\n    const lineLength = endsWithWide ? newCols - 1 : newCols;\n    newLineLengths.push(lineLength);\n    cellsAvailable += lineLength;\n  }\n\n  return newLineLengths;\n}\n\nexport function getWrappedLineTrimmedLength(lines: BufferLine[], i: number, cols: number): number {\n  // If this is the last row in the wrapped line, get the actual trimmed length\n  if (i === lines.length - 1) {\n    return lines[i].getTrimmedLength();\n  }\n  // Detect whether the following line starts with a wide character and the end of the current line\n  // is null, if so then we can be pretty sure the null character should be excluded from the line\n  // length]\n  const endsInNull = !(lines[i].hasContent(cols - 1)) && lines[i].getWidth(cols - 1) === 1;\n  const followingLineStartsWithWide = lines[i + 1].getWidth(0) === 2;\n  if (endsInNull && followingLineStartsWithWide) {\n    return cols - 1;\n  }\n  return cols;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBuffer, IBufferSet } from 'common/buffer/Types';\nimport { IAttributeData } from 'common/Types';\nimport { Buffer } from 'common/buffer/Buffer';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { IOptionsService, IBufferService } from 'common/services/Services';\nimport { Disposable } from 'common/Lifecycle';\n\n/**\n * The BufferSet represents the set of two buffers used by xterm terminals (normal and alt) and\n * provides also utilities for working with them.\n */\nexport class BufferSet extends Disposable implements IBufferSet {\n  private _normal!: Buffer;\n  private _alt!: Buffer;\n  private _activeBuffer!: Buffer;\n\n  private _onBufferActivate = this.register(new EventEmitter<{activeBuffer: IBuffer, inactiveBuffer: IBuffer}>());\n  public get onBufferActivate(): IEvent<{activeBuffer: IBuffer, inactiveBuffer: IBuffer}> { return this._onBufferActivate.event; }\n\n  /**\n   * Create a new BufferSet for the given terminal.\n   * @param _terminal - The terminal the BufferSet will belong to\n   */\n  constructor(\n    private readonly _optionsService: IOptionsService,\n    private readonly _bufferService: IBufferService\n  ) {\n    super();\n    this.reset();\n  }\n\n  public reset(): void {\n    this._normal = new Buffer(true, this._optionsService, this._bufferService);\n    this._normal.fillViewportRows();\n\n    // The alt buffer should never have scrollback.\n    // See http://invisible-island.net/xterm/ctlseqs/ctlseqs.html#h2-The-Alternate-Screen-Buffer\n    this._alt = new Buffer(false, this._optionsService, this._bufferService);\n    this._activeBuffer = this._normal;\n    this._onBufferActivate.fire({\n      activeBuffer: this._normal,\n      inactiveBuffer: this._alt\n    });\n\n    this.setupTabStops();\n  }\n\n  /**\n   * Returns the alt Buffer of the BufferSet\n   */\n  public get alt(): Buffer {\n    return this._alt;\n  }\n\n  /**\n   * Returns the normal Buffer of the BufferSet\n   */\n  public get active(): Buffer {\n    return this._activeBuffer;\n  }\n\n  /**\n   * Returns the currently active Buffer of the BufferSet\n   */\n  public get normal(): Buffer {\n    return this._normal;\n  }\n\n  /**\n   * Sets the normal Buffer of the BufferSet as its currently active Buffer\n   */\n  public activateNormalBuffer(): void {\n    if (this._activeBuffer === this._normal) {\n      return;\n    }\n    this._normal.x = this._alt.x;\n    this._normal.y = this._alt.y;\n    // The alt buffer should always be cleared when we switch to the normal\n    // buffer. This frees up memory since the alt buffer should always be new\n    // when activated.\n    this._alt.clear();\n    this._activeBuffer = this._normal;\n    this._onBufferActivate.fire({\n      activeBuffer: this._normal,\n      inactiveBuffer: this._alt\n    });\n  }\n\n  /**\n   * Sets the alt Buffer of the BufferSet as its currently active Buffer\n   */\n  public activateAltBuffer(fillAttr?: IAttributeData): void {\n    if (this._activeBuffer === this._alt) {\n      return;\n    }\n    // Since the alt buffer is always cleared when the normal buffer is\n    // activated, we want to fill it when switching to it.\n    this._alt.fillViewportRows(fillAttr);\n    this._alt.x = this._normal.x;\n    this._alt.y = this._normal.y;\n    this._activeBuffer = this._alt;\n    this._onBufferActivate.fire({\n      activeBuffer: this._alt,\n      inactiveBuffer: this._normal\n    });\n  }\n\n  /**\n   * Resizes both normal and alt buffers, adjusting their data accordingly.\n   * @param newCols The new number of columns.\n   * @param newRows The new number of rows.\n   */\n  public resize(newCols: number, newRows: number): void {\n    this._normal.resize(newCols, newRows);\n    this._alt.resize(newCols, newRows);\n  }\n\n  /**\n   * Setup the tab stops.\n   * @param i The index to start setting up tab stops from.\n   */\n  public setupTabStops(i?: number): void {\n    this._normal.setupTabStops(i);\n    this._alt.setupTabStops(i);\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CharData, ICellData, IExtendedAttrs } from 'common/Types';\nimport { stringFromCodePoint } from 'common/input/TextDecoder';\nimport { CHAR_DATA_CHAR_INDEX, CHAR_DATA_WIDTH_INDEX, CHAR_DATA_ATTR_INDEX, Content } from 'common/buffer/Constants';\nimport { AttributeData, ExtendedAttrs } from 'common/buffer/AttributeData';\n\n/**\n * CellData - represents a single Cell in the terminal buffer.\n */\nexport class CellData extends AttributeData implements ICellData {\n  /** Helper to create CellData from CharData. */\n  public static fromCharData(value: CharData): CellData {\n    const obj = new CellData();\n    obj.setFromCharData(value);\n    return obj;\n  }\n  /** Primitives from terminal buffer. */\n  public content = 0;\n  public fg = 0;\n  public bg = 0;\n  public extended: IExtendedAttrs = new ExtendedAttrs();\n  public combinedData = '';\n  /** Whether cell contains a combined string. */\n  public isCombined(): number {\n    return this.content & Content.IS_COMBINED_MASK;\n  }\n  /** Width of the cell. */\n  public getWidth(): number {\n    return this.content >> Content.WIDTH_SHIFT;\n  }\n  /** JS string of the content. */\n  public getChars(): string {\n    if (this.content & Content.IS_COMBINED_MASK) {\n      return this.combinedData;\n    }\n    if (this.content & Content.CODEPOINT_MASK) {\n      return stringFromCodePoint(this.content & Content.CODEPOINT_MASK);\n    }\n    return '';\n  }\n  /**\n   * Codepoint of cell\n   * Note this returns the UTF32 codepoint of single chars,\n   * if content is a combined string it returns the codepoint\n   * of the last char in string to be in line with code in CharData.\n   * */\n  public getCode(): number {\n    return (this.isCombined())\n      ? this.combinedData.charCodeAt(this.combinedData.length - 1)\n      : this.content & Content.CODEPOINT_MASK;\n  }\n  /** Set data from CharData */\n  public setFromCharData(value: CharData): void {\n    this.fg = value[CHAR_DATA_ATTR_INDEX];\n    this.bg = 0;\n    let combined = false;\n    // surrogates and combined strings need special treatment\n    if (value[CHAR_DATA_CHAR_INDEX].length > 2) {\n      combined = true;\n    }\n    else if (value[CHAR_DATA_CHAR_INDEX].length === 2) {\n      const code = value[CHAR_DATA_CHAR_INDEX].charCodeAt(0);\n      // if the 2-char string is a surrogate create single codepoint\n      // everything else is combined\n      if (0xD800 <= code && code <= 0xDBFF) {\n        const second = value[CHAR_DATA_CHAR_INDEX].charCodeAt(1);\n        if (0xDC00 <= second && second <= 0xDFFF) {\n          this.content = ((code - 0xD800) * 0x400 + second - 0xDC00 + 0x10000) | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n        }\n        else {\n          combined = true;\n        }\n      }\n      else {\n        combined = true;\n      }\n    }\n    else {\n      this.content = value[CHAR_DATA_CHAR_INDEX].charCodeAt(0) | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    }\n    if (combined) {\n      this.combinedData = value[CHAR_DATA_CHAR_INDEX];\n      this.content = Content.IS_COMBINED_MASK | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    }\n  }\n  /** Get data as CharData. */\n  public getAsCharData(): CharData {\n    return [this.fg, this.getChars(), this.getWidth(), this.getCode()];\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport const DEFAULT_COLOR = 256;\nexport const DEFAULT_ATTR = (0 << 18) | (DEFAULT_COLOR << 9) | (256 << 0);\n\nexport const CHAR_DATA_ATTR_INDEX = 0;\nexport const CHAR_DATA_CHAR_INDEX = 1;\nexport const CHAR_DATA_WIDTH_INDEX = 2;\nexport const CHAR_DATA_CODE_INDEX = 3;\n\n/**\n * Null cell - a real empty cell (containing nothing).\n * Note that code should always be 0 for a null cell as\n * several test condition of the buffer line rely on this.\n */\nexport const NULL_CELL_CHAR = '';\nexport const NULL_CELL_WIDTH = 1;\nexport const NULL_CELL_CODE = 0;\n\n/**\n * Whitespace cell.\n * This is meant as a replacement for empty cells when needed\n * during rendering lines to preserve correct aligment.\n */\nexport const WHITESPACE_CELL_CHAR = ' ';\nexport const WHITESPACE_CELL_WIDTH = 1;\nexport const WHITESPACE_CELL_CODE = 32;\n\n/**\n * Bitmasks for accessing data in `content`.\n */\nexport const enum Content {\n  /**\n   * bit 1..21    codepoint, max allowed in UTF32 is 0x10FFFF (21 bits taken)\n   *              read:   `codepoint = content & Content.codepointMask;`\n   *              write:  `content |= codepoint & Content.codepointMask;`\n   *                      shortcut if precondition `codepoint <= 0x10FFFF` is met:\n   *                      `content |= codepoint;`\n   */\n  CODEPOINT_MASK = 0x1FFFFF,\n\n  /**\n   * bit 22       flag indication whether a cell contains combined content\n   *              read:   `isCombined = content & Content.isCombined;`\n   *              set:    `content |= Content.isCombined;`\n   *              clear:  `content &= ~Content.isCombined;`\n   */\n  IS_COMBINED_MASK = 0x200000,  // 1 << 21\n\n  /**\n   * bit 1..22    mask to check whether a cell contains any string data\n   *              we need to check for codepoint and isCombined bits to see\n   *              whether a cell contains anything\n   *              read:   `isEmpty = !(content & Content.hasContent)`\n   */\n  HAS_CONTENT_MASK = 0x3FFFFF,\n\n  /**\n   * bit 23..24   wcwidth value of cell, takes 2 bits (ranges from 0..2)\n   *              read:   `width = (content & Content.widthMask) >> Content.widthShift;`\n   *                      `hasWidth = content & Content.widthMask;`\n   *                      as long as wcwidth is highest value in `content`:\n   *                      `width = content >> Content.widthShift;`\n   *              write:  `content |= (width << Content.widthShift) & Content.widthMask;`\n   *                      shortcut if precondition `0 <= width <= 3` is met:\n   *                      `content |= width << Content.widthShift;`\n   */\n  WIDTH_MASK = 0xC00000,   // 3 << 22\n  WIDTH_SHIFT = 22\n}\n\nexport const enum Attributes {\n  /**\n   * bit 1..8     blue in RGB, color in P256 and P16\n   */\n  BLUE_MASK = 0xFF,\n  BLUE_SHIFT = 0,\n  PCOLOR_MASK = 0xFF,\n  PCOLOR_SHIFT = 0,\n\n  /**\n   * bit 9..16    green in RGB\n   */\n  GREEN_MASK = 0xFF00,\n  GREEN_SHIFT = 8,\n\n  /**\n   * bit 17..24   red in RGB\n   */\n  RED_MASK = 0xFF0000,\n  RED_SHIFT = 16,\n\n  /**\n   * bit 25..26   color mode: DEFAULT (0) | P16 (1) | P256 (2) | RGB (3)\n   */\n  CM_MASK = 0x3000000,\n  CM_DEFAULT = 0,\n  CM_P16 = 0x1000000,\n  CM_P256 = 0x2000000,\n  CM_RGB = 0x3000000,\n\n  /**\n   * bit 1..24  RGB room\n   */\n  RGB_MASK = 0xFFFFFF\n}\n\nexport const enum FgFlags {\n  /**\n   * bit 27..32\n   */\n  INVERSE = 0x4000000,\n  BOLD = 0x8000000,\n  UNDERLINE = 0x10000000,\n  BLINK = 0x20000000,\n  INVISIBLE = 0x40000000,\n  STRIKETHROUGH = 0x80000000,\n}\n\nexport const enum BgFlags {\n  /**\n   * bit 27..32 (upper 3 unused)\n   */\n  ITALIC = 0x4000000,\n  DIM = 0x8000000,\n  HAS_EXTENDED = 0x10000000\n}\n\nexport const enum UnderlineStyle {\n  NONE = 0,\n  SINGLE = 1,\n  DOUBLE = 2,\n  CURLY = 3,\n  DOTTED = 4,\n  DASHED = 5\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { IMarker } from 'common/Types';\n\nexport class Marker extends Disposable implements IMarker {\n  private static _nextId = 1;\n\n  private _id: number = Marker._nextId++;\n  public isDisposed: boolean = false;\n\n  public get id(): number { return this._id; }\n\n  private _onDispose = new EventEmitter<void>();\n  public get onDispose(): IEvent<void> { return this._onDispose.event; }\n\n  constructor(\n    public line: number\n  ) {\n    super();\n  }\n\n  public dispose(): void {\n    if (this.isDisposed) {\n      return;\n    }\n    this.isDisposed = true;\n    this.line = -1;\n    // Emit before super.dispose such that dispose listeners get a change to react\n    this._onDispose.fire();\n    super.dispose();\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharset } from 'common/Types';\n\n/**\n * The character sets supported by the terminal. These enable several languages\n * to be represented within the terminal with only 8-bit encoding. See ISO 2022\n * for a discussion on character sets. Only VT100 character sets are supported.\n */\nexport const CHARSETS: { [key: string]: ICharset | undefined } = {};\n\n/**\n * The default character set, US.\n */\nexport const DEFAULT_CHARSET: ICharset | undefined = CHARSETS['B'];\n\n/**\n * DEC Special Character and Line Drawing Set.\n * Reference: http://vt100.net/docs/vt102-ug/table5-13.html\n * A lot of curses apps use this if they see TERM=xterm.\n * testing: echo -e '\\e(0a\\e(B'\n * The xterm output sometimes seems to conflict with the\n * reference above. xterm seems in line with the reference\n * when running vttest however.\n * The table below now uses xterm's output from vttest.\n */\nCHARSETS['0'] = {\n  '`': '\\u25c6', // '◆'\n  'a': '\\u2592', // '▒'\n  'b': '\\u2409', // '␉' (HT)\n  'c': '\\u240c', // '␌' (FF)\n  'd': '\\u240d', // '␍' (CR)\n  'e': '\\u240a', // '␊' (LF)\n  'f': '\\u00b0', // '°'\n  'g': '\\u00b1', // '±'\n  'h': '\\u2424', // '␤' (NL)\n  'i': '\\u240b', // '␋' (VT)\n  'j': '\\u2518', // '┘'\n  'k': '\\u2510', // '┐'\n  'l': '\\u250c', // '┌'\n  'm': '\\u2514', // '└'\n  'n': '\\u253c', // '┼'\n  'o': '\\u23ba', // '⎺'\n  'p': '\\u23bb', // '⎻'\n  'q': '\\u2500', // '─'\n  'r': '\\u23bc', // '⎼'\n  's': '\\u23bd', // '⎽'\n  't': '\\u251c', // '├'\n  'u': '\\u2524', // '┤'\n  'v': '\\u2534', // '┴'\n  'w': '\\u252c', // '┬'\n  'x': '\\u2502', // '│'\n  'y': '\\u2264', // '≤'\n  'z': '\\u2265', // '≥'\n  '{': '\\u03c0', // 'π'\n  '|': '\\u2260', // '≠'\n  '}': '\\u00a3', // '£'\n  '~': '\\u00b7'  // '·'\n};\n\n/**\n * British character set\n * ESC (A\n * Reference: http://vt100.net/docs/vt220-rm/table2-5.html\n */\nCHARSETS['A'] = {\n  '#': '£'\n};\n\n/**\n * United States character set\n * ESC (B\n */\nCHARSETS['B'] = undefined;\n\n/**\n * Dutch character set\n * ESC (4\n * Reference: http://vt100.net/docs/vt220-rm/table2-6.html\n */\nCHARSETS['4'] = {\n  '#': '£',\n  '@': '¾',\n  '[': 'ij',\n  '\\\\': '½',\n  ']': '|',\n  '{': '¨',\n  '|': 'f',\n  '}': '¼',\n  '~': '´'\n};\n\n/**\n * Finnish character set\n * ESC (C or ESC (5\n * Reference: http://vt100.net/docs/vt220-rm/table2-7.html\n */\nCHARSETS['C'] =\nCHARSETS['5'] = {\n  '[': 'Ä',\n  '\\\\': 'Ö',\n  ']': 'Å',\n  '^': 'Ü',\n  '`': 'é',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'å',\n  '~': 'ü'\n};\n\n/**\n * French character set\n * ESC (R\n * Reference: http://vt100.net/docs/vt220-rm/table2-8.html\n */\nCHARSETS['R'] = {\n  '#': '£',\n  '@': 'à',\n  '[': '°',\n  '\\\\': 'ç',\n  ']': '§',\n  '{': 'é',\n  '|': 'ù',\n  '}': 'è',\n  '~': '¨'\n};\n\n/**\n * French Canadian character set\n * ESC (Q\n * Reference: http://vt100.net/docs/vt220-rm/table2-9.html\n */\nCHARSETS['Q'] = {\n  '@': 'à',\n  '[': 'â',\n  '\\\\': 'ç',\n  ']': 'ê',\n  '^': 'î',\n  '`': 'ô',\n  '{': 'é',\n  '|': 'ù',\n  '}': 'è',\n  '~': 'û'\n};\n\n/**\n * German character set\n * ESC (K\n * Reference: http://vt100.net/docs/vt220-rm/table2-10.html\n */\nCHARSETS['K'] = {\n  '@': '§',\n  '[': 'Ä',\n  '\\\\': 'Ö',\n  ']': 'Ü',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'ü',\n  '~': 'ß'\n};\n\n/**\n * Italian character set\n * ESC (Y\n * Reference: http://vt100.net/docs/vt220-rm/table2-11.html\n */\nCHARSETS['Y'] = {\n  '#': '£',\n  '@': '§',\n  '[': '°',\n  '\\\\': 'ç',\n  ']': 'é',\n  '`': 'ù',\n  '{': 'à',\n  '|': 'ò',\n  '}': 'è',\n  '~': 'ì'\n};\n\n/**\n * Norwegian/Danish character set\n * ESC (E or ESC (6\n * Reference: http://vt100.net/docs/vt220-rm/table2-12.html\n */\nCHARSETS['E'] =\nCHARSETS['6'] = {\n  '@': 'Ä',\n  '[': 'Æ',\n  '\\\\': 'Ø',\n  ']': 'Å',\n  '^': 'Ü',\n  '`': 'ä',\n  '{': 'æ',\n  '|': 'ø',\n  '}': 'å',\n  '~': 'ü'\n};\n\n/**\n * Spanish character set\n * ESC (Z\n * Reference: http://vt100.net/docs/vt220-rm/table2-13.html\n */\nCHARSETS['Z'] = {\n  '#': '£',\n  '@': '§',\n  '[': '¡',\n  '\\\\': 'Ñ',\n  ']': '¿',\n  '{': '°',\n  '|': 'ñ',\n  '}': 'ç'\n};\n\n/**\n * Swedish character set\n * ESC (H or ESC (7\n * Reference: http://vt100.net/docs/vt220-rm/table2-14.html\n */\nCHARSETS['H'] =\nCHARSETS['7'] = {\n  '@': 'É',\n  '[': 'Ä',\n  '\\\\': 'Ö',\n  ']': 'Å',\n  '^': 'Ü',\n  '`': 'é',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'å',\n  '~': 'ü'\n};\n\n/**\n * Swiss character set\n * ESC (=\n * Reference: http://vt100.net/docs/vt220-rm/table2-15.html\n */\nCHARSETS['='] = {\n  '#': 'ù',\n  '@': 'à',\n  '[': 'é',\n  '\\\\': 'ç',\n  ']': 'ê',\n  '^': 'î',\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  '_': 'è',\n  '`': 'ô',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'ü',\n  '~': 'û'\n};\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/**\n * C0 control codes\n * See = https://en.wikipedia.org/wiki/C0_and_C1_control_codes\n */\nexport namespace C0 {\n  /** Null (Caret = ^@, C = \\0) */\n  export const NUL = '\\x00';\n  /** Start of Heading (Caret = ^A) */\n  export const SOH = '\\x01';\n  /** Start of Text (Caret = ^B) */\n  export const STX = '\\x02';\n  /** End of Text (Caret = ^C) */\n  export const ETX = '\\x03';\n  /** End of Transmission (Caret = ^D) */\n  export const EOT = '\\x04';\n  /** Enquiry (Caret = ^E) */\n  export const ENQ = '\\x05';\n  /** Acknowledge (Caret = ^F) */\n  export const ACK = '\\x06';\n  /** Bell (Caret = ^G, C = \\a) */\n  export const BEL = '\\x07';\n  /** Backspace (Caret = ^H, C = \\b) */\n  export const BS  = '\\x08';\n  /** Character Tabulation, Horizontal Tabulation (Caret = ^I, C = \\t) */\n  export const HT  = '\\x09';\n  /** Line Feed (Caret = ^J, C = \\n) */\n  export const LF  = '\\x0a';\n  /** Line Tabulation, Vertical Tabulation (Caret = ^K, C = \\v) */\n  export const VT  = '\\x0b';\n  /** Form Feed (Caret = ^L, C = \\f) */\n  export const FF  = '\\x0c';\n  /** Carriage Return (Caret = ^M, C = \\r) */\n  export const CR  = '\\x0d';\n  /** Shift Out (Caret = ^N) */\n  export const SO  = '\\x0e';\n  /** Shift In (Caret = ^O) */\n  export const SI  = '\\x0f';\n  /** Data Link Escape (Caret = ^P) */\n  export const DLE = '\\x10';\n  /** Device Control One (XON) (Caret = ^Q) */\n  export const DC1 = '\\x11';\n  /** Device Control Two (Caret = ^R) */\n  export const DC2 = '\\x12';\n  /** Device Control Three (XOFF) (Caret = ^S) */\n  export const DC3 = '\\x13';\n  /** Device Control Four (Caret = ^T) */\n  export const DC4 = '\\x14';\n  /** Negative Acknowledge (Caret = ^U) */\n  export const NAK = '\\x15';\n  /** Synchronous Idle (Caret = ^V) */\n  export const SYN = '\\x16';\n  /** End of Transmission Block (Caret = ^W) */\n  export const ETB = '\\x17';\n  /** Cancel (Caret = ^X) */\n  export const CAN = '\\x18';\n  /** End of Medium (Caret = ^Y) */\n  export const EM  = '\\x19';\n  /** Substitute (Caret = ^Z) */\n  export const SUB = '\\x1a';\n  /** Escape (Caret = ^[, C = \\e) */\n  export const ESC = '\\x1b';\n  /** File Separator (Caret = ^\\) */\n  export const FS  = '\\x1c';\n  /** Group Separator (Caret = ^]) */\n  export const GS  = '\\x1d';\n  /** Record Separator (Caret = ^^) */\n  export const RS  = '\\x1e';\n  /** Unit Separator (Caret = ^_) */\n  export const US  = '\\x1f';\n  /** Space */\n  export const SP  = '\\x20';\n  /** Delete (Caret = ^?) */\n  export const DEL = '\\x7f';\n}\n\n/**\n * C1 control codes\n * See = https://en.wikipedia.org/wiki/C0_and_C1_control_codes\n */\nexport namespace C1 {\n  /** padding character */\n  export const PAD = '\\x80';\n  /** High Octet Preset */\n  export const HOP = '\\x81';\n  /** Break Permitted Here */\n  export const BPH = '\\x82';\n  /** No Break Here */\n  export const NBH = '\\x83';\n  /** Index */\n  export const IND = '\\x84';\n  /** Next Line */\n  export const NEL = '\\x85';\n  /** Start of Selected Area */\n  export const SSA = '\\x86';\n  /** End of Selected Area */\n  export const ESA = '\\x87';\n  /** Horizontal Tabulation Set */\n  export const HTS = '\\x88';\n  /** Horizontal Tabulation With Justification */\n  export const HTJ = '\\x89';\n  /** Vertical Tabulation Set */\n  export const VTS = '\\x8a';\n  /** Partial Line Down */\n  export const PLD = '\\x8b';\n  /** Partial Line Up */\n  export const PLU = '\\x8c';\n  /** Reverse Index */\n  export const RI = '\\x8d';\n  /** Single-Shift 2 */\n  export const SS2 = '\\x8e';\n  /** Single-Shift 3 */\n  export const SS3 = '\\x8f';\n  /** Device Control String */\n  export const DCS = '\\x90';\n  /** Private Use 1 */\n  export const PU1 = '\\x91';\n  /** Private Use 2 */\n  export const PU2 = '\\x92';\n  /** Set Transmit State */\n  export const STS = '\\x93';\n  /** Destructive backspace, intended to eliminate ambiguity about meaning of BS. */\n  export const CCH = '\\x94';\n  /** Message Waiting */\n  export const MW = '\\x95';\n  /** Start of Protected Area */\n  export const SPA = '\\x96';\n  /** End of Protected Area */\n  export const EPA = '\\x97';\n  /** Start of String */\n  export const SOS = '\\x98';\n  /** Single Graphic Character Introducer */\n  export const SGCI = '\\x99';\n  /** Single Character Introducer */\n  export const SCI = '\\x9a';\n  /** Control Sequence Introducer */\n  export const CSI = '\\x9b';\n  /** String Terminator */\n  export const ST = '\\x9c';\n  /** Operating System Command */\n  export const OSC = '\\x9d';\n  /** Privacy Message */\n  export const PM = '\\x9e';\n  /** Application Program Command */\n  export const APC = '\\x9f';\n}\n","/**\n * Copyright (c) 2014 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n */\n\nimport { IKeyboardEvent, IKeyboardResult, KeyboardResultType } from 'common/Types';\nimport { C0 } from 'common/data/EscapeSequences';\n\n// reg + shift key mappings for digits and special chars\nconst KEYCODE_KEY_MAPPINGS: { [key: number]: [string, string]} = {\n  // digits 0-9\n  48: ['0', ')'],\n  49: ['1', '!'],\n  50: ['2', '@'],\n  51: ['3', '#'],\n  52: ['4', '$'],\n  53: ['5', '%'],\n  54: ['6', '^'],\n  55: ['7', '&'],\n  56: ['8', '*'],\n  57: ['9', '('],\n\n  // special chars\n  186: [';', ':'],\n  187: ['=', '+'],\n  188: [',', '<'],\n  189: ['-', '_'],\n  190: ['.', '>'],\n  191: ['/', '?'],\n  192: ['`', '~'],\n  219: ['[', '{'],\n  220: ['\\\\', '|'],\n  221: [']', '}'],\n  222: ['\\'', '\"']\n};\n\nexport function evaluateKeyboardEvent(\n  ev: IKeyboardEvent,\n  applicationCursorMode: boolean,\n  isMac: boolean,\n  macOptionIsMeta: boolean\n): IKeyboardResult {\n  const result: IKeyboardResult = {\n    type: KeyboardResultType.SEND_KEY,\n    // Whether to cancel event propagation (NOTE: this may not be needed since the event is\n    // canceled at the end of keyDown\n    cancel: false,\n    // The new key even to emit\n    key: undefined\n  };\n  const modifiers = (ev.shiftKey ? 1 : 0) | (ev.altKey ? 2 : 0) | (ev.ctrlKey ? 4 : 0) | (ev.metaKey ? 8 : 0);\n  switch (ev.keyCode) {\n    case 0:\n      if (ev.key === 'UIKeyInputUpArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OA';\n        } else {\n          result.key = C0.ESC + '[A';\n        }\n      }\n      else if (ev.key === 'UIKeyInputLeftArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OD';\n        } else {\n          result.key = C0.ESC + '[D';\n        }\n      }\n      else if (ev.key === 'UIKeyInputRightArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OC';\n        } else {\n          result.key = C0.ESC + '[C';\n        }\n      }\n      else if (ev.key === 'UIKeyInputDownArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OB';\n        } else {\n          result.key = C0.ESC + '[B';\n        }\n      }\n      break;\n    case 8:\n      // backspace\n      if (ev.shiftKey) {\n        result.key = C0.BS; // ^H\n        break;\n      } else if (ev.altKey) {\n        result.key = C0.ESC + C0.DEL; // \\e ^?\n        break;\n      }\n      result.key = C0.DEL; // ^?\n      break;\n    case 9:\n      // tab\n      if (ev.shiftKey) {\n        result.key = C0.ESC + '[Z';\n        break;\n      }\n      result.key = C0.HT;\n      result.cancel = true;\n      break;\n    case 13:\n      // return/enter\n      result.key = ev.altKey ? C0.ESC + C0.CR : C0.CR;\n      result.cancel = true;\n      break;\n    case 27:\n      // escape\n      result.key = C0.ESC;\n      if (ev.altKey) {\n        result.key = C0.ESC + C0.ESC;\n      }\n      result.cancel = true;\n      break;\n    case 37:\n      // left-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'D';\n        // HACK: Make Alt + left-arrow behave like Ctrl + left-arrow: move one word backwards\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (result.key === C0.ESC + '[1;3D') {\n          result.key = C0.ESC + (isMac ? 'b' : '[1;5D');\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OD';\n      } else {\n        result.key = C0.ESC + '[D';\n      }\n      break;\n    case 39:\n      // right-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'C';\n        // HACK: Make Alt + right-arrow behave like Ctrl + right-arrow: move one word forward\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (result.key === C0.ESC + '[1;3C') {\n          result.key = C0.ESC + (isMac ? 'f' : '[1;5C');\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OC';\n      } else {\n        result.key = C0.ESC + '[C';\n      }\n      break;\n    case 38:\n      // up-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'A';\n        // HACK: Make Alt + up-arrow behave like Ctrl + up-arrow\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (!isMac && result.key === C0.ESC + '[1;3A') {\n          result.key = C0.ESC + '[1;5A';\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OA';\n      } else {\n        result.key = C0.ESC + '[A';\n      }\n      break;\n    case 40:\n      // down-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'B';\n        // HACK: Make Alt + down-arrow behave like Ctrl + down-arrow\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (!isMac && result.key === C0.ESC + '[1;3B') {\n          result.key = C0.ESC + '[1;5B';\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OB';\n      } else {\n        result.key = C0.ESC + '[B';\n      }\n      break;\n    case 45:\n      // insert\n      if (!ev.shiftKey && !ev.ctrlKey) {\n        // <Ctrl> or <Shift> + <Insert> are used to\n        // copy-paste on some systems.\n        result.key = C0.ESC + '[2~';\n      }\n      break;\n    case 46:\n      // delete\n      if (modifiers) {\n        result.key = C0.ESC + '[3;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[3~';\n      }\n      break;\n    case 36:\n      // home\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'H';\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OH';\n      } else {\n        result.key = C0.ESC + '[H';\n      }\n      break;\n    case 35:\n      // end\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'F';\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OF';\n      } else {\n        result.key = C0.ESC + '[F';\n      }\n      break;\n    case 33:\n      // page up\n      if (ev.shiftKey) {\n        result.type = KeyboardResultType.PAGE_UP;\n      } else {\n        result.key = C0.ESC + '[5~';\n      }\n      break;\n    case 34:\n      // page down\n      if (ev.shiftKey) {\n        result.type = KeyboardResultType.PAGE_DOWN;\n      } else {\n        result.key = C0.ESC + '[6~';\n      }\n      break;\n    case 112:\n      // F1-F12\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'P';\n      } else {\n        result.key = C0.ESC + 'OP';\n      }\n      break;\n    case 113:\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'Q';\n      } else {\n        result.key = C0.ESC + 'OQ';\n      }\n      break;\n    case 114:\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'R';\n      } else {\n        result.key = C0.ESC + 'OR';\n      }\n      break;\n    case 115:\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'S';\n      } else {\n        result.key = C0.ESC + 'OS';\n      }\n      break;\n    case 116:\n      if (modifiers) {\n        result.key = C0.ESC + '[15;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[15~';\n      }\n      break;\n    case 117:\n      if (modifiers) {\n        result.key = C0.ESC + '[17;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[17~';\n      }\n      break;\n    case 118:\n      if (modifiers) {\n        result.key = C0.ESC + '[18;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[18~';\n      }\n      break;\n    case 119:\n      if (modifiers) {\n        result.key = C0.ESC + '[19;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[19~';\n      }\n      break;\n    case 120:\n      if (modifiers) {\n        result.key = C0.ESC + '[20;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[20~';\n      }\n      break;\n    case 121:\n      if (modifiers) {\n        result.key = C0.ESC + '[21;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[21~';\n      }\n      break;\n    case 122:\n      if (modifiers) {\n        result.key = C0.ESC + '[23;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[23~';\n      }\n      break;\n    case 123:\n      if (modifiers) {\n        result.key = C0.ESC + '[24;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[24~';\n      }\n      break;\n    default:\n      // a-z and space\n      if (ev.ctrlKey && !ev.shiftKey && !ev.altKey && !ev.metaKey) {\n        if (ev.keyCode >= 65 && ev.keyCode <= 90) {\n          result.key = String.fromCharCode(ev.keyCode - 64);\n        } else if (ev.keyCode === 32) {\n          result.key = C0.NUL;\n        } else if (ev.keyCode >= 51 && ev.keyCode <= 55) {\n          // escape, file sep, group sep, record sep, unit sep\n          result.key = String.fromCharCode(ev.keyCode - 51 + 27);\n        } else if (ev.keyCode === 56) {\n          result.key = C0.DEL;\n        } else if (ev.keyCode === 219) {\n          result.key = C0.ESC;\n        } else if (ev.keyCode === 220) {\n          result.key = C0.FS;\n        } else if (ev.keyCode === 221) {\n          result.key = C0.GS;\n        }\n      } else if ((!isMac || macOptionIsMeta) && ev.altKey && !ev.metaKey) {\n        // On macOS this is a third level shift when !macOptionIsMeta. Use <Esc> instead.\n        const keyMapping = KEYCODE_KEY_MAPPINGS[ev.keyCode];\n        const key = keyMapping && keyMapping[!ev.shiftKey ? 0 : 1];\n        if (key) {\n          result.key = C0.ESC + key;\n        } else if (ev.keyCode >= 65 && ev.keyCode <= 90) {\n          const keyCode = ev.ctrlKey ? ev.keyCode - 64 : ev.keyCode + 32;\n          result.key = C0.ESC + String.fromCharCode(keyCode);\n        }\n      } else if (isMac && !ev.altKey && !ev.ctrlKey && !ev.shiftKey && ev.metaKey) {\n        if (ev.keyCode === 65) { // cmd + a\n          result.type = KeyboardResultType.SELECT_ALL;\n        }\n      } else if (ev.key && !ev.ctrlKey && !ev.altKey && !ev.metaKey && ev.keyCode >= 48 && ev.key.length === 1) {\n        // Include only keys that that result in a _single_ character; don't include num lock, volume up, etc.\n        result.key = ev.key;\n      } else if (ev.key && ev.ctrlKey) {\n        if (ev.key === '_') { // ^_\n          result.key = C0.US;\n        }\n      }\n      break;\n  }\n\n  return result;\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/**\n * Polyfill - Convert UTF32 codepoint into JS string.\n * Note: The built-in String.fromCodePoint happens to be much slower\n *       due to additional sanity checks. We can avoid them since\n *       we always operate on legal UTF32 (granted by the input decoders)\n *       and use this faster version instead.\n */\nexport function stringFromCodePoint(codePoint: number): string {\n  if (codePoint > 0xFFFF) {\n    codePoint -= 0x10000;\n    return String.fromCharCode((codePoint >> 10) + 0xD800) + String.fromCharCode((codePoint % 0x400) + 0xDC00);\n  }\n  return String.fromCharCode(codePoint);\n}\n\n/**\n * Convert UTF32 char codes into JS string.\n * Basically the same as `stringFromCodePoint` but for multiple codepoints\n * in a loop (which is a lot faster).\n */\nexport function utf32ToString(data: Uint32Array, start: number = 0, end: number = data.length): string {\n  let result = '';\n  for (let i = start; i < end; ++i) {\n    let codepoint = data[i];\n    if (codepoint > 0xFFFF) {\n      // JS strings are encoded as UTF16, thus a non BMP codepoint gets converted into a surrogate pair\n      // conversion rules:\n      //  - subtract 0x10000 from code point, leaving a 20 bit number\n      //  - add high 10 bits to 0xD800  --> first surrogate\n      //  - add low 10 bits to 0xDC00   --> second surrogate\n      codepoint -= 0x10000;\n      result += String.fromCharCode((codepoint >> 10) + 0xD800) + String.fromCharCode((codepoint % 0x400) + 0xDC00);\n    } else {\n      result += String.fromCharCode(codepoint);\n    }\n  }\n  return result;\n}\n\n/**\n * StringToUtf32 - decodes UTF16 sequences into UTF32 codepoints.\n * To keep the decoder in line with JS strings it handles single surrogates as UCS2.\n */\nexport class StringToUtf32 {\n  private _interim: number = 0;\n\n  /**\n   * Clears interim and resets decoder to clean state.\n   */\n  public clear(): void {\n    this._interim = 0;\n  }\n\n  /**\n   * Decode JS string to UTF32 codepoints.\n   * The methods assumes stream input and will store partly transmitted\n   * surrogate pairs and decode them with the next data chunk.\n   * Note: The method does no bound checks for target, therefore make sure\n   * the provided input data does not exceed the size of `target`.\n   * Returns the number of written codepoints in `target`.\n   */\n  public decode(input: string, target: Uint32Array): number {\n    const length = input.length;\n\n    if (!length) {\n      return 0;\n    }\n\n    let size = 0;\n    let startPos = 0;\n\n    // handle leftover surrogate high\n    if (this._interim) {\n      const second = input.charCodeAt(startPos++);\n      if (0xDC00 <= second && second <= 0xDFFF) {\n        target[size++] = (this._interim - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n      } else {\n        // illegal codepoint (USC2 handling)\n        target[size++] = this._interim;\n        target[size++] = second;\n      }\n      this._interim = 0;\n    }\n\n    for (let i = startPos; i < length; ++i) {\n      const code = input.charCodeAt(i);\n      // surrogate pair first\n      if (0xD800 <= code && code <= 0xDBFF) {\n        if (++i >= length) {\n          this._interim = code;\n          return size;\n        }\n        const second = input.charCodeAt(i);\n        if (0xDC00 <= second && second <= 0xDFFF) {\n          target[size++] = (code - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n        } else {\n          // illegal codepoint (USC2 handling)\n          target[size++] = code;\n          target[size++] = second;\n        }\n        continue;\n      }\n      if (code === 0xFEFF) {\n        // BOM\n        continue;\n      }\n      target[size++] = code;\n    }\n    return size;\n  }\n}\n\n/**\n * Utf8Decoder - decodes UTF8 byte sequences into UTF32 codepoints.\n */\nexport class Utf8ToUtf32 {\n  public interim: Uint8Array = new Uint8Array(3);\n\n  /**\n   * Clears interim bytes and resets decoder to clean state.\n   */\n  public clear(): void {\n    this.interim.fill(0);\n  }\n\n  /**\n   * Decodes UTF8 byte sequences in `input` to UTF32 codepoints in `target`.\n   * The methods assumes stream input and will store partly transmitted bytes\n   * and decode them with the next data chunk.\n   * Note: The method does no bound checks for target, therefore make sure\n   * the provided data chunk does not exceed the size of `target`.\n   * Returns the number of written codepoints in `target`.\n   */\n  public decode(input: Uint8Array, target: Uint32Array): number {\n    const length = input.length;\n\n    if (!length) {\n      return 0;\n    }\n\n    let size = 0;\n    let byte1: number;\n    let byte2: number;\n    let byte3: number;\n    let byte4: number;\n    let codepoint = 0;\n    let startPos = 0;\n\n    // handle leftover bytes\n    if (this.interim[0]) {\n      let discardInterim = false;\n      let cp = this.interim[0];\n      cp &= ((((cp & 0xE0) === 0xC0)) ? 0x1F : (((cp & 0xF0) === 0xE0)) ? 0x0F : 0x07);\n      let pos = 0;\n      let tmp: number;\n      while ((tmp = this.interim[++pos] & 0x3F) && pos < 4) {\n        cp <<= 6;\n        cp |= tmp;\n      }\n      // missing bytes - read ahead from input\n      const type = (((this.interim[0] & 0xE0) === 0xC0)) ? 2 : (((this.interim[0] & 0xF0) === 0xE0)) ? 3 : 4;\n      const missing = type - pos;\n      while (startPos < missing) {\n        if (startPos >= length) {\n          return 0;\n        }\n        tmp = input[startPos++];\n        if ((tmp & 0xC0) !== 0x80) {\n          // wrong continuation, discard interim bytes completely\n          startPos--;\n          discardInterim = true;\n          break;\n        } else {\n          // need to save so we can continue short inputs in next call\n          this.interim[pos++] = tmp;\n          cp <<= 6;\n          cp |= tmp & 0x3F;\n        }\n      }\n      if (!discardInterim) {\n        // final test is type dependent\n        if (type === 2) {\n          if (cp < 0x80) {\n            // wrong starter byte\n            startPos--;\n          } else {\n            target[size++] = cp;\n          }\n        } else if (type === 3) {\n          if (cp < 0x0800 || (cp >= 0xD800 && cp <= 0xDFFF) || cp === 0xFEFF) {\n            // illegal codepoint or BOM\n          } else {\n            target[size++] = cp;\n          }\n        } else {\n          if (cp < 0x010000 || cp > 0x10FFFF) {\n            // illegal codepoint\n          } else {\n            target[size++] = cp;\n          }\n        }\n      }\n      this.interim.fill(0);\n    }\n\n    // loop through input\n    const fourStop = length - 4;\n    let i = startPos;\n    while (i < length) {\n      /**\n       * ASCII shortcut with loop unrolled to 4 consecutive ASCII chars.\n       * This is a compromise between speed gain for ASCII\n       * and penalty for non ASCII:\n       * For best ASCII performance the char should be stored directly into target,\n       * but even a single attempt to write to target and compare afterwards\n       * penalizes non ASCII really bad (-50%), thus we load the char into byteX first,\n       * which reduces ASCII performance by ~15%.\n       * This trial for ASCII reduces non ASCII performance by ~10% which seems acceptible\n       * compared to the gains.\n       * Note that this optimization only takes place for 4 consecutive ASCII chars,\n       * for any shorter it bails out. Worst case - all 4 bytes being read but\n       * thrown away due to the last being a non ASCII char (-10% performance).\n       */\n      while (i < fourStop\n        && !((byte1 = input[i]) & 0x80)\n        && !((byte2 = input[i + 1]) & 0x80)\n        && !((byte3 = input[i + 2]) & 0x80)\n        && !((byte4 = input[i + 3]) & 0x80))\n      {\n        target[size++] = byte1;\n        target[size++] = byte2;\n        target[size++] = byte3;\n        target[size++] = byte4;\n        i += 4;\n      }\n\n      // reread byte1\n      byte1 = input[i++];\n\n      // 1 byte\n      if (byte1 < 0x80) {\n        target[size++] = byte1;\n\n        // 2 bytes\n      } else if ((byte1 & 0xE0) === 0xC0) {\n        if (i >= length) {\n          this.interim[0] = byte1;\n          return size;\n        }\n        byte2 = input[i++];\n        if ((byte2 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        codepoint = (byte1 & 0x1F) << 6 | (byte2 & 0x3F);\n        if (codepoint < 0x80) {\n          // wrong starter byte\n          i--;\n          continue;\n        }\n        target[size++] = codepoint;\n\n        // 3 bytes\n      } else if ((byte1 & 0xF0) === 0xE0) {\n        if (i >= length) {\n          this.interim[0] = byte1;\n          return size;\n        }\n        byte2 = input[i++];\n        if ((byte2 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        if (i >= length) {\n          this.interim[0] = byte1;\n          this.interim[1] = byte2;\n          return size;\n        }\n        byte3 = input[i++];\n        if ((byte3 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        codepoint = (byte1 & 0x0F) << 12 | (byte2 & 0x3F) << 6 | (byte3 & 0x3F);\n        if (codepoint < 0x0800 || (codepoint >= 0xD800 && codepoint <= 0xDFFF) || codepoint === 0xFEFF) {\n          // illegal codepoint or BOM, no i-- here\n          continue;\n        }\n        target[size++] = codepoint;\n\n        // 4 bytes\n      } else if ((byte1 & 0xF8) === 0xF0) {\n        if (i >= length) {\n          this.interim[0] = byte1;\n          return size;\n        }\n        byte2 = input[i++];\n        if ((byte2 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        if (i >= length) {\n          this.interim[0] = byte1;\n          this.interim[1] = byte2;\n          return size;\n        }\n        byte3 = input[i++];\n        if ((byte3 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        if (i >= length) {\n          this.interim[0] = byte1;\n          this.interim[1] = byte2;\n          this.interim[2] = byte3;\n          return size;\n        }\n        byte4 = input[i++];\n        if ((byte4 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        codepoint = (byte1 & 0x07) << 18 | (byte2 & 0x3F) << 12 | (byte3 & 0x3F) << 6 | (byte4 & 0x3F);\n        if (codepoint < 0x010000 || codepoint > 0x10FFFF) {\n          // illegal codepoint, no i-- here\n          continue;\n        }\n        target[size++] = codepoint;\n      } else {\n        // illegal byte, just skip\n      }\n    }\n    return size;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IUnicodeVersionProvider } from 'common/services/Services';\nimport { fill } from 'common/TypedArrayUtils';\n\ntype CharWidth = 0 | 1 | 2;\n\nconst BMP_COMBINING = [\n  [0x0300, 0x036F], [0x0483, 0x0486], [0x0488, 0x0489],\n  [0x0591, 0x05BD], [0x05BF, 0x05BF], [0x05C1, 0x05C2],\n  [0x05C4, 0x05C5], [0x05C7, 0x05C7], [0x0600, 0x0603],\n  [0x0610, 0x0615], [0x064B, 0x065E], [0x0670, 0x0670],\n  [0x06D6, 0x06E4], [0x06E7, 0x06E8], [0x06EA, 0x06ED],\n  [0x070F, 0x070F], [0x0711, 0x0711], [0x0730, 0x074A],\n  [0x07A6, 0x07B0], [0x07EB, 0x07F3], [0x0901, 0x0902],\n  [0x093C, 0x093C], [0x0941, 0x0948], [0x094D, 0x094D],\n  [0x0951, 0x0954], [0x0962, 0x0963], [0x0981, 0x0981],\n  [0x09BC, 0x09BC], [0x09C1, 0x09C4], [0x09CD, 0x09CD],\n  [0x09E2, 0x09E3], [0x0A01, 0x0A02], [0x0A3C, 0x0A3C],\n  [0x0A41, 0x0A42], [0x0A47, 0x0A48], [0x0A4B, 0x0A4D],\n  [0x0A70, 0x0A71], [0x0A81, 0x0A82], [0x0ABC, 0x0ABC],\n  [0x0AC1, 0x0AC5], [0x0AC7, 0x0AC8], [0x0ACD, 0x0ACD],\n  [0x0AE2, 0x0AE3], [0x0B01, 0x0B01], [0x0B3C, 0x0B3C],\n  [0x0B3F, 0x0B3F], [0x0B41, 0x0B43], [0x0B4D, 0x0B4D],\n  [0x0B56, 0x0B56], [0x0B82, 0x0B82], [0x0BC0, 0x0BC0],\n  [0x0BCD, 0x0BCD], [0x0C3E, 0x0C40], [0x0C46, 0x0C48],\n  [0x0C4A, 0x0C4D], [0x0C55, 0x0C56], [0x0CBC, 0x0CBC],\n  [0x0CBF, 0x0CBF], [0x0CC6, 0x0CC6], [0x0CCC, 0x0CCD],\n  [0x0CE2, 0x0CE3], [0x0D41, 0x0D43], [0x0D4D, 0x0D4D],\n  [0x0DCA, 0x0DCA], [0x0DD2, 0x0DD4], [0x0DD6, 0x0DD6],\n  [0x0E31, 0x0E31], [0x0E34, 0x0E3A], [0x0E47, 0x0E4E],\n  [0x0EB1, 0x0EB1], [0x0EB4, 0x0EB9], [0x0EBB, 0x0EBC],\n  [0x0EC8, 0x0ECD], [0x0F18, 0x0F19], [0x0F35, 0x0F35],\n  [0x0F37, 0x0F37], [0x0F39, 0x0F39], [0x0F71, 0x0F7E],\n  [0x0F80, 0x0F84], [0x0F86, 0x0F87], [0x0F90, 0x0F97],\n  [0x0F99, 0x0FBC], [0x0FC6, 0x0FC6], [0x102D, 0x1030],\n  [0x1032, 0x1032], [0x1036, 0x1037], [0x1039, 0x1039],\n  [0x1058, 0x1059], [0x1160, 0x11FF], [0x135F, 0x135F],\n  [0x1712, 0x1714], [0x1732, 0x1734], [0x1752, 0x1753],\n  [0x1772, 0x1773], [0x17B4, 0x17B5], [0x17B7, 0x17BD],\n  [0x17C6, 0x17C6], [0x17C9, 0x17D3], [0x17DD, 0x17DD],\n  [0x180B, 0x180D], [0x18A9, 0x18A9], [0x1920, 0x1922],\n  [0x1927, 0x1928], [0x1932, 0x1932], [0x1939, 0x193B],\n  [0x1A17, 0x1A18], [0x1B00, 0x1B03], [0x1B34, 0x1B34],\n  [0x1B36, 0x1B3A], [0x1B3C, 0x1B3C], [0x1B42, 0x1B42],\n  [0x1B6B, 0x1B73], [0x1DC0, 0x1DCA], [0x1DFE, 0x1DFF],\n  [0x200B, 0x200F], [0x202A, 0x202E], [0x2060, 0x2063],\n  [0x206A, 0x206F], [0x20D0, 0x20EF], [0x302A, 0x302F],\n  [0x3099, 0x309A], [0xA806, 0xA806], [0xA80B, 0xA80B],\n  [0xA825, 0xA826], [0xFB1E, 0xFB1E], [0xFE00, 0xFE0F],\n  [0xFE20, 0xFE23], [0xFEFF, 0xFEFF], [0xFFF9, 0xFFFB]\n];\nconst HIGH_COMBINING = [\n  [0x10A01, 0x10A03], [0x10A05, 0x10A06], [0x10A0C, 0x10A0F],\n  [0x10A38, 0x10A3A], [0x10A3F, 0x10A3F], [0x1D167, 0x1D169],\n  [0x1D173, 0x1D182], [0x1D185, 0x1D18B], [0x1D1AA, 0x1D1AD],\n  [0x1D242, 0x1D244], [0xE0001, 0xE0001], [0xE0020, 0xE007F],\n  [0xE0100, 0xE01EF]\n];\n\n// BMP lookup table, lazy initialized during first addon loading\nlet table: Uint8Array;\n\nfunction bisearch(ucs: number, data: number[][]): boolean {\n  let min = 0;\n  let max = data.length - 1;\n  let mid;\n  if (ucs < data[0][0] || ucs > data[max][1]) {\n    return false;\n  }\n  while (max >= min) {\n    mid = (min + max) >> 1;\n    if (ucs > data[mid][1]) {\n      min = mid + 1;\n    } else if (ucs < data[mid][0]) {\n      max = mid - 1;\n    } else {\n      return true;\n    }\n  }\n  return false;\n}\n\nexport class UnicodeV6 implements IUnicodeVersionProvider {\n  public readonly version = '6';\n\n  constructor() {\n    // init lookup table once\n    if (!table) {\n      table = new Uint8Array(65536);\n      fill(table, 1);\n      table[0] = 0;\n      // control chars\n      fill(table, 0, 1, 32);\n      fill(table, 0, 0x7f, 0xa0);\n\n      // apply wide char rules first\n      // wide chars\n      fill(table, 2, 0x1100, 0x1160);\n      table[0x2329] = 2;\n      table[0x232a] = 2;\n      fill(table, 2, 0x2e80, 0xa4d0);\n      table[0x303f] = 1;  // wrongly in last line\n\n      fill(table, 2, 0xac00, 0xd7a4);\n      fill(table, 2, 0xf900, 0xfb00);\n      fill(table, 2, 0xfe10, 0xfe1a);\n      fill(table, 2, 0xfe30, 0xfe70);\n      fill(table, 2, 0xff00, 0xff61);\n      fill(table, 2, 0xffe0, 0xffe7);\n\n      // apply combining last to ensure we overwrite\n      // wrongly wide set chars:\n      //    the original algo evals combining first and falls\n      //    through to wide check so we simply do here the opposite\n      // combining 0\n      for (let r = 0; r < BMP_COMBINING.length; ++r) {\n        fill(table, 0, BMP_COMBINING[r][0], BMP_COMBINING[r][1] + 1);\n      }\n    }\n  }\n\n  public wcwidth(num: number): CharWidth {\n    if (num < 32) return 0;\n    if (num < 127) return 1;\n    if (num < 65536) return table[num] as CharWidth;\n    if (bisearch(num, HIGH_COMBINING)) return 0;\n    if ((num >= 0x20000 && num <= 0x2fffd) || (num >= 0x30000 && num <= 0x3fffd)) return 2;\n    return 1;\n  }\n}\n","\n/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\ndeclare const setTimeout: (handler: () => void, timeout?: number) => void;\n\n/**\n * Safety watermark to avoid memory exhaustion and browser engine crash on fast data input.\n * Enable flow control to avoid this limit and make sure that your backend correctly\n * propagates this to the underlying pty. (see docs for further instructions)\n * Since this limit is meant as a safety parachute to prevent browser crashs,\n * it is set to a very high number. Typically xterm.js gets unresponsive with\n * a 100 times lower number (>500 kB).\n */\nconst DISCARD_WATERMARK = 50000000; // ~50 MB\n\n/**\n * The max number of ms to spend on writes before allowing the renderer to\n * catch up with a 0ms setTimeout. A value of < 33 to keep us close to\n * 30fps, and a value of < 16 to try to run at 60fps. Of course, the real FPS\n * depends on the time it takes for the renderer to draw the frame.\n */\nconst WRITE_TIMEOUT_MS = 12;\n\n/**\n * Threshold of max held chunks in the write buffer, that were already processed.\n * This is a tradeoff between extensive write buffer shifts (bad runtime) and high\n * memory consumption by data thats not used anymore.\n */\nconst WRITE_BUFFER_LENGTH_THRESHOLD = 50;\n\n// queueMicrotask polyfill for nodejs < v11\nconst qmt: (cb: () => void) => void = (typeof queueMicrotask === 'undefined')\n  ? (cb: () => void) => { Promise.resolve().then(cb); }\n  : queueMicrotask;\n\n\nexport class WriteBuffer {\n  private _writeBuffer: (string | Uint8Array)[] = [];\n  private _callbacks: ((() => void) | undefined)[] = [];\n  private _pendingData = 0;\n  private _bufferOffset = 0;\n  private _isSyncWriting = false;\n  private _syncCalls = 0;\n\n  constructor(private _action: (data: string | Uint8Array, promiseResult?: boolean) => void | Promise<boolean>) { }\n\n  /**\n   * @deprecated Unreliable, to be removed soon.\n   */\n  public writeSync(data: string | Uint8Array, maxSubsequentCalls?: number): void {\n    // stop writeSync recursions with maxSubsequentCalls argument\n    // This is dangerous to use as it will lose the current data chunk\n    // and return immediately.\n    if (maxSubsequentCalls !== undefined && this._syncCalls > maxSubsequentCalls) {\n      // comment next line if a whole loop block should only contain x `writeSync` calls\n      // (total flat vs. deep nested limit)\n      this._syncCalls = 0;\n      return;\n    }\n    // append chunk to buffer\n    this._pendingData += data.length;\n    this._writeBuffer.push(data);\n    this._callbacks.push(undefined);\n\n    // increase recursion counter\n    this._syncCalls++;\n    // exit early if another writeSync loop is active\n    if (this._isSyncWriting) {\n      return;\n    }\n    this._isSyncWriting = true;\n\n    // force sync processing on pending data chunks to avoid in-band data scrambling\n    // does the same as innerWrite but without event loop\n    // we have to do it here as single loop steps to not corrupt loop subject\n    // by another writeSync call triggered from _action\n    let chunk: string | Uint8Array | undefined;\n    while (chunk = this._writeBuffer.shift()) {\n      this._action(chunk);\n      const cb = this._callbacks.shift();\n      if (cb) cb();\n    }\n    // reset to avoid reprocessing of chunks with scheduled innerWrite call\n    // stopping scheduled innerWrite by offset > length condition\n    this._pendingData = 0;\n    this._bufferOffset = 0x7FFFFFFF;\n\n    // allow another writeSync to loop\n    this._isSyncWriting = false;\n    this._syncCalls = 0;\n  }\n\n  public write(data: string | Uint8Array, callback?: () => void): void {\n    if (this._pendingData > DISCARD_WATERMARK) {\n      throw new Error('write data discarded, use flow control to avoid losing data');\n    }\n\n    // schedule chunk processing for next event loop run\n    if (!this._writeBuffer.length) {\n      this._bufferOffset = 0;\n      setTimeout(() => this._innerWrite());\n    }\n\n    this._pendingData += data.length;\n    this._writeBuffer.push(data);\n    this._callbacks.push(callback);\n  }\n\n  /**\n   * Inner write call, that enters the sliced chunk processing by timing.\n   *\n   * `lastTime` indicates, when the last _innerWrite call had started.\n   * It is used to aggregate async handler execution under a timeout constraint\n   * effectively lowering the redrawing needs, schematically:\n   *\n   *   macroTask _innerWrite:\n   *     if (Date.now() - (lastTime | 0) < WRITE_TIMEOUT_MS):\n   *        schedule microTask _innerWrite(lastTime)\n   *     else:\n   *        schedule macroTask _innerWrite(0)\n   *\n   *   overall execution order on task queues:\n   *\n   *   macrotasks:  [...]  -->  _innerWrite(0)  -->  [...]  -->  screenUpdate  -->  [...]\n   *         m  t:                    |\n   *         i  a:                  [...]\n   *         c  s:                    |\n   *         r  k:              while < timeout:\n   *         o  s:                _innerWrite(timeout)\n   *\n   * `promiseResult` depicts the promise resolve value of an async handler.\n   * This value gets carried forward through all saved stack states of the\n   * paused parser for proper continuation.\n   *\n   * Note, for pure sync code `lastTime` and `promiseResult` have no meaning.\n   */\n  protected _innerWrite(lastTime: number = 0, promiseResult: boolean = true): void {\n    const startTime = lastTime || Date.now();\n    while (this._writeBuffer.length > this._bufferOffset) {\n      const data = this._writeBuffer[this._bufferOffset];\n      const result = this._action(data, promiseResult);\n      if (result) {\n        /**\n         * If we get a promise as return value, we re-schedule the continuation\n         * as thenable on the promise and exit right away.\n         *\n         * The exit here means, that we block input processing at the current active chunk,\n         * the exact execution position within the chunk is preserved by the saved\n         * stack content in InputHandler and EscapeSequenceParser.\n         *\n         * Resuming happens automatically from that saved stack state.\n         * Also the resolved promise value is passed along the callstack to\n         * `EscapeSequenceParser.parse` to correctly resume the stopped handler loop.\n         *\n         * Exceptions on async handlers will be logged to console async, but do not interrupt\n         * the input processing (continues with next handler at the current input position).\n         */\n\n        /**\n         * If a promise takes long to resolve, we should schedule continuation behind setTimeout.\n         * This might already be too late, if our .then enters really late (executor + prev thens took very long).\n         * This cannot be solved here for the handler itself (it is the handlers responsibility to slice hard work),\n         * but we can at least schedule a screen update as we gain control.\n         */\n        const continuation: (r: boolean) => void = (r: boolean) => Date.now() - startTime >= WRITE_TIMEOUT_MS\n          ? setTimeout(() => this._innerWrite(0, r))\n          : this._innerWrite(startTime, r);\n\n        /**\n         * Optimization considerations:\n         * The continuation above favors FPS over throughput by eval'ing `startTime` on resolve.\n         * This might schedule too many screen updates with bad throughput drops (in case a slow\n         * resolving handler sliced its work properly behind setTimeout calls). We cannot spot\n         * this condition here, also the renderer has no way to spot nonsense updates either.\n         * FIXME: A proper fix for this would track the FPS at the renderer entry level separately.\n         *\n         * If favoring of FPS shows bad throughtput impact, use the following instead. It favors\n         * throughput by eval'ing `startTime` upfront pulling at least one more chunk into the\n         * current microtask queue (executed before setTimeout).\n         */\n        // const continuation: (r: boolean) => void = Date.now() - startTime >= WRITE_TIMEOUT_MS\n        //   ? r => setTimeout(() => this._innerWrite(0, r))\n        //   : r => this._innerWrite(startTime, r);\n\n        // Handle exceptions synchronously to current band position, idea:\n        // 1. spawn a single microtask which we allow to throw hard\n        // 2. spawn a promise immediately resolving to `true`\n        // (executed on the same queue, thus properly aligned before continuation happens)\n        result.catch(err => {\n          qmt(() => {throw err;});\n          return Promise.resolve(false);\n        }).then(continuation);\n        return;\n      }\n\n      const cb = this._callbacks[this._bufferOffset];\n      if (cb) cb();\n      this._bufferOffset++;\n      this._pendingData -= data.length;\n\n      if (Date.now() - startTime >= WRITE_TIMEOUT_MS) {\n        break;\n      }\n    }\n    if (this._writeBuffer.length > this._bufferOffset) {\n      // Allow renderer to catch up before processing the next batch\n      // trim already processed chunks if we are above threshold\n      if (this._bufferOffset > WRITE_BUFFER_LENGTH_THRESHOLD) {\n        this._writeBuffer = this._writeBuffer.slice(this._bufferOffset);\n        this._callbacks = this._callbacks.slice(this._bufferOffset);\n        this._bufferOffset = 0;\n      }\n      setTimeout(() => this._innerWrite());\n    } else {\n      this._writeBuffer.length = 0;\n      this._callbacks.length = 0;\n      this._pendingData = 0;\n      this._bufferOffset = 0;\n    }\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/**\n * Internal states of EscapeSequenceParser.\n */\nexport const enum ParserState {\n  GROUND = 0,\n  ESCAPE = 1,\n  ESCAPE_INTERMEDIATE = 2,\n  CSI_ENTRY = 3,\n  CSI_PARAM = 4,\n  CSI_INTERMEDIATE = 5,\n  CSI_IGNORE = 6,\n  SOS_PM_APC_STRING = 7,\n  OSC_STRING = 8,\n  DCS_ENTRY = 9,\n  DCS_PARAM = 10,\n  DCS_IGNORE = 11,\n  DCS_INTERMEDIATE = 12,\n  DCS_PASSTHROUGH = 13\n}\n\n/**\n* Internal actions of EscapeSequenceParser.\n*/\nexport const enum ParserAction {\n  IGNORE = 0,\n  ERROR = 1,\n  PRINT = 2,\n  EXECUTE = 3,\n  OSC_START = 4,\n  OSC_PUT = 5,\n  OSC_END = 6,\n  CSI_DISPATCH = 7,\n  PARAM = 8,\n  COLLECT = 9,\n  ESC_DISPATCH = 10,\n  CLEAR = 11,\n  DCS_HOOK = 12,\n  DCS_PUT = 13,\n  DCS_UNHOOK = 14\n}\n\n/**\n * Internal states of OscParser.\n */\nexport const enum OscState {\n  START = 0,\n  ID = 1,\n  PAYLOAD = 2,\n  ABORT = 3\n}\n\n// payload limit for OSC and DCS\nexport const PAYLOAD_LIMIT = 10000000;\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\nimport { IDcsHandler, IParams, IHandlerCollection, IDcsParser, DcsFallbackHandlerType, ISubParserStackState } from 'common/parser/Types';\nimport { utf32ToString } from 'common/input/TextDecoder';\nimport { Params } from 'common/parser/Params';\nimport { PAYLOAD_LIMIT } from 'common/parser/Constants';\n\nconst EMPTY_HANDLERS: IDcsHandler[] = [];\n\nexport class DcsParser implements IDcsParser {\n  private _handlers: IHandlerCollection<IDcsHandler> = Object.create(null);\n  private _active: IDcsHandler[] = EMPTY_HANDLERS;\n  private _ident: number = 0;\n  private _handlerFb: DcsFallbackHandlerType = () => { };\n  private _stack: ISubParserStackState = {\n    paused: false,\n    loopPosition: 0,\n    fallThrough: false\n  };\n\n  public dispose(): void {\n    this._handlers = Object.create(null);\n    this._handlerFb = () => { };\n    this._active = EMPTY_HANDLERS;\n  }\n\n  public registerHandler(ident: number, handler: IDcsHandler): IDisposable {\n    if (this._handlers[ident] === undefined) {\n      this._handlers[ident] = [];\n    }\n    const handlerList = this._handlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n\n  public clearHandler(ident: number): void {\n    if (this._handlers[ident]) delete this._handlers[ident];\n  }\n\n  public setHandlerFallback(handler: DcsFallbackHandlerType): void {\n    this._handlerFb = handler;\n  }\n\n  public reset(): void {\n    // force cleanup leftover handlers\n    if (this._active.length) {\n      for (let j = this._stack.paused ? this._stack.loopPosition - 1 : this._active.length - 1; j >= 0; --j) {\n        this._active[j].unhook(false);\n      }\n    }\n    this._stack.paused = false;\n    this._active = EMPTY_HANDLERS;\n    this._ident = 0;\n  }\n\n  public hook(ident: number, params: IParams): void {\n    // always reset leftover handlers\n    this.reset();\n    this._ident = ident;\n    this._active = this._handlers[ident] || EMPTY_HANDLERS;\n    if (!this._active.length) {\n      this._handlerFb(this._ident, 'HOOK', params);\n    } else {\n      for (let j = this._active.length - 1; j >= 0; j--) {\n        this._active[j].hook(params);\n      }\n    }\n  }\n\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (!this._active.length) {\n      this._handlerFb(this._ident, 'PUT', utf32ToString(data, start, end));\n    } else {\n      for (let j = this._active.length - 1; j >= 0; j--) {\n        this._active[j].put(data, start, end);\n      }\n    }\n  }\n\n  public unhook(success: boolean, promiseResult: boolean = true): void | Promise<boolean> {\n    if (!this._active.length) {\n      this._handlerFb(this._ident, 'UNHOOK', success);\n    } else {\n      let handlerResult: boolean | Promise<boolean> = false;\n      let j = this._active.length - 1;\n      let fallThrough = false;\n      if (this._stack.paused) {\n        j = this._stack.loopPosition - 1;\n        handlerResult = promiseResult;\n        fallThrough = this._stack.fallThrough;\n        this._stack.paused = false;\n      }\n      if (!fallThrough && handlerResult === false) {\n        for (; j >= 0; j--) {\n          handlerResult = this._active[j].unhook(success);\n          if (handlerResult === true) {\n            break;\n          } else if (handlerResult instanceof Promise) {\n            this._stack.paused = true;\n            this._stack.loopPosition = j;\n            this._stack.fallThrough = false;\n            return handlerResult;\n          }\n        }\n        j--;\n      }\n      // cleanup left over handlers (fallThrough for async)\n      for (; j >= 0; j--) {\n        handlerResult = this._active[j].unhook(false);\n        if (handlerResult instanceof Promise) {\n          this._stack.paused = true;\n          this._stack.loopPosition = j;\n          this._stack.fallThrough = true;\n          return handlerResult;\n        }\n      }\n    }\n    this._active = EMPTY_HANDLERS;\n    this._ident = 0;\n  }\n}\n\n// predefine empty params as [0] (ZDM)\nconst EMPTY_PARAMS = new Params();\nEMPTY_PARAMS.addParam(0);\n\n/**\n * Convenient class to create a DCS handler from a single callback function.\n * Note: The payload is currently limited to 50 MB (hardcoded).\n */\nexport class DcsHandler implements IDcsHandler {\n  private _data = '';\n  private _params: IParams = EMPTY_PARAMS;\n  private _hitLimit: boolean = false;\n\n  constructor(private _handler: (data: string, params: IParams) => boolean | Promise<boolean>) { }\n\n  public hook(params: IParams): void {\n    // since we need to preserve params until `unhook`, we have to clone it\n    // (only borrowed from parser and spans multiple parser states)\n    // perf optimization:\n    // clone only, if we have non empty params, otherwise stick with default\n    this._params = (params.length > 1 || params.params[0]) ? params.clone() : EMPTY_PARAMS;\n    this._data = '';\n    this._hitLimit = false;\n  }\n\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (this._hitLimit) {\n      return;\n    }\n    this._data += utf32ToString(data, start, end);\n    if (this._data.length > PAYLOAD_LIMIT) {\n      this._data = '';\n      this._hitLimit = true;\n    }\n  }\n\n  public unhook(success: boolean): boolean | Promise<boolean> {\n    let ret: boolean | Promise<boolean> = false;\n    if (this._hitLimit) {\n      ret = false;\n    } else if (success) {\n      ret = this._handler(this._data, this._params);\n      if (ret instanceof Promise) {\n        // need to hold data and params until `ret` got resolved\n        // dont care for errors, data will be freed anyway on next start\n        return ret.then(res => {\n          this._params = EMPTY_PARAMS;\n          this._data = '';\n          this._hitLimit = false;\n          return res;\n        });\n      }\n    }\n    this._params = EMPTY_PARAMS;\n    this._data = '';\n    this._hitLimit = false;\n    return ret;\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IParsingState, IDcsHandler, IEscapeSequenceParser, IParams, IOscHandler, IHandlerCollection, CsiHandlerType, OscFallbackHandlerType, IOscParser, EscHandlerType, IDcsParser, DcsFallbackHandlerType, IFunctionIdentifier, ExecuteFallbackHandlerType, CsiFallbackHandlerType, EscFallbackHandlerType, PrintHandlerType, PrintFallbackHandlerType, ExecuteHandlerType, IParserStackState, ParserStackType, ResumableHandlersType } from 'common/parser/Types';\nimport { ParserState, ParserAction } from 'common/parser/Constants';\nimport { Disposable } from 'common/Lifecycle';\nimport { IDisposable } from 'common/Types';\nimport { fill } from 'common/TypedArrayUtils';\nimport { Params } from 'common/parser/Params';\nimport { OscParser } from 'common/parser/OscParser';\nimport { DcsParser } from 'common/parser/DcsParser';\n\n/**\n * Table values are generated like this:\n *    index:  currentState << TableValue.INDEX_STATE_SHIFT | charCode\n *    value:  action << TableValue.TRANSITION_ACTION_SHIFT | nextState\n */\nconst enum TableAccess {\n  TRANSITION_ACTION_SHIFT = 4,\n  TRANSITION_STATE_MASK = 15,\n  INDEX_STATE_SHIFT = 8\n}\n\n/**\n * Transition table for EscapeSequenceParser.\n */\nexport class TransitionTable {\n  public table: Uint8Array;\n\n  constructor(length: number) {\n    this.table = new Uint8Array(length);\n  }\n\n  /**\n   * Set default transition.\n   * @param action default action\n   * @param next default next state\n   */\n  public setDefault(action: ParserAction, next: ParserState): void {\n    fill(this.table, action << TableAccess.TRANSITION_ACTION_SHIFT | next);\n  }\n\n  /**\n   * Add a transition to the transition table.\n   * @param code input character code\n   * @param state current parser state\n   * @param action parser action to be done\n   * @param next next parser state\n   */\n  public add(code: number, state: ParserState, action: ParserAction, next: ParserState): void {\n    this.table[state << TableAccess.INDEX_STATE_SHIFT | code] = action << TableAccess.TRANSITION_ACTION_SHIFT | next;\n  }\n\n  /**\n   * Add transitions for multiple input character codes.\n   * @param codes input character code array\n   * @param state current parser state\n   * @param action parser action to be done\n   * @param next next parser state\n   */\n  public addMany(codes: number[], state: ParserState, action: ParserAction, next: ParserState): void {\n    for (let i = 0; i < codes.length; i++) {\n      this.table[state << TableAccess.INDEX_STATE_SHIFT | codes[i]] = action << TableAccess.TRANSITION_ACTION_SHIFT | next;\n    }\n  }\n}\n\n\n// Pseudo-character placeholder for printable non-ascii characters (unicode).\nconst NON_ASCII_PRINTABLE = 0xA0;\n\n\n/**\n * VT500 compatible transition table.\n * Taken from https://vt100.net/emu/dec_ansi_parser.\n */\nexport const VT500_TRANSITION_TABLE = (function (): TransitionTable {\n  const table: TransitionTable = new TransitionTable(4095);\n\n  // range macro for byte\n  const BYTE_VALUES = 256;\n  const blueprint = Array.apply(null, Array(BYTE_VALUES)).map((unused: any, i: number) => i);\n  const r = (start: number, end: number): number[] => blueprint.slice(start, end);\n\n  // Default definitions.\n  const PRINTABLES = r(0x20, 0x7f); // 0x20 (SP) included, 0x7F (DEL) excluded\n  const EXECUTABLES = r(0x00, 0x18);\n  EXECUTABLES.push(0x19);\n  EXECUTABLES.push.apply(EXECUTABLES, r(0x1c, 0x20));\n\n  const states: number[] = r(ParserState.GROUND, ParserState.DCS_PASSTHROUGH + 1);\n  let state: any;\n\n  // set default transition\n  table.setDefault(ParserAction.ERROR, ParserState.GROUND);\n  // printables\n  table.addMany(PRINTABLES, ParserState.GROUND, ParserAction.PRINT, ParserState.GROUND);\n  // global anywhere rules\n  for (state in states) {\n    table.addMany([0x18, 0x1a, 0x99, 0x9a], state, ParserAction.EXECUTE, ParserState.GROUND);\n    table.addMany(r(0x80, 0x90), state, ParserAction.EXECUTE, ParserState.GROUND);\n    table.addMany(r(0x90, 0x98), state, ParserAction.EXECUTE, ParserState.GROUND);\n    table.add(0x9c, state, ParserAction.IGNORE, ParserState.GROUND); // ST as terminator\n    table.add(0x1b, state, ParserAction.CLEAR, ParserState.ESCAPE);  // ESC\n    table.add(0x9d, state, ParserAction.OSC_START, ParserState.OSC_STRING);  // OSC\n    table.addMany([0x98, 0x9e, 0x9f], state, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n    table.add(0x9b, state, ParserAction.CLEAR, ParserState.CSI_ENTRY);  // CSI\n    table.add(0x90, state, ParserAction.CLEAR, ParserState.DCS_ENTRY);  // DCS\n  }\n  // rules for executables and 7f\n  table.addMany(EXECUTABLES, ParserState.GROUND, ParserAction.EXECUTE, ParserState.GROUND);\n  table.addMany(EXECUTABLES, ParserState.ESCAPE, ParserAction.EXECUTE, ParserState.ESCAPE);\n  table.add(0x7f, ParserState.ESCAPE, ParserAction.IGNORE, ParserState.ESCAPE);\n  table.addMany(EXECUTABLES, ParserState.OSC_STRING, ParserAction.IGNORE, ParserState.OSC_STRING);\n  table.addMany(EXECUTABLES, ParserState.CSI_ENTRY, ParserAction.EXECUTE, ParserState.CSI_ENTRY);\n  table.add(0x7f, ParserState.CSI_ENTRY, ParserAction.IGNORE, ParserState.CSI_ENTRY);\n  table.addMany(EXECUTABLES, ParserState.CSI_PARAM, ParserAction.EXECUTE, ParserState.CSI_PARAM);\n  table.add(0x7f, ParserState.CSI_PARAM, ParserAction.IGNORE, ParserState.CSI_PARAM);\n  table.addMany(EXECUTABLES, ParserState.CSI_IGNORE, ParserAction.EXECUTE, ParserState.CSI_IGNORE);\n  table.addMany(EXECUTABLES, ParserState.CSI_INTERMEDIATE, ParserAction.EXECUTE, ParserState.CSI_INTERMEDIATE);\n  table.add(0x7f, ParserState.CSI_INTERMEDIATE, ParserAction.IGNORE, ParserState.CSI_INTERMEDIATE);\n  table.addMany(EXECUTABLES, ParserState.ESCAPE_INTERMEDIATE, ParserAction.EXECUTE, ParserState.ESCAPE_INTERMEDIATE);\n  table.add(0x7f, ParserState.ESCAPE_INTERMEDIATE, ParserAction.IGNORE, ParserState.ESCAPE_INTERMEDIATE);\n  // osc\n  table.add(0x5d, ParserState.ESCAPE, ParserAction.OSC_START, ParserState.OSC_STRING);\n  table.addMany(PRINTABLES, ParserState.OSC_STRING, ParserAction.OSC_PUT, ParserState.OSC_STRING);\n  table.add(0x7f, ParserState.OSC_STRING, ParserAction.OSC_PUT, ParserState.OSC_STRING);\n  table.addMany([0x9c, 0x1b, 0x18, 0x1a, 0x07], ParserState.OSC_STRING, ParserAction.OSC_END, ParserState.GROUND);\n  table.addMany(r(0x1c, 0x20), ParserState.OSC_STRING, ParserAction.IGNORE, ParserState.OSC_STRING);\n  // sos/pm/apc does nothing\n  table.addMany([0x58, 0x5e, 0x5f], ParserState.ESCAPE, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  table.addMany(PRINTABLES, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  table.addMany(EXECUTABLES, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  table.add(0x9c, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.GROUND);\n  table.add(0x7f, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  // csi entries\n  table.add(0x5b, ParserState.ESCAPE, ParserAction.CLEAR, ParserState.CSI_ENTRY);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_ENTRY, ParserAction.CSI_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x30, 0x3c), ParserState.CSI_ENTRY, ParserAction.PARAM, ParserState.CSI_PARAM);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.CSI_ENTRY, ParserAction.COLLECT, ParserState.CSI_PARAM);\n  table.addMany(r(0x30, 0x3c), ParserState.CSI_PARAM, ParserAction.PARAM, ParserState.CSI_PARAM);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_PARAM, ParserAction.CSI_DISPATCH, ParserState.GROUND);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.CSI_PARAM, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.addMany(r(0x20, 0x40), ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.add(0x7f, ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.GROUND);\n  table.addMany(r(0x20, 0x30), ParserState.CSI_ENTRY, ParserAction.COLLECT, ParserState.CSI_INTERMEDIATE);\n  table.addMany(r(0x20, 0x30), ParserState.CSI_INTERMEDIATE, ParserAction.COLLECT, ParserState.CSI_INTERMEDIATE);\n  table.addMany(r(0x30, 0x40), ParserState.CSI_INTERMEDIATE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_INTERMEDIATE, ParserAction.CSI_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x20, 0x30), ParserState.CSI_PARAM, ParserAction.COLLECT, ParserState.CSI_INTERMEDIATE);\n  // esc_intermediate\n  table.addMany(r(0x20, 0x30), ParserState.ESCAPE, ParserAction.COLLECT, ParserState.ESCAPE_INTERMEDIATE);\n  table.addMany(r(0x20, 0x30), ParserState.ESCAPE_INTERMEDIATE, ParserAction.COLLECT, ParserState.ESCAPE_INTERMEDIATE);\n  table.addMany(r(0x30, 0x7f), ParserState.ESCAPE_INTERMEDIATE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x30, 0x50), ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x51, 0x58), ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany([0x59, 0x5a, 0x5c], ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x60, 0x7f), ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  // dcs entry\n  table.add(0x50, ParserState.ESCAPE, ParserAction.CLEAR, ParserState.DCS_ENTRY);\n  table.addMany(EXECUTABLES, ParserState.DCS_ENTRY, ParserAction.IGNORE, ParserState.DCS_ENTRY);\n  table.add(0x7f, ParserState.DCS_ENTRY, ParserAction.IGNORE, ParserState.DCS_ENTRY);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_ENTRY, ParserAction.IGNORE, ParserState.DCS_ENTRY);\n  table.addMany(r(0x20, 0x30), ParserState.DCS_ENTRY, ParserAction.COLLECT, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x30, 0x3c), ParserState.DCS_ENTRY, ParserAction.PARAM, ParserState.DCS_PARAM);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.DCS_ENTRY, ParserAction.COLLECT, ParserState.DCS_PARAM);\n  table.addMany(EXECUTABLES, ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x20, 0x80), ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(EXECUTABLES, ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_PARAM);\n  table.add(0x7f, ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_PARAM);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_PARAM);\n  table.addMany(r(0x30, 0x3c), ParserState.DCS_PARAM, ParserAction.PARAM, ParserState.DCS_PARAM);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x20, 0x30), ParserState.DCS_PARAM, ParserAction.COLLECT, ParserState.DCS_INTERMEDIATE);\n  table.addMany(EXECUTABLES, ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_INTERMEDIATE);\n  table.add(0x7f, ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x20, 0x30), ParserState.DCS_INTERMEDIATE, ParserAction.COLLECT, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x30, 0x40), ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x40, 0x7f), ParserState.DCS_INTERMEDIATE, ParserAction.DCS_HOOK, ParserState.DCS_PASSTHROUGH);\n  table.addMany(r(0x40, 0x7f), ParserState.DCS_PARAM, ParserAction.DCS_HOOK, ParserState.DCS_PASSTHROUGH);\n  table.addMany(r(0x40, 0x7f), ParserState.DCS_ENTRY, ParserAction.DCS_HOOK, ParserState.DCS_PASSTHROUGH);\n  table.addMany(EXECUTABLES, ParserState.DCS_PASSTHROUGH, ParserAction.DCS_PUT, ParserState.DCS_PASSTHROUGH);\n  table.addMany(PRINTABLES, ParserState.DCS_PASSTHROUGH, ParserAction.DCS_PUT, ParserState.DCS_PASSTHROUGH);\n  table.add(0x7f, ParserState.DCS_PASSTHROUGH, ParserAction.IGNORE, ParserState.DCS_PASSTHROUGH);\n  table.addMany([0x1b, 0x9c, 0x18, 0x1a], ParserState.DCS_PASSTHROUGH, ParserAction.DCS_UNHOOK, ParserState.GROUND);\n  // special handling of unicode chars\n  table.add(NON_ASCII_PRINTABLE, ParserState.GROUND, ParserAction.PRINT, ParserState.GROUND);\n  table.add(NON_ASCII_PRINTABLE, ParserState.OSC_STRING, ParserAction.OSC_PUT, ParserState.OSC_STRING);\n  table.add(NON_ASCII_PRINTABLE, ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.add(NON_ASCII_PRINTABLE, ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.add(NON_ASCII_PRINTABLE, ParserState.DCS_PASSTHROUGH, ParserAction.DCS_PUT, ParserState.DCS_PASSTHROUGH);\n  return table;\n})();\n\n\n/**\n * EscapeSequenceParser.\n * This class implements the ANSI/DEC compatible parser described by\n * Paul Williams (https://vt100.net/emu/dec_ansi_parser).\n *\n * To implement custom ANSI compliant escape sequences it is not needed to\n * alter this parser, instead consider registering a custom handler.\n * For non ANSI compliant sequences change the transition table with\n * the optional `transitions` constructor argument and\n * reimplement the `parse` method.\n *\n * This parser is currently hardcoded to operate in ZDM (Zero Default Mode)\n * as suggested by the original parser, thus empty parameters are set to 0.\n * This this is not in line with the latest ECMA-48 specification\n * (ZDM was part of the early specs and got completely removed later on).\n *\n * Other than the original parser from vt100.net this parser supports\n * sub parameters in digital parameters separated by colons. Empty sub parameters\n * are set to -1 (no ZDM for sub parameters).\n *\n * About prefix and intermediate bytes:\n * This parser follows the assumptions of the vt100.net parser with these restrictions:\n * - only one prefix byte is allowed as first parameter byte, byte range 0x3c .. 0x3f\n * - max. two intermediates are respected, byte range 0x20 .. 0x2f\n * Note that this is not in line with ECMA-48 which does not limit either of those.\n * Furthermore ECMA-48 allows the prefix byte range at any param byte position. Currently\n * there are no known sequences that follow the broader definition of the specification.\n *\n * TODO: implement error recovery hook via error handler return values\n */\nexport class EscapeSequenceParser extends Disposable implements IEscapeSequenceParser {\n  public initialState: number;\n  public currentState: number;\n  public precedingCodepoint: number;\n\n  // buffers over several parse calls\n  protected _params: Params;\n  protected _collect: number;\n\n  // handler lookup containers\n  protected _printHandler: PrintHandlerType;\n  protected _executeHandlers: { [flag: number]: ExecuteHandlerType };\n  protected _csiHandlers: IHandlerCollection<CsiHandlerType>;\n  protected _escHandlers: IHandlerCollection<EscHandlerType>;\n  protected _oscParser: IOscParser;\n  protected _dcsParser: IDcsParser;\n  protected _errorHandler: (state: IParsingState) => IParsingState;\n\n  // fallback handlers\n  protected _printHandlerFb: PrintFallbackHandlerType;\n  protected _executeHandlerFb: ExecuteFallbackHandlerType;\n  protected _csiHandlerFb: CsiFallbackHandlerType;\n  protected _escHandlerFb: EscFallbackHandlerType;\n  protected _errorHandlerFb: (state: IParsingState) => IParsingState;\n\n  // parser stack save for async handler support\n  protected _parseStack: IParserStackState = {\n    state: ParserStackType.NONE,\n    handlers: [],\n    handlerPos: 0,\n    transition: 0,\n    chunkPos: 0\n  };\n\n  constructor(\n    protected readonly _transitions: TransitionTable = VT500_TRANSITION_TABLE\n  ) {\n    super();\n\n    this.initialState = ParserState.GROUND;\n    this.currentState = this.initialState;\n    this._params = new Params(); // defaults to 32 storable params/subparams\n    this._params.addParam(0);    // ZDM\n    this._collect = 0;\n    this.precedingCodepoint = 0;\n\n    // set default fallback handlers and handler lookup containers\n    this._printHandlerFb = (data, start, end): void => { };\n    this._executeHandlerFb = (code: number): void => { };\n    this._csiHandlerFb = (ident: number, params: IParams): void => { };\n    this._escHandlerFb = (ident: number): void => { };\n    this._errorHandlerFb = (state: IParsingState): IParsingState => state;\n    this._printHandler = this._printHandlerFb;\n    this._executeHandlers = Object.create(null);\n    this._csiHandlers = Object.create(null);\n    this._escHandlers = Object.create(null);\n    this._oscParser = new OscParser();\n    this._dcsParser = new DcsParser();\n    this._errorHandler = this._errorHandlerFb;\n\n    // swallow 7bit ST (ESC+\\)\n    this.registerEscHandler({ final: '\\\\' }, () => true);\n  }\n\n  protected _identifier(id: IFunctionIdentifier, finalRange: number[] = [0x40, 0x7e]): number {\n    let res = 0;\n    if (id.prefix) {\n      if (id.prefix.length > 1) {\n        throw new Error('only one byte as prefix supported');\n      }\n      res = id.prefix.charCodeAt(0);\n      if (res && 0x3c > res || res > 0x3f) {\n        throw new Error('prefix must be in range 0x3c .. 0x3f');\n      }\n    }\n    if (id.intermediates) {\n      if (id.intermediates.length > 2) {\n        throw new Error('only two bytes as intermediates are supported');\n      }\n      for (let i = 0; i < id.intermediates.length; ++i) {\n        const intermediate = id.intermediates.charCodeAt(i);\n        if (0x20 > intermediate || intermediate > 0x2f) {\n          throw new Error('intermediate must be in range 0x20 .. 0x2f');\n        }\n        res <<= 8;\n        res |= intermediate;\n      }\n    }\n    if (id.final.length !== 1) {\n      throw new Error('final must be a single byte');\n    }\n    const finalCode = id.final.charCodeAt(0);\n    if (finalRange[0] > finalCode || finalCode > finalRange[1]) {\n      throw new Error(`final must be in range ${finalRange[0]} .. ${finalRange[1]}`);\n    }\n    res <<= 8;\n    res |= finalCode;\n\n    return res;\n  }\n\n  public identToString(ident: number): string {\n    const res: string[] = [];\n    while (ident) {\n      res.push(String.fromCharCode(ident & 0xFF));\n      ident >>= 8;\n    }\n    return res.reverse().join('');\n  }\n\n  public dispose(): void {\n    this._csiHandlers = Object.create(null);\n    this._executeHandlers = Object.create(null);\n    this._escHandlers = Object.create(null);\n    this._oscParser.dispose();\n    this._dcsParser.dispose();\n  }\n\n  public setPrintHandler(handler: PrintHandlerType): void {\n    this._printHandler = handler;\n  }\n  public clearPrintHandler(): void {\n    this._printHandler = this._printHandlerFb;\n  }\n\n  public registerEscHandler(id: IFunctionIdentifier, handler: EscHandlerType): IDisposable {\n    const ident = this._identifier(id, [0x30, 0x7e]);\n    if (this._escHandlers[ident] === undefined) {\n      this._escHandlers[ident] = [];\n    }\n    const handlerList = this._escHandlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n  public clearEscHandler(id: IFunctionIdentifier): void {\n    if (this._escHandlers[this._identifier(id, [0x30, 0x7e])]) delete this._escHandlers[this._identifier(id, [0x30, 0x7e])];\n  }\n  public setEscHandlerFallback(handler: EscFallbackHandlerType): void {\n    this._escHandlerFb = handler;\n  }\n\n  public setExecuteHandler(flag: string, handler: ExecuteHandlerType): void {\n    this._executeHandlers[flag.charCodeAt(0)] = handler;\n  }\n  public clearExecuteHandler(flag: string): void {\n    if (this._executeHandlers[flag.charCodeAt(0)]) delete this._executeHandlers[flag.charCodeAt(0)];\n  }\n  public setExecuteHandlerFallback(handler: ExecuteFallbackHandlerType): void {\n    this._executeHandlerFb = handler;\n  }\n\n  public registerCsiHandler(id: IFunctionIdentifier, handler: CsiHandlerType): IDisposable {\n    const ident = this._identifier(id);\n    if (this._csiHandlers[ident] === undefined) {\n      this._csiHandlers[ident] = [];\n    }\n    const handlerList = this._csiHandlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n  public clearCsiHandler(id: IFunctionIdentifier): void {\n    if (this._csiHandlers[this._identifier(id)]) delete this._csiHandlers[this._identifier(id)];\n  }\n  public setCsiHandlerFallback(callback: (ident: number, params: IParams) => void): void {\n    this._csiHandlerFb = callback;\n  }\n\n  public registerDcsHandler(id: IFunctionIdentifier, handler: IDcsHandler): IDisposable {\n    return this._dcsParser.registerHandler(this._identifier(id), handler);\n  }\n  public clearDcsHandler(id: IFunctionIdentifier): void {\n    this._dcsParser.clearHandler(this._identifier(id));\n  }\n  public setDcsHandlerFallback(handler: DcsFallbackHandlerType): void {\n    this._dcsParser.setHandlerFallback(handler);\n  }\n\n  public registerOscHandler(ident: number, handler: IOscHandler): IDisposable {\n    return this._oscParser.registerHandler(ident, handler);\n  }\n  public clearOscHandler(ident: number): void {\n    this._oscParser.clearHandler(ident);\n  }\n  public setOscHandlerFallback(handler: OscFallbackHandlerType): void {\n    this._oscParser.setHandlerFallback(handler);\n  }\n\n  public setErrorHandler(callback: (state: IParsingState) => IParsingState): void {\n    this._errorHandler = callback;\n  }\n  public clearErrorHandler(): void {\n    this._errorHandler = this._errorHandlerFb;\n  }\n\n  /**\n   * Reset parser to initial values.\n   *\n   * This can also be used to lift the improper continuation error condition\n   * when dealing with async handlers. Use this only as a last resort to silence\n   * that error when the terminal has no pending data to be processed. Note that\n   * the interrupted async handler might continue its work in the future messing\n   * up the terminal state even further.\n   */\n  public reset(): void {\n    this.currentState = this.initialState;\n    this._oscParser.reset();\n    this._dcsParser.reset();\n    this._params.reset();\n    this._params.addParam(0); // ZDM\n    this._collect = 0;\n    this.precedingCodepoint = 0;\n    // abort pending continuation from async handler\n    // Here the RESET type indicates, that the next parse call will\n    // ignore any saved stack, instead continues sync with next codepoint from GROUND\n    if (this._parseStack.state !== ParserStackType.NONE) {\n      this._parseStack.state = ParserStackType.RESET;\n      this._parseStack.handlers = []; // also release handlers ref\n    }\n  }\n\n  /**\n   * Async parse support.\n   */\n  protected _preserveStack(\n    state: ParserStackType,\n    handlers: ResumableHandlersType,\n    handlerPos: number,\n    transition: number,\n    chunkPos: number\n  ): void {\n    this._parseStack.state = state;\n    this._parseStack.handlers = handlers;\n    this._parseStack.handlerPos = handlerPos;\n    this._parseStack.transition = transition;\n    this._parseStack.chunkPos = chunkPos;\n  }\n\n  /**\n   * Parse UTF32 codepoints in `data` up to `length`.\n   *\n   * Note: For several actions with high data load the parsing is optimized\n   * by using local read ahead loops with hardcoded conditions to\n   * avoid costly table lookups. Make sure that any change of table values\n   * will be reflected in the loop conditions as well and vice versa.\n   * Affected states/actions:\n   * - GROUND:PRINT\n   * - CSI_PARAM:PARAM\n   * - DCS_PARAM:PARAM\n   * - OSC_STRING:OSC_PUT\n   * - DCS_PASSTHROUGH:DCS_PUT\n   *\n   * Note on asynchronous handler support:\n   * Any handler returning a promise will be treated as asynchronous.\n   * To keep the in-band blocking working for async handlers, `parse` pauses execution,\n   * creates a stack save and returns the promise to the caller.\n   * For proper continuation of the paused state it is important\n   * to await the promise resolving. On resolve the parse must be repeated\n   * with the same chunk of data and the resolved value in `promiseResult`\n   * until no promise is returned.\n   *\n   * Important: With only sync handlers defined, parsing is completely synchronous as well.\n   * As soon as an async handler is involved, synchronous parsing is not possible anymore.\n   *\n   * Boilerplate for proper parsing of multiple chunks with async handlers:\n   *\n   * ```typescript\n   * async function parseMultipleChunks(chunks: Uint32Array[]): Promise<void> {\n   *   for (const chunk of chunks) {\n   *     let result: void | Promise<boolean>;\n   *     let prev: boolean | undefined;\n   *     while (result = parser.parse(chunk, chunk.length, prev)) {\n   *       prev = await result;\n   *     }\n   *   }\n   *   // finished parsing all chunks...\n   * }\n   * ```\n   */\n  public parse(data: Uint32Array, length: number, promiseResult?: boolean): void | Promise<boolean> {\n    let code = 0;\n    let transition = 0;\n    let start = 0;\n    let handlerResult: void | boolean | Promise<boolean>;\n\n    // resume from async handler\n    if (this._parseStack.state) {\n      // allow sync parser reset even in continuation mode\n      // Note: can be used to recover parser from improper continuation error below\n      if (this._parseStack.state === ParserStackType.RESET) {\n        this._parseStack.state = ParserStackType.NONE;\n        start = this._parseStack.chunkPos + 1; // continue with next codepoint in GROUND\n      } else {\n        if (promiseResult === undefined || this._parseStack.state === ParserStackType.FAIL) {\n          /**\n           * Reject further parsing on improper continuation after pausing.\n           * This is a really bad condition with screwed up execution order and prolly messed up\n           * terminal state, therefore we exit hard with an exception and reject any further parsing.\n           *\n           * Note: With `Terminal.write` usage this exception should never occur, as the top level\n           * calls are guaranteed to handle async conditions properly. If you ever encounter this\n           * exception in your terminal integration it indicates, that you injected data chunks to\n           * `InputHandler.parse` or `EscapeSequenceParser.parse` synchronously without waiting for\n           * continuation of a running async handler.\n           *\n           * It is possible to get rid of this error by calling `reset`. But dont rely on that,\n           * as the pending async handler still might mess up the terminal later. Instead fix the faulty\n           * async handling, so this error will not be thrown anymore.\n           */\n          this._parseStack.state = ParserStackType.FAIL;\n          throw new Error('improper continuation due to previous async handler, giving up parsing');\n        }\n\n        // we have to resume the old handler loop if:\n        // - return value of the promise was `false`\n        // - handlers are not exhausted yet\n        const handlers = this._parseStack.handlers;\n        let handlerPos = this._parseStack.handlerPos - 1;\n        switch (this._parseStack.state) {\n          case ParserStackType.CSI:\n            if (promiseResult === false && handlerPos > -1) {\n              for (; handlerPos >= 0; handlerPos--) {\n                handlerResult = (handlers as CsiHandlerType[])[handlerPos](this._params);\n                if (handlerResult === true) {\n                  break;\n                } else if (handlerResult instanceof Promise) {\n                  this._parseStack.handlerPos = handlerPos;\n                  return handlerResult;\n                }\n              }\n            }\n            this._parseStack.handlers = [];\n            break;\n          case ParserStackType.ESC:\n            if (promiseResult === false && handlerPos > -1) {\n              for (; handlerPos >= 0; handlerPos--) {\n                handlerResult = (handlers as EscHandlerType[])[handlerPos]();\n                if (handlerResult === true) {\n                  break;\n                } else if (handlerResult instanceof Promise) {\n                  this._parseStack.handlerPos = handlerPos;\n                  return handlerResult;\n                }\n              }\n            }\n            this._parseStack.handlers = [];\n            break;\n          case ParserStackType.DCS:\n            code = data[this._parseStack.chunkPos];\n            handlerResult = this._dcsParser.unhook(code !== 0x18 && code !== 0x1a, promiseResult);\n            if (handlerResult) {\n              return handlerResult;\n            }\n            if (code === 0x1b) this._parseStack.transition |= ParserState.ESCAPE;\n            this._params.reset();\n            this._params.addParam(0); // ZDM\n            this._collect = 0;\n            break;\n          case ParserStackType.OSC:\n            code = data[this._parseStack.chunkPos];\n            handlerResult = this._oscParser.end(code !== 0x18 && code !== 0x1a, promiseResult);\n            if (handlerResult) {\n              return handlerResult;\n            }\n            if (code === 0x1b) this._parseStack.transition |= ParserState.ESCAPE;\n            this._params.reset();\n            this._params.addParam(0); // ZDM\n            this._collect = 0;\n            break;\n        }\n        // cleanup before continuing with the main sync loop\n        this._parseStack.state = ParserStackType.NONE;\n        start = this._parseStack.chunkPos + 1;\n        this.precedingCodepoint = 0;\n        this.currentState = this._parseStack.transition & TableAccess.TRANSITION_STATE_MASK;\n      }\n    }\n\n    // continue with main sync loop\n\n    // process input string\n    for (let i = start; i < length; ++i) {\n      code = data[i];\n\n      // normal transition & action lookup\n      transition = this._transitions.table[this.currentState << TableAccess.INDEX_STATE_SHIFT | (code < 0xa0 ? code : NON_ASCII_PRINTABLE)];\n      switch (transition >> TableAccess.TRANSITION_ACTION_SHIFT) {\n        case ParserAction.PRINT:\n          // read ahead with loop unrolling\n          // Note: 0x20 (SP) is included, 0x7F (DEL) is excluded\n          for (let j = i + 1; ; ++j) {\n            if (j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n            if (++j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n            if (++j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n            if (++j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n          }\n          break;\n        case ParserAction.EXECUTE:\n          if (this._executeHandlers[code]) this._executeHandlers[code]();\n          else this._executeHandlerFb(code);\n          this.precedingCodepoint = 0;\n          break;\n        case ParserAction.IGNORE:\n          break;\n        case ParserAction.ERROR:\n          const inject: IParsingState = this._errorHandler(\n            {\n              position: i,\n              code,\n              currentState: this.currentState,\n              collect: this._collect,\n              params: this._params,\n              abort: false\n            });\n          if (inject.abort) return;\n          // inject values: currently not implemented\n          break;\n        case ParserAction.CSI_DISPATCH:\n          // Trigger CSI Handler\n          const handlers = this._csiHandlers[this._collect << 8 | code];\n          let j = handlers ? handlers.length - 1 : -1;\n          for (; j >= 0; j--) {\n            // true means success and to stop bubbling\n            // a promise indicates an async handler that needs to finish before progressing\n            handlerResult = handlers[j](this._params);\n            if (handlerResult === true) {\n              break;\n            } else if (handlerResult instanceof Promise) {\n              this._preserveStack(ParserStackType.CSI, handlers, j, transition, i);\n              return handlerResult;\n            }\n          }\n          if (j < 0) {\n            this._csiHandlerFb(this._collect << 8 | code, this._params);\n          }\n          this.precedingCodepoint = 0;\n          break;\n        case ParserAction.PARAM:\n          // inner loop: digits (0x30 - 0x39) and ; (0x3b) and : (0x3a)\n          do {\n            switch (code) {\n              case 0x3b:\n                this._params.addParam(0);  // ZDM\n                break;\n              case 0x3a:\n                this._params.addSubParam(-1);\n                break;\n              default:  // 0x30 - 0x39\n                this._params.addDigit(code - 48);\n            }\n          } while (++i < length && (code = data[i]) > 0x2f && code < 0x3c);\n          i--;\n          break;\n        case ParserAction.COLLECT:\n          this._collect <<= 8;\n          this._collect |= code;\n          break;\n        case ParserAction.ESC_DISPATCH:\n          const handlersEsc = this._escHandlers[this._collect << 8 | code];\n          let jj = handlersEsc ? handlersEsc.length - 1 : -1;\n          for (; jj >= 0; jj--) {\n            // true means success and to stop bubbling\n            // a promise indicates an async handler that needs to finish before progressing\n            handlerResult = handlersEsc[jj]();\n            if (handlerResult === true) {\n              break;\n            } else if (handlerResult instanceof Promise) {\n              this._preserveStack(ParserStackType.ESC, handlersEsc, jj, transition, i);\n              return handlerResult;\n            }\n          }\n          if (jj < 0) {\n            this._escHandlerFb(this._collect << 8 | code);\n          }\n          this.precedingCodepoint = 0;\n          break;\n        case ParserAction.CLEAR:\n          this._params.reset();\n          this._params.addParam(0); // ZDM\n          this._collect = 0;\n          break;\n        case ParserAction.DCS_HOOK:\n          this._dcsParser.hook(this._collect << 8 | code, this._params);\n          break;\n        case ParserAction.DCS_PUT:\n          // inner loop - exit DCS_PUT: 0x18, 0x1a, 0x1b, 0x7f, 0x80 - 0x9f\n          // unhook triggered by: 0x1b, 0x9c (success) and 0x18, 0x1a (abort)\n          for (let j = i + 1; ; ++j) {\n            if (j >= length || (code = data[j]) === 0x18 || code === 0x1a || code === 0x1b || (code > 0x7f && code < NON_ASCII_PRINTABLE)) {\n              this._dcsParser.put(data, i, j);\n              i = j - 1;\n              break;\n            }\n          }\n          break;\n        case ParserAction.DCS_UNHOOK:\n          handlerResult = this._dcsParser.unhook(code !== 0x18 && code !== 0x1a);\n          if (handlerResult) {\n            this._preserveStack(ParserStackType.DCS, [], 0, transition, i);\n            return handlerResult;\n          }\n          if (code === 0x1b) transition |= ParserState.ESCAPE;\n          this._params.reset();\n          this._params.addParam(0); // ZDM\n          this._collect = 0;\n          this.precedingCodepoint = 0;\n          break;\n        case ParserAction.OSC_START:\n          this._oscParser.start();\n          break;\n        case ParserAction.OSC_PUT:\n          // inner loop: 0x20 (SP) included, 0x7F (DEL) included\n          for (let j = i + 1; ; j++) {\n            if (j >= length || (code = data[j]) < 0x20 || (code > 0x7f && code < NON_ASCII_PRINTABLE)) {\n              this._oscParser.put(data, i, j);\n              i = j - 1;\n              break;\n            }\n          }\n          break;\n        case ParserAction.OSC_END:\n          handlerResult = this._oscParser.end(code !== 0x18 && code !== 0x1a);\n          if (handlerResult) {\n            this._preserveStack(ParserStackType.OSC, [], 0, transition, i);\n            return handlerResult;\n          }\n          if (code === 0x1b) transition |= ParserState.ESCAPE;\n          this._params.reset();\n          this._params.addParam(0); // ZDM\n          this._collect = 0;\n          this.precedingCodepoint = 0;\n          break;\n      }\n      this.currentState = transition & TableAccess.TRANSITION_STATE_MASK;\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IOscHandler, IHandlerCollection, OscFallbackHandlerType, IOscParser, ISubParserStackState } from 'common/parser/Types';\nimport { OscState, PAYLOAD_LIMIT } from 'common/parser/Constants';\nimport { utf32ToString } from 'common/input/TextDecoder';\nimport { IDisposable } from 'common/Types';\n\nconst EMPTY_HANDLERS: IOscHandler[] = [];\n\nexport class OscParser implements IOscParser {\n  private _state = OscState.START;\n  private _active = EMPTY_HANDLERS;\n  private _id = -1;\n  private _handlers: IHandlerCollection<IOscHandler> = Object.create(null);\n  private _handlerFb: OscFallbackHandlerType = () => { };\n  private _stack: ISubParserStackState = {\n    paused: false,\n    loopPosition: 0,\n    fallThrough: false\n  };\n\n  public registerHandler(ident: number, handler: IOscHandler): IDisposable {\n    if (this._handlers[ident] === undefined) {\n      this._handlers[ident] = [];\n    }\n    const handlerList = this._handlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n  public clearHandler(ident: number): void {\n    if (this._handlers[ident]) delete this._handlers[ident];\n  }\n  public setHandlerFallback(handler: OscFallbackHandlerType): void {\n    this._handlerFb = handler;\n  }\n\n  public dispose(): void {\n    this._handlers = Object.create(null);\n    this._handlerFb = () => { };\n    this._active = EMPTY_HANDLERS;\n  }\n\n  public reset(): void {\n    // force cleanup handlers if payload was already sent\n    if (this._state === OscState.PAYLOAD) {\n      for (let j = this._stack.paused ? this._stack.loopPosition - 1 : this._active.length - 1; j >= 0; --j) {\n        this._active[j].end(false);\n      }\n    }\n    this._stack.paused = false;\n    this._active = EMPTY_HANDLERS;\n    this._id = -1;\n    this._state = OscState.START;\n  }\n\n  private _start(): void {\n    this._active = this._handlers[this._id] || EMPTY_HANDLERS;\n    if (!this._active.length) {\n      this._handlerFb(this._id, 'START');\n    } else {\n      for (let j = this._active.length - 1; j >= 0; j--) {\n        this._active[j].start();\n      }\n    }\n  }\n\n  private _put(data: Uint32Array, start: number, end: number): void {\n    if (!this._active.length) {\n      this._handlerFb(this._id, 'PUT', utf32ToString(data, start, end));\n    } else {\n      for (let j = this._active.length - 1; j >= 0; j--) {\n        this._active[j].put(data, start, end);\n      }\n    }\n  }\n\n  public start(): void {\n    // always reset leftover handlers\n    this.reset();\n    this._state = OscState.ID;\n  }\n\n  /**\n   * Put data to current OSC command.\n   * Expects the identifier of the OSC command in the form\n   * OSC id ; payload ST/BEL\n   * Payload chunks are not further processed and get\n   * directly passed to the handlers.\n   */\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (this._state === OscState.ABORT) {\n      return;\n    }\n    if (this._state === OscState.ID) {\n      while (start < end) {\n        const code = data[start++];\n        if (code === 0x3b) {\n          this._state = OscState.PAYLOAD;\n          this._start();\n          break;\n        }\n        if (code < 0x30 || 0x39 < code) {\n          this._state = OscState.ABORT;\n          return;\n        }\n        if (this._id === -1) {\n          this._id = 0;\n        }\n        this._id = this._id * 10 + code - 48;\n      }\n    }\n    if (this._state === OscState.PAYLOAD && end - start > 0) {\n      this._put(data, start, end);\n    }\n  }\n\n  /**\n   * Indicates end of an OSC command.\n   * Whether the OSC got aborted or finished normally\n   * is indicated by `success`.\n   */\n  public end(success: boolean, promiseResult: boolean = true): void | Promise<boolean> {\n    if (this._state === OscState.START) {\n      return;\n    }\n    // do nothing if command was faulty\n    if (this._state !== OscState.ABORT) {\n      // if we are still in ID state and get an early end\n      // means that the command has no payload thus we still have\n      // to announce START and send END right after\n      if (this._state === OscState.ID) {\n        this._start();\n      }\n\n      if (!this._active.length) {\n        this._handlerFb(this._id, 'END', success);\n      } else {\n        let handlerResult: boolean | Promise<boolean> = false;\n        let j = this._active.length - 1;\n        let fallThrough = false;\n        if (this._stack.paused) {\n          j = this._stack.loopPosition - 1;\n          handlerResult = promiseResult;\n          fallThrough = this._stack.fallThrough;\n          this._stack.paused = false;\n        }\n        if (!fallThrough && handlerResult === false) {\n          for (; j >= 0; j--) {\n            handlerResult = this._active[j].end(success);\n            if (handlerResult === true) {\n              break;\n            } else if (handlerResult instanceof Promise) {\n              this._stack.paused = true;\n              this._stack.loopPosition = j;\n              this._stack.fallThrough = false;\n              return handlerResult;\n            }\n          }\n          j--;\n        }\n        // cleanup left over handlers\n        // we always have to call .end for proper cleanup,\n        // here we use `success` to indicate whether a handler should execute\n        for (; j >= 0; j--) {\n          handlerResult = this._active[j].end(false);\n          if (handlerResult instanceof Promise) {\n            this._stack.paused = true;\n            this._stack.loopPosition = j;\n            this._stack.fallThrough = true;\n            return handlerResult;\n          }\n        }\n      }\n\n    }\n    this._active = EMPTY_HANDLERS;\n    this._id = -1;\n    this._state = OscState.START;\n  }\n}\n\n/**\n * Convenient class to allow attaching string based handler functions\n * as OSC handlers.\n */\nexport class OscHandler implements IOscHandler {\n  private _data = '';\n  private _hitLimit: boolean = false;\n\n  constructor(private _handler: (data: string) => boolean | Promise<boolean>) { }\n\n  public start(): void {\n    this._data = '';\n    this._hitLimit = false;\n  }\n\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (this._hitLimit) {\n      return;\n    }\n    this._data += utf32ToString(data, start, end);\n    if (this._data.length > PAYLOAD_LIMIT) {\n      this._data = '';\n      this._hitLimit = true;\n    }\n  }\n\n  public end(success: boolean): boolean | Promise<boolean> {\n    let ret: boolean | Promise<boolean> = false;\n    if (this._hitLimit) {\n      ret = false;\n    } else if (success) {\n      ret = this._handler(this._data);\n      if (ret instanceof Promise) {\n        // need to hold data until `ret` got resolved\n        // dont care for errors, data will be freed anyway on next start\n        return ret.then(res => {\n          this._data = '';\n          this._hitLimit = false;\n          return res;\n        });\n      }\n    }\n    this._data = '';\n    this._hitLimit = false;\n    return ret;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IParams, ParamsArray } from 'common/parser/Types';\n\n// max value supported for a single param/subparam (clamped to positive int32 range)\nconst MAX_VALUE = 0x7FFFFFFF;\n// max allowed subparams for a single sequence (hardcoded limitation)\nconst MAX_SUBPARAMS = 256;\n\n/**\n * Params storage class.\n * This type is used by the parser to accumulate sequence parameters and sub parameters\n * and transmit them to the input handler actions.\n *\n * NOTES:\n *  - params object for action handlers is borrowed, use `.toArray` or `.clone` to get a copy\n *  - never read beyond `params.length - 1` (likely to contain arbitrary data)\n *  - `.getSubParams` returns a borrowed typed array, use `.getSubParamsAll` for cloned sub params\n *  - hardcoded limitations:\n *    - max. value for a single (sub) param is 2^31 - 1 (greater values are clamped to that)\n *    - max. 256 sub params possible\n *    - negative values are not allowed beside -1 (placeholder for default value)\n *\n * About ZDM (Zero Default Mode):\n * ZDM is not orchestrated by this class. If the parser is in ZDM,\n * it should add 0 for empty params, otherwise -1. This does not apply\n * to subparams, empty subparams should always be added with -1.\n */\nexport class Params implements IParams {\n  // params store and length\n  public params: Int32Array;\n  public length: number;\n\n  // sub params store and length\n  protected _subParams: Int32Array;\n  protected _subParamsLength: number;\n\n  // sub params offsets from param: param idx --> [start, end] offset\n  private _subParamsIdx: Uint16Array;\n  private _rejectDigits: boolean;\n  private _rejectSubDigits: boolean;\n  private _digitIsSub: boolean;\n\n  /**\n   * Create a `Params` type from JS array representation.\n   */\n  public static fromArray(values: ParamsArray): Params {\n    const params = new Params();\n    if (!values.length) {\n      return params;\n    }\n    // skip leading sub params\n    for (let i = (values[0] instanceof Array) ? 1 : 0; i < values.length; ++i) {\n      const value = values[i];\n      if (value instanceof Array) {\n        for (let k = 0; k < value.length; ++k) {\n          params.addSubParam(value[k]);\n        }\n      } else {\n        params.addParam(value);\n      }\n    }\n    return params;\n  }\n\n  /**\n   * @param maxLength max length of storable parameters\n   * @param maxSubParamsLength max length of storable sub parameters\n   */\n  constructor(public maxLength: number = 32, public maxSubParamsLength: number = 32) {\n    if (maxSubParamsLength > MAX_SUBPARAMS) {\n      throw new Error('maxSubParamsLength must not be greater than 256');\n    }\n    this.params = new Int32Array(maxLength);\n    this.length = 0;\n    this._subParams = new Int32Array(maxSubParamsLength);\n    this._subParamsLength = 0;\n    this._subParamsIdx = new Uint16Array(maxLength);\n    this._rejectDigits = false;\n    this._rejectSubDigits = false;\n    this._digitIsSub = false;\n  }\n\n  /**\n   * Clone object.\n   */\n  public clone(): Params {\n    const newParams = new Params(this.maxLength, this.maxSubParamsLength);\n    newParams.params.set(this.params);\n    newParams.length = this.length;\n    newParams._subParams.set(this._subParams);\n    newParams._subParamsLength = this._subParamsLength;\n    newParams._subParamsIdx.set(this._subParamsIdx);\n    newParams._rejectDigits = this._rejectDigits;\n    newParams._rejectSubDigits = this._rejectSubDigits;\n    newParams._digitIsSub = this._digitIsSub;\n    return newParams;\n  }\n\n  /**\n   * Get a JS array representation of the current parameters and sub parameters.\n   * The array is structured as follows:\n   *    sequence: \"1;2:3:4;5::6\"\n   *    array   : [1, 2, [3, 4], 5, [-1, 6]]\n   */\n  public toArray(): ParamsArray {\n    const res: ParamsArray = [];\n    for (let i = 0; i < this.length; ++i) {\n      res.push(this.params[i]);\n      const start = this._subParamsIdx[i] >> 8;\n      const end = this._subParamsIdx[i] & 0xFF;\n      if (end - start > 0) {\n        res.push(Array.prototype.slice.call(this._subParams, start, end));\n      }\n    }\n    return res;\n  }\n\n  /**\n   * Reset to initial empty state.\n   */\n  public reset(): void {\n    this.length = 0;\n    this._subParamsLength = 0;\n    this._rejectDigits = false;\n    this._rejectSubDigits = false;\n    this._digitIsSub = false;\n  }\n\n  /**\n   * Add a parameter value.\n   * `Params` only stores up to `maxLength` parameters, any later\n   * parameter will be ignored.\n   * Note: VT devices only stored up to 16 values, xterm seems to\n   * store up to 30.\n   */\n  public addParam(value: number): void {\n    this._digitIsSub = false;\n    if (this.length >= this.maxLength) {\n      this._rejectDigits = true;\n      return;\n    }\n    if (value < -1) {\n      throw new Error('values lesser than -1 are not allowed');\n    }\n    this._subParamsIdx[this.length] = this._subParamsLength << 8 | this._subParamsLength;\n    this.params[this.length++] = value > MAX_VALUE ? MAX_VALUE : value;\n  }\n\n  /**\n   * Add a sub parameter value.\n   * The sub parameter is automatically associated with the last parameter value.\n   * Thus it is not possible to add a subparameter without any parameter added yet.\n   * `Params` only stores up to `subParamsLength` sub parameters, any later\n   * sub parameter will be ignored.\n   */\n  public addSubParam(value: number): void {\n    this._digitIsSub = true;\n    if (!this.length) {\n      return;\n    }\n    if (this._rejectDigits || this._subParamsLength >= this.maxSubParamsLength) {\n      this._rejectSubDigits = true;\n      return;\n    }\n    if (value < -1) {\n      throw new Error('values lesser than -1 are not allowed');\n    }\n    this._subParams[this._subParamsLength++] = value > MAX_VALUE ? MAX_VALUE : value;\n    this._subParamsIdx[this.length - 1]++;\n  }\n\n  /**\n   * Whether parameter at index `idx` has sub parameters.\n   */\n  public hasSubParams(idx: number): boolean {\n    return ((this._subParamsIdx[idx] & 0xFF) - (this._subParamsIdx[idx] >> 8) > 0);\n  }\n\n  /**\n   * Return sub parameters for parameter at index `idx`.\n   * Note: The values are borrowed, thus you need to copy\n   * the values if you need to hold them in nonlocal scope.\n   */\n  public getSubParams(idx: number): Int32Array | null {\n    const start = this._subParamsIdx[idx] >> 8;\n    const end = this._subParamsIdx[idx] & 0xFF;\n    if (end - start > 0) {\n      return this._subParams.subarray(start, end);\n    }\n    return null;\n  }\n\n  /**\n   * Return all sub parameters as {idx: subparams} mapping.\n   * Note: The values are not borrowed.\n   */\n  public getSubParamsAll(): {[idx: number]: Int32Array} {\n    const result: {[idx: number]: Int32Array} = {};\n    for (let i = 0; i < this.length; ++i) {\n      const start = this._subParamsIdx[i] >> 8;\n      const end = this._subParamsIdx[i] & 0xFF;\n      if (end - start > 0) {\n        result[i] = this._subParams.slice(start, end);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Add a single digit value to current parameter.\n   * This is used by the parser to account digits on a char by char basis.\n   */\n  public addDigit(value: number): void {\n    let length;\n    if (this._rejectDigits\n      || !(length = this._digitIsSub ? this._subParamsLength : this.length)\n      || (this._digitIsSub && this._rejectSubDigits)\n    ) {\n      return;\n    }\n\n    const store = this._digitIsSub ? this._subParams : this.params;\n    const cur = store[length - 1];\n    store[length - 1] = ~cur ? Math.min(cur * 10 + value, MAX_VALUE) : value;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ITerminalAddon, IDisposable, Terminal } from 'xterm';\n\nexport interface ILoadedAddon {\n  instance: ITerminalAddon;\n  dispose: () => void;\n  isDisposed: boolean;\n}\n\nexport class AddonManager implements IDisposable {\n  protected _addons: ILoadedAddon[] = [];\n\n  constructor() {\n  }\n\n  public dispose(): void {\n    for (let i = this._addons.length - 1; i >= 0; i--) {\n      this._addons[i].instance.dispose();\n    }\n  }\n\n  public loadAddon(terminal: Terminal, instance: ITerminalAddon): void {\n    const loadedAddon: ILoadedAddon = {\n      instance,\n      dispose: instance.dispose,\n      isDisposed: false\n    };\n    this._addons.push(loadedAddon);\n    instance.dispose = () => this._wrappedAddonDispose(loadedAddon);\n    instance.activate(terminal as any);\n  }\n\n  private _wrappedAddonDispose(loadedAddon: ILoadedAddon): void {\n    if (loadedAddon.isDisposed) {\n      // Do nothing if already disposed\n      return;\n    }\n    let index = -1;\n    for (let i = 0; i < this._addons.length; i++) {\n      if (this._addons[i] === loadedAddon) {\n        index = i;\n        break;\n      }\n    }\n    if (index === -1) {\n      throw new Error('Could not dispose an addon that has not been loaded');\n    }\n    loadedAddon.isDisposed = true;\n    loadedAddon.dispose.apply(loadedAddon.instance);\n    this._addons.splice(index, 1);\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBuffer as IBufferApi, IBufferLine as IBufferLineApi, IBufferCell as IBufferCellApi } from 'xterm';\nimport { IBuffer } from 'common/buffer/Types';\nimport { BufferLineApiView } from 'common/public/BufferLineApiView';\nimport { CellData } from 'common/buffer/CellData';\n\nexport class BufferApiView implements IBufferApi {\n  constructor(\n    private _buffer: IBuffer,\n    public readonly type: 'normal' | 'alternate'\n  ) { }\n\n  public init(buffer: IBuffer): BufferApiView {\n    this._buffer = buffer;\n    return this;\n  }\n\n  public get cursorY(): number { return this._buffer.y; }\n  public get cursorX(): number { return this._buffer.x; }\n  public get viewportY(): number { return this._buffer.ydisp; }\n  public get baseY(): number { return this._buffer.ybase; }\n  public get length(): number { return this._buffer.lines.length; }\n  public getLine(y: number): IBufferLineApi | undefined {\n    const line = this._buffer.lines.get(y);\n    if (!line) {\n      return undefined;\n    }\n    return new BufferLineApiView(line);\n  }\n  public getNullCell(): IBufferCellApi { return new CellData(); }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CellData } from 'common/buffer/CellData';\nimport { IBufferLine, ICellData } from 'common/Types';\nimport { IBufferCell as IBufferCellApi, IBufferLine as IBufferLineApi } from 'xterm';\n\nexport class BufferLineApiView implements IBufferLineApi {\n  constructor(private _line: IBufferLine) { }\n\n  public get isWrapped(): boolean { return this._line.isWrapped; }\n  public get length(): number { return this._line.length; }\n  public getCell(x: number, cell?: IBufferCellApi): IBufferCellApi | undefined {\n    if (x < 0 || x >= this._line.length) {\n      return undefined;\n    }\n\n    if (cell) {\n      this._line.loadCell(x, cell as ICellData);\n      return cell;\n    }\n    return this._line.loadCell(x, new CellData());\n  }\n  public translateToString(trimRight?: boolean, startColumn?: number, endColumn?: number): string {\n    return this._line.translateToString(trimRight, startColumn, endColumn);\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBuffer as IBufferApi, IBufferNamespace as IBufferNamespaceApi } from 'xterm';\nimport { BufferApiView } from 'common/public/BufferApiView';\nimport { IEvent, EventEmitter } from 'common/EventEmitter';\nimport { ICoreTerminal } from 'common/Types';\n\nexport class BufferNamespaceApi implements IBufferNamespaceApi {\n  private _normal: BufferApiView;\n  private _alternate: BufferApiView;\n  private _onBufferChange = new EventEmitter<IBufferApi>();\n  public get onBufferChange(): IEvent<IBufferApi> { return this._onBufferChange.event; }\n\n  constructor(private _core: ICoreTerminal) {\n    this._normal = new BufferApiView(this._core.buffers.normal, 'normal');\n    this._alternate = new BufferApiView(this._core.buffers.alt, 'alternate');\n    this._core.buffers.onBufferActivate(() => this._onBufferChange.fire(this.active));\n  }\n  public get active(): IBufferApi {\n    if (this._core.buffers.active === this._core.buffers.normal) { return this.normal; }\n    if (this._core.buffers.active === this._core.buffers.alt) { return this.alternate; }\n    throw new Error('Active buffer is neither normal nor alternate');\n  }\n  public get normal(): IBufferApi {\n    return this._normal.init(this._core.buffers.normal);\n  }\n  public get alternate(): IBufferApi {\n    return this._alternate.init(this._core.buffers.alt);\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IParams } from 'common/parser/Types';\nimport { IDisposable, IFunctionIdentifier, IParser } from 'xterm';\nimport { ICoreTerminal } from 'common/Types';\n\nexport class ParserApi implements IParser {\n  constructor(private _core: ICoreTerminal) { }\n\n  public registerCsiHandler(id: IFunctionIdentifier, callback: (params: (number | number[])[]) => boolean | Promise<boolean>): IDisposable {\n    return this._core.registerCsiHandler(id, (params: IParams) => callback(params.toArray()));\n  }\n  public addCsiHandler(id: IFunctionIdentifier, callback: (params: (number | number[])[]) => boolean | Promise<boolean>): IDisposable {\n    return this.registerCsiHandler(id, callback);\n  }\n  public registerDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: (number | number[])[]) => boolean | Promise<boolean>): IDisposable {\n    return this._core.registerDcsHandler(id, (data: string, params: IParams) => callback(data, params.toArray()));\n  }\n  public addDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: (number | number[])[]) => boolean | Promise<boolean>): IDisposable {\n    return this.registerDcsHandler(id, callback);\n  }\n  public registerEscHandler(id: IFunctionIdentifier, handler: () => boolean | Promise<boolean>): IDisposable {\n    return this._core.registerEscHandler(id, handler);\n  }\n  public addEscHandler(id: IFunctionIdentifier, handler: () => boolean | Promise<boolean>): IDisposable {\n    return this.registerEscHandler(id, handler);\n  }\n  public registerOscHandler(ident: number, callback: (data: string) => boolean | Promise<boolean>): IDisposable {\n    return this._core.registerOscHandler(ident, callback);\n  }\n  public addOscHandler(ident: number, callback: (data: string) => boolean | Promise<boolean>): IDisposable {\n    return this.registerOscHandler(ident, callback);\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICoreTerminal } from 'common/Types';\nimport { IUnicodeHandling, IUnicodeVersionProvider } from 'xterm';\n\nexport class UnicodeApi implements IUnicodeHandling {\n  constructor(private _core: ICoreTerminal) { }\n\n  public register(provider: IUnicodeVersionProvider): void {\n    this._core.unicodeService.register(provider);\n  }\n\n  public get versions(): string[] {\n    return this._core.unicodeService.versions;\n  }\n\n  public get activeVersion(): string {\n    return this._core.unicodeService.activeVersion;\n  }\n\n  public set activeVersion(version: string) {\n    this._core.unicodeService.activeVersion = version;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferService, IOptionsService } from 'common/services/Services';\nimport { BufferSet } from 'common/buffer/BufferSet';\nimport { IBufferSet, IBuffer } from 'common/buffer/Types';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { IAttributeData, IBufferLine, ScrollSource } from 'common/Types';\n\nexport const MINIMUM_COLS = 2; // Less than 2 can mess with wide chars\nexport const MINIMUM_ROWS = 1;\n\nexport class BufferService extends Disposable implements IBufferService {\n  public serviceBrand: any;\n\n  public cols: number;\n  public rows: number;\n  public buffers: IBufferSet;\n  /** Whether the user is scrolling (locks the scroll position) */\n  public isUserScrolling: boolean = false;\n\n  private _onResize = new EventEmitter<{ cols: number, rows: number }>();\n  public get onResize(): IEvent<{ cols: number, rows: number }> { return this._onResize.event; }\n  private _onScroll = new EventEmitter<number>();\n  public get onScroll(): IEvent<number> { return this._onScroll.event; }\n\n  public get buffer(): IBuffer { return this.buffers.active; }\n\n  /** An IBufferline to clone/copy from for new blank lines */\n  private _cachedBlankLine: IBufferLine | undefined;\n\n  constructor(\n    @IOptionsService private _optionsService: IOptionsService\n  ) {\n    super();\n    this.cols = Math.max(_optionsService.options.cols || 0, MINIMUM_COLS);\n    this.rows = Math.max(_optionsService.options.rows || 0, MINIMUM_ROWS);\n    this.buffers = new BufferSet(_optionsService, this);\n  }\n\n  public dispose(): void {\n    super.dispose();\n    this.buffers.dispose();\n  }\n\n  public resize(cols: number, rows: number): void {\n    this.cols = cols;\n    this.rows = rows;\n    this.buffers.resize(cols, rows);\n    this.buffers.setupTabStops(this.cols);\n    this._onResize.fire({ cols, rows });\n  }\n\n  public reset(): void {\n    this.buffers.reset();\n    this.isUserScrolling = false;\n  }\n\n  /**\n   * Scroll the terminal down 1 row, creating a blank line.\n   * @param isWrapped Whether the new line is wrapped from the previous line.\n   */\n  public scroll(eraseAttr: IAttributeData, isWrapped: boolean = false): void {\n    const buffer = this.buffer;\n\n    let newLine: IBufferLine | undefined;\n    newLine = this._cachedBlankLine;\n    if (!newLine || newLine.length !== this.cols || newLine.getFg(0) !== eraseAttr.fg || newLine.getBg(0) !== eraseAttr.bg) {\n      newLine = buffer.getBlankLine(eraseAttr, isWrapped);\n      this._cachedBlankLine = newLine;\n    }\n    newLine.isWrapped = isWrapped;\n\n    const topRow = buffer.ybase + buffer.scrollTop;\n    const bottomRow = buffer.ybase + buffer.scrollBottom;\n\n    if (buffer.scrollTop === 0) {\n      // Determine whether the buffer is going to be trimmed after insertion.\n      const willBufferBeTrimmed = buffer.lines.isFull;\n\n      // Insert the line using the fastest method\n      if (bottomRow === buffer.lines.length - 1) {\n        if (willBufferBeTrimmed) {\n          buffer.lines.recycle().copyFrom(newLine);\n        } else {\n          buffer.lines.push(newLine.clone());\n        }\n      } else {\n        buffer.lines.splice(bottomRow + 1, 0, newLine.clone());\n      }\n\n      // Only adjust ybase and ydisp when the buffer is not trimmed\n      if (!willBufferBeTrimmed) {\n        buffer.ybase++;\n        // Only scroll the ydisp with ybase if the user has not scrolled up\n        if (!this.isUserScrolling) {\n          buffer.ydisp++;\n        }\n      } else {\n        // When the buffer is full and the user has scrolled up, keep the text\n        // stable unless ydisp is right at the top\n        if (this.isUserScrolling) {\n          buffer.ydisp = Math.max(buffer.ydisp - 1, 0);\n        }\n      }\n    } else {\n      // scrollTop is non-zero which means no line will be going to the\n      // scrollback, instead we can just shift them in-place.\n      const scrollRegionHeight = bottomRow - topRow + 1 /* as it's zero-based */;\n      buffer.lines.shiftElements(topRow + 1, scrollRegionHeight - 1, -1);\n      buffer.lines.set(bottomRow, newLine.clone());\n    }\n\n    // Move the viewport to the bottom of the buffer unless the user is\n    // scrolling.\n    if (!this.isUserScrolling) {\n      buffer.ydisp = buffer.ybase;\n    }\n\n    this._onScroll.fire(buffer.ydisp);\n  }\n\n  /**\n   * Scroll the display of the terminal\n   * @param disp The number of lines to scroll down (negative scroll up).\n   * @param suppressScrollEvent Don't emit the scroll event as scrollLines. This is used\n   * to avoid unwanted events being handled by the viewport when the event was triggered from the\n   * viewport originally.\n   */\n  public scrollLines(disp: number, suppressScrollEvent?: boolean, source?: ScrollSource): void {\n    const buffer = this.buffer;\n    if (disp < 0) {\n      if (buffer.ydisp === 0) {\n        return;\n      }\n      this.isUserScrolling = true;\n    } else if (disp + buffer.ydisp >= buffer.ybase) {\n      this.isUserScrolling = false;\n    }\n\n    const oldYdisp = buffer.ydisp;\n    buffer.ydisp = Math.max(Math.min(buffer.ydisp + disp, buffer.ybase), 0);\n\n    // No change occurred, don't trigger scroll/refresh\n    if (oldYdisp === buffer.ydisp) {\n      return;\n    }\n\n    if (!suppressScrollEvent) {\n      this._onScroll.fire(buffer.ydisp);\n    }\n  }\n\n  /**\n   * Scroll the display of the terminal by a number of pages.\n   * @param pageCount The number of pages to scroll (negative scrolls up).\n   */\n  public scrollPages(pageCount: number): void {\n    this.scrollLines(pageCount * (this.rows - 1));\n  }\n\n  /**\n   * Scrolls the display of the terminal to the top.\n   */\n  public scrollToTop(): void {\n    this.scrollLines(-this.buffer.ydisp);\n  }\n\n  /**\n   * Scrolls the display of the terminal to the bottom.\n   */\n  public scrollToBottom(): void {\n    this.scrollLines(this.buffer.ybase - this.buffer.ydisp);\n  }\n\n  public scrollToLine(line: number): void {\n    const scrollAmount = line - this.buffer.ydisp;\n    if (scrollAmount !== 0) {\n      this.scrollLines(scrollAmount);\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharsetService } from 'common/services/Services';\nimport { ICharset } from 'common/Types';\n\nexport class CharsetService implements ICharsetService {\n  public serviceBrand: any;\n\n  public charset: ICharset | undefined;\n  public glevel: number = 0;\n\n  private _charsets: (ICharset | undefined)[] = [];\n\n  public reset(): void {\n    this.charset = undefined;\n    this._charsets = [];\n    this.glevel = 0;\n  }\n\n  public setgLevel(g: number): void {\n    this.glevel = g;\n    this.charset = this._charsets[g];\n  }\n\n  public setgCharset(g: number, charset: ICharset | undefined): void {\n    this._charsets[g] = charset;\n    if (this.glevel === g) {\n      this.charset = charset;\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IBufferService, ICoreService, ICoreMouseService } from 'common/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { ICoreMouseProtocol, ICoreMouseEvent, CoreMouseEncoding, CoreMouseEventType, CoreMouseButton, CoreMouseAction } from 'common/Types';\n\n/**\n * Supported default protocols.\n */\nconst DEFAULT_PROTOCOLS: {[key: string]: ICoreMouseProtocol} = {\n  /**\n   * NONE\n   * Events: none\n   * Modifiers: none\n   */\n  NONE: {\n    events: CoreMouseEventType.NONE,\n    restrict: () => false\n  },\n  /**\n   * X10\n   * Events: mousedown\n   * Modifiers: none\n   */\n  X10: {\n    events: CoreMouseEventType.DOWN,\n    restrict: (e: ICoreMouseEvent) => {\n      // no wheel, no move, no up\n      if (e.button === CoreMouseButton.WHEEL || e.action !== CoreMouseAction.DOWN) {\n        return false;\n      }\n      // no modifiers\n      e.ctrl = false;\n      e.alt = false;\n      e.shift = false;\n      return true;\n    }\n  },\n  /**\n   * VT200\n   * Events: mousedown / mouseup / wheel\n   * Modifiers: all\n   */\n  VT200: {\n    events: CoreMouseEventType.DOWN | CoreMouseEventType.UP | CoreMouseEventType.WHEEL,\n    restrict: (e: ICoreMouseEvent) => {\n      // no move\n      if (e.action === CoreMouseAction.MOVE) {\n        return false;\n      }\n      return true;\n    }\n  },\n  /**\n   * DRAG\n   * Events: mousedown / mouseup / wheel / mousedrag\n   * Modifiers: all\n   */\n  DRAG: {\n    events: CoreMouseEventType.DOWN | CoreMouseEventType.UP | CoreMouseEventType.WHEEL | CoreMouseEventType.DRAG,\n    restrict: (e: ICoreMouseEvent) => {\n      // no move without button\n      if (e.action === CoreMouseAction.MOVE && e.button === CoreMouseButton.NONE) {\n        return false;\n      }\n      return true;\n    }\n  },\n  /**\n   * ANY\n   * Events: all mouse related events\n   * Modifiers: all\n   */\n  ANY: {\n    events:\n      CoreMouseEventType.DOWN | CoreMouseEventType.UP | CoreMouseEventType.WHEEL\n      | CoreMouseEventType.DRAG | CoreMouseEventType.MOVE,\n    restrict: (e: ICoreMouseEvent) => true\n  }\n};\n\nconst enum Modifiers {\n  SHIFT = 4,\n  ALT = 8,\n  CTRL = 16\n}\n\n// helper for default encoders to generate the event code.\nfunction eventCode(e: ICoreMouseEvent, isSGR: boolean): number {\n  let code = (e.ctrl ? Modifiers.CTRL : 0) | (e.shift ? Modifiers.SHIFT : 0) | (e.alt ? Modifiers.ALT : 0);\n  if (e.button === CoreMouseButton.WHEEL) {\n    code |= 64;\n    code |= e.action;\n  } else {\n    code |= e.button & 3;\n    if (e.button & 4) {\n      code |= 64;\n    }\n    if (e.button & 8) {\n      code |= 128;\n    }\n    if (e.action === CoreMouseAction.MOVE) {\n      code |= CoreMouseAction.MOVE;\n    } else if (e.action === CoreMouseAction.UP && !isSGR) {\n      // special case - only SGR can report button on release\n      // all others have to go with NONE\n      code |= CoreMouseButton.NONE;\n    }\n  }\n  return code;\n}\n\nconst S = String.fromCharCode;\n\n/**\n * Supported default encodings.\n */\nconst DEFAULT_ENCODINGS: {[key: string]: CoreMouseEncoding} = {\n  /**\n   * DEFAULT - CSI M Pb Px Py\n   * Single byte encoding for coords and event code.\n   * Can encode values up to 223 (1-based).\n   */\n  DEFAULT: (e: ICoreMouseEvent) => {\n    const params = [eventCode(e, false) + 32, e.col + 32, e.row + 32];\n    // supress mouse report if we exceed addressible range\n    // Note this is handled differently by emulators\n    // - xterm:         sends 0;0 coords instead\n    // - vte, konsole:  no report\n    if (params[0] > 255 || params[1] > 255 || params[2] > 255) {\n      return '';\n    }\n    return `\\x1b[M${S(params[0])}${S(params[1])}${S(params[2])}`;\n  },\n  /**\n   * SGR - CSI < Pb ; Px ; Py M|m\n   * No encoding limitation.\n   * Can report button on release and works with a well formed sequence.\n   */\n  SGR: (e: ICoreMouseEvent) => {\n    const final = (e.action === CoreMouseAction.UP && e.button !== CoreMouseButton.WHEEL) ? 'm' : 'M';\n    return `\\x1b[<${eventCode(e, true)};${e.col};${e.row}${final}`;\n  }\n};\n\n/**\n * CoreMouseService\n *\n * Provides mouse tracking reports with different protocols and encodings.\n *  - protocols: NONE (default), X10, VT200, DRAG, ANY\n *  - encodings: DEFAULT, SGR (UTF8, URXVT removed in #2507)\n *\n * Custom protocols/encodings can be added by `addProtocol` / `addEncoding`.\n * To activate a protocol/encoding, set `activeProtocol` / `activeEncoding`.\n * Switching a protocol will send a notification event `onProtocolChange`\n * with a list of needed events to track.\n *\n * The service handles the mouse tracking state and decides whether to send\n * a tracking report to the backend based on protocol and encoding limitations.\n * To send a mouse event call `triggerMouseEvent`.\n */\nexport class CoreMouseService implements ICoreMouseService {\n  private _protocols: {[name: string]: ICoreMouseProtocol} = {};\n  private _encodings: {[name: string]: CoreMouseEncoding} = {};\n  private _activeProtocol: string = '';\n  private _activeEncoding: string = '';\n  private _onProtocolChange = new EventEmitter<CoreMouseEventType>();\n  private _lastEvent: ICoreMouseEvent | null = null;\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ICoreService private readonly _coreService: ICoreService\n  ) {\n    // register default protocols and encodings\n    for (const name of Object.keys(DEFAULT_PROTOCOLS)) this.addProtocol(name, DEFAULT_PROTOCOLS[name]);\n    for (const name of Object.keys(DEFAULT_ENCODINGS)) this.addEncoding(name, DEFAULT_ENCODINGS[name]);\n    // call reset to set defaults\n    this.reset();\n  }\n\n  public addProtocol(name: string, protocol: ICoreMouseProtocol): void {\n    this._protocols[name] = protocol;\n  }\n\n  public addEncoding(name: string, encoding: CoreMouseEncoding): void {\n    this._encodings[name] = encoding;\n  }\n\n  public get activeProtocol(): string {\n    return this._activeProtocol;\n  }\n\n  public get areMouseEventsActive(): boolean {\n    return this._protocols[this._activeProtocol].events !== 0;\n  }\n\n  public set activeProtocol(name: string) {\n    if (!this._protocols[name]) {\n      throw new Error(`unknown protocol \"${name}\"`);\n    }\n    this._activeProtocol = name;\n    this._onProtocolChange.fire(this._protocols[name].events);\n  }\n\n  public get activeEncoding(): string {\n    return this._activeEncoding;\n  }\n\n  public set activeEncoding(name: string) {\n    if (!this._encodings[name]) {\n      throw new Error(`unknown encoding \"${name}\"`);\n    }\n    this._activeEncoding = name;\n  }\n\n  public reset(): void {\n    this.activeProtocol = 'NONE';\n    this.activeEncoding = 'DEFAULT';\n    this._lastEvent = null;\n  }\n\n  /**\n   * Event to announce changes in mouse tracking.\n   */\n  public get onProtocolChange(): IEvent<CoreMouseEventType> {\n    return this._onProtocolChange.event;\n  }\n\n  /**\n   * Triggers a mouse event to be sent.\n   *\n   * Returns true if the event passed all protocol restrictions and a report\n   * was sent, otherwise false. The return value may be used to decide whether\n   * the default event action in the bowser component should be omitted.\n   *\n   * Note: The method will change values of the given event object\n   * to fullfill protocol and encoding restrictions.\n   */\n  public triggerMouseEvent(e: ICoreMouseEvent): boolean {\n    // range check for col/row\n    if (e.col < 0 || e.col >= this._bufferService.cols\n        || e.row < 0 || e.row >= this._bufferService.rows) {\n      return false;\n    }\n\n    // filter nonsense combinations of button + action\n    if (e.button === CoreMouseButton.WHEEL && e.action === CoreMouseAction.MOVE) {\n      return false;\n    }\n    if (e.button === CoreMouseButton.NONE && e.action !== CoreMouseAction.MOVE) {\n      return false;\n    }\n    if (e.button !== CoreMouseButton.WHEEL && (e.action === CoreMouseAction.LEFT || e.action === CoreMouseAction.RIGHT)) {\n      return false;\n    }\n\n    // report 1-based coords\n    e.col++;\n    e.row++;\n\n    // debounce move at grid level\n    if (e.action === CoreMouseAction.MOVE && this._lastEvent && this._compareEvents(this._lastEvent, e)) {\n      return false;\n    }\n\n    // apply protocol restrictions\n    if (!this._protocols[this._activeProtocol].restrict(e)) {\n      return false;\n    }\n\n    // encode report and send\n    const report = this._encodings[this._activeEncoding](e);\n    if (report) {\n      // always send DEFAULT as binary data\n      if (this._activeEncoding === 'DEFAULT') {\n        this._coreService.triggerBinaryEvent(report);\n      } else {\n        this._coreService.triggerDataEvent(report, true);\n      }\n    }\n\n    this._lastEvent = e;\n\n    return true;\n  }\n\n  public explainEvents(events: CoreMouseEventType): {[event: string]: boolean} {\n    return {\n      down: !!(events & CoreMouseEventType.DOWN),\n      up: !!(events & CoreMouseEventType.UP),\n      drag: !!(events & CoreMouseEventType.DRAG),\n      move: !!(events & CoreMouseEventType.MOVE),\n      wheel: !!(events & CoreMouseEventType.WHEEL)\n    };\n  }\n\n  private _compareEvents(e1: ICoreMouseEvent, e2: ICoreMouseEvent): boolean {\n    if (e1.col !== e2.col) return false;\n    if (e1.row !== e2.row) return false;\n    if (e1.button !== e2.button) return false;\n    if (e1.action !== e2.action) return false;\n    if (e1.ctrl !== e2.ctrl) return false;\n    if (e1.alt !== e2.alt) return false;\n    if (e1.shift !== e2.shift) return false;\n    return true;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICoreService, ILogService, IOptionsService, IBufferService } from 'common/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { IDecPrivateModes, IModes } from 'common/Types';\nimport { clone } from 'common/Clone';\nimport { Disposable } from 'common/Lifecycle';\n\nconst DEFAULT_MODES: IModes = Object.freeze({\n  insertMode: false\n});\n\nconst DEFAULT_DEC_PRIVATE_MODES: IDecPrivateModes = Object.freeze({\n  applicationCursorKeys: false,\n  applicationKeypad: false,\n  bracketedPasteMode: false,\n  origin: false,\n  reverseWraparound: false,\n  sendFocus: false,\n  wraparound: true // defaults: xterm - true, vt100 - false\n});\n\nexport class CoreService extends Disposable implements ICoreService {\n  public serviceBrand: any;\n\n  public isCursorInitialized: boolean = false;\n  public isCursorHidden: boolean = false;\n  public modes: IModes;\n  public decPrivateModes: IDecPrivateModes;\n\n  // Circular dependency, this must be unset or memory will leak after Terminal.dispose\n  private _scrollToBottom: (() => void) | undefined;\n\n  private _onData = this.register(new EventEmitter<string>());\n  public get onData(): IEvent<string> { return this._onData.event; }\n  private _onUserInput = this.register(new EventEmitter<void>());\n  public get onUserInput(): IEvent<void> { return this._onUserInput.event; }\n  private _onBinary = this.register(new EventEmitter<string>());\n  public get onBinary(): IEvent<string> { return this._onBinary.event; }\n\n  constructor(\n    // TODO: Move this into a service\n    scrollToBottom: () => void,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ILogService private readonly _logService: ILogService,\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    super();\n    this._scrollToBottom = scrollToBottom;\n    this.register({ dispose: () => this._scrollToBottom = undefined });\n    this.modes = clone(DEFAULT_MODES);\n    this.decPrivateModes = clone(DEFAULT_DEC_PRIVATE_MODES);\n  }\n\n  public reset(): void {\n    this.modes = clone(DEFAULT_MODES);\n    this.decPrivateModes = clone(DEFAULT_DEC_PRIVATE_MODES);\n  }\n\n  public triggerDataEvent(data: string, wasUserInput: boolean = false): void {\n    // Prevents all events to pty process if stdin is disabled\n    if (this._optionsService.options.disableStdin) {\n      return;\n    }\n\n    // Input is being sent to the terminal, the terminal should focus the prompt.\n    const buffer = this._bufferService.buffer;\n    if (buffer.ybase !== buffer.ydisp) {\n      this._scrollToBottom!();\n    }\n\n    // Fire onUserInput so listeners can react as well (eg. clear selection)\n    if (wasUserInput) {\n      this._onUserInput.fire();\n    }\n\n    // Fire onData API\n    this._logService.debug(`sending data \"${data}\"`, () => data.split('').map(e => e.charCodeAt(0)));\n    this._onData.fire(data);\n  }\n\n  public triggerBinaryEvent(data: string): void {\n    if (this._optionsService.options.disableStdin) {\n      return;\n    }\n    this._logService.debug(`sending binary \"${data}\"`, () => data.split('').map(e => e.charCodeAt(0)));\n    this._onBinary.fire(data);\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferService, IDirtyRowService } from 'common/services/Services';\n\nexport class DirtyRowService implements IDirtyRowService {\n  public serviceBrand: any;\n\n  private _start!: number;\n  private _end!: number;\n\n  public get start(): number { return this._start; }\n  public get end(): number { return this._end; }\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService\n  ) {\n    this.clearRange();\n  }\n\n  public clearRange(): void {\n    this._start = this._bufferService.buffer.y;\n    this._end = this._bufferService.buffer.y;\n  }\n\n  public markDirty(y: number): void {\n    if (y < this._start) {\n      this._start = y;\n    } else if (y > this._end) {\n      this._end = y;\n    }\n  }\n\n  public markRangeDirty(y1: number, y2: number): void {\n    if (y1 > y2) {\n      const temp = y1;\n      y1 = y2;\n      y2 = temp;\n    }\n    if (y1 < this._start) {\n      this._start = y1;\n    }\n    if (y2 > this._end) {\n      this._end = y2;\n    }\n  }\n\n  public markAllDirty(): void {\n    this.markRangeDirty(0, this._bufferService.rows - 1);\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n *\n * This was heavily inspired from microsoft/vscode's dependency injection system (MIT).\n */\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IInstantiationService, IServiceIdentifier } from 'common/services/Services';\nimport { getServiceDependencies } from 'common/services/ServiceRegistry';\n\nexport class ServiceCollection {\n\n  private _entries = new Map<IServiceIdentifier<any>, any>();\n\n  constructor(...entries: [IServiceIdentifier<any>, any][]) {\n    for (const [id, service] of entries) {\n      this.set(id, service);\n    }\n  }\n\n  public set<T>(id: IServiceIdentifier<T>, instance: T): T {\n    const result = this._entries.get(id);\n    this._entries.set(id, instance);\n    return result;\n  }\n\n  public forEach(callback: (id: IServiceIdentifier<any>, instance: any) => any): void {\n    this._entries.forEach((value, key) => callback(key, value));\n  }\n\n  public has(id: IServiceIdentifier<any>): boolean {\n    return this._entries.has(id);\n  }\n\n  public get<T>(id: IServiceIdentifier<T>): T | undefined {\n    return this._entries.get(id);\n  }\n}\n\nexport class InstantiationService implements IInstantiationService {\n  public serviceBrand: undefined;\n\n  private readonly _services: ServiceCollection = new ServiceCollection();\n\n  constructor() {\n    this._services.set(IInstantiationService, this);\n  }\n\n  public setService<T>(id: IServiceIdentifier<T>, instance: T): void {\n    this._services.set(id, instance);\n  }\n\n  public getService<T>(id: IServiceIdentifier<T>): T | undefined {\n    return this._services.get(id);\n  }\n\n  public createInstance<T>(ctor: any, ...args: any[]): T {\n    const serviceDependencies = getServiceDependencies(ctor).sort((a, b) => a.index - b.index);\n\n    const serviceArgs: any[] = [];\n    for (const dependency of serviceDependencies) {\n      const service = this._services.get(dependency.id);\n      if (!service) {\n        throw new Error(`[createInstance] ${ctor.name} depends on UNKNOWN service ${dependency.id}.`);\n      }\n      serviceArgs.push(service);\n    }\n\n    const firstServiceArgPos = serviceDependencies.length > 0 ? serviceDependencies[0].index : args.length;\n\n    // check for argument mismatches, adjust static args if needed\n    if (args.length !== firstServiceArgPos) {\n      throw new Error(`[createInstance] First service dependency of ${ctor.name} at position ${firstServiceArgPos + 1} conflicts with ${args.length} static arguments`);\n    }\n\n    // now create the instance\n    return new ctor(...[...args, ...serviceArgs]);\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ILogService, IOptionsService, LogLevelEnum } from 'common/services/Services';\n\ntype LogType = (message?: any, ...optionalParams: any[]) => void;\n\ninterface IConsole {\n  log: LogType;\n  error: LogType;\n  info: LogType;\n  trace: LogType;\n  warn: LogType;\n}\n\n// console is available on both node.js and browser contexts but the common\n// module doesn't depend on them so we need to explicitly declare it.\ndeclare const console: IConsole;\n\nconst optionsKeyToLogLevel: { [key: string]: LogLevelEnum } = {\n  debug: LogLevelEnum.DEBUG,\n  info: LogLevelEnum.INFO,\n  warn: LogLevelEnum.WARN,\n  error: LogLevelEnum.ERROR,\n  off: LogLevelEnum.OFF\n};\n\nconst LOG_PREFIX = 'xterm.js: ';\n\nexport class LogService implements ILogService {\n  public serviceBrand: any;\n\n  public logLevel: LogLevelEnum = LogLevelEnum.OFF;\n\n  constructor(\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    this._updateLogLevel();\n    this._optionsService.onOptionChange(key => {\n      if (key === 'logLevel') {\n        this._updateLogLevel();\n      }\n    });\n  }\n\n  private _updateLogLevel(): void {\n    this.logLevel = optionsKeyToLogLevel[this._optionsService.options.logLevel];\n  }\n\n  private _evalLazyOptionalParams(optionalParams: any[]): void {\n    for (let i = 0; i < optionalParams.length; i++) {\n      if (typeof optionalParams[i] === 'function') {\n        optionalParams[i] = optionalParams[i]();\n      }\n    }\n  }\n\n  private _log(type: LogType, message: string, optionalParams: any[]): void {\n    this._evalLazyOptionalParams(optionalParams);\n    type.call(console, LOG_PREFIX + message, ...optionalParams);\n  }\n\n  public debug(message: string, ...optionalParams: any[]): void {\n    if (this.logLevel <= LogLevelEnum.DEBUG) {\n      this._log(console.log, message, optionalParams);\n    }\n  }\n\n  public info(message: string, ...optionalParams: any[]): void {\n    if (this.logLevel <= LogLevelEnum.INFO) {\n      this._log(console.info, message, optionalParams);\n    }\n  }\n\n  public warn(message: string, ...optionalParams: any[]): void {\n    if (this.logLevel <= LogLevelEnum.WARN) {\n      this._log(console.warn, message, optionalParams);\n    }\n  }\n\n  public error(message: string, ...optionalParams: any[]): void {\n    if (this.logLevel <= LogLevelEnum.ERROR) {\n      this._log(console.error, message, optionalParams);\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IOptionsService, ITerminalOptions, FontWeight } from 'common/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { isMac } from 'common/Platform';\n\n// Source: https://freesound.org/people/altemark/sounds/45759/\n// This sound is released under the Creative Commons Attribution 3.0 Unported\n// (CC BY 3.0) license. It was created by 'altemark'. No modifications have been\n// made, apart from the conversion to base64.\nexport const DEFAULT_BELL_SOUND = 'data:audio/mp3;base64,SUQzBAAAAAAAI1RTU0UAAAAPAAADTGF2ZjU4LjMyLjEwNAAAAAAAAAAAAAAA//tQxAADB8AhSmxhIIEVCSiJrDCQBTcu3UrAIwUdkRgQbFAZC1CQEwTJ9mjRvBA4UOLD8nKVOWfh+UlK3z/177OXrfOdKl7pyn3Xf//WreyTRUoAWgBgkOAGbZHBgG1OF6zM82DWbZaUmMBptgQhGjsyYqc9ae9XFz280948NMBWInljyzsNRFLPWdnZGWrddDsjK1unuSrVN9jJsK8KuQtQCtMBjCEtImISdNKJOopIpBFpNSMbIHCSRpRR5iakjTiyzLhchUUBwCgyKiweBv/7UsQbg8isVNoMPMjAAAA0gAAABEVFGmgqK////9bP/6XCykxBTUUzLjEwMKqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq';\n\nexport const DEFAULT_OPTIONS: Readonly<ITerminalOptions> = {\n  cols: 80,\n  rows: 24,\n  cursorBlink: false,\n  cursorStyle: 'block',\n  cursorWidth: 1,\n  customGlyphs: true,\n  bellSound: DEFAULT_BELL_SOUND,\n  bellStyle: 'none',\n  drawBoldTextInBrightColors: true,\n  fastScrollModifier: 'alt',\n  fastScrollSensitivity: 5,\n  fontFamily: 'courier-new, courier, monospace',\n  fontSize: 15,\n  fontWeight: 'normal',\n  fontWeightBold: 'bold',\n  lineHeight: 1.0,\n  linkTooltipHoverDuration: 500,\n  letterSpacing: 0,\n  logLevel: 'info',\n  scrollback: 1000,\n  scrollSensitivity: 1,\n  screenReaderMode: false,\n  macOptionIsMeta: false,\n  macOptionClickForcesSelection: false,\n  minimumContrastRatio: 1,\n  disableStdin: false,\n  allowProposedApi: true,\n  allowTransparency: false,\n  tabStopWidth: 8,\n  theme: {},\n  rightClickSelectsWord: isMac,\n  rendererType: 'canvas',\n  windowOptions: {},\n  windowsMode: false,\n  wordSeparator: ' ()[]{}\\',\"`',\n  altClickMovesCursor: true,\n  convertEol: false,\n  termName: 'xterm',\n  cancelEvents: false\n};\n\nconst FONT_WEIGHT_OPTIONS: Extract<FontWeight, string>[] = ['normal', 'bold', '100', '200', '300', '400', '500', '600', '700', '800', '900'];\n\n/**\n * The set of options that only have an effect when set in the Terminal constructor.\n */\nconst CONSTRUCTOR_ONLY_OPTIONS = ['cols', 'rows'];\n\nexport class OptionsService implements IOptionsService {\n  public serviceBrand: any;\n\n  private _options: ITerminalOptions;\n  public options: ITerminalOptions;\n  public publicOptions: ITerminalOptions;\n\n  private _onOptionChange = new EventEmitter<string>();\n  public get onOptionChange(): IEvent<string> { return this._onOptionChange.event; }\n\n  constructor(options: Partial<ITerminalOptions>) {\n    // set the default value of each option\n    this._options = { ...DEFAULT_OPTIONS };\n    for (const key in options) {\n      if (key in this._options) {\n        try {\n          const newValue = options[key];\n          this._options[key] = this._sanitizeAndValidateOption(key, newValue);\n        } catch (e) {\n          console.error(e);\n        }\n      }\n    }\n\n    // set up getters and setters for each option\n    this.options = this._setupOptions(this._options, false);\n    this.publicOptions = this._setupOptions(this._options, true);\n  }\n\n  private _setupOptions(options: ITerminalOptions, isPublic: boolean): ITerminalOptions {\n    const copiedOptions = { ... options };\n    for (const propName in copiedOptions) {\n      Object.defineProperty(copiedOptions, propName, {\n        get: () => {\n          if (!(propName in DEFAULT_OPTIONS)) {\n            throw new Error(`No option with key \"${propName}\"`);\n          }\n          return this._options[propName];\n        },\n        set: (value: any) => {\n          if (!(propName in DEFAULT_OPTIONS)) {\n            throw new Error(`No option with key \"${propName}\"`);\n          }\n\n          // Throw an error if any constructor only option is modified\n          // from terminal.options\n          // Modifications from anywhere else are allowed\n          if (isPublic && CONSTRUCTOR_ONLY_OPTIONS.includes(propName)) {\n            throw new Error(`Option \"${propName}\" can only be set in the constructor`);\n          }\n\n          value = this._sanitizeAndValidateOption(propName, value);\n          // Don't fire an option change event if they didn't change\n          if (this._options[propName] !== value) {\n            this._options[propName] = value;\n            this._onOptionChange.fire(propName);\n          }\n        }\n      });\n    }\n    return copiedOptions;\n  }\n\n  public setOption(key: string, value: any): void {\n    this.publicOptions[key] = value;\n  }\n\n  private _sanitizeAndValidateOption(key: string, value: any): any {\n    switch (key) {\n      case 'bellStyle':\n      case 'cursorStyle':\n      case 'rendererType':\n      case 'wordSeparator':\n        if (!value) {\n          value = DEFAULT_OPTIONS[key];\n        }\n        break;\n      case 'fontWeight':\n      case 'fontWeightBold':\n        if (typeof value === 'number' && 1 <= value && value <= 1000) {\n          // already valid numeric value\n          break;\n        }\n        value = FONT_WEIGHT_OPTIONS.includes(value) ? value : DEFAULT_OPTIONS[key];\n        break;\n      case 'cursorWidth':\n        value = Math.floor(value);\n        // Fall through for bounds check\n      case 'lineHeight':\n      case 'tabStopWidth':\n        if (value < 1) {\n          throw new Error(`${key} cannot be less than 1, value: ${value}`);\n        }\n        break;\n      case 'minimumContrastRatio':\n        value = Math.max(1, Math.min(21, Math.round(value * 10) / 10));\n        break;\n      case 'scrollback':\n        value = Math.min(value, 4294967295);\n        if (value < 0) {\n          throw new Error(`${key} cannot be less than 0, value: ${value}`);\n        }\n        break;\n      case 'fastScrollSensitivity':\n      case 'scrollSensitivity':\n        if (value <= 0) {\n          throw new Error(`${key} cannot be less than or equal to 0, value: ${value}`);\n        }\n      case 'rows':\n      case 'cols':\n        if (!value && value !== 0) {\n          throw new Error(`${key} must be numeric, value: ${value}`);\n        }\n        break;\n    }\n    return value;\n  }\n\n  public getOption(key: string): any {\n    return this.publicOptions[key];\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n *\n * This was heavily inspired from microsoft/vscode's dependency injection system (MIT).\n */\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IServiceIdentifier } from 'common/services/Services';\n\nconst DI_TARGET = 'di$target';\nconst DI_DEPENDENCIES = 'di$dependencies';\n\nexport const serviceRegistry: Map<string, IServiceIdentifier<any>> = new Map();\n\nexport function getServiceDependencies(ctor: any): { id: IServiceIdentifier<any>, index: number, optional: boolean }[] {\n  return ctor[DI_DEPENDENCIES] || [];\n}\n\nexport function createDecorator<T>(id: string): IServiceIdentifier<T> {\n  if (serviceRegistry.has(id)) {\n    return serviceRegistry.get(id)!;\n  }\n\n  const decorator: any = function (target: Function, key: string, index: number): any {\n    if (arguments.length !== 3) {\n      throw new Error('@IServiceName-decorator can only be used to decorate a parameter');\n    }\n\n    storeServiceDependency(decorator, target, index);\n  };\n\n  decorator.toString = () => id;\n\n  serviceRegistry.set(id, decorator);\n  return decorator;\n}\n\nfunction storeServiceDependency(id: Function, target: Function, index: number): void {\n  if ((target as any)[DI_TARGET] === target) {\n    (target as any)[DI_DEPENDENCIES].push({ id, index });\n  } else {\n    (target as any)[DI_DEPENDENCIES] = [{ id, index }];\n    (target as any)[DI_TARGET] = target;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IEvent } from 'common/EventEmitter';\nimport { IBuffer, IBufferSet } from 'common/buffer/Types';\nimport { IDecPrivateModes, ICoreMouseEvent, CoreMouseEncoding, ICoreMouseProtocol, CoreMouseEventType, ICharset, IWindowOptions, IModes, IAttributeData, ScrollSource } from 'common/Types';\nimport { createDecorator } from 'common/services/ServiceRegistry';\n\nexport const IBufferService = createDecorator<IBufferService>('BufferService');\nexport interface IBufferService {\n  serviceBrand: undefined;\n\n  readonly cols: number;\n  readonly rows: number;\n  readonly buffer: IBuffer;\n  readonly buffers: IBufferSet;\n  isUserScrolling: boolean;\n  onResize: IEvent<{ cols: number, rows: number }>;\n  onScroll: IEvent<number>;\n  scroll(eraseAttr: IAttributeData, isWrapped?: boolean): void;\n  scrollToBottom(): void;\n  scrollToTop(): void;\n  scrollToLine(line: number): void;\n  scrollLines(disp: number, suppressScrollEvent?: boolean, source?: ScrollSource): void;\n  scrollPages(pageCount: number): void;\n  resize(cols: number, rows: number): void;\n  reset(): void;\n}\n\nexport const ICoreMouseService = createDecorator<ICoreMouseService>('CoreMouseService');\nexport interface ICoreMouseService {\n  activeProtocol: string;\n  activeEncoding: string;\n  areMouseEventsActive: boolean;\n  addProtocol(name: string, protocol: ICoreMouseProtocol): void;\n  addEncoding(name: string, encoding: CoreMouseEncoding): void;\n  reset(): void;\n\n  /**\n   * Triggers a mouse event to be sent.\n   *\n   * Returns true if the event passed all protocol restrictions and a report\n   * was sent, otherwise false. The return value may be used to decide whether\n   * the default event action in the bowser component should be omitted.\n   *\n   * Note: The method will change values of the given event object\n   * to fullfill protocol and encoding restrictions.\n   */\n  triggerMouseEvent(event: ICoreMouseEvent): boolean;\n\n  /**\n   * Event to announce changes in mouse tracking.\n   */\n  onProtocolChange: IEvent<CoreMouseEventType>;\n\n  /**\n   * Human readable version of mouse events.\n   */\n  explainEvents(events: CoreMouseEventType): { [event: string]: boolean };\n}\n\nexport const ICoreService = createDecorator<ICoreService>('CoreService');\nexport interface ICoreService {\n  serviceBrand: undefined;\n\n  /**\n   * Initially the cursor will not be visible until the first time the terminal\n   * is focused.\n   */\n  isCursorInitialized: boolean;\n  isCursorHidden: boolean;\n\n  readonly modes: IModes;\n  readonly decPrivateModes: IDecPrivateModes;\n\n  readonly onData: IEvent<string>;\n  readonly onUserInput: IEvent<void>;\n  readonly onBinary: IEvent<string>;\n\n  reset(): void;\n\n  /**\n   * Triggers the onData event in the public API.\n   * @param data The data that is being emitted.\n   * @param wasFromUser Whether the data originated from the user (as opposed to\n   * resulting from parsing incoming data). When true this will also:\n   * - Scroll to the bottom of the buffer.s\n   * - Fire the `onUserInput` event (so selection can be cleared).\n   */\n  triggerDataEvent(data: string, wasUserInput?: boolean): void;\n\n  /**\n   * Triggers the onBinary event in the public API.\n   * @param data The data that is being emitted.\n   */\n  triggerBinaryEvent(data: string): void;\n}\n\nexport const ICharsetService = createDecorator<ICharsetService>('CharsetService');\nexport interface ICharsetService {\n  serviceBrand: undefined;\n\n  charset: ICharset | undefined;\n  readonly glevel: number;\n\n  reset(): void;\n\n  /**\n   * Set the G level of the terminal.\n   * @param g\n   */\n  setgLevel(g: number): void;\n\n  /**\n   * Set the charset for the given G level of the terminal.\n   * @param g\n   * @param charset\n   */\n  setgCharset(g: number, charset: ICharset | undefined): void;\n}\n\nexport const IDirtyRowService = createDecorator<IDirtyRowService>('DirtyRowService');\nexport interface IDirtyRowService {\n  serviceBrand: undefined;\n\n  readonly start: number;\n  readonly end: number;\n\n  clearRange(): void;\n  markDirty(y: number): void;\n  markRangeDirty(y1: number, y2: number): void;\n  markAllDirty(): void;\n}\n\nexport interface IServiceIdentifier<T> {\n  (...args: any[]): void;\n  type: T;\n}\n\nexport interface IBrandedService {\n  serviceBrand: undefined;\n}\n\ntype GetLeadingNonServiceArgs<Args> =\n  Args extends [...IBrandedService[]] ? []\n    : Args extends [infer A1, ...IBrandedService[]] ? [A1]\n      : Args extends [infer A1, infer A2, ...IBrandedService[]] ? [A1, A2]\n        : Args extends [infer A1, infer A2, infer A3, ...IBrandedService[]] ? [A1, A2, A3]\n          : Args extends [infer A1, infer A2, infer A3, infer A4, ...IBrandedService[]] ? [A1, A2, A3, A4]\n            : Args extends [infer A1, infer A2, infer A3, infer A4, infer A5, ...IBrandedService[]] ? [A1, A2, A3, A4, A5]\n              : Args extends [infer A1, infer A2, infer A3, infer A4, infer A5, infer A6, ...IBrandedService[]] ? [A1, A2, A3, A4, A5, A6]\n                : Args extends [infer A1, infer A2, infer A3, infer A4, infer A5, infer A6, infer A7, ...IBrandedService[]] ? [A1, A2, A3, A4, A5, A6, A7]\n                  : Args extends [infer A1, infer A2, infer A3, infer A4, infer A5, infer A6, infer A7, infer A8, ...IBrandedService[]] ? [A1, A2, A3, A4, A5, A6, A7, A8]\n                    : never;\n\nexport const IInstantiationService = createDecorator<IInstantiationService>('InstantiationService');\nexport interface IInstantiationService {\n  serviceBrand: undefined;\n\n  setService<T>(id: IServiceIdentifier<T>, instance: T): void;\n  getService<T>(id: IServiceIdentifier<T>): T | undefined;\n  createInstance<Ctor extends new (...args: any[]) => any, R extends InstanceType<Ctor>>(t: Ctor, ...args: GetLeadingNonServiceArgs<ConstructorParameters<Ctor>>): R;\n}\n\nexport const ILogService = createDecorator<ILogService>('LogService');\nexport interface ILogService {\n  serviceBrand: undefined;\n\n  logLevel: LogLevelEnum;\n\n  debug(message: any, ...optionalParams: any[]): void;\n  info(message: any, ...optionalParams: any[]): void;\n  warn(message: any, ...optionalParams: any[]): void;\n  error(message: any, ...optionalParams: any[]): void;\n}\n\nexport const IOptionsService = createDecorator<IOptionsService>('OptionsService');\nexport interface IOptionsService {\n  serviceBrand: undefined;\n\n  readonly options: ITerminalOptions;\n  readonly publicOptions: ITerminalOptions;\n\n  readonly onOptionChange: IEvent<string>;\n\n  setOption<T>(key: string, value: T): void;\n  getOption<T>(key: string): T | undefined;\n}\n\nexport type FontWeight = 'normal' | 'bold' | '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | number;\nexport type LogLevel = 'debug' | 'info' | 'warn' | 'error' | 'off';\nexport enum LogLevelEnum {\n  DEBUG = 0,\n  INFO = 1,\n  WARN = 2,\n  ERROR = 3,\n  OFF = 4\n}\nexport type RendererType = 'dom' | 'canvas';\n\nexport interface ITerminalOptions {\n  allowProposedApi: boolean;\n  allowTransparency: boolean;\n  altClickMovesCursor: boolean;\n  bellSound: string;\n  bellStyle: 'none' | 'sound' /* | 'visual' | 'both' */;\n  cols: number;\n  cursorBlink: boolean;\n  cursorStyle: 'block' | 'underline' | 'bar';\n  cursorWidth: number;\n  customGlyphs: boolean;\n  disableStdin: boolean;\n  drawBoldTextInBrightColors: boolean;\n  fastScrollModifier: 'alt' | 'ctrl' | 'shift' | undefined;\n  fastScrollSensitivity: number;\n  fontSize: number;\n  fontFamily: string;\n  fontWeight: FontWeight;\n  fontWeightBold: FontWeight;\n  letterSpacing: number;\n  lineHeight: number;\n  linkTooltipHoverDuration: number;\n  logLevel: LogLevel;\n  macOptionIsMeta: boolean;\n  macOptionClickForcesSelection: boolean;\n  minimumContrastRatio: number;\n  rendererType: RendererType;\n  rightClickSelectsWord: boolean;\n  rows: number;\n  screenReaderMode: boolean;\n  scrollback: number;\n  scrollSensitivity: number;\n  tabStopWidth: number;\n  theme: ITheme;\n  windowsMode: boolean;\n  windowOptions: IWindowOptions;\n  wordSeparator: string;\n\n  [key: string]: any;\n  cancelEvents: boolean;\n  convertEol: boolean;\n  termName: string;\n}\n\nexport interface ITheme {\n  foreground?: string;\n  background?: string;\n  cursor?: string;\n  cursorAccent?: string;\n  selection?: string;\n  black?: string;\n  red?: string;\n  green?: string;\n  yellow?: string;\n  blue?: string;\n  magenta?: string;\n  cyan?: string;\n  white?: string;\n  brightBlack?: string;\n  brightRed?: string;\n  brightGreen?: string;\n  brightYellow?: string;\n  brightBlue?: string;\n  brightMagenta?: string;\n  brightCyan?: string;\n  brightWhite?: string;\n}\n\nexport const IUnicodeService = createDecorator<IUnicodeService>('UnicodeService');\nexport interface IUnicodeService {\n  serviceBrand: undefined;\n  /** Register an Unicode version provider. */\n  register(provider: IUnicodeVersionProvider): void;\n  /** Registered Unicode versions. */\n  readonly versions: string[];\n  /** Currently active version. */\n  activeVersion: string;\n  /** Event triggered, when activate version changed. */\n  readonly onChange: IEvent<string>;\n\n  /**\n   * Unicode version dependent\n   */\n  wcwidth(codepoint: number): number;\n  getStringCellWidth(s: string): number;\n}\n\nexport interface IUnicodeVersionProvider {\n  readonly version: string;\n  wcwidth(ucs: number): 0 | 1 | 2;\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IUnicodeService, IUnicodeVersionProvider } from 'common/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { UnicodeV6 } from 'common/input/UnicodeV6';\n\n\nexport class UnicodeService implements IUnicodeService {\n  public serviceBrand: any;\n\n  private _providers: {[key: string]: IUnicodeVersionProvider} = Object.create(null);\n  private _active: string = '';\n  private _activeProvider: IUnicodeVersionProvider;\n  private _onChange = new EventEmitter<string>();\n  public get onChange(): IEvent<string> { return this._onChange.event; }\n\n  constructor() {\n    const defaultProvider = new UnicodeV6();\n    this.register(defaultProvider);\n    this._active = defaultProvider.version;\n    this._activeProvider = defaultProvider;\n  }\n\n  public get versions(): string[] {\n    return Object.keys(this._providers);\n  }\n\n  public get activeVersion(): string {\n    return this._active;\n  }\n\n  public set activeVersion(version: string) {\n    if (!this._providers[version]) {\n      throw new Error(`unknown Unicode version \"${version}\"`);\n    }\n    this._active = version;\n    this._activeProvider = this._providers[version];\n    this._onChange.fire(version);\n  }\n\n  public register(provider: IUnicodeVersionProvider): void {\n    this._providers[provider.version] = provider;\n  }\n\n  /**\n   * Unicode version dependent interface.\n   */\n  public wcwidth(num: number): number {\n    return this._activeProvider.wcwidth(num);\n  }\n\n  public getStringCellWidth(s: string): number {\n    let result = 0;\n    const length = s.length;\n    for (let i = 0; i < length; ++i) {\n      let code = s.charCodeAt(i);\n      // surrogate pair first\n      if (0xD800 <= code && code <= 0xDBFF) {\n        if (++i >= length) {\n          // this should not happen with strings retrieved from\n          // Buffer.translateToString as it converts from UTF-32\n          // and therefore always should contain the second part\n          // for any other string we still have to handle it somehow:\n          // simply treat the lonely surrogate first as a single char (UCS-2 behavior)\n          return result + this.wcwidth(code);\n        }\n        const second = s.charCodeAt(i);\n        // convert surrogate pair to high codepoint only for valid second part (UTF-16)\n        // otherwise treat them independently (UCS-2 behavior)\n        if (0xDC00 <= second && second <= 0xDFFF) {\n          code = (code - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n        } else {\n          result += this.wcwidth(second);\n        }\n      }\n      result += this.wcwidth(code);\n    }\n    return result;\n  }\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Terminal as ITerminalApi, ITerminalOptions, IMarker, IDisposable, ILinkMatcherOptions, ITheme, ILocalizableStrings, ITerminalAddon, ISelectionPosition, IBufferNamespace as IBufferNamespaceApi, IParser, ILinkProvider, IUnicodeHandling, FontWeight, IModes } from 'xterm';\nimport { ITerminal } from 'browser/Types';\nimport { Terminal as TerminalCore } from 'browser/Terminal';\nimport * as Strings from 'browser/LocalizableStrings';\nimport { IEvent } from 'common/EventEmitter';\nimport { ParserApi } from 'common/public/ParserApi';\nimport { UnicodeApi } from 'common/public/UnicodeApi';\nimport { AddonManager } from 'common/public/AddonManager';\nimport { BufferNamespaceApi } from 'common/public/BufferNamespaceApi';\n\nexport class Terminal implements ITerminalApi {\n  private _core: ITerminal;\n  private _addonManager: AddonManager;\n  private _parser: IParser | undefined;\n  private _buffer: BufferNamespaceApi | undefined;\n\n  constructor(options?: ITerminalOptions) {\n    this._core = new TerminalCore(options);\n    this._addonManager = new AddonManager();\n  }\n\n  private _checkProposedApi(): void {\n    if (!this._core.optionsService.options.allowProposedApi) {\n      throw new Error('You must set the allowProposedApi option to true to use proposed API');\n    }\n  }\n\n  public get onBell(): IEvent<void> { return this._core.onBell; }\n  public get onBinary(): IEvent<string> { return this._core.onBinary; }\n  public get onCursorMove(): IEvent<void> { return this._core.onCursorMove; }\n  public get onData(): IEvent<string> { return this._core.onData; }\n  public get onKey(): IEvent<{ key: string, domEvent: KeyboardEvent }> { return this._core.onKey; }\n  public get onLineFeed(): IEvent<void> { return this._core.onLineFeed; }\n  public get onRender(): IEvent<{ start: number, end: number }> { return this._core.onRender; }\n  public get onResize(): IEvent<{ cols: number, rows: number }> { return this._core.onResize; }\n  public get onScroll(): IEvent<number> { return this._core.onScroll; }\n  public get onSelectionChange(): IEvent<void> { return this._core.onSelectionChange; }\n  public get onTitleChange(): IEvent<string> { return this._core.onTitleChange; }\n\n  public get element(): HTMLElement | undefined { return this._core.element; }\n  public get parser(): IParser {\n    this._checkProposedApi();\n    if (!this._parser) {\n      this._parser = new ParserApi(this._core);\n    }\n    return this._parser;\n  }\n  public get unicode(): IUnicodeHandling {\n    this._checkProposedApi();\n    return new UnicodeApi(this._core);\n  }\n  public get textarea(): HTMLTextAreaElement | undefined { return this._core.textarea; }\n  public get rows(): number { return this._core.rows; }\n  public get cols(): number { return this._core.cols; }\n  public get buffer(): IBufferNamespaceApi {\n    this._checkProposedApi();\n    if (!this._buffer) {\n      this._buffer = new BufferNamespaceApi(this._core);\n    }\n    return this._buffer;\n  }\n  public get markers(): ReadonlyArray<IMarker> {\n    this._checkProposedApi();\n    return this._core.markers;\n  }\n  public get modes(): IModes {\n    const m = this._core.coreService.decPrivateModes;\n    let mouseTrackingMode: 'none' | 'x10' | 'vt200' | 'drag' | 'any' = 'none';\n    switch (this._core.coreMouseService.activeProtocol) {\n      case 'X10': mouseTrackingMode = 'x10'; break;\n      case 'VT200': mouseTrackingMode = 'vt200'; break;\n      case 'DRAG': mouseTrackingMode = 'drag'; break;\n      case 'ANY': mouseTrackingMode = 'any'; break;\n    }\n    return {\n      applicationCursorKeysMode: m.applicationCursorKeys,\n      applicationKeypadMode: m.applicationKeypad,\n      bracketedPasteMode: m.bracketedPasteMode,\n      insertMode: this._core.coreService.modes.insertMode,\n      mouseTrackingMode: mouseTrackingMode,\n      originMode: m.origin,\n      reverseWraparoundMode: m.reverseWraparound,\n      sendFocusMode: m.sendFocus,\n      wraparoundMode: m.wraparound\n    };\n  }\n  public get options(): ITerminalOptions {\n    return this._core.options;\n  }\n  public blur(): void {\n    this._core.blur();\n  }\n  public focus(): void {\n    this._core.focus();\n  }\n  public resize(columns: number, rows: number): void {\n    this._verifyIntegers(columns, rows);\n    this._core.resize(columns, rows);\n  }\n  public open(parent: HTMLElement): void {\n    this._core.open(parent);\n  }\n  public attachCustomKeyEventHandler(customKeyEventHandler: (event: KeyboardEvent) => boolean): void {\n    this._core.attachCustomKeyEventHandler(customKeyEventHandler);\n  }\n  public registerLinkMatcher(regex: RegExp, handler: (event: MouseEvent, uri: string) => void, options?: ILinkMatcherOptions): number {\n    this._checkProposedApi();\n    return this._core.registerLinkMatcher(regex, handler, options);\n  }\n  public deregisterLinkMatcher(matcherId: number): void {\n    this._checkProposedApi();\n    this._core.deregisterLinkMatcher(matcherId);\n  }\n  public registerLinkProvider(linkProvider: ILinkProvider): IDisposable {\n    this._checkProposedApi();\n    return this._core.registerLinkProvider(linkProvider);\n  }\n  public registerCharacterJoiner(handler: (text: string) => [number, number][]): number {\n    this._checkProposedApi();\n    return this._core.registerCharacterJoiner(handler);\n  }\n  public deregisterCharacterJoiner(joinerId: number): void {\n    this._checkProposedApi();\n    this._core.deregisterCharacterJoiner(joinerId);\n  }\n  public registerMarker(cursorYOffset: number): IMarker | undefined {\n    this._checkProposedApi();\n    this._verifyIntegers(cursorYOffset);\n    return this._core.addMarker(cursorYOffset);\n  }\n  public addMarker(cursorYOffset: number): IMarker | undefined {\n    return this.registerMarker(cursorYOffset);\n  }\n  public hasSelection(): boolean {\n    return this._core.hasSelection();\n  }\n  public select(column: number, row: number, length: number): void {\n    this._verifyIntegers(column, row, length);\n    this._core.select(column, row, length);\n  }\n  public getSelection(): string {\n    return this._core.getSelection();\n  }\n  public getSelectionPosition(): ISelectionPosition | undefined {\n    return this._core.getSelectionPosition();\n  }\n  public clearSelection(): void {\n    this._core.clearSelection();\n  }\n  public selectAll(): void {\n    this._core.selectAll();\n  }\n  public selectLines(start: number, end: number): void {\n    this._verifyIntegers(start, end);\n    this._core.selectLines(start, end);\n  }\n  public dispose(): void {\n    this._addonManager.dispose();\n    this._core.dispose();\n  }\n  public scrollLines(amount: number): void {\n    this._verifyIntegers(amount);\n    this._core.scrollLines(amount);\n  }\n  public scrollPages(pageCount: number): void {\n    this._verifyIntegers(pageCount);\n    this._core.scrollPages(pageCount);\n  }\n  public scrollToTop(): void {\n    this._core.scrollToTop();\n  }\n  public scrollToBottom(): void {\n    this._core.scrollToBottom();\n  }\n  public scrollToLine(line: number): void {\n    this._verifyIntegers(line);\n    this._core.scrollToLine(line);\n  }\n  public clear(): void {\n    this._core.clear();\n  }\n  public write(data: string | Uint8Array, callback?: () => void): void {\n    this._core.write(data, callback);\n  }\n  public writeUtf8(data: Uint8Array, callback?: () => void): void {\n    this._core.write(data, callback);\n  }\n  public writeln(data: string | Uint8Array, callback?: () => void): void {\n    this._core.write(data);\n    this._core.write('\\r\\n', callback);\n  }\n  public paste(data: string): void {\n    this._core.paste(data);\n  }\n  public getOption(key: 'bellSound' | 'bellStyle' | 'cursorStyle' | 'fontFamily' | 'logLevel' | 'rendererType' | 'termName' | 'wordSeparator'): string;\n  public getOption(key: 'allowTransparency' | 'altClickMovesCursor' | 'cancelEvents' | 'convertEol' | 'cursorBlink' | 'disableStdin' | 'macOptionIsMeta' | 'rightClickSelectsWord' | 'popOnBell' | 'visualBell'): boolean;\n  public getOption(key: 'cols' | 'fontSize' | 'letterSpacing' | 'lineHeight' | 'rows' | 'tabStopWidth' | 'scrollback'): number;\n  public getOption(key: 'fontWeight' | 'fontWeightBold'): FontWeight;\n  public getOption(key: string): any;\n  public getOption(key: any): any {\n    return this._core.optionsService.getOption(key);\n  }\n  public setOption(key: 'bellSound' | 'fontFamily' | 'termName' | 'wordSeparator', value: string): void;\n  public setOption(key: 'fontWeight' | 'fontWeightBold', value: 'normal' | 'bold' | '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | number): void;\n  public setOption(key: 'logLevel', value: 'debug' | 'info' | 'warn' | 'error' | 'off'): void;\n  public setOption(key: 'bellStyle', value: 'none' | 'visual' | 'sound' | 'both'): void;\n  public setOption(key: 'cursorStyle', value: 'block' | 'underline' | 'bar'): void;\n  public setOption(key: 'allowTransparency' | 'altClickMovesCursor' | 'cancelEvents' | 'convertEol' | 'cursorBlink' | 'disableStdin' | 'macOptionIsMeta' | 'rightClickSelectsWord' | 'popOnBell' | 'visualBell', value: boolean): void;\n  public setOption(key: 'fontSize' | 'letterSpacing' | 'lineHeight' | 'tabStopWidth' | 'scrollback', value: number): void;\n  public setOption(key: 'theme', value: ITheme): void;\n  public setOption(key: 'cols' | 'rows', value: number): void;\n  public setOption(key: string, value: any): void;\n  public setOption(key: any, value: any): void {\n    this._core.optionsService.setOption(key, value);\n  }\n  public refresh(start: number, end: number): void {\n    this._verifyIntegers(start, end);\n    this._core.refresh(start, end);\n  }\n  public reset(): void {\n    this._core.reset();\n  }\n  public clearTextureAtlas(): void {\n    this._core.clearTextureAtlas();\n  }\n  public loadAddon(addon: ITerminalAddon): void {\n    return this._addonManager.loadAddon(this, addon);\n  }\n  public static get strings(): ILocalizableStrings {\n    return Strings;\n  }\n\n  private _verifyIntegers(...values: number[]): void {\n    for (const value of values) {\n      if (value === Infinity || isNaN(value) || value % 1 !== 0) {\n        throw new Error('This API only accepts integers');\n      }\n    }\n  }\n}\n","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"FitAddon\"] = factory();\n\telse\n\t\troot[\"FitAddon\"] = factory();\n})(self, function() {\nreturn ","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Terminal, ITerminalAddon } from 'xterm';\n\ninterface ITerminalDimensions {\n  /**\n   * The number of rows in the terminal.\n   */\n  rows: number;\n\n  /**\n   * The number of columns in the terminal.\n   */\n  cols: number;\n}\n\nconst MINIMUM_COLS = 2;\nconst MINIMUM_ROWS = 1;\n\nexport class FitAddon implements ITerminalAddon {\n  private _terminal: Terminal | undefined;\n\n  constructor() {}\n\n  public activate(terminal: Terminal): void {\n    this._terminal = terminal;\n  }\n\n  public dispose(): void {}\n\n  public fit(): void {\n    const dims = this.proposeDimensions();\n    if (!dims || !this._terminal) {\n      return;\n    }\n\n    // TODO: Remove reliance on private API\n    const core = (this._terminal as any)._core;\n\n    // Force a full render\n    if (this._terminal.rows !== dims.rows || this._terminal.cols !== dims.cols) {\n      core._renderService.clear();\n      this._terminal.resize(dims.cols, dims.rows);\n    }\n  }\n\n  public proposeDimensions(): ITerminalDimensions | undefined {\n    if (!this._terminal) {\n      return undefined;\n    }\n\n    if (!this._terminal.element || !this._terminal.element.parentElement) {\n      return undefined;\n    }\n\n    // TODO: Remove reliance on private API\n    const core = (this._terminal as any)._core;\n\n    if (core._renderService.dimensions.actualCellWidth === 0 || core._renderService.dimensions.actualCellHeight === 0) {\n      return undefined;\n    }\n\n    const parentElementStyle = window.getComputedStyle(this._terminal.element.parentElement);\n    const parentElementHeight = parseInt(parentElementStyle.getPropertyValue('height'));\n    const parentElementWidth = Math.max(0, parseInt(parentElementStyle.getPropertyValue('width')));\n    const elementStyle = window.getComputedStyle(this._terminal.element);\n    const elementPadding = {\n      top: parseInt(elementStyle.getPropertyValue('padding-top')),\n      bottom: parseInt(elementStyle.getPropertyValue('padding-bottom')),\n      right: parseInt(elementStyle.getPropertyValue('padding-right')),\n      left: parseInt(elementStyle.getPropertyValue('padding-left'))\n    };\n    const elementPaddingVer = elementPadding.top + elementPadding.bottom;\n    const elementPaddingHor = elementPadding.right + elementPadding.left;\n    const availableHeight = parentElementHeight - elementPaddingVer;\n    const availableWidth = parentElementWidth - elementPaddingHor - core.viewport.scrollBarWidth;\n    const geometry = {\n      cols: Math.max(MINIMUM_COLS, Math.floor(availableWidth / core._renderService.dimensions.actualCellWidth)),\n      rows: Math.max(MINIMUM_ROWS, Math.floor(availableHeight / core._renderService.dimensions.actualCellHeight))\n    };\n    return geometry;\n  }\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// module exports must be returned from runtime so entry inlining is disabled\n// startup\n// Load entry module and return exports\nreturn __webpack_require__(775);\n"],"names":["$c4874ee0dde31fc5$var$NEWLINE","$c4874ee0dde31fc5$var$baseTheme","foreground","background","selection","black","brightBlack","red","brightRed","green","brightGreen","yellow","brightYellow","blue","brightBlue","magenta","brightMagenta","cyan","brightCyan","white","brightWhite","$c4874ee0dde31fc5$export$b81977eba3969224","$aD10K","LitElement","createRenderRoot","this","connectedCallback","super","terminal","$9NYKQ","Terminal","fontFamily","fontSize","lineHeight","theme","cursorBlink","rendererType","fitAddon","$82lk5","FitAddon","loadAddon","window","addEventListener","fit","open","term","$cud2N","Client","connect","then","url","writeln","runCommand","prompt","onAny","res","processEvents","$fvkUK","CommandObserver","commandList","commands","command","onData","e","console","log","getSelection","_core","buffer","x","write","length","substr","String","fromCharCode","onKey","key","event","join","closestCommands","filter","c","startsWith","newCommand","shift","clearLine","lastCommand","sendCommand","message","includes","type","value","replaceAll","writeResponse","message1","text","JSON","stringify","error","render","html","css","root","factory","exports","module","define","amd","a","i","self","o1","r2","s1","a1","l","h","u","f","e4","t4","_terminal","_renderService","call","_liveRegionLineCount","_charsToConsume","_charsToAnnounce","_accessibilityTreeRoot","document","createElement","setAttribute","classList","add","_rowContainer","_rowElements","rows","_createAccessibilityTreeNode","appendChild","_topBoundaryFocusListener","_onBoundaryFocus","_bottomBoundaryFocusListener","_refreshRowsDimensions","_renderRowsDebouncer","TimeBasedDebouncer","_renderRows","bind","_refreshRows","_liveRegion","element","Error","insertAdjacentElement","register","onResize","_onResize","onRender","start","end","onScroll","onA11yChar","char","_onChar","onLineFeed","onA11yTab","spaceCount","_onTab","_onKey","onBlur","_clearLiveRegion","onDimensionsChange","_screenDprMonitor","ScreenDprMonitor","setListener","addDisposableDomListener","n1","prototype","dispose","removeElementFromParent","position","boundaryElement","target","beforeBoundaryElement","getAttribute","lines","relatedTarget","topBoundaryElement","bottomBoundaryElement","pop","removeChild","removeEventListener","newElement","unshift","push","scrollLines","focus","preventDefault","stopImmediatePropagation","children","tabIndex","_refreshRowDimensions","t","MAX_ROWS_TO_READ","textContent","Strings","tooMuchOutput","isMac","parentNode","setTimeout","keyChar","refresh","setSize","toString","lineData","translateBufferLineToString","ydisp","posInSet","innerText","_announceCharacters","dimensions","actualCellHeight","style","height","Disposable","t2","AccessibilityManager","prepareTextForTerminal","replace","bracketTextForPaste","bracketedPasteMode","paste","textarea","coreService","decPrivateModes","triggerDataEvent","moveTextAreaUnderMouseCursor","ev","screenElement","pos","getBoundingClientRect","left","clientX","top","clientY","width","zIndex","t5","r3","i3","copyHandler","selectionService","clipboardData","setData","selectionText","handlePasteEvent","stopPropagation","getData","n2","o2","rightClickHandler","shouldSelectWord","rightClickSelect","select","channels","i4","rgb","rgba","toPaddedHex","s","contrastRatio","l1","l2","t6","toCss","r","g","b","e7","toRgba","color","blend","bg","fg","fgR","fgG","fgB","bgR","bgG","bgB","Math","round","isOpaque","ensureContrastRatio","ratio","result","toColor","opaque","rgbaColor","toChannels","opacity","n","parseInt","slice","e8","relativeLuminance2","rs","gs","bs","pow","relativeLuminance","t7","reduceLuminance","bgRgba","fgRgba","cr","max","ceil","increaseLuminance","min","e9","bgL","fgL","t8","i5","s2","a2","r5","_color","_rgba","clear","setCss","getCss","setColor","getColor","ColorContrastCache","r6","n4","DEFAULT_FOREGROUND","DEFAULT_BACKGROUND","DEFAULT_CURSOR","DEFAULT_CURSOR_ACCENT","DEFAULT_SELECTION","t9","DEFAULT_ANSI_COLORS","Object","freeze","colors","v","h1","e12","allowTransparency","canvas","ctx","getContext","_ctx","globalCompositeOperation","_litmusColor","createLinearGradient","_contrastCache","cursor","cursorAccent","selectionTransparent","selectionOpaque","ansi","contrastCache","onOptionsChange","setTheme","_parseColor","fallback","fillStyle","warn","fillRect","data","getImageData","o","substring","split","map","component","Number","alpha","e13","ColorManager","t10","arguments","elements","parentElement","t11","node","handler","options","disposed","o5","r7","s4","a4","e17","_bufferService","_logService","_unicodeService","_linkMatchers","_nextLinkMatcherId","_onShowLinkUnderline","EventEmitter","_onHideLinkUnderline","_onLinkTooltip","_rowsToLinkify","defineProperty","attachToDom","mouseZoneManager","_element","_mouseZoneManager","linkifyRows","clearAll","_rowsTimeoutId","clearTimeout","_linkifyRows","Linkifier","_timeBeforeLatency","absoluteRowIndexStart","absoluteRowIndexEnd","overscanLineLimit","cols","iterator","hasNext","next","_doLinkifyRow","range","first","content","debug","registerLinkMatcher","regex","matcher","id","matchIndex","validationCallback","hoverTooltipCallback","tooltipCallback","hoverLeaveCallback","leaveCallback","willLinkActivate","priority","_addLinkMatcherToList","splice","deregisterLinkMatcher","matcherId","rowIndex","match","rex","RegExp","source","flags","stringIndex","uri","indexOf","lastIndex","bufferIndex","stringIndexToBufferIndex","line","get","attr","getFg","isValid","_addLink","exec","y","getStringCellWidth","x1","y1","floor","x2","y2","MouseZone","newWindow","opener","location","href","fire","_createLinkHoverEvent","remove","i6","n5","IBufferService","ILogService","IUnicodeService","t12","c2","clickCallback","hoverCallback","a6","r8","c3","e22","t16","_linkProviders","_linkCacheDisposables","_isMouseOut","_activeLine","getDisposeArrayDisposable","n6","_currentLink","registerLinkProvider","linkProvider","providerIndex","mouseService","renderService","_mouseService","_clearCurrentLink","_onMouseMove","_onClick","_lastMouseEvent","_positionFromMouseEvent","composedPath","contains","_lastBufferCell","_onHover","_askForLink","_linkAtPosition","link","useLineCache","_activeProviderReplies","r9","forEach","reply","linkWithState","Map","linkProvided","s6","_checkLinkProviderResult","provideLinks","links","linksWithState","set","size","_removeIntersectingLinks","replies","occupiedCells","Set","providerReply","startX","endX","has","index","hasLinkBefore","j","linkAtPosition","find","_handleNewLink","currentLink","activate","startRow","endRow","_linkLeave","undefined","disposeArray","state","decorations","underline","pointerCursor","isHovered","_linkHover","defineProperties","toggle","_fireUnderlineEvent","onRenderedBufferChange","hover","showEvent","scrollOffset","_createLinkUnderlineEvent","leave","sameLine","wrappedFromLeft","wrappedToRight","coords","getCoords","o6","s5","Linkifier2","t14","promptLabel","a7","r12","e29","t20","_screenElement","_selectionService","_optionsService","_zones","_areZonesActive","_lastHoverCoords","_initialSelectionLength","_onMouseDown","_mouseMoveListener","_mouseLeaveListener","_onMouseLeave","_clickListener","n7","_deactivate","zone","_activate","_currentZone","pageX","pageY","_findZoneEventAt","_tooltipTimeout","_onTooltip","linkTooltipHoverDuration","_getSelectionLength","currentSelectionLength","o7","s7","IMouseService","ISelectionService","IOptionsService","MouseZoneManager","t18","r13","e31","_renderCallback","_animationFrame","cancelAnimationFrame","rowStart","rowEnd","rowCount","_rowCount","_rowStart","_rowEnd","requestAnimationFrame","_innerRefresh","t21","RenderDebouncer","e34","t24","apply","_currentDevicePixelRatio","devicePixelRatio","listener","_listener","clearListener","_outerListener","_updateDpr","_resolutionMediaMatchList","removeListener","matchMedia","addListener","r14","t22","o8","r15","s8","a8","l3","_","d","p","m","S","C","w","L","E","A","M","k","R","T","B","O","e37","t27","browser","Browser","_keyDownHandled","_keyPressHandled","_unprocessedDeadKey","_onCursorMove","_onRender","_onSelectionChange","_onTitleChange","_onBell","_onFocus","_onBlur","_onA11yCharEmitter","_onA11yTabEmitter","_setup","linkifier","_instantiationService","createInstance","linkifier2","_inputHandler","onRequestBell","bell","onRequestRefreshRows","onRequestSendFocus","_reportFocus","onRequestReset","reset","onRequestWindowsOptionsReport","_reportWindowsOptions","onAnsiColorChange","_changeAnsiColor","forwardEvent","onCursorMove","onTitleChange","_afterResize","n8","optionsService","_colorManager","ansiColor","colorIndex","setColors","viewport","onThemeChange","_isDisposed","_customKeyEventHandler","buffers","active","preventScroll","_updateOptions","_charSizeService","measure","setRenderer","_createRenderer","syncScrollArea","screenReaderMode","_accessibilityManager","setupTabStops","_setTheme","_onTextAreaFocus","sendFocus","C0","ESC","updateCursorStyle","_showCursor","blur","_onTextAreaBlur","_syncTextArea","isCursorInViewport","_compositionHelper","isComposing","cursorY","ybase","bufferLine","cursorX","cellHeight","getWidth","cellWidth","actualCellWidth","cursorTop","cursorLeft","_initGlobal","_bindKeys","hasSelection","pasteHandlerWrapper","isFirefox","button","rightClickSelectsWord","isLinux","_keyUp","_keyDown","_keyPress","compositionstart","compositionupdate","compositionend","_inputEvent","updateCompositionElements","_queueLinkification","parent","isConnected","_document","ownerDocument","dir","fragment","createDocumentFragment","_viewportElement","_viewportScrollArea","_helperContainer","coreBrowserService","CoreBrowserService","setService","ICoreBrowserService","CharSizeService","ICharSizeService","_theme","onOptionChange","_characterJoinerService","CharacterJoinerService","ICharacterJoinerService","renderer","RenderService","IRenderService","resize","_compositionView","CompositionHelper","_soundService","SoundService","ISoundService","MouseService","Viewport","amount","onRequestSyncScrollBar","onFocus","SelectionService","onRequestScrollLines","suppressScrollEvent","onSelectionChange","onRequestRedraw","onSelectionChanged","columnSelectMode","onLinuxMouseSelection","_onScroll","onMouseDown","coreMouseService","areMouseEventsActive","disable","enable","bindMouse","Renderer","DomRenderer","e39","el","sendEvent","but","action","getRawByteCoords","overrideType","buttons","deltaY","triggerMouseEvent","col","row","ctrl","ctrlKey","alt","altKey","shiftKey","requestedEvents","mouseup","wheel","mousedrag","mousemove","eventListeners","cancel","onProtocolChange","events","logLevel","explainEvents","passive","activeProtocol","shouldForceSelection","hasScrollback","getLinesScrolled","sequence","applicationCursorKeys","abs","onWheel","onTouchStart","onTouchMove","refreshRows","shouldColumnSelect","isCursorInitialized","disp","attachCustomKeyEventHandler","customKeyEventHandler","registerCharacterJoiner","joinerId","deregisterCharacterJoiner","deregister","markers","addMarker","cursorYOffset","normal","column","setSelection","getSelectionPosition","startColumn","selectionStart","endColumn","selectionEnd","clearSelection","selectAll","selectLines","keydown","scrollToBottom","evaluateKeyboardEvent","macOptionIsMeta","scrollCount","_isThirdLevelShift","ETX","CR","domEvent","thirdLevelKey","metaKey","isWindows","getModifierState","keyCode","charCode","which","inputType","_soundBell","playBellSound","hasValidSize","getBlankLine","DEFAULT_ATTR_DATA","clearTextureAtlas","WindowsOptionsReportType","GET_WIN_SIZE_PIXELS","canvasWidth","scaledCanvasWidth","toFixed","canvasHeight","scaledCanvasHeight","GET_CELL_SIZE_PIXELS","scaledCellWidth","scaledCellHeight","force","cancelEvents","_visualBell","bellStyle","CoreTerminal","t25","r17","e42","_debounceThresholdMS","_lastRefreshMs","_additionalRefreshRequested","_refreshTimeoutID","refreshRequestTime","Date","now","elapsed","waitPeriodBeforeTrailingRefresh","t31","a9","r18","l4","h2","e45","t34","_scrollLines","_scrollArea","scrollBarWidth","_currentRowHeight","_currentScaledCellHeight","_lastRecordedBufferLength","_lastRecordedViewportHeight","_lastRecordedBufferHeight","_lastTouchY","_lastScrollTop","_lastHadScrollBar","_wheelPartialScroll","_refreshAnimationFrame","_ignoreNextScrollEvent","offsetWidth","_activeBuffer","onBufferActivate","activeBuffer","_renderDimensions","n10","backgroundColor","_refresh","immediate","offsetHeight","newBufferHeight","scrollTop","scrollback","elementStyle","getComputedStyle","elementPadding","paddingLeft","paddingRight","offsetParent","diff","_bubbleScroll","scrollPosFromTop","cancelable","_getPixelsScrolled","_applyScrollModifier","deltaMode","WheelEvent","DOM_DELTA_LINE","DOM_DELTA_PAGE","DOM_DELTA_PIXEL","modifier","fastScrollModifier","fastScrollSensitivity","scrollSensitivity","touches","o10","s10","t32","o11","r19","s11","a10","e47","_textarea","_coreService","_isComposing","_isSendingComposition","_compositionPosition","_dataAlreadySent","_finalizeComposition","_handleAnyTextareaChanges","waitForPropagation","input","oldValue","dontRecurse","compositionViewBounds","i12","n11","ICoreService","t35","getCoordsRelativeToElement","rect","t36","r20","colCount","hasValidCharSize","isSelection","i13","r21","moveToRequestedRow","startY","targetY","bufferService","applicationCursor","wrappedRowsForRow","repeat","wrappedRows","direction","verticalDirection","isWrapped","currentRow","lineWraps","startCol","endCol","forward","currentCol","bufferStr","mod","count","str","rpt","t37","moveToCellSequence","targetX","rowDifference","currX","i17","r25","n14","o13","s15","a13","l6","h5","u2","e55","_container","_alpha","_colors","_rendererId","_scaledCharWidth","_scaledCharHeight","_scaledCellWidth","_scaledCellHeight","_scaledCharLeft","_scaledCharTop","_currentGlyphIdentifier","chars","code","bold","dim","italic","_canvas","_initCanvas","_charAtlas","throwIfFalsy","_clearAll","onOptionsChanged","onGridChanged","colorSet","_refreshCharAtlas","_setTransparency","oldCanvas","cloneNode","replaceChild","acquireCharAtlas","warmUp","scaledCharWidth","scaledCharHeight","scaledCharLeft","scaledCharTop","_fillCells","_fillMiddleLineAtCells","cellOffset","_fillBottomLineAtCells","_fillLeftLineAtCell","_strokeRectAtCell","lineWidth","strokeRect","clearRect","_clearCells","_fillCharTrueColor","cell","font","_getFont","textBaseline","TEXT_BASELINE","_clipRow","drawSuccess","customGlyphs","tryDrawCustomChar","getChars","fillText","_drawChars","contrastColor","_getContrastColor","isFgRGB","isBgRGB","_drawUncachedChars","isInverse","isBgDefault","INVERTED_DEFAULT_COLOR","getBgColor","isFgDefault","getFgColor","DEFAULT_COLOR","drawBoldTextInBrightColors","isBold","WHITESPACE_CELL_CHAR","getCode","WHITESPACE_CELL_CODE","isDim","isItalic","draw","fgOverride","save","AttributeData","toColorRGB","globalAlpha","DIM_OPACITY","restore","beginPath","clip","fontWeightBold","fontWeight","minimumContrastRatio","adjustedColor","fgColor","fgColorMode","getFgColorMode","bgColor","bgColorMode","getBgColorMode","temp","temp2","_resolveBackgroundRgba","_resolveForegroundRgba","inverse","t41","BaseRenderLayer","a14","r26","l7","h6","BLINK_INTERVAL","e58","t44","container","rendererId","_onRequestRedraw","_coreBrowserService","_cell","CellData","_state","isFocused","_cursorRenderers","bar","_renderBarCursor","block","_renderBlockCursor","_renderUnderlineCursor","n15","_cursorBlinkStateManager","_clearCursor","restartBlinkAnimation","pause","resume","CursorBlinkStateManager","_render","isPaused","triggeredByAnimationFrame","isCursorHidden","viewportRelativeCursorY","loadCell","cursorStyle","_renderBlurCursor","isCursorVisible","cursorWidth","strokeStyle","o14","s16","CursorRenderLayer","t42","e59","_restartInterval","_blinkStartTimeout","_blinkInterval","clearInterval","_animationTimeRestarted","timeToStart","u3","time","setInterval","wt","r27","t45","blockElementDefinitions","patternCharacterDefinitions","boxDrawingDefinitions","i19","n16","o15","s17","a15","c5","l8","h7","u4","f2","_1","d1","p1","v1","g1","m1","S1","xp","yp","D","P","I","H","F","W","U","q","N","z","K","V","G","X","Y","Z","J","$","Q","ee","te","re","ie","ne","oe","se","ae","ce","le","he","ue","fe","_e","de","pe","ve","ge","ye","me","Se","Ce","be","we","Le","Ee","xe","Ae","Me","ke","Re","Te","Be","De","Oe","Pe","Ie","He","Fe","je","We","Ue","qe","Ne","ze","Ke","Ve","Ge","Xe","Ye","Ze","Je","$e","Qe","et","tt","rt","it","nt","ot","st","at","ct","lt","ht","ut","ft","_t","dt","pt","vt","yt","charDefinition","yOffset","mt","patternSet","cachedPatterns","Ct","bt","o16","s18","a16","tmpCanvas","tmpCtx","imageData","ImageData","r28","Et","parseFloat","putImageData","pattern","createPattern","boxDrawingDefinition","entries","instructions","e63","instruction","e62","args","stroke","closePath","xOffset","clamp","svgToCanvasInstructionMap","bezierCurveTo","lineTo","moveTo","Mt","translateArgs","i20","n17","xt","cache","r29","Reflect","decorate","onShowLinkUnderline","onHideLinkUnderline","s19","__param","r30","e69","t49","is256Color","LinkRenderLayer","instantiationService","nextRendererId","_renderLayers","TextRenderLayer","r31","_id","SelectionRenderLayer","e72","_devicePixelRatio","_updateDimensions","removeTerminalFromCache","onDevicePixelRatioChange","t52","onCharSizeChanged","_runOperation","operation","renderRows","letterSpacing","IInstantiationService","_clearState","t53","e76","_didStateChange","viewportEndRow","t55","viewportCappedStartRow","viewportCappedEndRow","viewportStartRow","_areCoordinatesEqual","coord1","coord2","_characterWidth","_characterFont","_characterOverlapCache","_workCell","GridCache","t56","c9","r33","l12","terminalFont","u6","e79","_forEachCell","firstRow","lastRow","getJoinedCharacters","isJoined","lastCharX","JoinedCellData","translateToString","_isOverlapping","getCodePoint","NULL_CELL_CODE","callback","_drawBackground","nextFillStyle","isBgPalette","prevFillStyle","_drawForeground","isInvisible","isUnderline","isStrikethrough","beginFrame","hasOwnProperty","measureText","overlaps","_didWarmUp","_doWarmUp","o20","s22","f4","BaseCharAtlas","charAtlasCache","generateConfig","entry","ownedBy","configEquals","atlas","e83","t61","DynamicCharAtlas","newConfig","config","newEntry","clonedColors","CHAR_ATLAS_CELL_SPACING","e86","t64","TEXTURE_WIDTH","TEXTURE_HEIGHT","TypeError","constructor","i26","glyph","create","_config","_drawToCacheCount","NoneCharAtlas","_glyphsWaitingOnBitmap","_bitmapCommitTimeout","_bitmap","s23","_cacheCanvas","l13","r36","h9","_tmpCtx","_width","_height","_cacheMap","LRUMap","prealloc","capacity","_cacheCtx","n22","t65","_canCache","getGlyphCacheKey","cacheValue","_drawFromCache","peek","_drawToCache","_toCoordinateX","_toCoordinateY","cacheX","cacheY","drawImage","_getColorFromAnsiIndex","idx","_getBackgroundColor","_getForegroundColor","a21","fontStyle","isEmpty","o21","offset","inBitmap","_addGlyphToBitmap","isSafari","_generateBitmap","createImageBitmap","bitmap","_map","_head","_tail","_unlinkNode","prev","_appendNode","tail","_nodePool","nodePool","e89","head","peekValue","BG_CLASS_PREFIX","FOCUS_CLASS","_linkifier","t67","_terminalClass","h10","t69","e92","_refreshRowElements","_selectionContainer","_injectCss","_rowFactory","DomRendererRowFactory","_onLinkHover","_onLinkLeave","_linkifier2","a22","TERMINAL_CLASS_PREFIX","_themeStyleElement","_dimensionsStyleElement","n23","overflow","styles","_terminalSelector","BOLD_CLASS","CURSOR_STYLE_BLOCK_CLASS","CURSOR_CLASS","CURSOR_BLINK_CLASS","CURSOR_STYLE_BAR_CLASS","CURSOR_STYLE_UNDERLINE_CLASS","FG_CLASS_PREFIX","c11","_createSelectionElement","middleRowsCount","colStart","colEnd","createRow","_setCellUnderline","span","textDecoration","enumerable","configurable","n24","DIM_CLASS","ITALIC_CLASS","t70","UNDERLINE_CLASS","STRIKETHROUGH_CLASS","o23","r39","s25","h11","f6","isCursorRow","joinedRanges","charElement","display","_applyMinimumContrast","_addStyle","padStart","e94","padChar","isSelectAllActive","selectionStartLength","e95","t71","SelectionModel","areSelectionValuesReversed","startPlusLength","_onCharSizeChange","_measureStrategy","DomMeasureStrategy","n25","t72","o24","r40","a24","e98","_parentElement","_result","_measureElement","i29","e99","geometry","combinedData","firstCell","isCombined","t73","a25","r41","c13","l15","h12","setFromCharData","t75","getAsCharData","_characterJoiners","_nextCharacterJoinerId","joiner","e102","rangeStartColumn","currentStringIndex","getTrimmedLength","rangeAttrBG","_getJoinedRanges","lineStr","ranges","rangeStartStringIndex","rangeAttrFG","getBg","startIndex","endIndex","joinerRanges","_mergeRanges","_stringRangesToCellRanges","currentRangeStarted","currentRangeIndex","currentRange","getString","newRange","inRange","getRootNode","activeElement","hasFocus","t76","r42","s28","e106","_renderer","_isPaused","_needsFullRefresh","_isNextRenderRedrawOnly","_needsSelectionRefresh","_canvasWidth","_canvasHeight","_selectionState","_onDimensionsChange","l16","r43","f8","_onRefreshRequest","t79","_renderDebouncer","_fullRefresh","onCharSizeChange","IntersectionObserver","_onIntersectionChange","threshold","observe","disconnect","isIntersecting","intersectionRatio","isRedrawOnly","_fireOnCanvasResize","changeOptions","e109","NON_BREAKING_SPACE_CHAR","_dragScrollAmount","_enabled","c14","r44","h13","u10","_mouseDownTimeStamp","_oldHasSelection","_oldSelectionStart","_oldSelectionEnd","_onLinuxMouseSelection","_onRedrawRequest","_onRequestScrollLines","l17","_mouseUpListener","onUserInput","_trimListener","_onBufferActivate","_activeSelectionMode","_onMouseUp","_onTrim","_model","_removeMouseDownListeners","t83","finalSelectionStart","finalSelectionEnd","lineText","startRowEndCol","e114","ALL_NON_BREAKING_SPACE_REGEX","isLinuxMouseSelection","_isClickInSelection","_getMouseBufferCoords","_areCoordsInSelection","_selectWordAtCursor","getRangeLength","_selectWordAt","v2","_getMouseEventScrollAmount","terminalHeight","macOptionClickForcesSelection","_3","timeStamp","_onIncrementalClick","detail","_onSingleClick","_onDoubleClick","_onTripleClick","_addMouseDownListeners","_dragScrollIntervalTimer","_dragScroll","hasWidth","_selectLineAt","_selectToWordAt","getOption","coordinates","_fireEventIfSelectionChanged","_fireOnSelectionChange","_convertViewportColToCharacterIndex","charIndex","_getWordAt","allowWhitespaceOnlySelection","followWrappedLinesBelow","leftLongCharOffset","charAt","leftWideCharCount","rightWideCharCount","_isCharWordSeparator","rightLongCharOffset","charOffset","trim","previousBufferLine","nextBufferLine","nextLineWordPosition","wordPosition","wordSeparator","getWrappedRangeForLine","createDecorator","s30","p2","_audioContext","audioContextCtor","AudioContext","webkitAudioContext","n30","audioContext","createBufferSource","decodeAudioData","_base64ToArrayBuffer","_removeMimeType","bellSound","e117","base64","atob","len","binaryString","Uint8Array","bytes","charCodeAt","dataURI","destination","onDeleteEmitter","onInsertEmitter","onTrimEmitter","_array","_maxLength","_startIndex","_length","o29","t84","s31","r46","i35","n31","e119","Array","newMaxLength","_getCyclicIndex","newArray","newLength","recycle","deleteCount","items","countToTrim","trimStart","shiftElements","expandListBy","val","depth","isArray","clone","clonedObject","e122","t88","_onBinary","_onData","_onLineFeed","r47","InstantiationService","OptionsService","t89","BufferService","LogService","CoreMouseService","ICoreMouseService","_dirtyRowService","DirtyRowService","IDirtyRowService","unicodeService","UnicodeService","_charsetService","CharsetService","InputHandler","onBinary","markRangeDirty","scrollBottom","_writeBuffer","WriteBuffer","promiseResult","e123","_onScrollApi","publicOptions","_windowsMode","writeSync","LogLevelEnum","WARN","hasWriteSyncWarnHappened","isNaN","MINIMUM_COLS","MINIMUM_ROWS","eraseAttr","scroll","pageCount","scrollPages","scrollToTop","scrollToLine","registerEscHandler","registerDcsHandler","registerCsiHandler","registerOscHandler","ident","windowsMode","_enableWindowsMode","updateWindowsModeWrappedState","final","_listeners","e124","_event","_disposed","t87","e125","t91","e126","arg2","queue","from","e129","t93","MAX_PARSEBUFFER_LENGTH","opts","setWinLines","restoreWin","t92","setWinPosition","o30","raiseWin","a29","r49","c15","lowerWin","h14","refreshWin","_4","d4","setWinSizeChars","g3","maximizeWin","m3","S2","fullscreenWin","getWinState","getWinPosition","getWinSizePixels","getScreenSizePixels","getCellSizePixels","getWinSizeChars","getScreenSizeChars","getIconTitle","getWinTitle","pushTitle","popTitle","_data","Uint32Array","hook","params","unhook","concat","subarray","e130","s32","_parser","EscapeSequenceParser","_coreMouseService","_stringDecoder","StringToUtf32","_utf8Decoder","Utf8ToUtf32","_windowTitle","_iconName","_windowTitleStack","_iconNameStack","_curAttrData","r50","_eraseAttrDataInternal","_onRequestBell","_onRequestRefreshRows","_parseBuffer","_onRequestReset","_onRequestSendFocus","_onRequestSyncScrollBar","_onRequestWindowsOptionsReport","_onA11yChar","_onA11yTab","f10","_onAnsiColorChange","_parseStack","cursorStartX","cursorStartY","setCsiHandlerFallback","identifier","identToString","toArray","setEscHandlerFallback","decodedLength","setExecuteHandlerFallback","setOscHandlerFallback","setDcsHandlerFallback","payload","setPrintHandler","insertChars","intermediates","scrollLeft","scrollRight","cursorDown","cursorForward","cursorBackward","cursorNextLine","cursorPrecedingLine","cursorCharAbsolute","cursorPosition","cursorForwardTab","eraseInDisplay","prefix","eraseInLine","insertLines","deleteLines","scrollDown","eraseChars","cursorBackwardTab","deleteChars","charPosAbsolute","scrollUp","hPositionRelative","repeatPrecedingCharacter","sendDeviceAttributesPrimary","sendDeviceAttributesSecondary","linePosAbsolute","hVPosition","tabClear","setMode","vPositionRelative","resetMode","resetModePrivate","charAttributes","deviceStatus","deviceStatusPrivate","softReset","setCursorStyle","setScrollRegion","saveCursor","windowOptions","restoreCursor","insertColumns","deleteColumns","setExecuteHandler","lineFeed","VT","carriageReturn","BS","backspace","LF","tab","SO","shiftOut","SI","shiftIn","IND","NEL","nextLine","HTS","tabSet","OscHandler","setIconName","setTitle","C1","setAnsiColor","reverseIndex","keypadApplicationMode","keypadNumericMode","fullReset","setgLevel","selectDefaultCharset","flag","selectCharset","CHARSETS","screenAlignmentPattern","setErrorHandler","t94","_preserveStack","_logSlowResolvingAsync","Promise","race","catch","err","parse","paused","clearRange","decode","wasPaused","print","chWidth","wraparoundMode","wraparound","modes","insertMode","markDirty","bufferRow","setCellFromCodePoint","curAttr","wcwidth","charset","ch","stringFromCodePoint","extended","_eraseAttrData","insertCells","getNullCell","NULL_CELL_WIDTH","addCodepointToCell","precedingCodepoint","hasContent","DcsHandler","e133","convertEol","reverseWraparound","_restrictCursor","nextStop","maxCol","origin","_setCursor","_moveCursor","cursorUp","diffToTop","diffToBottom","param","tabs","prevStop","_eraseInBufferLine","clearWrap","replaceCells","_resetBufferLine","scrollBackSize","deleteCells","_is","termName","setModePrivate","setgCharset","DEFAULT_CHARSET","applicationKeypad","activeEncoding","activateAltBuffer","activateNormalBuffer","_updateAttrColor","c1","mode","cSpace","advance","getSubParams","accu","underlineColor","_processUnderline","underlineStyle","updateExtended","hasSubParams","_extractColor","savedX","savedY","savedCurAttrData","savedCharset","isBlinking","bottom","second","_savedCharset","_parseAnsiColorChange","collectAndFlag","level","fill","markAllDirty","_disposables","l18","t96","unregister","e135","disposables","array","navigator","userAgent","platform","isIpad","isIphone","test","e136","t97","r52","lastChar","CHAR_DATA_CODE_INDEX","e137","ExtendedAttrs","fromColorRGB","newObj","t99","e139","isBlink","isFgPalette","isAttributeDefault","hasExtendedAttrs","getUnderlineColor","getUnderlineColorMode","isUnderlineColorRGB","isUnderlineColorPalette","isUnderlineColorDefault","getUnderlineStyle","MAX_BUFFER_SIZE","e140","_hasScrollback","t100","r54","i37","_nullCell","fromCharData","NULL_CELL_CHAR","_whitespaceCell","WHITESPACE_CELL_WIDTH","_cols","_rows","n33","CircularList","_getCorrectBufferLength","s33","getWhitespaceCell","BufferLine","maxLength","h15","relativeY","e142","correctBufferLength","fillViewportRows","fillAttr","newCols","nullCell","newRows","addToY","amountToTrim","_isReflowEnabled","_reflow","_reflowLarger","_reflowSmaller","toRemove","reflowLargerGetLinesToRemove","reflowLargerCreateNewLayout","reflowLargerApplyNewLayout","layout","_reflowLargerAdjustViewport","countRemoved","wrappedLines","absoluteY","destLineLengths","reflowSmallerGetNewLineLengths","linesToAdd","newLines","newLine","toInsert","countToInsert","a30","destLineIndex","srcLineIndex","srcCol","copyCellsFrom","cellsToCopy","destCol","wrappedLinesIndex","getWrappedLineTrimmedLength","setCell","viewportAdjustments","trimmedLines","originalLines","originalLinesLength","originalLineIndex","nextToInsertIndex","nextToInsert","nextI","insertEvents","countInsertedSoFar","insertCountEmitted","lineIndex","trimRight","CHAR_DATA_WIDTH_INDEX","CHAR_DATA_CHAR_INDEX","last","tabStopWidth","marker","Marker","onTrim","onInsert","onDelete","onDispose","e143","_removeMarker","endOverscan","BufferStringIterator","Buffer","_startOverscan","_endIndex","_buffer","_endOverscan","_trimRight","_current","e144","_combined","_extendedAttrs","t101","i38","r55","n34","o32","s34","e146","CHAR_DATA_ATTR_INDEX","eAttrs","codePoint","fillCellData","keys","copyFrom","applyInReverse","srcCombinedKeys","cp","e147","t102","e148","t103","r56","bufferAbsoluteY","srcTrimmedTineLength","countToRemove","nextToRemoveIndex","countRemovedSoFar","nextToRemoveStart","newLayout","newLayoutLines","oldCols","newLineLengths","cellsNeeded","reduce","cellsAvailable","oldTrimmedLength","srcLine","lineLength","e151","t106","i39","t105","BufferSet","_normal","inactiveBuffer","t107","_alt","e154","t109","obj","i40","t108","r58","e155","t110","DEFAULT_ATTR","isDisposed","_onDispose","_nextId","r59","t111","NUL","SOH","STX","EOT","ACK","BEL","HT","DLE","DC1","DC2","DC3","NAK","SYN","ETB","CAN","EM","SUB","SP","DEL","PAD","HOP","BPH","NBH","HTJ","VTS","PLU","SS2","SS3","PU1","PU2","STS","CCH","MW","SPA","EPA","ENQ","SOS","SGCI","SCI","CSI","ST","OSC","FF","KEYCODE_KEY_MAPPINGS","FS","GS","RS","US","SSA","ESA","PLD","RI","DCS","applicationCursorMode","e158","t113","r60","modifiers","keyMapping","codepoint","_interim","t114","startPos","utf32ToString","r61","e160","interim","byte3","tmp","missing","discardInterim","i42","e161","fourStop","byte2","byte4","byte1","table","BMP_COMBINING","e162","t115","r62","UnicodeV6","i43","n36","version","ucs","mid","num","HIGH_COMBINING","queueMicrotask","resolve","cb","_action","_callbacks","_pendingData","_bufferOffset","_isSyncWriting","e164","_syncCalls","maxSubsequentCalls","e165","chunk","t116","e166","_innerWrite","lastTime","startTime","qmt","PAYLOAD_LIMIT","EMPTY_HANDLERS","_handlers","_ident","_handlerFb","loopPosition","fallThrough","_active","registerHandler","i44","handlerList","e168","t117","r64","handlerIndex","clearHandler","setHandlerFallback","_stack","e169","e170","put","handlerResult","success","DcsParser","EMPTY_PARAMS","Params","addParam","_handler","_params","_hitLimit","ret","n37","e171","e174","t119","i46","setPrototypeOf","__proto__","setDefault","codes","TransitionTable","NON_ASCII_PRINTABLE","VT500_TRANSITION_TABLE","blueprint","t118","EXECUTABLES","r65","a32","c17","PRINTABLES","states","addMany","e175","r66","t120","e176","_transitions","handlers","handlerPos","transition","chunkPos","initialState","currentState","_collect","_printHandlerFb","_executeHandlerFb","_csiHandlerFb","_escHandlerFb","_errorHandlerFb","_printHandler","_executeHandlers","f12","_csiHandlers","_escHandlers","_oscParser","OscParser","_dcsParser","_errorHandler","_identifier","finalRange","intermediate","n38","r67","e177","finalCode","reverse","clearPrintHandler","clearEscHandler","clearExecuteHandler","e178","clearCsiHandler","clearDcsHandler","e179","clearOscHandler","clearErrorHandler","collect","abort","addSubParam","addDigit","handlersEsc","jj","o33","t121","i47","r68","e182","_start","_put","e181","MAX_VALUE","e183","maxSubParamsLength","n39","Int32Array","_subParams","_subParamsLength","_subParamsIdx","Uint16Array","_rejectDigits","_rejectSubDigits","_digitIsSub","fromArray","values","e185","t122","newParams","e186","getSubParamsAll","store","cur","_addons","loadedAddon","instance","_wrappedAddonDispose","e187","t123","AddonManager","init","e188","t124","BufferApiView","e190","getLine","BufferLineApiView","_line","getCell","e191","t125","_onBufferChange","_alternate","e192","t126","BufferNamespaceApi","e194","alternate","addCsiHandler","addDcsHandler","e195","t127","ParserApi","addEscHandler","e197","addOscHandler","e196","e198","provider","versions","activeVersion","UnicodeApi","__decorate","isUserScrolling","s36","t128","a33","r73","e203","r74","_cachedBlankLine","bottomRow","willBufferBeTrimmed","isFull","scrollRegionHeight","oldYdisp","scrollAmount","glevel","_charsets","e205","NONE","restrict","e206","t131","r75","i50","X10","ANY","n41","isSGR","o35","DEFAULT","SGR","eventCode","_protocols","_encodings","c18","_activeProtocol","_activeEncoding","_onProtocolChange","_lastEvent","addProtocol","l21","addEncoding","DEFAULT_ENCODINGS","protocol","name","encoding","e207","a34","_compareEvents","triggerBinaryEvent","report","up","drag","move","e1","e2","DEFAULT_MODES","DEFAULT_DEC_PRIVATE_MODES","_onUserInput","_scrollToBottom","a35","r76","e210","t134","wasUserInput","disableStdin","e211","CoreService","t132","_end","n43","t135","e214","_entries","i52","service","s39","ServiceCollection","t136","_services","getService","ctor","e216","getServiceDependencies","dependency","s40","e217","serviceDependencies","firstServiceArgPos","serviceArgs","t137","DEBUG","INFO","ERROR","off","OFF","n45","_updateLogLevel","_evalLazyOptionalParams","t138","optionalParams","s41","r79","a37","_log","e220","e221","info","o39","DEFAULT_BELL_SOUND","i54","e222","t139","r80","i55","__assign","assign","DEFAULT_OPTIONS","n46","o40","altClickMovesCursor","_onOptionChange","_options","_sanitizeAndValidateOption","_setupOptions","isPublic","propName","e224","copiedOptions","setOption","e225","e223","s42","serviceRegistry","c19","storeServiceDependency","decorator","di$target","t140","e227","r81","_providers","_onChange","defaultProvider","_activeProvider","e228","t141","r82","n47","e229","moduleId","__webpack_module_cache__","__webpack_modules__","__webpack_require__","_addonManager","_checkProposedApi","allowProposedApi","o41","t1","r1","onBell","i1","e230","e231","mouseTrackingMode","applicationCursorKeysMode","applicationKeypadMode","originMode","reverseWraparoundMode","sendFocusMode","_verifyIntegers","registerMarker","writeUtf8","addon","Infinity","n48","e3","dims","proposeDimensions","core","parentElementStyle","parentElementHeight","getPropertyValue","parentElementWidth","availableHeight","availableWidth"],"version":3,"file":"view-shell.994d5e68.js.map"}